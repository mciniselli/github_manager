INSERT INTO method (id_repo, id_file, id_method, code, code_tokens, abstract_code, abstract_representation, repo_name, repo_url,repo_commit, file_name, num_methods, start_method, end_method, num_tokens, num_lines) VALUES ( 4, 0, 0, '@Test\n    public void test_large_number() {\n    long num_to_hash = 9007199254740992L;\n    Hashids a = new Hashids("this is my salt");\n    String res = a.encode(num_to_hash);\n    long[] b = a.decode(res);\n    Assert.assertEquals(num_to_hash, b[0]);\n    }', '[\'public\', \'void\', \'test_large_number\', \'(\', \')\', \'{\', \'long\', \'num_to_hash\', \'=\', \'9007199254740992L\', \';\', \'Hashids\', \'a\', \'=\', \'new\', \'Hashids\', \'(\', \'"this is my salt"\', \')\', \';\', \'String\', \'res\', \'=\', \'a\', \'.\', \'encode\', \'(\', \'num_to_hash\', \')\', \';\', \'long\', \'[\', \']\', \'b\', \'=\', \'a\', \'.\', \'decode\', \'(\', \'res\', \')\', \';\', \'Assert\', \'.\', \'assertEquals\', \'(\', \'num_to_hash\', \',\', \'b\', \'[\', \'0\', \']\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) { long VAR_1 = INT_1 ; TYPE_1 a = new TYPE_1 ( STRING_1 ) ; String res = a . METHOD_2 ( VAR_1 ) ; long [ ] b = a . METHOD_3 ( res ) ; TYPE_2 . METHOD_4 ( VAR_1 , b [ 0 ] ) ; }', '[\'TYPE_2: Assert\', \'TYPE_1: Hashids\', \'METHOD_1: test_large_number\', \'METHOD_2: encode\', \'METHOD_4: assertEquals\', \'METHOD_3: decode\', \'VAR_1: num_to_hash\', \'INT_1: 9007199254740992L\', \'STRING_1: "this is my salt"\']', '10cella/hashids-java', 'https://github.com/10cella/hashids-java', '162a263c8007652472bf1821a26d33190730f8a5', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/hashids-java/src/test/java/org/hashids/HashidsTest.java', 16, '10:3', '17:3', 55, 7 ), ( 4, 0, 1, '@Test(expected = IllegalArgumentException.class)\n    public void test_large_number_not_supported() throws Exception {\n    long num_to_hash = 9007199254740993L;\n    Hashids a = new Hashids("this is my salt");\n    a.encode(num_to_hash);\n    }', '[\'public\', \'void\', \'test_large_number_not_supported\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'long\', \'num_to_hash\', \'=\', \'9007199254740993L\', \';\', \'Hashids\', \'a\', \'=\', \'new\', \'Hashids\', \'(\', \'"this is my salt"\', \')\', \';\', \'a\', \'.\', \'encode\', \'(\', \'num_to_hash\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { long VAR_1 = INT_1 ; TYPE_1 a = new TYPE_1 ( STRING_1 ) ; a . METHOD_2 ( VAR_1 ) ; }', '[\'TYPE_1: Hashids\', \'METHOD_2: encode\', \'METHOD_1: test_large_number_not_supported\', \'VAR_1: num_to_hash\', \'INT_1: 9007199254740993L\', \'STRING_1: "this is my salt"\']', '10cella/hashids-java', 'https://github.com/10cella/hashids-java', '162a263c8007652472bf1821a26d33190730f8a5', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/hashids-java/src/test/java/org/hashids/HashidsTest.java', 16, '19:3', '24:3', 38, 5 ), ( 4, 0, 2, '@Test\n    public void test_wrong_decoding() {\n    Hashids a = new Hashids("this is my pepper");\n    long[] b = a.decode("NkK9");\n    Assert.assertEquals(b.length, 0);\n    }', '[\'public\', \'void\', \'test_wrong_decoding\', \'(\', \')\', \'{\', \'Hashids\', \'a\', \'=\', \'new\', \'Hashids\', \'(\', \'"this is my pepper"\', \')\', \';\', \'long\', \'[\', \']\', \'b\', \'=\', \'a\', \'.\', \'decode\', \'(\', \'"NkK9"\', \')\', \';\', \'Assert\', \'.\', \'assertEquals\', \'(\', \'b\', \'.\', \'length\', \',\', \'0\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) { TYPE_1 a = new TYPE_1 ( STRING_1 ) ; long [ ] b = a . METHOD_2 ( STRING_2 ) ; TYPE_2 . METHOD_3 ( b . length , 0 ) ; }', '[\'TYPE_2: Assert\', \'TYPE_1: Hashids\', \'METHOD_1: test_wrong_decoding\', \'METHOD_3: assertEquals\', \'METHOD_2: decode\', \'STRING_1: "this is my pepper"\', \'STRING_2: "NkK9"\']', '10cella/hashids-java', 'https://github.com/10cella/hashids-java', '162a263c8007652472bf1821a26d33190730f8a5', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/hashids-java/src/test/java/org/hashids/HashidsTest.java', 16, '26:3', '31:3', 39, 5 ), ( 4, 0, 3, '@Test\n    public void test_one_number() {\n    String expected = "NkK9", res;\n    long num_to_hash = 12345L;\n    long[] res2;\n    Hashids a = new Hashids("this is my salt");\n    res = a.encode(num_to_hash);\n    Assert.assertEquals(res, expected);\n    res2 = a.decode(expected);\n    Assert.assertEquals(res2.length, 1);\n    Assert.assertEquals(res2[0], num_to_hash);\n    }', '[\'public\', \'void\', \'test_one_number\', \'(\', \')\', \'{\', \'String\', \'expected\', \'=\', \'"NkK9"\', \',\', \'res\', \';\', \'long\', \'num_to_hash\', \'=\', \'12345L\', \';\', \'long\', \'[\', \']\', \'res2\', \';\', \'Hashids\', \'a\', \'=\', \'new\', \'Hashids\', \'(\', \'"this is my salt"\', \')\', \';\', \'res\', \'=\', \'a\', \'.\', \'encode\', \'(\', \'num_to_hash\', \')\', \';\', \'Assert\', \'.\', \'assertEquals\', \'(\', \'res\', \',\', \'expected\', \')\', \';\', \'res2\', \'=\', \'a\', \'.\', \'decode\', \'(\', \'expected\', \')\', \';\', \'Assert\', \'.\', \'assertEquals\', \'(\', \'res2\', \'.\', \'length\', \',\', \'1\', \')\', \';\', \'Assert\', \'.\', \'assertEquals\', \'(\', \'res2\', \'[\', \'0\', \']\', \',\', \'num_to_hash\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) { String VAR_1 = STRING_1 , res ; long VAR_2 = INT_1 ; long [ ] VAR_3 ; TYPE_1 a = new TYPE_1 ( STRING_2 ) ; res = a . METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( res , VAR_1 ) ; VAR_3 = a . METHOD_4 ( VAR_1 ) ; TYPE_2 . METHOD_3 ( VAR_3 . length , 1 ) ; TYPE_2 . METHOD_3 ( VAR_3 [ 0 ] , VAR_2 ) ; }', '[\'TYPE_2: Assert\', \'TYPE_1: Hashids\', \'METHOD_2: encode\', \'METHOD_1: test_one_number\', \'METHOD_3: assertEquals\', \'METHOD_4: decode\', \'VAR_1: expected\', \'VAR_3: res2\', \'VAR_2: num_to_hash\', \'INT_1: 12345L\', \'STRING_1: "NkK9"\', \'STRING_2: "this is my salt"\']', '10cella/hashids-java', 'https://github.com/10cella/hashids-java', '162a263c8007652472bf1821a26d33190730f8a5', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/hashids-java/src/test/java/org/hashids/HashidsTest.java', 16, '33:3', '44:3', 83, 11 ), ( 4, 0, 4, '@Test\n    public void test_serveral_numbers() {\n    String expected = "aBMswoO2UB3Sj", res;\n    long[] num_to_hash = { 683L, 94108L, 123L, 5L }, res2;\n    Hashids a = new Hashids("this is my salt");\n    res = a.encode(num_to_hash);\n    Assert.assertEquals(res, expected);\n    res2 = a.decode(expected);\n    Assert.assertEquals(res2.length, num_to_hash.length);\n    Assert.assertTrue(Arrays.equals(res2, num_to_hash));\n    }', '[\'public\', \'void\', \'test_serveral_numbers\', \'(\', \')\', \'{\', \'String\', \'expected\', \'=\', \'"aBMswoO2UB3Sj"\', \',\', \'res\', \';\', \'long\', \'[\', \']\', \'num_to_hash\', \'=\', \'{\', \'683L\', \',\', \'94108L\', \',\', \'123L\', \',\', \'5L\', \'}\', \',\', \'res2\', \';\', \'Hashids\', \'a\', \'=\', \'new\', \'Hashids\', \'(\', \'"this is my salt"\', \')\', \';\', \'res\', \'=\', \'a\', \'.\', \'encode\', \'(\', \'num_to_hash\', \')\', \';\', \'Assert\', \'.\', \'assertEquals\', \'(\', \'res\', \',\', \'expected\', \')\', \';\', \'res2\', \'=\', \'a\', \'.\', \'decode\', \'(\', \'expected\', \')\', \';\', \'Assert\', \'.\', \'assertEquals\', \'(\', \'res2\', \'.\', \'length\', \',\', \'num_to_hash\', \'.\', \'length\', \')\', \';\', \'Assert\', \'.\', \'assertTrue\', \'(\', \'Arrays\', \'.\', \'equals\', \'(\', \'res2\', \',\', \'num_to_hash\', \')\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) { String VAR_1 = STRING_1 , res ; long [ ] VAR_2 = { INT_1 , INT_2 , INT_3 , INT_4 } , VAR_3 ; TYPE_1 a = new TYPE_1 ( STRING_2 ) ; res = a . METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( res , VAR_1 ) ; VAR_3 = a . METHOD_4 ( VAR_1 ) ; TYPE_2 . METHOD_3 ( VAR_3 . length , VAR_2 . length ) ; TYPE_2 . METHOD_5 ( TYPE_3 . equals ( VAR_3 , VAR_2 ) ) ; }', '[\'TYPE_2: Assert\', \'TYPE_1: Hashids\', \'TYPE_3: Arrays\', \'METHOD_2: encode\', \'METHOD_5: assertTrue\', \'METHOD_3: assertEquals\', \'METHOD_4: decode\', \'METHOD_1: test_serveral_numbers\', \'VAR_1: expected\', \'VAR_3: res2\', \'VAR_2: num_to_hash\', \'INT_1: 683L\', \'INT_2: 94108L\', \'INT_4: 5L\', \'INT_3: 123L\', \'STRING_1: "aBMswoO2UB3Sj"\', \'STRING_2: "this is my salt"\']', '10cella/hashids-java', 'https://github.com/10cella/hashids-java', '162a263c8007652472bf1821a26d33190730f8a5', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/hashids-java/src/test/java/org/hashids/HashidsTest.java', 16, '46:3', '56:3', 94, 10 ), ( 4, 0, 5, '@Test\n    public void test_specifying_custom_hash_alphabet() {\n    String expected = "b332db5", res;\n    long num_to_hash = 1234567L;\n    long[] res2;\n    Hashids a = new Hashids("this is my salt", 0, "0123456789abcdef");\n    res = a.encode(num_to_hash);\n    Assert.assertEquals(expected, res);\n    res2 = a.decode(expected);\n    Assert.assertEquals(res2[0], num_to_hash);\n    }', '[\'public\', \'void\', \'test_specifying_custom_hash_alphabet\', \'(\', \')\', \'{\', \'String\', \'expected\', \'=\', \'"b332db5"\', \',\', \'res\', \';\', \'long\', \'num_to_hash\', \'=\', \'1234567L\', \';\', \'long\', \'[\', \']\', \'res2\', \';\', \'Hashids\', \'a\', \'=\', \'new\', \'Hashids\', \'(\', \'"this is my salt"\', \',\', \'0\', \',\', \'"0123456789abcdef"\', \')\', \';\', \'res\', \'=\', \'a\', \'.\', \'encode\', \'(\', \'num_to_hash\', \')\', \';\', \'Assert\', \'.\', \'assertEquals\', \'(\', \'expected\', \',\', \'res\', \')\', \';\', \'res2\', \'=\', \'a\', \'.\', \'decode\', \'(\', \'expected\', \')\', \';\', \'Assert\', \'.\', \'assertEquals\', \'(\', \'res2\', \'[\', \'0\', \']\', \',\', \'num_to_hash\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) { String VAR_1 = STRING_1 , res ; long VAR_2 = INT_1 ; long [ ] VAR_3 ; TYPE_1 a = new TYPE_1 ( STRING_2 , 0 , STRING_3 ) ; res = a . METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( VAR_1 , res ) ; VAR_3 = a . METHOD_4 ( VAR_1 ) ; TYPE_2 . METHOD_3 ( VAR_3 [ 0 ] , VAR_2 ) ; }', '[\'TYPE_2: Assert\', \'TYPE_1: Hashids\', \'METHOD_2: encode\', \'METHOD_3: assertEquals\', \'METHOD_4: decode\', \'METHOD_1: test_specifying_custom_hash_alphabet\', \'VAR_1: expected\', \'VAR_3: res2\', \'VAR_2: num_to_hash\', \'INT_1: 1234567L\', \'STRING_1: "b332db5"\', \'STRING_2: "this is my salt"\', \'STRING_3: "0123456789abcdef"\']', '10cella/hashids-java', 'https://github.com/10cella/hashids-java', '162a263c8007652472bf1821a26d33190730f8a5', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/hashids-java/src/test/java/org/hashids/HashidsTest.java', 16, '58:3', '68:3', 76, 10 ), ( 4, 0, 6, '@Test\n    public void test_specifying_custom_hash_length() {\n    String expected = "gB0NV05e", res;\n    long num_to_hash = 1L;\n    long[] res2;\n    Hashids a = new Hashids("this is my salt", 8);\n    res = a.encode(num_to_hash);\n    Assert.assertEquals(res, expected);\n    res2 = a.decode(expected);\n    Assert.assertEquals(res2.length, 1);\n    Assert.assertEquals(res2[0], num_to_hash);\n    }', '[\'public\', \'void\', \'test_specifying_custom_hash_length\', \'(\', \')\', \'{\', \'String\', \'expected\', \'=\', \'"gB0NV05e"\', \',\', \'res\', \';\', \'long\', \'num_to_hash\', \'=\', \'1L\', \';\', \'long\', \'[\', \']\', \'res2\', \';\', \'Hashids\', \'a\', \'=\', \'new\', \'Hashids\', \'(\', \'"this is my salt"\', \',\', \'8\', \')\', \';\', \'res\', \'=\', \'a\', \'.\', \'encode\', \'(\', \'num_to_hash\', \')\', \';\', \'Assert\', \'.\', \'assertEquals\', \'(\', \'res\', \',\', \'expected\', \')\', \';\', \'res2\', \'=\', \'a\', \'.\', \'decode\', \'(\', \'expected\', \')\', \';\', \'Assert\', \'.\', \'assertEquals\', \'(\', \'res2\', \'.\', \'length\', \',\', \'1\', \')\', \';\', \'Assert\', \'.\', \'assertEquals\', \'(\', \'res2\', \'[\', \'0\', \']\', \',\', \'num_to_hash\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) { String VAR_1 = STRING_1 , res ; long VAR_2 = INT_1 ; long [ ] VAR_3 ; TYPE_1 a = new TYPE_1 ( STRING_2 , 8 ) ; res = a . METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( res , VAR_1 ) ; VAR_3 = a . METHOD_4 ( VAR_1 ) ; TYPE_2 . METHOD_3 ( VAR_3 . length , 1 ) ; TYPE_2 . METHOD_3 ( VAR_3 [ 0 ] , VAR_2 ) ; }', '[\'TYPE_2: Assert\', \'TYPE_1: Hashids\', \'METHOD_2: encode\', \'METHOD_1: test_specifying_custom_hash_length\', \'METHOD_3: assertEquals\', \'METHOD_4: decode\', \'VAR_1: expected\', \'VAR_3: res2\', \'VAR_2: num_to_hash\', \'INT_1: 1L\', \'STRING_1: "gB0NV05e"\', \'STRING_2: "this is my salt"\']', '10cella/hashids-java', 'https://github.com/10cella/hashids-java', '162a263c8007652472bf1821a26d33190730f8a5', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/hashids-java/src/test/java/org/hashids/HashidsTest.java', 16, '70:3', '81:3', 85, 11 ), ( 4, 0, 7, '@Test\n    public void test_randomness() {\n    String expected = "1Wc8cwcE", res;\n    long[] num_to_hash = { 5L, 5L, 5L, 5L }, res2;\n    Hashids a = new Hashids("this is my salt");\n    res = a.encode(num_to_hash);\n    Assert.assertEquals(res, expected);\n    res2 = a.decode(expected);\n    Assert.assertEquals(res2.length, num_to_hash.length);\n    Assert.assertTrue(Arrays.equals(res2, num_to_hash));\n    }', '[\'public\', \'void\', \'test_randomness\', \'(\', \')\', \'{\', \'String\', \'expected\', \'=\', \'"1Wc8cwcE"\', \',\', \'res\', \';\', \'long\', \'[\', \']\', \'num_to_hash\', \'=\', \'{\', \'5L\', \',\', \'5L\', \',\', \'5L\', \',\', \'5L\', \'}\', \',\', \'res2\', \';\', \'Hashids\', \'a\', \'=\', \'new\', \'Hashids\', \'(\', \'"this is my salt"\', \')\', \';\', \'res\', \'=\', \'a\', \'.\', \'encode\', \'(\', \'num_to_hash\', \')\', \';\', \'Assert\', \'.\', \'assertEquals\', \'(\', \'res\', \',\', \'expected\', \')\', \';\', \'res2\', \'=\', \'a\', \'.\', \'decode\', \'(\', \'expected\', \')\', \';\', \'Assert\', \'.\', \'assertEquals\', \'(\', \'res2\', \'.\', \'length\', \',\', \'num_to_hash\', \'.\', \'length\', \')\', \';\', \'Assert\', \'.\', \'assertTrue\', \'(\', \'Arrays\', \'.\', \'equals\', \'(\', \'res2\', \',\', \'num_to_hash\', \')\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) { String VAR_1 = STRING_1 , res ; long [ ] VAR_2 = { INT_1 , INT_1 , INT_1 , INT_1 } , VAR_3 ; TYPE_1 a = new TYPE_1 ( STRING_2 ) ; res = a . METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( res , VAR_1 ) ; VAR_3 = a . METHOD_4 ( VAR_1 ) ; TYPE_2 . METHOD_3 ( VAR_3 . length , VAR_2 . length ) ; TYPE_2 . METHOD_5 ( TYPE_3 . equals ( VAR_3 , VAR_2 ) ) ; }', '[\'TYPE_2: Assert\', \'TYPE_1: Hashids\', \'TYPE_3: Arrays\', \'METHOD_2: encode\', \'METHOD_1: test_randomness\', \'METHOD_5: assertTrue\', \'METHOD_3: assertEquals\', \'METHOD_4: decode\', \'VAR_1: expected\', \'VAR_3: res2\', \'VAR_2: num_to_hash\', \'INT_1: 5L\', \'STRING_2: "this is my salt"\', \'STRING_1: "1Wc8cwcE"\']', '10cella/hashids-java', 'https://github.com/10cella/hashids-java', '162a263c8007652472bf1821a26d33190730f8a5', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/hashids-java/src/test/java/org/hashids/HashidsTest.java', 16, '83:3', '93:3', 94, 10 ), ( 4, 0, 9, '@Test\n    public void test_randomness_for_incrementing() {\n    Hashids a;\n    a = new Hashids("this is my salt");\n    Assert.assertEquals(a.encode(1L), "NV");\n    Assert.assertEquals(a.encode(2L), "6m");\n    Assert.assertEquals(a.encode(3L), "yD");\n    Assert.assertEquals(a.encode(4L), "2l");\n    Assert.assertEquals(a.encode(5L), "rD");\n    }', '[\'public\', \'void\', \'test_randomness_for_incrementing\', \'(\', \')\', \'{\', \'Hashids\', \'a\', \';\', \'a\', \'=\', \'new\', \'Hashids\', \'(\', \'"this is my salt"\', \')\', \';\', \'Assert\', \'.\', \'assertEquals\', \'(\', \'a\', \'.\', \'encode\', \'(\', \'1L\', \')\', \',\', \'"NV"\', \')\', \';\', \'Assert\', \'.\', \'assertEquals\', \'(\', \'a\', \'.\', \'encode\', \'(\', \'2L\', \')\', \',\', \'"6m"\', \')\', \';\', \'Assert\', \'.\', \'assertEquals\', \'(\', \'a\', \'.\', \'encode\', \'(\', \'3L\', \')\', \',\', \'"yD"\', \')\', \';\', \'Assert\', \'.\', \'assertEquals\', \'(\', \'a\', \'.\', \'encode\', \'(\', \'4L\', \')\', \',\', \'"2l"\', \')\', \';\', \'Assert\', \'.\', \'assertEquals\', \'(\', \'a\', \'.\', \'encode\', \'(\', \'5L\', \')\', \',\', \'"rD"\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) { TYPE_1 a ; a = new TYPE_1 ( STRING_1 ) ; TYPE_2 . METHOD_2 ( a . METHOD_3 ( INT_1 ) , STRING_2 ) ; TYPE_2 . METHOD_2 ( a . METHOD_3 ( INT_2 ) , STRING_3 ) ; TYPE_2 . METHOD_2 ( a . METHOD_3 ( INT_3 ) , STRING_4 ) ; TYPE_2 . METHOD_2 ( a . METHOD_3 ( INT_4 ) , STRING_5 ) ; TYPE_2 . METHOD_2 ( a . METHOD_3 ( INT_5 ) , STRING_6 ) ; }', '[\'TYPE_2: Assert\', \'TYPE_1: Hashids\', \'METHOD_3: encode\', \'METHOD_2: assertEquals\', \'METHOD_1: test_randomness_for_incrementing\', \'INT_5: 5L\', \'INT_4: 4L\', \'INT_3: 3L\', \'INT_2: 2L\', \'INT_1: 1L\', \'STRING_4: "yD"\', \'STRING_1: "this is my salt"\', \'STRING_5: "2l"\', \'STRING_2: "NV"\', \'STRING_3: "6m"\', \'STRING_6: "rD"\']', '10cella/hashids-java', 'https://github.com/10cella/hashids-java', '162a263c8007652472bf1821a26d33190730f8a5', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/hashids-java/src/test/java/org/hashids/HashidsTest.java', 16, '107:3', '116:3', 89, 9 ), ( 4, 0, 11, '@Test\n    public void test_issue10() {\n    String expected = "3kK3nNOe", res;\n    long num_to_hash = 75527867232l;\n    long[] res2;\n    Hashids a = new Hashids("this is my salt");\n    res = a.encode(num_to_hash);\n    Assert.assertEquals(res, expected);\n    res2 = a.decode(expected);\n    Assert.assertEquals(res2.length, 1);\n    Assert.assertEquals(res2[0], num_to_hash);\n    }', '[\'public\', \'void\', \'test_issue10\', \'(\', \')\', \'{\', \'String\', \'expected\', \'=\', \'"3kK3nNOe"\', \',\', \'res\', \';\', \'long\', \'num_to_hash\', \'=\', \'75527867232l\', \';\', \'long\', \'[\', \']\', \'res2\', \';\', \'Hashids\', \'a\', \'=\', \'new\', \'Hashids\', \'(\', \'"this is my salt"\', \')\', \';\', \'res\', \'=\', \'a\', \'.\', \'encode\', \'(\', \'num_to_hash\', \')\', \';\', \'Assert\', \'.\', \'assertEquals\', \'(\', \'res\', \',\', \'expected\', \')\', \';\', \'res2\', \'=\', \'a\', \'.\', \'decode\', \'(\', \'expected\', \')\', \';\', \'Assert\', \'.\', \'assertEquals\', \'(\', \'res2\', \'.\', \'length\', \',\', \'1\', \')\', \';\', \'Assert\', \'.\', \'assertEquals\', \'(\', \'res2\', \'[\', \'0\', \']\', \',\', \'num_to_hash\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) { String VAR_1 = STRING_1 , res ; long VAR_2 = INT_1 ; long [ ] VAR_3 ; TYPE_1 a = new TYPE_1 ( STRING_2 ) ; res = a . METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( res , VAR_1 ) ; VAR_3 = a . METHOD_4 ( VAR_1 ) ; TYPE_2 . METHOD_3 ( VAR_3 . length , 1 ) ; TYPE_2 . METHOD_3 ( VAR_3 [ 0 ] , VAR_2 ) ; }', '[\'TYPE_2: Assert\', \'TYPE_1: Hashids\', \'METHOD_2: encode\', \'METHOD_3: assertEquals\', \'METHOD_1: test_issue10\', \'METHOD_4: decode\', \'VAR_1: expected\', \'VAR_3: res2\', \'VAR_2: num_to_hash\', \'INT_1: 75527867232l\', \'STRING_1: "3kK3nNOe"\', \'STRING_2: "this is my salt"\']', '10cella/hashids-java', 'https://github.com/10cella/hashids-java', '162a263c8007652472bf1821a26d33190730f8a5', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/hashids-java/src/test/java/org/hashids/HashidsTest.java', 16, '124:3', '135:3', 83, 11 ), ( 4, 0, 12, '@Test\n    public void test_issue23() {\n    String expected = "9Q7MJ3LVGW", res;\n    long num_to_hash = 1145L;\n    long[] res2;\n    Hashids a = new Hashids("MyCamelCaseSalt", 10, "ABCDEFGHIJKLMNPQRSTUVWXYZ123456789");\n    res = a.encode(num_to_hash);\n    Assert.assertEquals(expected, res);\n    res2 = a.decode(expected);\n    Assert.assertEquals(res2[0], num_to_hash);\n    }', '[\'public\', \'void\', \'test_issue23\', \'(\', \')\', \'{\', \'String\', \'expected\', \'=\', \'"9Q7MJ3LVGW"\', \',\', \'res\', \';\', \'long\', \'num_to_hash\', \'=\', \'1145L\', \';\', \'long\', \'[\', \']\', \'res2\', \';\', \'Hashids\', \'a\', \'=\', \'new\', \'Hashids\', \'(\', \'"MyCamelCaseSalt"\', \',\', \'10\', \',\', \'"ABCDEFGHIJKLMNPQRSTUVWXYZ123456789"\', \')\', \';\', \'res\', \'=\', \'a\', \'.\', \'encode\', \'(\', \'num_to_hash\', \')\', \';\', \'Assert\', \'.\', \'assertEquals\', \'(\', \'expected\', \',\', \'res\', \')\', \';\', \'res2\', \'=\', \'a\', \'.\', \'decode\', \'(\', \'expected\', \')\', \';\', \'Assert\', \'.\', \'assertEquals\', \'(\', \'res2\', \'[\', \'0\', \']\', \',\', \'num_to_hash\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) { String VAR_1 = STRING_1 , res ; long VAR_2 = INT_1 ; long [ ] VAR_3 ; TYPE_1 a = new TYPE_1 ( STRING_2 , INT_2 , STRING_3 ) ; res = a . METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( VAR_1 , res ) ; VAR_3 = a . METHOD_4 ( VAR_1 ) ; TYPE_2 . METHOD_3 ( VAR_3 [ 0 ] , VAR_2 ) ; }', '[\'TYPE_2: Assert\', \'TYPE_1: Hashids\', \'METHOD_2: encode\', \'METHOD_3: assertEquals\', \'METHOD_4: decode\', \'METHOD_1: test_issue23\', \'VAR_1: expected\', \'VAR_3: res2\', \'VAR_2: num_to_hash\', \'INT_1: 1145L\', \'INT_2: 10\', \'STRING_3: "ABCDEFGHIJKLMNPQRSTUVWXYZ123456789"\', \'STRING_1: "9Q7MJ3LVGW"\', \'STRING_2: "MyCamelCaseSalt"\']', '10cella/hashids-java', 'https://github.com/10cella/hashids-java', '162a263c8007652472bf1821a26d33190730f8a5', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/hashids-java/src/test/java/org/hashids/HashidsTest.java', 16, '137:3', '147:3', 76, 10 ), ( 4, 0, 13, '@Test\n    public void test_issue30() {\n    String expected = "", res;\n    long num_to_hash = -1L;\n    Hashids a = new Hashids("this is my salt");\n    res = a.encode(num_to_hash);\n    Assert.assertEquals(expected, res);\n    }', '[\'public\', \'void\', \'test_issue30\', \'(\', \')\', \'{\', \'String\', \'expected\', \'=\', \'""\', \',\', \'res\', \';\', \'long\', \'num_to_hash\', \'=\', \'-\', \'1L\', \';\', \'Hashids\', \'a\', \'=\', \'new\', \'Hashids\', \'(\', \'"this is my salt"\', \')\', \';\', \'res\', \'=\', \'a\', \'.\', \'encode\', \'(\', \'num_to_hash\', \')\', \';\', \'Assert\', \'.\', \'assertEquals\', \'(\', \'expected\', \',\', \'res\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) { String VAR_1 = STRING_1 , res ; long VAR_2 = - INT_1 ; TYPE_1 a = new TYPE_1 ( STRING_2 ) ; res = a . METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( VAR_1 , res ) ; }', '[\'TYPE_2: Assert\', \'TYPE_1: Hashids\', \'METHOD_2: encode\', \'METHOD_1: test_issue30\', \'METHOD_3: assertEquals\', \'VAR_1: expected\', \'VAR_2: num_to_hash\', \'INT_1: 1L\', \'STRING_1: ""\', \'STRING_2: "this is my salt"\']', '10cella/hashids-java', 'https://github.com/10cella/hashids-java', '162a263c8007652472bf1821a26d33190730f8a5', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/hashids-java/src/test/java/org/hashids/HashidsTest.java', 16, '149:3', '156:3', 48, 7 ), ( 4, 0, 14, '@Test\n    public void test_issue31() {\n    final long[] numbers = new long[500000];\n    long current = Hashids.MAX_NUMBER;\n    for (int i = 0; i < numbers.length; i++) {\n    numbers[i] = current--;\n    }\n    Hashids a = new Hashids("this is my salt");\n    Assert.assertNotEquals("", a.encode(numbers));\n    }', '[\'public\', \'void\', \'test_issue31\', \'(\', \')\', \'{\', \'final\', \'long\', \'[\', \']\', \'numbers\', \'=\', \'new\', \'long\', \'[\', \'500000\', \']\', \';\', \'long\', \'current\', \'=\', \'Hashids.MAX_NUMBER\', \';\', \'for\', \'(\', \'int\', \'i\', \'=\', \'0\', \';\', \'i\', \'<\', \'numbers\', \'.\', \'length\', \';\', \'i\', \'++\', \')\', \'{\', \'numbers\', \'[\', \'i\', \']\', \'=\', \'current\', \'--\', \';\', \'}\', \'Hashids\', \'a\', \'=\', \'new\', \'Hashids\', \'(\', \'"this is my salt"\', \')\', \';\', \'Assert\', \'.\', \'assertNotEquals\', \'(\', \'""\', \',\', \'a\', \'.\', \'encode\', \'(\', \'numbers\', \')\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) { final long [ ] VAR_1 = new long [ INT_1 ] ; long current = VAR_2 ; for ( int i = 0 ; i < VAR_1 . length ; i ++ ) { VAR_1 [ i ] = current -- ; } TYPE_1 a = new TYPE_1 ( STRING_1 ) ; TYPE_2 . METHOD_2 ( STRING_2 , a . METHOD_3 ( VAR_1 ) ) ; }', '[\'TYPE_2: Assert\', \'TYPE_1: Hashids\', \'METHOD_3: encode\', \'METHOD_1: test_issue31\', \'METHOD_2: assertNotEquals\', \'VAR_1: numbers\', \'VAR_2: Hashids.MAX_NUMBER\', \'INT_1: 500000\', \'STRING_2: ""\', \'STRING_1: "this is my salt"\']', '10cella/hashids-java', 'https://github.com/10cella/hashids-java', '162a263c8007652472bf1821a26d33190730f8a5', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/hashids-java/src/test/java/org/hashids/HashidsTest.java', 16, '158:3', '167:3', 75, 8 ), ( 4, 0, 15, '@Test\n    public void test_issue32() throws Exception {\n    long num_to_hash = -1;\n    Hashids a = new Hashids("this is my salt");\n    Assert.assertEquals("", a.encode(num_to_hash));\n    }', '[\'public\', \'void\', \'test_issue32\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'long\', \'num_to_hash\', \'=\', \'-\', \'1\', \';\', \'Hashids\', \'a\', \'=\', \'new\', \'Hashids\', \'(\', \'"this is my salt"\', \')\', \';\', \'Assert\', \'.\', \'assertEquals\', \'(\', \'""\', \',\', \'a\', \'.\', \'encode\', \'(\', \'num_to_hash\', \')\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { long VAR_1 = - 1 ; TYPE_1 a = new TYPE_1 ( STRING_1 ) ; TYPE_2 . METHOD_2 ( STRING_2 , a . METHOD_3 ( VAR_1 ) ) ; }', '[\'TYPE_2: Assert\', \'TYPE_1: Hashids\', \'METHOD_3: encode\', \'METHOD_2: assertEquals\', \'METHOD_1: test_issue32\', \'VAR_1: num_to_hash\', \'STRING_2: ""\', \'STRING_1: "this is my salt"\']', '10cella/hashids-java', 'https://github.com/10cella/hashids-java', '162a263c8007652472bf1821a26d33190730f8a5', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/hashids-java/src/test/java/org/hashids/HashidsTest.java', 16, '169:3', '174:3', 39, 5 ), ( 4, 1, 4, 'public String encode(long... numbers) {\n    if (numbers.length == 0) {\n    return "";\n    }\n    for (long number : numbers) {\n    if (number < 0) {\n    return "";\n    }\n    if (number > MAX_NUMBER) {\n    throw new IllegalArgumentException("number can not be greater than " + MAX_NUMBER + "L");\n    }\n    }\n    return this._encode(numbers);\n    }', '[\'public\', \'String\', \'encode\', \'(\', \'long\', \'...\', \'numbers\', \')\', \'{\', \'if\', \'(\', \'numbers\', \'.\', \'length\', \'==\', \'0\', \')\', \'{\', \'return\', \'""\', \';\', \'}\', \'for\', \'(\', \'long\', \'number\', \':\', \'numbers\', \')\', \'{\', \'if\', \'(\', \'number\', \'<\', \'0\', \')\', \'{\', \'return\', \'""\', \';\', \'}\', \'if\', \'(\', \'number\', \'>\', \'MAX_NUMBER\', \')\', \'{\', \'throw\', \'new\', \'IllegalArgumentException\', \'(\', \'"number can not be greater than "\', \'+\', \'MAX_NUMBER\', \'+\', \'"L"\', \')\', \';\', \'}\', \'}\', \'return\', \'this\', \'.\', \'_encode\', \'(\', \'numbers\', \')\', \';\', \'}\']', 'public String METHOD_1 ( long ... VAR_1 ) { if ( VAR_1 . length == 0 ) { return STRING_1 ; } for ( long VAR_2 : VAR_1 ) { if ( VAR_2 < 0 ) { return STRING_1 ; } if ( VAR_2 > VAR_3 ) { throw new IllegalArgumentException ( STRING_2 + VAR_3 + STRING_3 ) ; } } return this . METHOD_2 ( VAR_1 ) ; }', '[\'METHOD_1: encode\', \'METHOD_2: _encode\', \'VAR_2: number\', \'VAR_1: numbers\', \'VAR_3: MAX_NUMBER\', \'STRING_1: ""\', \'STRING_3: "L"\', \'STRING_2: "number can not be greater than "\']', '10cella/hashids-java', 'https://github.com/10cella/hashids-java', '162a263c8007652472bf1821a26d33190730f8a5', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/hashids-java/src/main/java/org/hashids/Hashids.java', 19, '168:3', '182:3', 70, 9 ), ( 4, 1, 7, 'public String decodeHex(String hash) {\n    StringBuilder result = new StringBuilder();\n    long[] numbers = this.decode(hash);\n    for (long number : numbers) {\n    result.append(Long.toHexString(number).substring(1));\n    }\n    return result.toString();\n    }', '[\'public\', \'String\', \'decodeHex\', \'(\', \'String\', \'hash\', \')\', \'{\', \'StringBuilder\', \'result\', \'=\', \'new\', \'StringBuilder\', \'(\', \')\', \';\', \'long\', \'[\', \']\', \'numbers\', \'=\', \'this\', \'.\', \'decode\', \'(\', \'hash\', \')\', \';\', \'for\', \'(\', \'long\', \'number\', \':\', \'numbers\', \')\', \'{\', \'result\', \'.\', \'append\', \'(\', \'Long\', \'.\', \'toHexString\', \'(\', \'number\', \')\', \'.\', \'substring\', \'(\', \'1\', \')\', \')\', \';\', \'}\', \'return\', \'result\', \'.\', \'toString\', \'(\', \')\', \';\', \'}\']', 'public String METHOD_1 ( String VAR_1 ) { StringBuilder result = new StringBuilder ( ) ; long [ ] VAR_2 = this . METHOD_2 ( VAR_1 ) ; for ( long VAR_3 : VAR_2 ) { result . append ( Long . METHOD_3 ( VAR_3 ) . substring ( 1 ) ) ; } return result . toString ( ) ; }', '[\'METHOD_3: toHexString\', \'METHOD_1: decodeHex\', \'METHOD_2: decode\', \'VAR_3: number\', \'VAR_2: numbers\', \'VAR_1: hash\']', '10cella/hashids-java', 'https://github.com/10cella/hashids-java', '162a263c8007652472bf1821a26d33190730f8a5', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/hashids-java/src/main/java/org/hashids/Hashids.java', 19, '227:3', '236:3', 59, 6 ), ( 4, 1, 8, 'public static int checkedCast(long value) {\n    int result = (int) value;\n    if (result != value) {\n    // don\'t use checkArgument here, to avoid boxing\n    throw new IllegalArgumentException("Out of range: " + value);\n    }\n    return result;\n    }', '[\'public\', \'static\', \'int\', \'checkedCast\', \'(\', \'long\', \'value\', \')\', \'{\', \'int\', \'result\', \'=\', \'(\', \'int\', \')\', \'value\', \';\', \'if\', \'(\', \'result\', \'!=\', \'value\', \')\', \'{\', \'throw\', \'new\', \'IllegalArgumentException\', \'(\', \'"Out of range: "\', \'+\', \'value\', \')\', \';\', \'}\', \'return\', \'result\', \';\', \'}\']', 'public static int METHOD_1 ( long value ) { int result = ( int ) value ; if ( result != value ) { throw new IllegalArgumentException ( STRING_1 + value ) ; } return result ; }', '[\'METHOD_1: checkedCast\', \'STRING_1: "Out of range: "\']', '10cella/hashids-java', 'https://github.com/10cella/hashids-java', '162a263c8007652472bf1821a26d33190730f8a5', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/hashids-java/src/main/java/org/hashids/Hashids.java', 19, '238:3', '245:3', 39, 5 ), ( 4, 1, 12, 'private static String hash(long input, String alphabet) {\n    String hash = "";\n    int alphabetLen = alphabet.length();\n    do {\n    int index = (int) (input % alphabetLen);\n    if (index >= 0 && index < alphabet.length()) {\n    hash = alphabet.charAt(index) + hash;\n    }\n    input /= alphabetLen;\n    } while (input > 0);\n    return hash;\n    }', '[\'private\', \'static\', \'String\', \'hash\', \'(\', \'long\', \'input\', \',\', \'String\', \'alphabet\', \')\', \'{\', \'String\', \'hash\', \'=\', \'""\', \';\', \'int\', \'alphabetLen\', \'=\', \'alphabet\', \'.\', \'length\', \'(\', \')\', \';\', \'do\', \'{\', \'int\', \'index\', \'=\', \'(\', \'int\', \')\', \'(\', \'input\', \'%\', \'alphabetLen\', \')\', \';\', \'if\', \'(\', \'index\', \'>=\', \'0\', \'&&\', \'index\', \'<\', \'alphabet\', \'.\', \'length\', \'(\', \')\', \')\', \'{\', \'hash\', \'=\', \'alphabet\', \'.\', \'charAt\', \'(\', \'index\', \')\', \'+\', \'hash\', \';\', \'}\', \'input\', \'/=\', \'alphabetLen\', \';\', \'}\', \'while\', \'(\', \'input\', \'>\', \'0\', \')\', \';\', \'return\', \'hash\', \';\', \'}\']', 'private static String METHOD_1 ( long input , String VAR_1 ) { String VAR_2 = STRING_1 ; int VAR_3 = VAR_1 . length ( ) ; do { int index = ( int ) ( input % VAR_3 ) ; if ( index >= 0 && index < VAR_1 . length ( ) ) { VAR_2 = VAR_1 . METHOD_2 ( index ) + VAR_2 ; } input /= VAR_3 ; } while ( input > 0 ) ; return VAR_2 ; }', '[\'METHOD_1: hash\', \'METHOD_2: charAt\', \'VAR_3: alphabetLen\', \'VAR_1: alphabet\', \'VAR_2: hash\', \'STRING_1: ""\']', '10cella/hashids-java', 'https://github.com/10cella/hashids-java', '162a263c8007652472bf1821a26d33190730f8a5', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/hashids-java/src/main/java/org/hashids/Hashids.java', 19, '376:3', '389:3', 81, 10 ), ( 4, 1, 13, 'private static Long unhash(String input, String alphabet) {\n    long number = 0, pos;\n    for (int i = 0; i < input.length(); i++) {\n    pos = alphabet.indexOf(input.charAt(i));\n    number = number * alphabet.length() + pos;\n    }\n    return number;\n    }', '[\'private\', \'static\', \'Long\', \'unhash\', \'(\', \'String\', \'input\', \',\', \'String\', \'alphabet\', \')\', \'{\', \'long\', \'number\', \'=\', \'0\', \',\', \'pos\', \';\', \'for\', \'(\', \'int\', \'i\', \'=\', \'0\', \';\', \'i\', \'<\', \'input\', \'.\', \'length\', \'(\', \')\', \';\', \'i\', \'++\', \')\', \'{\', \'pos\', \'=\', \'alphabet\', \'.\', \'indexOf\', \'(\', \'input\', \'.\', \'charAt\', \'(\', \'i\', \')\', \')\', \';\', \'number\', \'=\', \'number\', \'*\', \'alphabet\', \'.\', \'length\', \'(\', \')\', \'+\', \'pos\', \';\', \'}\', \'return\', \'number\', \';\', \'}\']', 'private static Long METHOD_1 ( String input , String VAR_1 ) { long VAR_2 = 0 , pos ; for ( int i = 0 ; i < input . length ( ) ; i ++ ) { pos = VAR_1 . METHOD_2 ( input . METHOD_3 ( i ) ) ; VAR_2 = VAR_2 * VAR_1 . length ( ) + pos ; } return VAR_2 ; }', '[\'METHOD_1: unhash\', \'METHOD_2: indexOf\', \'METHOD_3: charAt\', \'VAR_2: number\', \'VAR_1: alphabet\']', '10cella/hashids-java', 'https://github.com/10cella/hashids-java', '162a263c8007652472bf1821a26d33190730f8a5', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/hashids-java/src/main/java/org/hashids/Hashids.java', 19, '391:3', '400:3', 67, 6 ), ( 5, 0, 0, '@Before\n    public void before() {\n    System.out.println("IN BEFORE");\n    this.view = new RepoListView(AbstractUITest.getDriver(), baseUrl);\n    this.editView = new RepoEditView(AbstractUITest.getDriver());\n    AbstractUITest.getDriver().navigate().to(baseUrl);\n    }', '[\'public\', \'void\', \'before\', \'(\', \')\', \'{\', \'System.out\', \'.\', \'println\', \'(\', \'"IN BEFORE"\', \')\', \';\', \'this\', \'.\', \'view\', \'=\', \'new\', \'RepoListView\', \'(\', \'AbstractUITest\', \'.\', \'getDriver\', \'(\', \')\', \',\', \'baseUrl\', \')\', \';\', \'this\', \'.\', \'editView\', \'=\', \'new\', \'RepoEditView\', \'(\', \'AbstractUITest\', \'.\', \'getDriver\', \'(\', \')\', \')\', \';\', \'AbstractUITest\', \'.\', \'getDriver\', \'(\', \')\', \'.\', \'navigate\', \'(\', \')\', \'.\', \'to\', \'(\', \'baseUrl\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) { VAR_1 . println ( STRING_1 ) ; this . VAR_2 = new TYPE_1 ( TYPE_2 . METHOD_2 ( ) , VAR_3 ) ; this . VAR_4 = new TYPE_3 ( TYPE_2 . METHOD_2 ( ) ) ; TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_3 ) ; }', '[\'TYPE_2: AbstractUITest\', \'TYPE_3: RepoEditView\', \'TYPE_1: RepoListView\', \'METHOD_3: navigate\', \'METHOD_1: before\', \'METHOD_4: to\', \'METHOD_2: getDriver\', \'VAR_4: editView\', \'VAR_2: view\', \'VAR_3: baseUrl\', \'VAR_1: System.out\', \'STRING_1: "IN BEFORE"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/de/akquinet/devops/test/ui/cases/UI_MultiAdminSupportTest.java', 2, '43:9', '49:9', 58, 6 ), ( 5, 2, 0, 'public boolean isEmptyRepo(String fullyQualifiedRepoName) {\n    String pathToLink = "//a[@href = \\"?" + WICKET_HREF_PAGE_PATH\n    + ".EmptyRepositoryPage&r=" + fullyQualifiedRepoName + "\\"]";\n    List<WebElement> found = getDriver().findElements(By.xpath(pathToLink));\n    return found != null && found.size() > 0;\n    }', '[\'public\', \'boolean\', \'isEmptyRepo\', \'(\', \'String\', \'fullyQualifiedRepoName\', \')\', \'{\', \'String\', \'pathToLink\', \'=\', \'"<DOUBLE_SLASH>a[<AT>href = \\\\"?"\', \'+\', \'WICKET_HREF_PAGE_PATH\', \'+\', \'".EmptyRepositoryPage&r="\', \'+\', \'fullyQualifiedRepoName\', \'+\', \'"\\\\"]"\', \';\', \'List\', \'<\', \'WebElement\', \'>\', \'found\', \'=\', \'getDriver\', \'(\', \')\', \'.\', \'findElements\', \'(\', \'By\', \'.\', \'xpath\', \'(\', \'pathToLink\', \')\', \')\', \';\', \'return\', \'found\', \'!=\', \'null\', \'&&\', \'found\', \'.\', \'size\', \'(\', \')\', \'>\', \'0\', \';\', \'}\']', 'public boolean METHOD_1 ( String VAR_1 ) { String VAR_2 = STRING_1 + VAR_3 + STRING_2 + VAR_1 + STRING_3 ; List < TYPE_1 > VAR_4 = METHOD_2 ( ) . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_2 ) ) ; return VAR_4 != null && VAR_4 . size ( ) > 0 ; }', '[\'TYPE_2: By\', \'TYPE_1: WebElement\', \'METHOD_4: xpath\', \'METHOD_3: findElements\', \'METHOD_1: isEmptyRepo\', \'METHOD_2: getDriver\', \'VAR_3: WICKET_HREF_PAGE_PATH\', \'VAR_4: found\', \'VAR_1: fullyQualifiedRepoName\', \'VAR_2: pathToLink\', \'STRING_3: "\\\\"]"\', \'STRING_1: "<DOUBLE_SLASH>a[<AT>href = \\\\"?"\', \'STRING_2: ".EmptyRepositoryPage&r="\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/de/akquinet/devops/test/ui/view/RepoListView.java', 11, '38:9', '43:9', 53, 5 ), ( 5, 2, 2, 'private String getDeleteRepoOnclickIdentifier(\n    			String fullyQualifiedRepoPathAndName) {\n    return "var conf = confirm(\'Delete repository \\""\n    + fullyQualifiedRepoPathAndName\n    + "\\"?\'); if (!conf) return false; ";\n    }', '[\'private\', \'String\', \'getDeleteRepoOnclickIdentifier\', \'(\', \'String\', \'fullyQualifiedRepoPathAndName\', \')\', \'{\', \'return\', \'"var conf = confirm(\\\'Delete repository \\\\""\', \'+\', \'fullyQualifiedRepoPathAndName\', \'+\', \'"\\\\"?\\\'); if (!conf) return false; "\', \';\', \'}\']', 'private String METHOD_1 ( String VAR_1 ) { return STRING_1 + VAR_1 + STRING_2 ; }', '[\'METHOD_1: getDeleteRepoOnclickIdentifier\', \'VAR_1: fullyQualifiedRepoPathAndName\', \'STRING_1: "var conf = confirm(\\\'Delete repository \\\\""\', \'STRING_2: "\\\\"?\\\'); if (!conf) return false; "\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/de/akquinet/devops/test/ui/view/RepoListView.java', 11, '50:9', '55:9', 16, 5 ), ( 5, 2, 3, 'public boolean navigateToNewRepo(long waitSecToLoad) {\n    String pathToLink = "//a[@href =\\"?" + WICKET_HREF_PAGE_PATH\n    + ".EditRepositoryPage\\"]";\n    List<WebElement> found = getDriver().findElements(By.xpath(pathToLink));\n    if (found == null || found.size() == 0 || found.size() > 1) {\n    return false;\n    }\n    found.get(0).click();\n    WebDriverWait webDriverWait = new WebDriverWait(getDriver(),\n    				waitSecToLoad);\n    webDriverWait.until(new Exp.EditRepoViewLoaded());\n    return true;\n    }', '[\'public\', \'boolean\', \'navigateToNewRepo\', \'(\', \'long\', \'waitSecToLoad\', \')\', \'{\', \'String\', \'pathToLink\', \'=\', \'"<DOUBLE_SLASH>a[<AT>href =\\\\"?"\', \'+\', \'WICKET_HREF_PAGE_PATH\', \'+\', \'".EditRepositoryPage\\\\"]"\', \';\', \'List\', \'<\', \'WebElement\', \'>\', \'found\', \'=\', \'getDriver\', \'(\', \')\', \'.\', \'findElements\', \'(\', \'By\', \'.\', \'xpath\', \'(\', \'pathToLink\', \')\', \')\', \';\', \'if\', \'(\', \'found\', \'==\', \'null\', \'||\', \'found\', \'.\', \'size\', \'(\', \')\', \'==\', \'0\', \'||\', \'found\', \'.\', \'size\', \'(\', \')\', \'>\', \'1\', \')\', \'{\', \'return\', \'false\', \';\', \'}\', \'found\', \'.\', \'get\', \'(\', \'0\', \')\', \'.\', \'click\', \'(\', \')\', \';\', \'WebDriverWait\', \'webDriverWait\', \'=\', \'new\', \'WebDriverWait\', \'(\', \'getDriver\', \'(\', \')\', \',\', \'waitSecToLoad\', \')\', \';\', \'webDriverWait\', \'.\', \'until\', \'(\', \'new\', \'Exp.EditRepoViewLoaded\', \'(\', \')\', \')\', \';\', \'return\', \'true\', \';\', \'}\']', 'public boolean METHOD_1 ( long VAR_1 ) { String VAR_2 = STRING_1 + VAR_3 + STRING_2 ; List < TYPE_1 > VAR_4 = METHOD_2 ( ) . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_2 ) ) ; if ( VAR_4 == null || VAR_4 . size ( ) == 0 || VAR_4 . size ( ) > 1 ) { return false ; } VAR_4 . get ( 0 ) . METHOD_5 ( ) ; TYPE_3 VAR_5 = new TYPE_3 ( METHOD_2 ( ) , VAR_1 ) ; VAR_5 . METHOD_6 ( new TYPE_4 ( ) ) ; return true ; }', '[\'TYPE_2: By\', \'TYPE_3: WebDriverWait\', \'TYPE_1: WebElement\', \'TYPE_4: Exp.EditRepoViewLoaded\', \'METHOD_4: xpath\', \'METHOD_3: findElements\', \'METHOD_6: until\', \'METHOD_2: getDriver\', \'METHOD_5: click\', \'METHOD_1: navigateToNewRepo\', \'VAR_3: WICKET_HREF_PAGE_PATH\', \'VAR_4: found\', \'VAR_5: webDriverWait\', \'VAR_2: pathToLink\', \'VAR_1: waitSecToLoad\', \'STRING_2: ".EditRepositoryPage\\\\"]"\', \'STRING_1: "<DOUBLE_SLASH>a[<AT>href =\\\\"?"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/de/akquinet/devops/test/ui/view/RepoListView.java', 11, '57:9', '69:9', 98, 11 ), ( 5, 2, 4, 'private boolean checkOrDoEditRepo(String fullyQualifiedRepoName,\n    			boolean doEdit) {\n    List<WebElement> found = getDriver().findElements(\n    				By.xpath(getEditRepoPath(fullyQualifiedRepoName)));\n    if (found == null || found.size() == 0 || found.size() > 1) {\n    return false;\n    }\n    if (doEdit) {\n    found.get(0).click();\n    }\n    return true;\n    }', '[\'private\', \'boolean\', \'checkOrDoEditRepo\', \'(\', \'String\', \'fullyQualifiedRepoName\', \',\', \'boolean\', \'doEdit\', \')\', \'{\', \'List\', \'<\', \'WebElement\', \'>\', \'found\', \'=\', \'getDriver\', \'(\', \')\', \'.\', \'findElements\', \'(\', \'By\', \'.\', \'xpath\', \'(\', \'getEditRepoPath\', \'(\', \'fullyQualifiedRepoName\', \')\', \')\', \')\', \';\', \'if\', \'(\', \'found\', \'==\', \'null\', \'||\', \'found\', \'.\', \'size\', \'(\', \')\', \'==\', \'0\', \'||\', \'found\', \'.\', \'size\', \'(\', \')\', \'>\', \'1\', \')\', \'{\', \'return\', \'false\', \';\', \'}\', \'if\', \'(\', \'doEdit\', \')\', \'{\', \'found\', \'.\', \'get\', \'(\', \'0\', \')\', \'.\', \'click\', \'(\', \')\', \';\', \'}\', \'return\', \'true\', \';\', \'}\']', 'private boolean METHOD_1 ( String VAR_1 , boolean VAR_2 ) { List < TYPE_1 > VAR_3 = METHOD_2 ( ) . METHOD_3 ( TYPE_2 . METHOD_4 ( METHOD_5 ( VAR_1 ) ) ) ; if ( VAR_3 == null || VAR_3 . size ( ) == 0 || VAR_3 . size ( ) > 1 ) { return false ; } if ( VAR_2 ) { VAR_3 . get ( 0 ) . METHOD_6 ( ) ; } return true ; }', '[\'TYPE_2: By\', \'TYPE_1: WebElement\', \'METHOD_5: getEditRepoPath\', \'METHOD_4: xpath\', \'METHOD_1: checkOrDoEditRepo\', \'METHOD_3: findElements\', \'METHOD_2: getDriver\', \'METHOD_6: click\', \'VAR_3: found\', \'VAR_2: doEdit\', \'VAR_1: fullyQualifiedRepoName\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/de/akquinet/devops/test/ui/view/RepoListView.java', 11, '71:9', '82:9', 78, 9 ), ( 5, 2, 5, 'public boolean navigateToEditRepo(String fullyQualifiedRepoName,\n    			int waitSecToLoad) {\n    boolean result = checkOrDoEditRepo(fullyQualifiedRepoName, true);\n    WebDriverWait webDriverWait = new WebDriverWait(getDriver(),\n    				waitSecToLoad);\n    webDriverWait.until(new Exp.EditRepoViewLoaded());\n    return result;\n    }', '[\'public\', \'boolean\', \'navigateToEditRepo\', \'(\', \'String\', \'fullyQualifiedRepoName\', \',\', \'int\', \'waitSecToLoad\', \')\', \'{\', \'boolean\', \'result\', \'=\', \'checkOrDoEditRepo\', \'(\', \'fullyQualifiedRepoName\', \',\', \'true\', \')\', \';\', \'WebDriverWait\', \'webDriverWait\', \'=\', \'new\', \'WebDriverWait\', \'(\', \'getDriver\', \'(\', \')\', \',\', \'waitSecToLoad\', \')\', \';\', \'webDriverWait\', \'.\', \'until\', \'(\', \'new\', \'Exp.EditRepoViewLoaded\', \'(\', \')\', \')\', \';\', \'return\', \'result\', \';\', \'}\']', 'public boolean METHOD_1 ( String VAR_1 , int VAR_2 ) { boolean result = METHOD_2 ( VAR_1 , true ) ; TYPE_1 VAR_3 = new TYPE_1 ( METHOD_3 ( ) , VAR_2 ) ; VAR_3 . METHOD_4 ( new TYPE_2 ( ) ) ; return result ; }', '[\'TYPE_1: WebDriverWait\', \'TYPE_2: Exp.EditRepoViewLoaded\', \'METHOD_1: navigateToEditRepo\', \'METHOD_2: checkOrDoEditRepo\', \'METHOD_4: until\', \'METHOD_3: getDriver\', \'VAR_1: fullyQualifiedRepoName\', \'VAR_3: webDriverWait\', \'VAR_2: waitSecToLoad\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/de/akquinet/devops/test/ui/view/RepoListView.java', 11, '84:9', '91:9', 48, 7 ), ( 5, 4, 0, 'public void changeName(String newName) {\n    String pathName = "//input[@id = \\"name\\" ]";\n    WebElement field = getDriver().findElement(By.xpath(pathName));\n    field.clear();\n    field.sendKeys(newName);\n    }', '[\'public\', \'void\', \'changeName\', \'(\', \'String\', \'newName\', \')\', \'{\', \'String\', \'pathName\', \'=\', \'"<DOUBLE_SLASH>input[<AT>id = \\\\"name\\\\" ]"\', \';\', \'WebElement\', \'field\', \'=\', \'getDriver\', \'(\', \')\', \'.\', \'findElement\', \'(\', \'By\', \'.\', \'xpath\', \'(\', \'pathName\', \')\', \')\', \';\', \'field\', \'.\', \'clear\', \'(\', \')\', \';\', \'field\', \'.\', \'sendKeys\', \'(\', \'newName\', \')\', \';\', \'}\']', 'public void METHOD_1 ( String VAR_1 ) { String VAR_2 = STRING_1 ; TYPE_1 field = METHOD_2 ( ) . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_2 ) ) ; field . METHOD_5 ( ) ; field . METHOD_6 ( VAR_1 ) ; }', '[\'TYPE_2: By\', \'TYPE_1: WebElement\', \'METHOD_1: changeName\', \'METHOD_4: xpath\', \'METHOD_3: findElement\', \'METHOD_5: clear\', \'METHOD_6: sendKeys\', \'METHOD_2: getDriver\', \'VAR_2: pathName\', \'VAR_1: newName\', \'STRING_1: "<DOUBLE_SLASH>input[<AT>id = \\\\"name\\\\" ]"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/de/akquinet/devops/test/ui/view/RepoEditView.java', 12, '52:9', '57:9', 42, 5 ), ( 5, 4, 1, 'public boolean navigateToPermissionsTab() {\n    String linkText = "access permissions";\n    List<WebElement> found = getDriver().findElements(\n    				By.partialLinkText(linkText));\n    System.out.println("PERM TABS found =" + found.size());\n    if (found != null && found.size() == 1) {\n    found.get(0).click();\n    return true;\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'navigateToPermissionsTab\', \'(\', \')\', \'{\', \'String\', \'linkText\', \'=\', \'"access permissions"\', \';\', \'List\', \'<\', \'WebElement\', \'>\', \'found\', \'=\', \'getDriver\', \'(\', \')\', \'.\', \'findElements\', \'(\', \'By\', \'.\', \'partialLinkText\', \'(\', \'linkText\', \')\', \')\', \';\', \'System.out\', \'.\', \'println\', \'(\', \'"PERM TABS found ="\', \'+\', \'found\', \'.\', \'size\', \'(\', \')\', \')\', \';\', \'if\', \'(\', \'found\', \'!=\', \'null\', \'&&\', \'found\', \'.\', \'size\', \'(\', \')\', \'==\', \'1\', \')\', \'{\', \'found\', \'.\', \'get\', \'(\', \'0\', \')\', \'.\', \'click\', \'(\', \')\', \';\', \'return\', \'true\', \';\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean METHOD_1 ( ) { String VAR_1 = STRING_1 ; List < TYPE_1 > VAR_2 = METHOD_2 ( ) . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_1 ) ) ; VAR_3 . println ( STRING_2 + VAR_2 . size ( ) ) ; if ( VAR_2 != null && VAR_2 . size ( ) == 1 ) { VAR_2 . get ( 0 ) . METHOD_5 ( ) ; return true ; } return false ; }', '[\'TYPE_2: By\', \'TYPE_1: WebElement\', \'METHOD_1: navigateToPermissionsTab\', \'METHOD_3: findElements\', \'METHOD_2: getDriver\', \'METHOD_5: click\', \'METHOD_4: partialLinkText\', \'VAR_2: found\', \'VAR_1: linkText\', \'VAR_3: System.out\', \'STRING_2: "PERM TABS found ="\', \'STRING_1: "access permissions"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/de/akquinet/devops/test/ui/view/RepoEditView.java', 12, '59:9', '69:9', 75, 9 ), ( 5, 4, 2, 'private void changeOwners(String action,\n    			String affectedSelection, String username) {\n    String xpath = "//select[@name=\\"" + affectedSelection\n    + "\\"]/option[@value = \\"" + username + "\\" ]";\n    WebElement option = getDriver().findElement(By.xpath(xpath));\n    option.click();\n    String buttonPath = "//button[@class=\\"button " + action + "\\"]";\n    WebElement button = getDriver().findElement(By.xpath(buttonPath));\n    button.click();\n    }', '[\'private\', \'void\', \'changeOwners\', \'(\', \'String\', \'action\', \',\', \'String\', \'affectedSelection\', \',\', \'String\', \'username\', \')\', \'{\', \'String\', \'xpath\', \'=\', \'"<DOUBLE_SLASH>select[<AT>name=\\\\""\', \'+\', \'affectedSelection\', \'+\', \'"\\\\"]/option[<AT>value = \\\\""\', \'+\', \'username\', \'+\', \'"\\\\" ]"\', \';\', \'WebElement\', \'option\', \'=\', \'getDriver\', \'(\', \')\', \'.\', \'findElement\', \'(\', \'By\', \'.\', \'xpath\', \'(\', \'xpath\', \')\', \')\', \';\', \'option\', \'.\', \'click\', \'(\', \')\', \';\', \'String\', \'buttonPath\', \'=\', \'"<DOUBLE_SLASH>button[<AT>class=\\\\"button "\', \'+\', \'action\', \'+\', \'"\\\\"]"\', \';\', \'WebElement\', \'button\', \'=\', \'getDriver\', \'(\', \')\', \'.\', \'findElement\', \'(\', \'By\', \'.\', \'xpath\', \'(\', \'buttonPath\', \')\', \')\', \';\', \'button\', \'.\', \'click\', \'(\', \')\', \';\', \'}\']', 'private void METHOD_1 ( String VAR_1 , String VAR_2 , String VAR_3 ) { String VAR_4 = STRING_1 + VAR_2 + STRING_2 + VAR_3 + STRING_3 ; TYPE_1 VAR_5 = METHOD_2 ( ) . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_4 ) ) ; VAR_5 . METHOD_5 ( ) ; String VAR_6 = STRING_4 + VAR_1 + STRING_5 ; TYPE_1 VAR_7 = METHOD_2 ( ) . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_6 ) ) ; VAR_7 . METHOD_5 ( ) ; }', '[\'TYPE_2: By\', \'TYPE_1: WebElement\', \'METHOD_4: xpath\', \'METHOD_1: changeOwners\', \'METHOD_3: findElement\', \'METHOD_2: getDriver\', \'METHOD_5: click\', \'VAR_2: affectedSelection\', \'VAR_7: button\', \'VAR_4: xpath\', \'VAR_1: action\', \'VAR_6: buttonPath\', \'VAR_3: username\', \'VAR_5: option\', \'STRING_2: "\\\\"]/option[<AT>value = \\\\""\', \'STRING_4: "<DOUBLE_SLASH>button[<AT>class=\\\\"button "\', \'STRING_5: "\\\\"]"\', \'STRING_3: "\\\\" ]"\', \'STRING_1: "<DOUBLE_SLASH>select[<AT>name=\\\\""\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/de/akquinet/devops/test/ui/view/RepoEditView.java', 12, '71:9', '80:9', 79, 9 ), ( 5, 4, 5, 'public WebElement getAccessRestrictionSelection() {\n    String xpath = "//select[@name =\\"accessRestriction\\"]";\n    List<WebElement> found = getDriver().findElements(By.xpath(xpath));\n    if (found != null && found.size() == 1) {\n    return found.get(0);\n    }\n    return null;\n    }', '[\'public\', \'WebElement\', \'getAccessRestrictionSelection\', \'(\', \')\', \'{\', \'String\', \'xpath\', \'=\', \'"<DOUBLE_SLASH>select[<AT>name =\\\\"accessRestriction\\\\"]"\', \';\', \'List\', \'<\', \'WebElement\', \'>\', \'found\', \'=\', \'getDriver\', \'(\', \')\', \'.\', \'findElements\', \'(\', \'By\', \'.\', \'xpath\', \'(\', \'xpath\', \')\', \')\', \';\', \'if\', \'(\', \'found\', \'!=\', \'null\', \'&&\', \'found\', \'.\', \'size\', \'(\', \')\', \'==\', \'1\', \')\', \'{\', \'return\', \'found\', \'.\', \'get\', \'(\', \'0\', \')\', \';\', \'}\', \'return\', \'null\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( ) { String VAR_1 = STRING_1 ; List < TYPE_1 > VAR_2 = METHOD_2 ( ) . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_1 ) ) ; if ( VAR_2 != null && VAR_2 . size ( ) == 1 ) { return VAR_2 . get ( 0 ) ; } return null ; }', '[\'TYPE_2: By\', \'TYPE_1: WebElement\', \'METHOD_4: xpath\', \'METHOD_1: getAccessRestrictionSelection\', \'METHOD_3: findElements\', \'METHOD_2: getDriver\', \'VAR_1: xpath\', \'VAR_2: found\', \'STRING_1: "<DOUBLE_SLASH>select[<AT>name =\\\\"accessRestriction\\\\"]"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/de/akquinet/devops/test/ui/view/RepoEditView.java', 12, '91:9', '98:9', 56, 6 ), ( 5, 4, 7, 'public boolean changeAuthorizationControl(int option) {\n    System.out.println("try to change auth control");\n    String xpath = "//input[@name =\\"authorizationControl\\" and @value=\\""\n    + option + "\\"]";\n    List<WebElement> found = getDriver().findElements(By.xpath(xpath));\n    System.out.println("found auth CONTROL options " + found.size());\n    if (found == null || found.size() == 0 || found.size() > 1) {\n    return false;\n    }\n    found.get(0).click();\n    return true;\n    }', '[\'public\', \'boolean\', \'changeAuthorizationControl\', \'(\', \'int\', \'option\', \')\', \'{\', \'System.out\', \'.\', \'println\', \'(\', \'"try to change auth control"\', \')\', \';\', \'String\', \'xpath\', \'=\', \'"<DOUBLE_SLASH>input[<AT>name =\\\\"authorizationControl\\\\" and <AT>value=\\\\""\', \'+\', \'option\', \'+\', \'"\\\\"]"\', \';\', \'List\', \'<\', \'WebElement\', \'>\', \'found\', \'=\', \'getDriver\', \'(\', \')\', \'.\', \'findElements\', \'(\', \'By\', \'.\', \'xpath\', \'(\', \'xpath\', \')\', \')\', \';\', \'System.out\', \'.\', \'println\', \'(\', \'"found auth CONTROL options "\', \'+\', \'found\', \'.\', \'size\', \'(\', \')\', \')\', \';\', \'if\', \'(\', \'found\', \'==\', \'null\', \'||\', \'found\', \'.\', \'size\', \'(\', \')\', \'==\', \'0\', \'||\', \'found\', \'.\', \'size\', \'(\', \')\', \'>\', \'1\', \')\', \'{\', \'return\', \'false\', \';\', \'}\', \'found\', \'.\', \'get\', \'(\', \'0\', \')\', \'.\', \'click\', \'(\', \')\', \';\', \'return\', \'true\', \';\', \'}\']', 'public boolean METHOD_1 ( int VAR_1 ) { VAR_2 . println ( STRING_1 ) ; String VAR_3 = STRING_2 + VAR_1 + STRING_3 ; List < TYPE_1 > VAR_4 = METHOD_2 ( ) . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_3 ) ) ; VAR_2 . println ( STRING_4 + VAR_4 . size ( ) ) ; if ( VAR_4 == null || VAR_4 . size ( ) == 0 || VAR_4 . size ( ) > 1 ) { return false ; } VAR_4 . get ( 0 ) . METHOD_5 ( ) ; return true ; }', '[\'TYPE_2: By\', \'TYPE_1: WebElement\', \'METHOD_1: changeAuthorizationControl\', \'METHOD_4: xpath\', \'METHOD_3: findElements\', \'METHOD_2: getDriver\', \'METHOD_5: click\', \'VAR_3: xpath\', \'VAR_4: found\', \'VAR_2: System.out\', \'VAR_1: option\', \'STRING_3: "\\\\"]"\', \'STRING_4: "found auth CONTROL options "\', \'STRING_1: "try to change auth control"\', \'STRING_2: "<DOUBLE_SLASH>input[<AT>name =\\\\"authorizationControl\\\\" and <AT>value=\\\\""\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/de/akquinet/devops/test/ui/view/RepoEditView.java', 12, '117:9', '128:9', 98, 10 ), ( 5, 4, 8, 'private boolean isPermissionViewDisabled(String prefix, String view) {\n    String xpath = "//[@name =\\"" + prefix + view + "\\"]";\n    List<WebElement> found = getDriver().findElements(By.xpath(xpath));\n    if (found == null || found.size() == 0 || found.size() > 1) {\n    return false;\n    }\n    String attrValue = found.get(0).getAttribute("disabled");\n    return (attrValue != null) && (attrValue.equals("disabled"));\n    }', '[\'private\', \'boolean\', \'isPermissionViewDisabled\', \'(\', \'String\', \'prefix\', \',\', \'String\', \'view\', \')\', \'{\', \'String\', \'xpath\', \'=\', \'"<DOUBLE_SLASH>[<AT>name =\\\\""\', \'+\', \'prefix\', \'+\', \'view\', \'+\', \'"\\\\"]"\', \';\', \'List\', \'<\', \'WebElement\', \'>\', \'found\', \'=\', \'getDriver\', \'(\', \')\', \'.\', \'findElements\', \'(\', \'By\', \'.\', \'xpath\', \'(\', \'xpath\', \')\', \')\', \';\', \'if\', \'(\', \'found\', \'==\', \'null\', \'||\', \'found\', \'.\', \'size\', \'(\', \')\', \'==\', \'0\', \'||\', \'found\', \'.\', \'size\', \'(\', \')\', \'>\', \'1\', \')\', \'{\', \'return\', \'false\', \';\', \'}\', \'String\', \'attrValue\', \'=\', \'found\', \'.\', \'get\', \'(\', \'0\', \')\', \'.\', \'getAttribute\', \'(\', \'"disabled"\', \')\', \';\', \'return\', \'(\', \'attrValue\', \'!=\', \'null\', \')\', \'&&\', \'(\', \'attrValue\', \'.\', \'equals\', \'(\', \'"disabled"\', \')\', \')\', \';\', \'}\']', 'private boolean METHOD_1 ( String VAR_1 , String VAR_2 ) { String VAR_3 = STRING_1 + VAR_1 + VAR_2 + STRING_2 ; List < TYPE_1 > VAR_4 = METHOD_2 ( ) . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_3 ) ) ; if ( VAR_4 == null || VAR_4 . size ( ) == 0 || VAR_4 . size ( ) > 1 ) { return false ; } String VAR_5 = VAR_4 . get ( 0 ) . METHOD_5 ( STRING_3 ) ; return ( VAR_5 != null ) && ( VAR_5 . equals ( STRING_3 ) ) ; }', '[\'TYPE_2: By\', \'TYPE_1: WebElement\', \'METHOD_4: xpath\', \'METHOD_5: getAttribute\', \'METHOD_3: findElements\', \'METHOD_1: isPermissionViewDisabled\', \'METHOD_2: getDriver\', \'VAR_2: view\', \'VAR_3: xpath\', \'VAR_4: found\', \'VAR_1: prefix\', \'VAR_5: attrValue\', \'STRING_2: "\\\\"]"\', \'STRING_3: "disabled"\', \'STRING_1: "<DOUBLE_SLASH>[<AT>name =\\\\""\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/de/akquinet/devops/test/ui/view/RepoEditView.java', 12, '130:9', '138:9', 98, 7 ), ( 5, 4, 10, 'public boolean save() {\n    String xpath = "//div[@class=\\"form-actions\\"]/input[@name =\\""\n    + "save" + "\\"]";\n    List<WebElement> found = getDriver().findElements(By.xpath(xpath));\n    if (found == null || found.size() == 0 || found.size() > 1) {\n    return false;\n    }\n    found.get(0).click();\n    WebDriverWait webDriverWait = new WebDriverWait(getDriver(), 1);\n    webDriverWait.until(new Exp.RepoListViewLoaded());\n    return true;\n    }', '[\'public\', \'boolean\', \'save\', \'(\', \')\', \'{\', \'String\', \'xpath\', \'=\', \'"<DOUBLE_SLASH>div[<AT>class=\\\\"form-actions\\\\"]/input[<AT>name =\\\\""\', \'+\', \'"save"\', \'+\', \'"\\\\"]"\', \';\', \'List\', \'<\', \'WebElement\', \'>\', \'found\', \'=\', \'getDriver\', \'(\', \')\', \'.\', \'findElements\', \'(\', \'By\', \'.\', \'xpath\', \'(\', \'xpath\', \')\', \')\', \';\', \'if\', \'(\', \'found\', \'==\', \'null\', \'||\', \'found\', \'.\', \'size\', \'(\', \')\', \'==\', \'0\', \'||\', \'found\', \'.\', \'size\', \'(\', \')\', \'>\', \'1\', \')\', \'{\', \'return\', \'false\', \';\', \'}\', \'found\', \'.\', \'get\', \'(\', \'0\', \')\', \'.\', \'click\', \'(\', \')\', \';\', \'WebDriverWait\', \'webDriverWait\', \'=\', \'new\', \'WebDriverWait\', \'(\', \'getDriver\', \'(\', \')\', \',\', \'1\', \')\', \';\', \'webDriverWait\', \'.\', \'until\', \'(\', \'new\', \'Exp.RepoListViewLoaded\', \'(\', \')\', \')\', \';\', \'return\', \'true\', \';\', \'}\']', 'public boolean METHOD_1 ( ) { String VAR_1 = STRING_1 + STRING_2 + STRING_3 ; List < TYPE_1 > VAR_2 = METHOD_2 ( ) . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_1 ) ) ; if ( VAR_2 == null || VAR_2 . size ( ) == 0 || VAR_2 . size ( ) > 1 ) { return false ; } VAR_2 . get ( 0 ) . METHOD_5 ( ) ; TYPE_3 VAR_3 = new TYPE_3 ( METHOD_2 ( ) , 1 ) ; VAR_3 . METHOD_6 ( new TYPE_4 ( ) ) ; return true ; }', '[\'TYPE_2: By\', \'TYPE_3: WebDriverWait\', \'TYPE_1: WebElement\', \'TYPE_4: Exp.RepoListViewLoaded\', \'METHOD_4: xpath\', \'METHOD_1: save\', \'METHOD_3: findElements\', \'METHOD_6: until\', \'METHOD_2: getDriver\', \'METHOD_5: click\', \'VAR_1: xpath\', \'VAR_2: found\', \'VAR_3: webDriverWait\', \'STRING_2: "save"\', \'STRING_3: "\\\\"]"\', \'STRING_1: "<DOUBLE_SLASH>div[<AT>class=\\\\"form-actions\\\\"]/input[<AT>name =\\\\""\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/de/akquinet/devops/test/ui/view/RepoEditView.java', 12, '146:9', '157:9', 95, 10 ), ( 5, 5, 0, 'public void sleep(int miliseconds) {\n    try {\n    Thread.sleep(miliseconds);\n    } catch (InterruptedException e) {\n    e.printStackTrace();\n    }\n    }', '[\'public\', \'void\', \'sleep\', \'(\', \'int\', \'miliseconds\', \')\', \'{\', \'try\', \'{\', \'Thread\', \'.\', \'sleep\', \'(\', \'miliseconds\', \')\', \';\', \'}\', \'catch\', \'(\', \'InterruptedException\', \'e\', \')\', \'{\', \'e\', \'.\', \'printStackTrace\', \'(\', \')\', \';\', \'}\', \'}\']', 'public void METHOD_1 ( int VAR_1 ) { try { TYPE_1 . METHOD_1 ( VAR_1 ) ; } catch ( TYPE_2 e ) { e . METHOD_2 ( ) ; } }', '[\'TYPE_2: InterruptedException\', \'TYPE_1: Thread\', \'METHOD_1: sleep\', \'METHOD_2: printStackTrace\', \'VAR_1: miliseconds\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/de/akquinet/devops/test/ui/view/GitblitPageView.java', 8, '38:9', '44:9', 31, 5 ), ( 5, 5, 1, 'public WebElement getElementWithFocus() {\n    String elScript = "return document.activeElement;";\n    WebElement focuseedEl = (WebElement) ((JavascriptExecutor) getDriver())\n    .executeScript(elScript);\n    return focuseedEl;\n    }', '[\'public\', \'WebElement\', \'getElementWithFocus\', \'(\', \')\', \'{\', \'String\', \'elScript\', \'=\', \'"return document.activeElement;"\', \';\', \'WebElement\', \'focuseedEl\', \'=\', \'(\', \'WebElement\', \')\', \'(\', \'(\', \'JavascriptExecutor\', \')\', \'getDriver\', \'(\', \')\', \')\', \'.\', \'executeScript\', \'(\', \'elScript\', \')\', \';\', \'return\', \'focuseedEl\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( ) { String VAR_1 = STRING_1 ; TYPE_1 VAR_2 = ( TYPE_1 ) ( ( TYPE_2 ) METHOD_2 ( ) ) . METHOD_3 ( VAR_1 ) ; return VAR_2 ; }', '[\'TYPE_2: JavascriptExecutor\', \'TYPE_1: WebElement\', \'METHOD_1: getElementWithFocus\', \'METHOD_3: executeScript\', \'METHOD_2: getDriver\', \'VAR_1: elScript\', \'VAR_2: focuseedEl\', \'STRING_1: "return document.activeElement;"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/de/akquinet/devops/test/ui/view/GitblitPageView.java', 8, '46:9', '52:9', 33, 5 ), ( 5, 6, 1, '@AfterClass\n    public static void tearDownClass() throws InterruptedException {\n    driver.close();\n    // Stop Gitblit\n    GitBlitServer.main("--stop", "--shutdownPort", "" + SHUTDOWN_PORT);\n    // Wait a few seconds for it to be running completely including thread\n    // destruction\n    Thread.sleep(1000);\n    }', '[\'public\', \'static\', \'void\', \'tearDownClass\', \'(\', \')\', \'throws\', \'InterruptedException\', \'{\', \'driver\', \'.\', \'close\', \'(\', \')\', \';\', \'GitBlitServer\', \'.\', \'main\', \'(\', \'"--stop"\', \',\', \'"--shutdownPort"\', \',\', \'""\', \'+\', \'SHUTDOWN_PORT\', \')\', \';\', \'Thread\', \'.\', \'sleep\', \'(\', \'1000\', \')\', \';\', \'}\']', 'public static void METHOD_1 ( ) throws TYPE_1 { VAR_1 . close ( ) ; TYPE_2 . METHOD_2 ( STRING_1 , STRING_2 , STRING_3 + VAR_2 ) ; TYPE_3 . METHOD_3 ( INT_1 ) ; }', '[\'TYPE_1: InterruptedException\', \'TYPE_2: GitBlitServer\', \'TYPE_3: Thread\', \'METHOD_3: sleep\', \'METHOD_1: tearDownClass\', \'METHOD_2: main\', \'VAR_1: driver\', \'VAR_2: SHUTDOWN_PORT\', \'INT_1: 1000\', \'STRING_3: ""\', \'STRING_1: "--stop"\', \'STRING_2: "--shutdownPort"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/de/akquinet/devops/test/ui/generic/AbstractUITest.java', 3, '82:9', '91:9', 39, 5 ), ( 5, 8, 0, '@Override\n    protected void configureLuceneIndexing() {\n    if (luceneIndexingEnabled) {\n    getScheduledExecutor().scheduleAtFixedRate(getLuceneExecutor(), 1,\n    					2, TimeUnit.MINUTES);\n    getLogger()\n    .info("Lucene executor is scheduled to process indexed branches every 2 minutes.");\n    }\n    }', '[\'protected\', \'void\', \'configureLuceneIndexing\', \'(\', \')\', \'{\', \'if\', \'(\', \'luceneIndexingEnabled\', \')\', \'{\', \'getScheduledExecutor\', \'(\', \')\', \'.\', \'scheduleAtFixedRate\', \'(\', \'getLuceneExecutor\', \'(\', \')\', \',\', \'1\', \',\', \'2\', \',\', \'TimeUnit.MINUTES\', \')\', \';\', \'getLogger\', \'(\', \')\', \'.\', \'info\', \'(\', \'"Lucene executor is scheduled to process indexed branches every 2 minutes."\', \')\', \';\', \'}\', \'}\']', 'protected void METHOD_1 ( ) { if ( VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( ) , 1 , 2 , VAR_2 ) ; METHOD_5 ( ) . info ( STRING_1 ) ; } }', '[\'METHOD_3: scheduleAtFixedRate\', \'METHOD_2: getScheduledExecutor\', \'METHOD_1: configureLuceneIndexing\', \'METHOD_5: getLogger\', \'METHOD_4: getLuceneExecutor\', \'VAR_1: luceneIndexingEnabled\', \'VAR_2: TimeUnit.MINUTES\', \'STRING_1: "Lucene executor is scheduled to process indexed branches every 2 minutes."\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/de/akquinet/devops/GitBlit4UITests.java', 2, '15:9', '23:9', 39, 7 ), ( 5, 9, 1, '@Override\n    protected GitBlit getGitBlitInstance() {\n    if (instance == null) {\n    instance = new GitBlit4UITests(false);\n    }\n    return instance;\n    }', '[\'protected\', \'GitBlit\', \'getGitBlitInstance\', \'(\', \')\', \'{\', \'if\', \'(\', \'instance\', \'==\', \'null\', \')\', \'{\', \'instance\', \'=\', \'new\', \'GitBlit4UITests\', \'(\', \'false\', \')\', \';\', \'}\', \'return\', \'instance\', \';\', \'}\']', 'protected TYPE_1 METHOD_1 ( ) { if ( instance == null ) { instance = new TYPE_2 ( false ) ; } return instance ; }', '[\'TYPE_2: GitBlit4UITests\', \'TYPE_1: GitBlit\', \'METHOD_1: getGitBlitInstance\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/de/akquinet/devops/GitBlitServer4UITests.java', 2, '55:9', '61:9', 27, 5 ), ( 5, 10, 4, 'public GitblitRunnable(int httpPort, int httpsPort, int shutdownPort,\n    			String gitblitPropertiesPath, String userPropertiesPath) {\n    this.httpPort = httpPort;\n    this.httpsPort = httpsPort;\n    this.shutdownPort = shutdownPort;\n    this.userPropertiesPath = userPropertiesPath;\n    this.gitblitPropertiesPath = gitblitPropertiesPath;\n    }', '[\'public\', \'GitblitRunnable\', \'(\', \'int\', \'httpPort\', \',\', \'int\', \'httpsPort\', \',\', \'int\', \'shutdownPort\', \',\', \'String\', \'gitblitPropertiesPath\', \',\', \'String\', \'userPropertiesPath\', \')\', \'{\', \'this\', \'.\', \'httpPort\', \'=\', \'httpPort\', \';\', \'this\', \'.\', \'httpsPort\', \'=\', \'httpsPort\', \';\', \'this\', \'.\', \'shutdownPort\', \'=\', \'shutdownPort\', \';\', \'this\', \'.\', \'userPropertiesPath\', \'=\', \'userPropertiesPath\', \';\', \'this\', \'.\', \'gitblitPropertiesPath\', \'=\', \'gitblitPropertiesPath\', \';\', \'}\']', 'public VAR_1 ( int VAR_2 , int VAR_3 , int VAR_4 , String VAR_5 , String VAR_6 ) { this . VAR_2 = VAR_2 ; this . VAR_3 = VAR_3 ; this . VAR_4 = VAR_4 ; this . VAR_6 = VAR_6 ; this . VAR_5 = VAR_5 ; }', '[\'VAR_4: shutdownPort\', \'VAR_5: gitblitPropertiesPath\', \'VAR_6: userPropertiesPath\', \'VAR_2: httpPort\', \'VAR_1: GitblitRunnable\', \'VAR_3: httpsPort\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/de/akquinet/devops/GitblitRunnable.java', 5, '45:9', '52:9', 50, 7 ), ( 5, 11, 0, 'public static void main(String[] args) {\n    int httpPort = 8080, httpsPort = 8443, shutdownPort = 8081;\n    String gitblitPropertiesPath = "src/test/config/test-ui-gitblit.properties",\n    			usersPropertiesPath = "src/test/config/test-ui-users.conf";\n    GitblitRunnable gitblitRunnable = new GitblitRunnable(httpPort,\n    			httpsPort, shutdownPort, gitblitPropertiesPath,\n    			usersPropertiesPath);\n    Thread serverThread = new Thread(gitblitRunnable);\n    serverThread.start();\n    }', '[\'public\', \'static\', \'void\', \'main\', \'(\', \'String\', \'[\', \']\', \'args\', \')\', \'{\', \'int\', \'httpPort\', \'=\', \'8080\', \',\', \'httpsPort\', \'=\', \'8443\', \',\', \'shutdownPort\', \'=\', \'8081\', \';\', \'String\', \'gitblitPropertiesPath\', \'=\', \'"src/test/config/test-ui-gitblit.properties"\', \',\', \'usersPropertiesPath\', \'=\', \'"src/test/config/test-ui-users.conf"\', \';\', \'GitblitRunnable\', \'gitblitRunnable\', \'=\', \'new\', \'GitblitRunnable\', \'(\', \'httpPort\', \',\', \'httpsPort\', \',\', \'shutdownPort\', \',\', \'gitblitPropertiesPath\', \',\', \'usersPropertiesPath\', \')\', \';\', \'Thread\', \'serverThread\', \'=\', \'new\', \'Thread\', \'(\', \'gitblitRunnable\', \')\', \';\', \'serverThread\', \'.\', \'start\', \'(\', \')\', \';\', \'}\']', 'public static void METHOD_1 ( String [ ] args ) { int VAR_1 = INT_1 , VAR_2 = INT_2 , VAR_3 = INT_3 ; String VAR_4 = STRING_1 , VAR_5 = STRING_2 ; TYPE_1 VAR_6 = new TYPE_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; TYPE_2 VAR_7 = new TYPE_2 ( VAR_6 ) ; VAR_7 . start ( ) ; }', '[\'TYPE_1: GitblitRunnable\', \'TYPE_2: Thread\', \'METHOD_1: main\', \'VAR_3: shutdownPort\', \'VAR_4: gitblitPropertiesPath\', \'VAR_6: gitblitRunnable\', \'VAR_1: httpPort\', \'VAR_7: serverThread\', \'VAR_5: usersPropertiesPath\', \'VAR_2: httpsPort\', \'INT_2: 8443\', \'INT_1: 8080\', \'INT_3: 8081\', \'STRING_1: "src/test/config/test-ui-gitblit.properties"\', \'STRING_2: "src/test/config/test-ui-users.conf"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/de/akquinet/devops/ManualUITestLaunch.java', 1, '4:1', '14:1', 64, 9 ), ( 5, 12, 3, 'private static void shutdownGitBlitServer(int shutdownPort) {\n    try {\n    Socket s = new Socket(InetAddress.getByName("127.0.0.1"),\n    					shutdownPort);\n    OutputStream out = s.getOutputStream();\n    System.out.println("Sending Shutdown Request to " + Constants.NAME);\n    out.write("\\r\\n".getBytes());\n    out.flush();\n    s.close();\n    } catch (UnknownHostException e) {\n    e.printStackTrace();\n    } catch (IOException e) {\n    e.printStackTrace();\n    }\n    }', '[\'private\', \'static\', \'void\', \'shutdownGitBlitServer\', \'(\', \'int\', \'shutdownPort\', \')\', \'{\', \'try\', \'{\', \'Socket\', \'s\', \'=\', \'new\', \'Socket\', \'(\', \'InetAddress\', \'.\', \'getByName\', \'(\', \'"127.0.0.1"\', \')\', \',\', \'shutdownPort\', \')\', \';\', \'OutputStream\', \'out\', \'=\', \'s\', \'.\', \'getOutputStream\', \'(\', \')\', \';\', \'System.out\', \'.\', \'println\', \'(\', \'"Sending Shutdown Request to "\', \'+\', \'Constants.NAME\', \')\', \';\', \'out\', \'.\', \'write\', \'(\', \'"\\\\r\\\\n"\', \'.\', \'getBytes\', \'(\', \')\', \')\', \';\', \'out\', \'.\', \'flush\', \'(\', \')\', \';\', \'s\', \'.\', \'close\', \'(\', \')\', \';\', \'}\', \'catch\', \'(\', \'UnknownHostException\', \'e\', \')\', \'{\', \'e\', \'.\', \'printStackTrace\', \'(\', \')\', \';\', \'}\', \'catch\', \'(\', \'IOException\', \'e\', \')\', \'{\', \'e\', \'.\', \'printStackTrace\', \'(\', \')\', \';\', \'}\', \'}\']', 'private static void METHOD_1 ( int VAR_1 ) { try { TYPE_1 s = new TYPE_1 ( TYPE_2 . METHOD_2 ( STRING_1 ) , VAR_1 ) ; TYPE_3 out = s . METHOD_3 ( ) ; VAR_2 . println ( STRING_2 + VAR_3 ) ; out . write ( STRING_3 . METHOD_4 ( ) ) ; out . METHOD_5 ( ) ; s . close ( ) ; } catch ( TYPE_4 e ) { e . METHOD_6 ( ) ; } catch ( IOException e ) { e . METHOD_6 ( ) ; } }', '[\'TYPE_4: UnknownHostException\', \'TYPE_3: OutputStream\', \'TYPE_2: InetAddress\', \'TYPE_1: Socket\', \'METHOD_5: flush\', \'METHOD_6: printStackTrace\', \'METHOD_2: getByName\', \'METHOD_3: getOutputStream\', \'METHOD_4: getBytes\', \'METHOD_1: shutdownGitBlitServer\', \'VAR_1: shutdownPort\', \'VAR_3: Constants.NAME\', \'VAR_2: System.out\', \'STRING_3: "\\\\r\\\\n"\', \'STRING_1: "127.0.0.1"\', \'STRING_2: "Sending Shutdown Request to "\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/de/akquinet/devops/LaunchWithUITestConfig.java', 4, '111:9', '125:9', 94, 13 ), ( 5, 13, 2, '@Before\n    public void initializeConfiguration() throws Exception{\n    Repository r = GitBlitSuite.getHelloworldRepository();\n    StoredConfig config = r.getConfig();\n    config.unsetSection(Constants.CONFIG_GITBLIT, Constants.CONFIG_CUSTOM_FIELDS);\n    config.setString(Constants.CONFIG_GITBLIT, Constants.CONFIG_CUSTOM_FIELDS, "commitMessageRegEx", "\\\\d");\n    config.setString(Constants.CONFIG_GITBLIT, Constants.CONFIG_CUSTOM_FIELDS, "anotherProperty", "Hello");\n    config.save();\n    }', '[\'public\', \'void\', \'initializeConfiguration\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'Repository\', \'r\', \'=\', \'GitBlitSuite\', \'.\', \'getHelloworldRepository\', \'(\', \')\', \';\', \'StoredConfig\', \'config\', \'=\', \'r\', \'.\', \'getConfig\', \'(\', \')\', \';\', \'config\', \'.\', \'unsetSection\', \'(\', \'Constants.CONFIG_GITBLIT\', \',\', \'Constants.CONFIG_CUSTOM_FIELDS\', \')\', \';\', \'config\', \'.\', \'setString\', \'(\', \'Constants.CONFIG_GITBLIT\', \',\', \'Constants.CONFIG_CUSTOM_FIELDS\', \',\', \'"commitMessageRegEx"\', \',\', \'"\\\\\\\\d"\', \')\', \';\', \'config\', \'.\', \'setString\', \'(\', \'Constants.CONFIG_GITBLIT\', \',\', \'Constants.CONFIG_CUSTOM_FIELDS\', \',\', \'"anotherProperty"\', \',\', \'"Hello"\', \')\', \';\', \'config\', \'.\', \'save\', \'(\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { TYPE_1 r = TYPE_2 . METHOD_2 ( ) ; TYPE_3 config = r . METHOD_3 ( ) ; config . METHOD_4 ( VAR_1 , VAR_2 ) ; config . METHOD_5 ( VAR_1 , VAR_2 , STRING_1 , STRING_2 ) ; config . METHOD_5 ( VAR_1 , VAR_2 , STRING_3 , STRING_4 ) ; config . METHOD_6 ( ) ; }', '[\'TYPE_3: StoredConfig\', \'TYPE_1: Repository\', \'TYPE_2: GitBlitSuite\', \'METHOD_5: setString\', \'METHOD_6: save\', \'METHOD_2: getHelloworldRepository\', \'METHOD_1: initializeConfiguration\', \'METHOD_3: getConfig\', \'METHOD_4: unsetSection\', \'VAR_1: Constants.CONFIG_GITBLIT\', \'VAR_2: Constants.CONFIG_CUSTOM_FIELDS\', \'STRING_4: "Hello"\', \'STRING_3: "anotherProperty"\', \'STRING_2: "\\\\\\\\d"\', \'STRING_1: "commitMessageRegEx"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/RepositoryModelTest.java', 6, '48:9', '58:9', 78, 8 ), ( 5, 13, 3, '@After\n    public void teardownConfiguration() throws Exception {\n    Repository r = GitBlitSuite.getHelloworldRepository();\n    StoredConfig config = r.getConfig();\n    config.unsetSection(Constants.CONFIG_GITBLIT, Constants.CONFIG_CUSTOM_FIELDS);\n    config.save();\n    }', '[\'public\', \'void\', \'teardownConfiguration\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'Repository\', \'r\', \'=\', \'GitBlitSuite\', \'.\', \'getHelloworldRepository\', \'(\', \')\', \';\', \'StoredConfig\', \'config\', \'=\', \'r\', \'.\', \'getConfig\', \'(\', \')\', \';\', \'config\', \'.\', \'unsetSection\', \'(\', \'Constants.CONFIG_GITBLIT\', \',\', \'Constants.CONFIG_CUSTOM_FIELDS\', \')\', \';\', \'config\', \'.\', \'save\', \'(\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { TYPE_1 r = TYPE_2 . METHOD_2 ( ) ; TYPE_3 config = r . METHOD_3 ( ) ; config . METHOD_4 ( VAR_1 , VAR_2 ) ; config . METHOD_5 ( ) ; }', '[\'TYPE_3: StoredConfig\', \'TYPE_1: Repository\', \'TYPE_2: GitBlitSuite\', \'METHOD_1: teardownConfiguration\', \'METHOD_5: save\', \'METHOD_2: getHelloworldRepository\', \'METHOD_3: getConfig\', \'METHOD_4: unsetSection\', \'VAR_1: Constants.CONFIG_GITBLIT\', \'VAR_2: Constants.CONFIG_CUSTOM_FIELDS\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/RepositoryModelTest.java', 6, '60:9', '67:9', 44, 6 ), ( 5, 13, 4, '@Test\n    public void testGetCustomProperty() throws Exception {\n    RepositoryModel model = GitBlit.self().getRepositoryModel(\n    				GitBlitSuite.getHelloworldRepository().getDirectory().getName());\n    assertEquals("\\\\d", model.customFields.get("commitMessageRegEx"));\n    assertEquals("Hello", model.customFields.get("anotherProperty"));\n    }', '[\'public\', \'void\', \'testGetCustomProperty\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'RepositoryModel\', \'model\', \'=\', \'GitBlit\', \'.\', \'self\', \'(\', \')\', \'.\', \'getRepositoryModel\', \'(\', \'GitBlitSuite\', \'.\', \'getHelloworldRepository\', \'(\', \')\', \'.\', \'getDirectory\', \'(\', \')\', \'.\', \'getName\', \'(\', \')\', \')\', \';\', \'assertEquals\', \'(\', \'"\\\\\\\\d"\', \',\', \'model.customFields\', \'.\', \'get\', \'(\', \'"commitMessageRegEx"\', \')\', \')\', \';\', \'assertEquals\', \'(\', \'"Hello"\', \',\', \'model.customFields\', \'.\', \'get\', \'(\', \'"anotherProperty"\', \')\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { TYPE_1 model = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( TYPE_3 . METHOD_4 ( ) . METHOD_5 ( ) . getName ( ) ) ; METHOD_6 ( STRING_1 , VAR_1 . get ( STRING_2 ) ) ; METHOD_6 ( STRING_3 , VAR_1 . get ( STRING_4 ) ) ; }', '[\'TYPE_3: GitBlitSuite\', \'TYPE_1: RepositoryModel\', \'TYPE_2: GitBlit\', \'METHOD_1: testGetCustomProperty\', \'METHOD_2: self\', \'METHOD_4: getHelloworldRepository\', \'METHOD_3: getRepositoryModel\', \'METHOD_5: getDirectory\', \'METHOD_6: assertEquals\', \'VAR_1: model.customFields\', \'STRING_3: "Hello"\', \'STRING_4: "anotherProperty"\', \'STRING_1: "\\\\\\\\d"\', \'STRING_2: "commitMessageRegEx"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/RepositoryModelTest.java', 6, '69:9', '76:9', 60, 6 ), ( 5, 16, 1, '@AfterClass\n    public static void stopGitblit() throws Exception {\n    if (started.get()) {\n    GitBlitSuite.stopGitblit();\n    deleteWorkingFolders();\n    }\n    }', '[\'public\', \'static\', \'void\', \'stopGitblit\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'if\', \'(\', \'started\', \'.\', \'get\', \'(\', \')\', \')\', \'{\', \'GitBlitSuite\', \'.\', \'stopGitblit\', \'(\', \')\', \';\', \'deleteWorkingFolders\', \'(\', \')\', \';\', \'}\', \'}\']', 'public static void METHOD_1 ( ) throws Exception { if ( VAR_1 . get ( ) ) { TYPE_1 . METHOD_1 ( ) ; METHOD_2 ( ) ; } }', '[\'TYPE_1: GitBlitSuite\', \'METHOD_2: deleteWorkingFolders\', \'METHOD_1: stopGitblit\', \'VAR_1: started\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/GitDaemonTest.java', 9, '62:9', '68:9', 28, 5 ), ( 5, 20, 0, '@Override\n    protected Properties read() {\n    Properties props = new Properties();\n    props.putAll(backingMap);\n    return props;\n    }', '[\'protected\', \'Properties\', \'read\', \'(\', \')\', \'{\', \'Properties\', \'props\', \'=\', \'new\', \'Properties\', \'(\', \')\', \';\', \'props\', \'.\', \'putAll\', \'(\', \'backingMap\', \')\', \';\', \'return\', \'props\', \';\', \'}\']', 'protected TYPE_1 read ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_1 ( VAR_2 ) ; return VAR_1 ; }', '[\'TYPE_1: Properties\', \'METHOD_1: putAll\', \'VAR_2: backingMap\', \'VAR_1: props\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/mock/MemorySettings.java', 4, '33:9', '39:9', 25, 5 ), ( 5, 21, 1, 'private void testMetrics(Repository repository) throws Exception {\n    List<Metric> metrics = MetricUtils.getDateMetrics(repository, null, true, null,\n    				TimeZone.getDefault());\n    repository.close();\n    assertTrue("No date metrics found!", metrics.size() > 0);\n    }', '[\'private\', \'void\', \'testMetrics\', \'(\', \'Repository\', \'repository\', \')\', \'throws\', \'Exception\', \'{\', \'List\', \'<\', \'Metric\', \'>\', \'metrics\', \'=\', \'MetricUtils\', \'.\', \'getDateMetrics\', \'(\', \'repository\', \',\', \'null\', \',\', \'true\', \',\', \'null\', \',\', \'TimeZone\', \'.\', \'getDefault\', \'(\', \')\', \')\', \';\', \'repository\', \'.\', \'close\', \'(\', \')\', \';\', \'assertTrue\', \'(\', \'"No date metrics found!"\', \',\', \'metrics\', \'.\', \'size\', \'(\', \')\', \'>\', \'0\', \')\', \';\', \'}\']', 'private void METHOD_1 ( TYPE_1 VAR_1 ) throws Exception { List < TYPE_2 > VAR_2 = TYPE_3 . METHOD_2 ( VAR_1 , null , true , null , TYPE_4 . METHOD_3 ( ) ) ; VAR_1 . close ( ) ; METHOD_4 ( STRING_1 , VAR_2 . size ( ) > 0 ) ; }', '[\'TYPE_1: Repository\', \'TYPE_4: TimeZone\', \'TYPE_2: Metric\', \'TYPE_3: MetricUtils\', \'METHOD_1: testMetrics\', \'METHOD_2: getDateMetrics\', \'METHOD_4: assertTrue\', \'METHOD_3: getDefault\', \'VAR_2: metrics\', \'VAR_1: repository\', \'STRING_1: "No date metrics found!"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/MetricUtilsTest.java', 3, '38:9', '43:9', 52, 5 ), ( 5, 21, 2, '@Test\n    public void testAuthorMetrics() throws Exception {\n    Repository repository = GitBlitSuite.getHelloworldRepository();\n    List<Metric> byEmail = MetricUtils.getAuthorMetrics(repository, null, true);\n    List<Metric> byName = MetricUtils.getAuthorMetrics(repository, null, false);\n    repository.close();\n    assertEquals("No author metrics found!", 9, byEmail.size());\n    assertEquals("No author metrics found!", 8, byName.size());\n    }', '[\'public\', \'void\', \'testAuthorMetrics\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'Repository\', \'repository\', \'=\', \'GitBlitSuite\', \'.\', \'getHelloworldRepository\', \'(\', \')\', \';\', \'List\', \'<\', \'Metric\', \'>\', \'byEmail\', \'=\', \'MetricUtils\', \'.\', \'getAuthorMetrics\', \'(\', \'repository\', \',\', \'null\', \',\', \'true\', \')\', \';\', \'List\', \'<\', \'Metric\', \'>\', \'byName\', \'=\', \'MetricUtils\', \'.\', \'getAuthorMetrics\', \'(\', \'repository\', \',\', \'null\', \',\', \'false\', \')\', \';\', \'repository\', \'.\', \'close\', \'(\', \')\', \';\', \'assertEquals\', \'(\', \'"No author metrics found!"\', \',\', \'9\', \',\', \'byEmail\', \'.\', \'size\', \'(\', \')\', \')\', \';\', \'assertEquals\', \'(\', \'"No author metrics found!"\', \',\', \'8\', \',\', \'byName\', \'.\', \'size\', \'(\', \')\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; List < TYPE_3 > VAR_2 = TYPE_4 . METHOD_3 ( VAR_1 , null , true ) ; List < TYPE_3 > VAR_3 = TYPE_4 . METHOD_3 ( VAR_1 , null , false ) ; VAR_1 . close ( ) ; METHOD_4 ( STRING_1 , INT_1 , VAR_2 . size ( ) ) ; METHOD_4 ( STRING_1 , 8 , VAR_3 . size ( ) ) ; }', '[\'TYPE_1: Repository\', \'TYPE_2: GitBlitSuite\', \'TYPE_3: Metric\', \'TYPE_4: MetricUtils\', \'METHOD_1: testAuthorMetrics\', \'METHOD_3: getAuthorMetrics\', \'METHOD_2: getHelloworldRepository\', \'METHOD_4: assertEquals\', \'VAR_2: byEmail\', \'VAR_3: byName\', \'VAR_1: repository\', \'INT_1: 9\', \'STRING_1: "No author metrics found!"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/MetricUtilsTest.java', 3, '45:9', '53:9', 81, 8 ), ( 5, 22, 0, '@Test\n    public void testBase64() {\n    String source = "this is a test";\n    String base64 = Base64.encodeBytes(source.getBytes());\n    assertEquals("dGhpcyBpcyBhIHRlc3Q=", base64);\n    String decoded = new String(Base64.decode(base64));\n    assertEquals(source, decoded);\n    }', '[\'public\', \'void\', \'testBase64\', \'(\', \')\', \'{\', \'String\', \'source\', \'=\', \'"this is a test"\', \';\', \'String\', \'base64\', \'=\', \'Base64\', \'.\', \'encodeBytes\', \'(\', \'source\', \'.\', \'getBytes\', \'(\', \')\', \')\', \';\', \'assertEquals\', \'(\', \'"dGhpcyBpcyBhIHRlc3Q="\', \',\', \'base64\', \')\', \';\', \'String\', \'decoded\', \'=\', \'new\', \'String\', \'(\', \'Base64\', \'.\', \'decode\', \'(\', \'base64\', \')\', \')\', \';\', \'assertEquals\', \'(\', \'source\', \',\', \'decoded\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) { String source = STRING_1 ; String VAR_1 = TYPE_1 . METHOD_2 ( source . METHOD_3 ( ) ) ; METHOD_4 ( STRING_2 , VAR_1 ) ; String VAR_2 = new String ( TYPE_1 . METHOD_5 ( VAR_1 ) ) ; METHOD_4 ( source , VAR_2 ) ; }', '[\'TYPE_1: Base64\', \'METHOD_2: encodeBytes\', \'METHOD_4: assertEquals\', \'METHOD_1: testBase64\', \'METHOD_5: decode\', \'METHOD_3: getBytes\', \'VAR_1: base64\', \'VAR_2: decoded\', \'STRING_1: "this is a test"\', \'STRING_2: "dGhpcyBpcyBhIHRlc3Q="\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/Base64Test.java', 1, '26:9', '33:9', 54, 7 ), ( 5, 23, 0, '@Test\n    public void testReadContent() throws Exception {\n    File dir = new File(System.getProperty("user.dir"));\n    String rawContent = FileUtils.readContent(new File(dir, "LICENSE"), "\\n");\n    assertTrue(rawContent.trim().startsWith("Apache License"));\n    }', '[\'public\', \'void\', \'testReadContent\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'File\', \'dir\', \'=\', \'new\', \'File\', \'(\', \'System\', \'.\', \'getProperty\', \'(\', \'"user.dir"\', \')\', \')\', \';\', \'String\', \'rawContent\', \'=\', \'FileUtils\', \'.\', \'readContent\', \'(\', \'new\', \'File\', \'(\', \'dir\', \',\', \'"LICENSE"\', \')\', \',\', \'"\\\\n"\', \')\', \';\', \'assertTrue\', \'(\', \'rawContent\', \'.\', \'trim\', \'(\', \')\', \'.\', \'startsWith\', \'(\', \'"Apache License"\', \')\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { File VAR_1 = new File ( System . getProperty ( STRING_1 ) ) ; String VAR_2 = TYPE_1 . METHOD_2 ( new File ( VAR_1 , STRING_2 ) , STRING_3 ) ; METHOD_3 ( VAR_2 . METHOD_4 ( ) . startsWith ( STRING_4 ) ) ; }', '[\'TYPE_1: FileUtils\', \'METHOD_1: testReadContent\', \'METHOD_4: trim\', \'METHOD_3: assertTrue\', \'METHOD_2: readContent\', \'VAR_1: dir\', \'VAR_2: rawContent\', \'STRING_4: "Apache License"\', \'STRING_1: "user.dir"\', \'STRING_3: "\\\\n"\', \'STRING_2: "LICENSE"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/FileUtilsTest.java', 4, '29:9', '34:9', 55, 5 ), ( 5, 23, 1, '@Test\n    public void testWriteContent() throws Exception {\n    String contentA = "this is a test";\n    File tmp = File.createTempFile("gitblit-", ".test");\n    FileUtils.writeContent(tmp, contentA);\n    String contentB = FileUtils.readContent(tmp, "\\n").trim();\n    assertEquals(contentA, contentB);\n    }', '[\'public\', \'void\', \'testWriteContent\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'String\', \'contentA\', \'=\', \'"this is a test"\', \';\', \'File\', \'tmp\', \'=\', \'File\', \'.\', \'createTempFile\', \'(\', \'"gitblit-"\', \',\', \'".test"\', \')\', \';\', \'FileUtils\', \'.\', \'writeContent\', \'(\', \'tmp\', \',\', \'contentA\', \')\', \';\', \'String\', \'contentB\', \'=\', \'FileUtils\', \'.\', \'readContent\', \'(\', \'tmp\', \',\', \'"\\\\n"\', \')\', \'.\', \'trim\', \'(\', \')\', \';\', \'assertEquals\', \'(\', \'contentA\', \',\', \'contentB\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { String VAR_1 = STRING_1 ; File VAR_2 = File . METHOD_2 ( STRING_2 , STRING_3 ) ; TYPE_1 . METHOD_3 ( VAR_2 , VAR_1 ) ; String VAR_3 = TYPE_1 . METHOD_4 ( VAR_2 , STRING_4 ) . METHOD_5 ( ) ; METHOD_6 ( VAR_1 , VAR_3 ) ; }', '[\'TYPE_1: FileUtils\', \'METHOD_1: testWriteContent\', \'METHOD_5: trim\', \'METHOD_4: readContent\', \'METHOD_3: writeContent\', \'METHOD_2: createTempFile\', \'METHOD_6: assertEquals\', \'VAR_2: tmp\', \'VAR_3: contentB\', \'VAR_1: contentA\', \'STRING_3: ".test"\', \'STRING_1: "this is a test"\', \'STRING_2: "gitblit-"\', \'STRING_4: "\\\\n"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/FileUtilsTest.java', 4, '36:9', '43:9', 58, 7 ), ( 5, 26, 0, '@Test\n    public void testSendMail() throws Exception {\n    FileSettings settings = new FileSettings("mailtest.properties");\n    MailExecutor mail = new MailExecutor(settings);\n    Message message = mail.createMessage(settings.getStrings(Keys.mail.adminAddresses));\n    message.setSubject("Test");\n    message.setText("ï»¿LÃ¤gger till andra stycket i ny fil. UTF-8 encoded");\n    mail.queue(message);\n    mail.run();\n    assertTrue("mail queue is not empty!", mail.hasEmptyQueue());\n    }', '[\'public\', \'void\', \'testSendMail\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'FileSettings\', \'settings\', \'=\', \'new\', \'FileSettings\', \'(\', \'"mailtest.properties"\', \')\', \';\', \'MailExecutor\', \'mail\', \'=\', \'new\', \'MailExecutor\', \'(\', \'settings\', \')\', \';\', \'Message\', \'message\', \'=\', \'mail\', \'.\', \'createMessage\', \'(\', \'settings\', \'.\', \'getStrings\', \'(\', \'Keys.mail.adminAddresses\', \')\', \')\', \';\', \'message\', \'.\', \'setSubject\', \'(\', \'"Test"\', \')\', \';\', \'message\', \'.\', \'setText\', \'(\', \'"ï»¿LÃ¤gger till andra stycket i ny fil. UTF-8 encoded"\', \')\', \';\', \'mail\', \'.\', \'queue\', \'(\', \'message\', \')\', \';\', \'mail\', \'.\', \'run\', \'(\', \')\', \';\', \'assertTrue\', \'(\', \'"mail queue is not empty!"\', \',\', \'mail\', \'.\', \'hasEmptyQueue\', \'(\', \')\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ; TYPE_3 message = VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( VAR_3 ) ) ; message . METHOD_4 ( STRING_2 ) ; message . METHOD_5 ( STRING_3 ) ; VAR_2 . METHOD_6 ( message ) ; VAR_2 . METHOD_7 ( ) ; METHOD_8 ( STRING_4 , VAR_2 . METHOD_9 ( ) ) ; }', '[\'TYPE_3: Message\', \'TYPE_1: FileSettings\', \'TYPE_2: MailExecutor\', \'METHOD_4: setSubject\', \'METHOD_8: assertTrue\', \'METHOD_2: createMessage\', \'METHOD_1: testSendMail\', \'METHOD_7: run\', \'METHOD_9: hasEmptyQueue\', \'METHOD_6: queue\', \'METHOD_3: getStrings\', \'METHOD_5: setText\', \'VAR_1: settings\', \'VAR_2: mail\', \'VAR_3: Keys.mail.adminAddresses\', \'STRING_4: "mail queue is not empty!"\', \'STRING_3: "ï»¿LÃ¤gger till andra stycket i ny fil. UTF-8 encoded"\', \'STRING_2: "Test"\', \'STRING_1: "mailtest.properties"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/MailTest.java', 1, '30:9', '41:9', 83, 10 ), ( 5, 27, 1, '@AfterClass\n    public static void stopGitblit() throws Exception {\n    if (started.get()) {\n    GitBlitSuite.stopGitblit();\n    deleteWorkingFolders();\n    }\n    }', '[\'public\', \'static\', \'void\', \'stopGitblit\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'if\', \'(\', \'started\', \'.\', \'get\', \'(\', \')\', \')\', \'{\', \'GitBlitSuite\', \'.\', \'stopGitblit\', \'(\', \')\', \';\', \'deleteWorkingFolders\', \'(\', \')\', \';\', \'}\', \'}\']', 'public static void METHOD_1 ( ) throws Exception { if ( VAR_1 . get ( ) ) { TYPE_1 . METHOD_1 ( ) ; METHOD_2 ( ) ; } }', '[\'TYPE_1: GitBlitSuite\', \'METHOD_2: deleteWorkingFolders\', \'METHOD_1: stopGitblit\', \'VAR_1: started\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/GitServletTest.java', 22, '69:9', '75:9', 28, 5 ), ( 5, 27, 19, '@Test\n    public void testCreateOnPush() throws Exception {\n    testCreateOnPush(false, false);\n    testCreateOnPush(true, false);\n    testCreateOnPush(false, true);\n    }', '[\'public\', \'void\', \'testCreateOnPush\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'testCreateOnPush\', \'(\', \'false\', \',\', \'false\', \')\', \';\', \'testCreateOnPush\', \'(\', \'true\', \',\', \'false\', \')\', \';\', \'testCreateOnPush\', \'(\', \'false\', \',\', \'true\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { METHOD_1 ( false , false ) ; METHOD_1 ( true , false ) ; METHOD_1 ( false , true ) ; }', '[\'METHOD_1: testCreateOnPush\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/GitServletTest.java', 22, '678:9', '683:9', 31, 5 ), ( 5, 27, 21, '@Test\n    public void testPushLog() throws IOException {\n    String name = "refchecks/ticgit.git";\n    File refChecks = new File(GitBlitSuite.REPOSITORIES, name);\n    Repository repository = new FileRepositoryBuilder().setGitDir(refChecks).build();\n    List<PushLogEntry> pushes = PushLogUtils.getPushLog(name, repository);\n    GitBlitSuite.close(repository);\n    assertTrue("Repository has an empty push log!", pushes.size() > 0);\n    }', '[\'public\', \'void\', \'testPushLog\', \'(\', \')\', \'throws\', \'IOException\', \'{\', \'String\', \'name\', \'=\', \'"refchecks/ticgit.git"\', \';\', \'File\', \'refChecks\', \'=\', \'new\', \'File\', \'(\', \'GitBlitSuite.REPOSITORIES\', \',\', \'name\', \')\', \';\', \'Repository\', \'repository\', \'=\', \'new\', \'FileRepositoryBuilder\', \'(\', \')\', \'.\', \'setGitDir\', \'(\', \'refChecks\', \')\', \'.\', \'build\', \'(\', \')\', \';\', \'List\', \'<\', \'PushLogEntry\', \'>\', \'pushes\', \'=\', \'PushLogUtils\', \'.\', \'getPushLog\', \'(\', \'name\', \',\', \'repository\', \')\', \';\', \'GitBlitSuite\', \'.\', \'close\', \'(\', \'repository\', \')\', \';\', \'assertTrue\', \'(\', \'"Repository has an empty push log!"\', \',\', \'pushes\', \'.\', \'size\', \'(\', \')\', \'>\', \'0\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws IOException { String name = STRING_1 ; File VAR_1 = new File ( VAR_2 , name ) ; TYPE_1 VAR_3 = new TYPE_2 ( ) . METHOD_2 ( VAR_1 ) . build ( ) ; List < TYPE_3 > VAR_4 = TYPE_4 . METHOD_3 ( name , VAR_3 ) ; TYPE_5 . close ( VAR_3 ) ; METHOD_4 ( STRING_2 , VAR_4 . size ( ) > 0 ) ; }', '[\'TYPE_1: Repository\', \'TYPE_5: GitBlitSuite\', \'TYPE_3: PushLogEntry\', \'TYPE_2: FileRepositoryBuilder\', \'TYPE_4: PushLogUtils\', \'METHOD_2: setGitDir\', \'METHOD_4: assertTrue\', \'METHOD_1: testPushLog\', \'METHOD_3: getPushLog\', \'VAR_1: refChecks\', \'VAR_2: GitBlitSuite.REPOSITORIES\', \'VAR_3: repository\', \'VAR_4: pushes\', \'STRING_1: "refchecks/ticgit.git"\', \'STRING_2: "Repository has an empty push log!"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/GitServletTest.java', 22, '786:9', '794:9', 77, 8 ), ( 5, 28, 0, '@Test\n    public void testPushLog() throws IOException {\n    String name = "~james/helloworld.git";\n    File gitDir = FileKey.resolve(new File(GitBlitSuite.REPOSITORIES, name), FS.DETECTED);\n    Repository repository = new FileRepositoryBuilder().setGitDir(gitDir).build();\n    List<PushLogEntry> pushes = PushLogUtils.getPushLog(name, repository);\n    GitBlitSuite.close(repository);\n    }', '[\'public\', \'void\', \'testPushLog\', \'(\', \')\', \'throws\', \'IOException\', \'{\', \'String\', \'name\', \'=\', \'"~james/helloworld.git"\', \';\', \'File\', \'gitDir\', \'=\', \'FileKey\', \'.\', \'resolve\', \'(\', \'new\', \'File\', \'(\', \'GitBlitSuite.REPOSITORIES\', \',\', \'name\', \')\', \',\', \'FS.DETECTED\', \')\', \';\', \'Repository\', \'repository\', \'=\', \'new\', \'FileRepositoryBuilder\', \'(\', \')\', \'.\', \'setGitDir\', \'(\', \'gitDir\', \')\', \'.\', \'build\', \'(\', \')\', \';\', \'List\', \'<\', \'PushLogEntry\', \'>\', \'pushes\', \'=\', \'PushLogUtils\', \'.\', \'getPushLog\', \'(\', \'name\', \',\', \'repository\', \')\', \';\', \'GitBlitSuite\', \'.\', \'close\', \'(\', \'repository\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws IOException { String name = STRING_1 ; File VAR_1 = TYPE_1 . METHOD_2 ( new File ( VAR_2 , name ) , VAR_3 ) ; TYPE_2 VAR_4 = new TYPE_3 ( ) . METHOD_3 ( VAR_1 ) . build ( ) ; List < TYPE_4 > VAR_5 = TYPE_5 . METHOD_4 ( name , VAR_4 ) ; TYPE_6 . close ( VAR_4 ) ; }', '[\'TYPE_1: FileKey\', \'TYPE_2: Repository\', \'TYPE_6: GitBlitSuite\', \'TYPE_4: PushLogEntry\', \'TYPE_3: FileRepositoryBuilder\', \'TYPE_5: PushLogUtils\', \'METHOD_3: setGitDir\', \'METHOD_2: resolve\', \'METHOD_1: testPushLog\', \'METHOD_4: getPushLog\', \'VAR_3: FS.DETECTED\', \'VAR_2: GitBlitSuite.REPOSITORIES\', \'VAR_1: gitDir\', \'VAR_4: repository\', \'VAR_5: pushes\', \'STRING_1: "~james/helloworld.git"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/PushLogTest.java', 1, '33:9', '40:9', 74, 7 ), ( 5, 29, 5, 'private Change newChange(String summary) {\n    Change change = new Change("C1");\n    change.setField(Field.Summary, summary);\n    change.setField(Field.Description, "this is my description");\n    change.setField(Field.Priority, Priority.High);\n    change.setField(Field.Labels, "helpdesk");\n    change.comment("my comment");\n    return change;\n    }', '[\'private\', \'Change\', \'newChange\', \'(\', \'String\', \'summary\', \')\', \'{\', \'Change\', \'change\', \'=\', \'new\', \'Change\', \'(\', \'"C1"\', \')\', \';\', \'change\', \'.\', \'setField\', \'(\', \'Field.Summary\', \',\', \'summary\', \')\', \';\', \'change\', \'.\', \'setField\', \'(\', \'Field.Description\', \',\', \'"this is my description"\', \')\', \';\', \'change\', \'.\', \'setField\', \'(\', \'Field.Priority\', \',\', \'Priority.High\', \')\', \';\', \'change\', \'.\', \'setField\', \'(\', \'Field.Labels\', \',\', \'"helpdesk"\', \')\', \';\', \'change\', \'.\', \'comment\', \'(\', \'"my comment"\', \')\', \';\', \'return\', \'change\', \';\', \'}\']', 'private TYPE_1 METHOD_1 ( String VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( STRING_1 ) ; VAR_2 . METHOD_2 ( VAR_3 , VAR_1 ) ; VAR_2 . METHOD_2 ( VAR_4 , STRING_2 ) ; VAR_2 . METHOD_2 ( VAR_5 , VAR_6 ) ; VAR_2 . METHOD_2 ( VAR_7 , STRING_3 ) ; VAR_2 . METHOD_3 ( STRING_4 ) ; return VAR_2 ; }', '[\'TYPE_1: Change\', \'METHOD_2: setField\', \'METHOD_3: comment\', \'METHOD_1: newChange\', \'VAR_1: summary\', \'VAR_7: Field.Labels\', \'VAR_6: Priority.High\', \'VAR_3: Field.Summary\', \'VAR_2: change\', \'VAR_4: Field.Description\', \'VAR_5: Field.Priority\', \'STRING_4: "my comment"\', \'STRING_1: "C1"\', \'STRING_3: "helpdesk"\', \'STRING_2: "this is my description"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/IssuesTest.java', 8, '203:9', '211:9', 74, 8 ), ( 5, 29, 6, 'private Attachment newAttachment() {\n    Attachment attachment = new Attachment(Long.toHexString(System.currentTimeMillis())\n    + ".txt");\n    attachment.content = new byte[] { 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49,\n    				0x4a };\n    return attachment;\n    }', '[\'private\', \'Attachment\', \'newAttachment\', \'(\', \')\', \'{\', \'Attachment\', \'attachment\', \'=\', \'new\', \'Attachment\', \'(\', \'Long\', \'.\', \'toHexString\', \'(\', \'System\', \'.\', \'currentTimeMillis\', \'(\', \')\', \')\', \'+\', \'".txt"\', \')\', \';\', \'attachment\', \'.\', \'content\', \'=\', \'new\', \'byte\', \'[\', \']\', \'{\', \'0x41\', \',\', \'0x42\', \',\', \'0x43\', \',\', \'0x44\', \',\', \'0x45\', \',\', \'0x46\', \',\', \'0x47\', \',\', \'0x48\', \',\', \'0x49\', \',\', \'0x4a\', \'}\', \';\', \'return\', \'attachment\', \';\', \'}\']', 'private TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( Long . METHOD_2 ( System . METHOD_3 ( ) ) + STRING_1 ) ; VAR_1 . content = new byte [ ] { INT_1 , INT_2 , INT_3 , INT_4 , INT_5 , INT_6 , INT_7 , INT_8 , INT_9 , INT_10 } ; return VAR_1 ; }', '[\'TYPE_1: Attachment\', \'METHOD_2: toHexString\', \'METHOD_3: currentTimeMillis\', \'METHOD_1: newAttachment\', \'VAR_1: attachment\', \'INT_3: 0x43\', \'INT_2: 0x42\', \'INT_1: 0x41\', \'INT_10: 0x4a\', \'INT_9: 0x49\', \'INT_8: 0x48\', \'INT_7: 0x47\', \'INT_6: 0x46\', \'INT_5: 0x45\', \'INT_4: 0x44\', \'STRING_1: ".txt"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/IssuesTest.java', 8, '213:9', '219:9', 57, 6 ), ( 5, 29, 7, 'private void compare(IssueModel issue, IssueModel constructed) {\n    assertEquals(issue.id, constructed.id);\n    assertEquals(issue.reporter, constructed.reporter);\n    assertEquals(issue.owner, constructed.owner);\n    assertEquals(issue.summary, constructed.summary);\n    assertEquals(issue.description, constructed.description);\n    assertEquals(issue.created, constructed.created);\n    assertTrue(issue.hasLabel("helpdesk"));\n    }', '[\'private\', \'void\', \'compare\', \'(\', \'IssueModel\', \'issue\', \',\', \'IssueModel\', \'constructed\', \')\', \'{\', \'assertEquals\', \'(\', \'issue\', \'.\', \'id\', \',\', \'constructed\', \'.\', \'id\', \')\', \';\', \'assertEquals\', \'(\', \'issue.reporter\', \',\', \'constructed.reporter\', \')\', \';\', \'assertEquals\', \'(\', \'issue.owner\', \',\', \'constructed.owner\', \')\', \';\', \'assertEquals\', \'(\', \'issue.summary\', \',\', \'constructed.summary\', \')\', \';\', \'assertEquals\', \'(\', \'issue.description\', \',\', \'constructed.description\', \')\', \';\', \'assertEquals\', \'(\', \'issue.created\', \',\', \'constructed.created\', \')\', \';\', \'assertTrue\', \'(\', \'issue\', \'.\', \'hasLabel\', \'(\', \'"helpdesk"\', \')\', \')\', \';\', \'}\']', 'private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { METHOD_2 ( VAR_1 . id , VAR_2 . id ) ; METHOD_2 ( VAR_3 , VAR_4 ) ; METHOD_2 ( VAR_5 , VAR_6 ) ; METHOD_2 ( VAR_7 , VAR_8 ) ; METHOD_2 ( VAR_9 , VAR_10 ) ; METHOD_2 ( VAR_11 , VAR_12 ) ; METHOD_3 ( VAR_1 . METHOD_4 ( STRING_1 ) ) ; }', '[\'TYPE_1: IssueModel\', \'METHOD_1: compare\', \'METHOD_3: assertTrue\', \'METHOD_2: assertEquals\', \'METHOD_4: hasLabel\', \'VAR_6: constructed.owner\', \'VAR_1: issue\', \'VAR_2: constructed\', \'VAR_5: issue.owner\', \'VAR_9: issue.description\', \'VAR_4: constructed.reporter\', \'VAR_7: issue.summary\', \'VAR_12: constructed.created\', \'VAR_10: constructed.description\', \'VAR_3: issue.reporter\', \'VAR_8: constructed.summary\', \'VAR_11: issue.created\', \'STRING_1: "helpdesk"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/IssuesTest.java', 8, '221:9', '230:9', 88, 8 ), ( 5, 30, 1, 'private RepositoryModel newRepositoryModel(Repository repository) {\n    RepositoryModel model = new RepositoryModel();\n    model.name = FileUtils.getRelativePath(GitBlitSuite.REPOSITORIES, repository.getDirectory());\n    model.hasCommits = JGitUtils.hasCommits(repository);\n    // index all local branches\n    model.indexedBranches = new ArrayList<String>();\n    for (RefModel ref : JGitUtils.getLocalBranches(repository, true, -1)) {\n    model.indexedBranches.add(ref.getName());\n    }\n    return model;\n    }', '[\'private\', \'RepositoryModel\', \'newRepositoryModel\', \'(\', \'Repository\', \'repository\', \')\', \'{\', \'RepositoryModel\', \'model\', \'=\', \'new\', \'RepositoryModel\', \'(\', \')\', \';\', \'model\', \'.\', \'name\', \'=\', \'FileUtils\', \'.\', \'getRelativePath\', \'(\', \'GitBlitSuite.REPOSITORIES\', \',\', \'repository\', \'.\', \'getDirectory\', \'(\', \')\', \')\', \';\', \'model.hasCommits\', \'=\', \'JGitUtils\', \'.\', \'hasCommits\', \'(\', \'repository\', \')\', \';\', \'model.indexedBranches\', \'=\', \'new\', \'ArrayList\', \'<\', \'String\', \'>\', \'(\', \')\', \';\', \'for\', \'(\', \'RefModel\', \'ref\', \':\', \'JGitUtils\', \'.\', \'getLocalBranches\', \'(\', \'repository\', \',\', \'true\', \',\', \'-\', \'1\', \')\', \')\', \'{\', \'model.indexedBranches\', \'.\', \'add\', \'(\', \'ref\', \'.\', \'getName\', \'(\', \')\', \')\', \';\', \'}\', \'return\', \'model\', \';\', \'}\']', 'private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 model = new TYPE_1 ( ) ; model . name = TYPE_3 . METHOD_2 ( VAR_2 , VAR_1 . METHOD_3 ( ) ) ; VAR_3 = TYPE_4 . METHOD_4 ( VAR_1 ) ; VAR_4 = new ArrayList < String > ( ) ; for ( TYPE_5 VAR_5 : TYPE_4 . METHOD_5 ( VAR_1 , true , - 1 ) ) { VAR_4 . add ( VAR_5 . getName ( ) ) ; } return model ; }', '[\'TYPE_2: Repository\', \'TYPE_5: RefModel\', \'TYPE_3: FileUtils\', \'TYPE_4: JGitUtils\', \'TYPE_1: RepositoryModel\', \'METHOD_5: getLocalBranches\', \'METHOD_1: newRepositoryModel\', \'METHOD_3: getDirectory\', \'METHOD_4: hasCommits\', \'METHOD_2: getRelativePath\', \'VAR_3: model.hasCommits\', \'VAR_5: ref\', \'VAR_2: GitBlitSuite.REPOSITORIES\', \'VAR_4: model.indexedBranches\', \'VAR_1: repository\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/LuceneExecutorTest.java', 6, '52:9', '63:9', 91, 8 ), ( 5, 30, 5, '@Test\n    public void testDeleteBlobFromIndex() throws Exception {\n    // start with a fresh reindex of entire repository\n    LuceneExecutor lucene = newLuceneExecutor();\n    Repository repository = GitBlitSuite.getHelloworldRepository();\n    RepositoryModel model = newRepositoryModel(repository);\n    lucene.reindex(model, repository);\n    // now delete a blob\n    assertTrue(lucene.deleteBlob(model.name, "refs/heads/master", "java.java"));\n    assertFalse(lucene.deleteBlob(model.name, "refs/heads/master", "java.java"));\n    }', '[\'public\', \'void\', \'testDeleteBlobFromIndex\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'LuceneExecutor\', \'lucene\', \'=\', \'newLuceneExecutor\', \'(\', \')\', \';\', \'Repository\', \'repository\', \'=\', \'GitBlitSuite\', \'.\', \'getHelloworldRepository\', \'(\', \')\', \';\', \'RepositoryModel\', \'model\', \'=\', \'newRepositoryModel\', \'(\', \'repository\', \')\', \';\', \'lucene\', \'.\', \'reindex\', \'(\', \'model\', \',\', \'repository\', \')\', \';\', \'assertTrue\', \'(\', \'lucene\', \'.\', \'deleteBlob\', \'(\', \'model\', \'.\', \'name\', \',\', \'"refs/heads/master"\', \',\', \'"java.java"\', \')\', \')\', \';\', \'assertFalse\', \'(\', \'lucene\', \'.\', \'deleteBlob\', \'(\', \'model\', \'.\', \'name\', \',\', \'"refs/heads/master"\', \',\', \'"java.java"\', \')\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; TYPE_2 VAR_2 = TYPE_3 . METHOD_3 ( ) ; TYPE_4 model = METHOD_4 ( VAR_2 ) ; VAR_1 . METHOD_5 ( model , VAR_2 ) ; METHOD_6 ( VAR_1 . METHOD_7 ( model . name , STRING_1 , STRING_2 ) ) ; METHOD_8 ( VAR_1 . METHOD_7 ( model . name , STRING_1 , STRING_2 ) ) ; }', '[\'TYPE_2: Repository\', \'TYPE_1: LuceneExecutor\', \'TYPE_3: GitBlitSuite\', \'TYPE_4: RepositoryModel\', \'METHOD_5: reindex\', \'METHOD_6: assertTrue\', \'METHOD_8: assertFalse\', \'METHOD_3: getHelloworldRepository\', \'METHOD_4: newRepositoryModel\', \'METHOD_2: newLuceneExecutor\', \'METHOD_1: testDeleteBlobFromIndex\', \'METHOD_7: deleteBlob\', \'VAR_1: lucene\', \'VAR_2: repository\', \'STRING_2: "java.java"\', \'STRING_1: "refs/heads/master"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/LuceneExecutorTest.java', 6, '169:9', '180:9', 75, 8 ), ( 5, 32, 5, '@Test\n    public void testProtectRefsCreateBranch() throws Exception {\n    MockGitblit gitblit = new MockGitblit();\n    MockLogger logger = new MockLogger();\n    MockClientLogger clientLogger = new MockClientLogger();\n    List<ReceiveCommand> commands = new ArrayList<ReceiveCommand>();\n    commands.add(new ReceiveCommand(ObjectId.zeroId(), ObjectId\n    .fromString("3fa7c46d11b11d61f1cbadc6888be5d0eae21969"), "refs/heads/master"));\n    RepositoryModel repository = new RepositoryModel("ex@mple.git", "", "admin", new Date());\n    test("protect-refs.groovy", gitblit, logger, clientLogger, commands, repository);\n    }', '[\'public\', \'void\', \'testProtectRefsCreateBranch\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'MockGitblit\', \'gitblit\', \'=\', \'new\', \'MockGitblit\', \'(\', \')\', \';\', \'MockLogger\', \'logger\', \'=\', \'new\', \'MockLogger\', \'(\', \')\', \';\', \'MockClientLogger\', \'clientLogger\', \'=\', \'new\', \'MockClientLogger\', \'(\', \')\', \';\', \'List\', \'<\', \'ReceiveCommand\', \'>\', \'commands\', \'=\', \'new\', \'ArrayList\', \'<\', \'ReceiveCommand\', \'>\', \'(\', \')\', \';\', \'commands\', \'.\', \'add\', \'(\', \'new\', \'ReceiveCommand\', \'(\', \'ObjectId\', \'.\', \'zeroId\', \'(\', \')\', \',\', \'ObjectId\', \'.\', \'fromString\', \'(\', \'"3fa7c46d11b11d61f1cbadc6888be5d0eae21969"\', \')\', \',\', \'"refs/heads/master"\', \')\', \')\', \';\', \'RepositoryModel\', \'repository\', \'=\', \'new\', \'RepositoryModel\', \'(\', \'"ex<AT>mple.git"\', \',\', \'""\', \',\', \'"admin"\', \',\', \'new\', \'Date\', \'(\', \')\', \')\', \';\', \'test\', \'(\', \'"protect-refs.groovy"\', \',\', \'gitblit\', \',\', \'logger\', \',\', \'clientLogger\', \',\', \'commands\', \',\', \'repository\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_2 logger = new TYPE_2 ( ) ; TYPE_3 VAR_2 = new TYPE_3 ( ) ; List < TYPE_4 > VAR_3 = new ArrayList < TYPE_4 > ( ) ; VAR_3 . add ( new TYPE_4 ( TYPE_5 . METHOD_2 ( ) , TYPE_5 . METHOD_3 ( STRING_1 ) , STRING_2 ) ) ; TYPE_6 VAR_4 = new TYPE_6 ( STRING_3 , STRING_4 , STRING_5 , new TYPE_7 ( ) ) ; METHOD_4 ( STRING_6 , VAR_1 , logger , VAR_2 , VAR_3 , VAR_4 ) ; }', '[\'TYPE_3: MockClientLogger\', \'TYPE_4: ReceiveCommand\', \'TYPE_1: MockGitblit\', \'TYPE_2: MockLogger\', \'TYPE_5: ObjectId\', \'TYPE_6: RepositoryModel\', \'TYPE_7: Date\', \'METHOD_2: zeroId\', \'METHOD_4: test\', \'METHOD_3: fromString\', \'METHOD_1: testProtectRefsCreateBranch\', \'VAR_2: clientLogger\', \'VAR_1: gitblit\', \'VAR_4: repository\', \'VAR_3: commands\', \'STRING_4: ""\', \'STRING_3: "ex<AT>mple.git"\', \'STRING_5: "admin"\', \'STRING_6: "protect-refs.groovy"\', \'STRING_1: "3fa7c46d11b11d61f1cbadc6888be5d0eae21969"\', \'STRING_2: "refs/heads/master"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/GroovyScriptTest.java', 28, '144:9', '156:9', 99, 10 ), ( 5, 32, 25, 'public void error(String message, Throwable t) {\n    PrintWriter writer = new PrintWriter(new StringWriter());\n    if (!StringUtils.isEmpty(message)) {\n    writer.append(message);\n    writer.append(\'\\n\');\n    }\n    t.printStackTrace(writer);\n    messages.add(writer.toString());\n    }', '[\'public\', \'void\', \'error\', \'(\', \'String\', \'message\', \',\', \'Throwable\', \'t\', \')\', \'{\', \'PrintWriter\', \'writer\', \'=\', \'new\', \'PrintWriter\', \'(\', \'new\', \'StringWriter\', \'(\', \')\', \')\', \';\', \'if\', \'(\', \'!\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'message\', \')\', \')\', \'{\', \'writer\', \'.\', \'append\', \'(\', \'message\', \')\', \';\', \'writer\', \'.\', \'append\', \'(\', "\'\\\\n\'", \')\', \';\', \'}\', \'t\', \'.\', \'printStackTrace\', \'(\', \'writer\', \')\', \';\', \'messages\', \'.\', \'add\', \'(\', \'writer\', \'.\', \'toString\', \'(\', \')\', \')\', \';\', \'}\']', 'public void error ( String message , Throwable t ) { TYPE_1 writer = new TYPE_1 ( new TYPE_2 ( ) ) ; if ( ! StringUtils . isEmpty ( message ) ) { writer . append ( message ) ; writer . append ( CHAR_1 ) ; } t . METHOD_1 ( writer ) ; VAR_1 . add ( writer . toString ( ) ) ; }', '[\'TYPE_2: StringWriter\', \'TYPE_1: PrintWriter\', \'METHOD_1: printStackTrace\', \'VAR_1: messages\', "CHAR_1: \'\\\\n\'"]', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/GroovyScriptTest.java', 28, '371:17', '379:17', 66, 7 ), ( 5, 33, 0, '@Test\n    public void testDisplayName() throws Exception {\n    assertEquals("Napoleon Bonaparte",\n    				JGitUtils.getDisplayName(new PersonIdent("Napoleon Bonaparte", "")));\n    assertEquals("<someone@somewhere.com>",\n    				JGitUtils.getDisplayName(new PersonIdent("", "someone@somewhere.com")));\n    assertEquals("Napoleon Bonaparte <someone@somewhere.com>",\n    				JGitUtils.getDisplayName(new PersonIdent("Napoleon Bonaparte",\n    						"someone@somewhere.com")));\n    }', '[\'public\', \'void\', \'testDisplayName\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'assertEquals\', \'(\', \'"Napoleon Bonaparte"\', \',\', \'JGitUtils\', \'.\', \'getDisplayName\', \'(\', \'new\', \'PersonIdent\', \'(\', \'"Napoleon Bonaparte"\', \',\', \'""\', \')\', \')\', \')\', \';\', \'assertEquals\', \'(\', \'"<someone<AT>somewhere.com>"\', \',\', \'JGitUtils\', \'.\', \'getDisplayName\', \'(\', \'new\', \'PersonIdent\', \'(\', \'""\', \',\', \'"someone<AT>somewhere.com"\', \')\', \')\', \')\', \';\', \'assertEquals\', \'(\', \'"Napoleon Bonaparte <someone<AT>somewhere.com>"\', \',\', \'JGitUtils\', \'.\', \'getDisplayName\', \'(\', \'new\', \'PersonIdent\', \'(\', \'"Napoleon Bonaparte"\', \',\', \'"someone<AT>somewhere.com"\', \')\', \')\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { METHOD_2 ( STRING_1 , TYPE_1 . METHOD_3 ( new TYPE_2 ( STRING_1 , STRING_2 ) ) ) ; METHOD_2 ( STRING_3 , TYPE_1 . METHOD_3 ( new TYPE_2 ( STRING_2 , STRING_4 ) ) ) ; METHOD_2 ( STRING_5 , TYPE_1 . METHOD_3 ( new TYPE_2 ( STRING_1 , STRING_4 ) ) ) ; }', '[\'TYPE_2: PersonIdent\', \'TYPE_1: JGitUtils\', \'METHOD_3: getDisplayName\', \'METHOD_1: testDisplayName\', \'METHOD_2: assertEquals\', \'STRING_2: ""\', \'STRING_5: "Napoleon Bonaparte <someone<AT>somewhere.com>"\', \'STRING_1: "Napoleon Bonaparte"\', \'STRING_3: "<someone<AT>somewhere.com>"\', \'STRING_4: "someone<AT>somewhere.com"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/JGitUtilsTest.java', 24, '59:9', '68:9', 64, 9 ), ( 5, 33, 3, '@Test\n    public void testOpenRepository() throws Exception {\n    Repository repository = GitBlitSuite.getHelloworldRepository();\n    repository.close();\n    assertNotNull("Could not find repository!", repository);\n    }', '[\'public\', \'void\', \'testOpenRepository\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'Repository\', \'repository\', \'=\', \'GitBlitSuite\', \'.\', \'getHelloworldRepository\', \'(\', \')\', \';\', \'repository\', \'.\', \'close\', \'(\', \')\', \';\', \'assertNotNull\', \'(\', \'"Could not find repository!"\', \',\', \'repository\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; VAR_1 . close ( ) ; METHOD_3 ( STRING_1 , VAR_1 ) ; }', '[\'TYPE_1: Repository\', \'TYPE_2: GitBlitSuite\', \'METHOD_3: assertNotNull\', \'METHOD_2: getHelloworldRepository\', \'METHOD_1: testOpenRepository\', \'VAR_1: repository\', \'STRING_1: "Could not find repository!"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/JGitUtilsTest.java', 24, '98:9', '103:9', 30, 5 ), ( 5, 33, 5, '@Test\n    public void testLastCommit() throws Exception {\n    assertEquals(new Date(0), JGitUtils.getLastChange(null));\n    Repository repository = GitBlitSuite.getHelloworldRepository();\n    assertTrue(JGitUtils.getCommit(repository, null) != null);\n    Date date = JGitUtils.getLastChange(repository);\n    repository.close();\n    assertNotNull("Could not get last repository change date!", date);\n    }', '[\'public\', \'void\', \'testLastCommit\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'assertEquals\', \'(\', \'new\', \'Date\', \'(\', \'0\', \')\', \',\', \'JGitUtils\', \'.\', \'getLastChange\', \'(\', \'null\', \')\', \')\', \';\', \'Repository\', \'repository\', \'=\', \'GitBlitSuite\', \'.\', \'getHelloworldRepository\', \'(\', \')\', \';\', \'assertTrue\', \'(\', \'JGitUtils\', \'.\', \'getCommit\', \'(\', \'repository\', \',\', \'null\', \')\', \'!=\', \'null\', \')\', \';\', \'Date\', \'date\', \'=\', \'JGitUtils\', \'.\', \'getLastChange\', \'(\', \'repository\', \')\', \';\', \'repository\', \'.\', \'close\', \'(\', \')\', \';\', \'assertNotNull\', \'(\', \'"Could not get last repository change date!"\', \',\', \'date\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { METHOD_2 ( new TYPE_1 ( 0 ) , TYPE_2 . METHOD_3 ( null ) ) ; TYPE_3 VAR_1 = TYPE_4 . METHOD_4 ( ) ; METHOD_5 ( TYPE_2 . METHOD_6 ( VAR_1 , null ) != null ) ; TYPE_1 VAR_2 = TYPE_2 . METHOD_3 ( VAR_1 ) ; VAR_1 . close ( ) ; METHOD_7 ( STRING_1 , VAR_2 ) ; }', '[\'TYPE_3: Repository\', \'TYPE_4: GitBlitSuite\', \'TYPE_2: JGitUtils\', \'TYPE_1: Date\', \'METHOD_5: assertTrue\', \'METHOD_7: assertNotNull\', \'METHOD_1: testLastCommit\', \'METHOD_4: getHelloworldRepository\', \'METHOD_2: assertEquals\', \'METHOD_6: getCommit\', \'METHOD_3: getLastChange\', \'VAR_2: date\', \'VAR_1: repository\', \'STRING_1: "Could not get last repository change date!"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/JGitUtilsTest.java', 24, '119:9', '128:9', 70, 8 ), ( 5, 33, 10, '@Test\n    public void testCommitNotes() throws Exception {\n    Repository repository = GitBlitSuite.getJGitRepository();\n    RevCommit commit = JGitUtils.getCommit(repository,\n    				"690c268c793bfc218982130fbfc25870f292295e");\n    List<GitNote> list = JGitUtils.getNotesOnCommit(repository, commit);\n    repository.close();\n    assertTrue(list.size() > 0);\n    assertEquals("183474d554e6f68478a02d9d7888b67a9338cdff", list.get(0).notesRef\n    .getReferencedObjectId().getName());\n    }', '[\'public\', \'void\', \'testCommitNotes\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'Repository\', \'repository\', \'=\', \'GitBlitSuite\', \'.\', \'getJGitRepository\', \'(\', \')\', \';\', \'RevCommit\', \'commit\', \'=\', \'JGitUtils\', \'.\', \'getCommit\', \'(\', \'repository\', \',\', \'"690c268c793bfc218982130fbfc25870f292295e"\', \')\', \';\', \'List\', \'<\', \'GitNote\', \'>\', \'list\', \'=\', \'JGitUtils\', \'.\', \'getNotesOnCommit\', \'(\', \'repository\', \',\', \'commit\', \')\', \';\', \'repository\', \'.\', \'close\', \'(\', \')\', \';\', \'assertTrue\', \'(\', \'list\', \'.\', \'size\', \'(\', \')\', \'>\', \'0\', \')\', \';\', \'assertEquals\', \'(\', \'"183474d554e6f68478a02d9d7888b67a9338cdff"\', \',\', \'list\', \'.\', \'get\', \'(\', \'0\', \')\', \'.\', \'notesRef\', \'.\', \'getReferencedObjectId\', \'(\', \')\', \'.\', \'getName\', \'(\', \')\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; TYPE_3 VAR_2 = TYPE_4 . METHOD_3 ( VAR_1 , STRING_1 ) ; List < TYPE_5 > list = TYPE_4 . METHOD_4 ( VAR_1 , VAR_2 ) ; VAR_1 . close ( ) ; METHOD_5 ( list . size ( ) > 0 ) ; METHOD_6 ( STRING_2 , list . get ( 0 ) . VAR_3 . METHOD_7 ( ) . getName ( ) ) ; }', '[\'TYPE_1: Repository\', \'TYPE_2: GitBlitSuite\', \'TYPE_4: JGitUtils\', \'TYPE_5: GitNote\', \'TYPE_3: RevCommit\', \'METHOD_2: getJGitRepository\', \'METHOD_1: testCommitNotes\', \'METHOD_5: assertTrue\', \'METHOD_6: assertEquals\', \'METHOD_3: getCommit\', \'METHOD_4: getNotesOnCommit\', \'METHOD_7: getReferencedObjectId\', \'VAR_2: commit\', \'VAR_3: notesRef\', \'VAR_1: repository\', \'STRING_2: "183474d554e6f68478a02d9d7888b67a9338cdff"\', \'STRING_1: "690c268c793bfc218982130fbfc25870f292295e"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/JGitUtilsTest.java', 24, '226:9', '236:9', 80, 10 ), ( 5, 33, 13, '@Test\n    public void testCreateOrphanedBranch() throws Exception {\n    Repository repository = JGitUtils.createRepository(GitBlitSuite.REPOSITORIES, "orphantest");\n    assertTrue(JGitUtils.createOrphanBranch(repository,\n    				"x" + Long.toHexString(System.currentTimeMillis()).toUpperCase(), null));\n    FileUtils.delete(repository.getDirectory(), FileUtils.RECURSIVE);\n    }', '[\'public\', \'void\', \'testCreateOrphanedBranch\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'Repository\', \'repository\', \'=\', \'JGitUtils\', \'.\', \'createRepository\', \'(\', \'GitBlitSuite.REPOSITORIES\', \',\', \'"orphantest"\', \')\', \';\', \'assertTrue\', \'(\', \'JGitUtils\', \'.\', \'createOrphanBranch\', \'(\', \'repository\', \',\', \'"x"\', \'+\', \'Long\', \'.\', \'toHexString\', \'(\', \'System\', \'.\', \'currentTimeMillis\', \'(\', \')\', \')\', \'.\', \'toUpperCase\', \'(\', \')\', \',\', \'null\', \')\', \')\', \';\', \'FileUtils\', \'.\', \'delete\', \'(\', \'repository\', \'.\', \'getDirectory\', \'(\', \')\', \',\', \'FileUtils.RECURSIVE\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 , STRING_1 ) ; METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_1 , STRING_2 + Long . METHOD_5 ( System . METHOD_6 ( ) ) . METHOD_7 ( ) , null ) ) ; TYPE_3 . METHOD_8 ( VAR_1 . METHOD_9 ( ) , VAR_3 ) ; }', '[\'TYPE_1: Repository\', \'TYPE_3: FileUtils\', \'TYPE_2: JGitUtils\', \'METHOD_2: createRepository\', \'METHOD_5: toHexString\', \'METHOD_3: assertTrue\', \'METHOD_6: currentTimeMillis\', \'METHOD_7: toUpperCase\', \'METHOD_9: getDirectory\', \'METHOD_4: createOrphanBranch\', \'METHOD_8: delete\', \'METHOD_1: testCreateOrphanedBranch\', \'VAR_3: FileUtils.RECURSIVE\', \'VAR_2: GitBlitSuite.REPOSITORIES\', \'VAR_1: repository\', \'STRING_1: "orphantest"\', \'STRING_2: "x"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/JGitUtilsTest.java', 24, '279:9', '285:9', 65, 6 ), ( 5, 33, 16, '@Test\n    public void testFilesInPath() throws Exception {\n    assertEquals(0, JGitUtils.getFilesInPath(null, null, null).size());\n    Repository repository = GitBlitSuite.getHelloworldRepository();\n    List<PathModel> files = JGitUtils.getFilesInPath(repository, null, null);\n    repository.close();\n    assertTrue(files.size() > 10);\n    }', '[\'public\', \'void\', \'testFilesInPath\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'assertEquals\', \'(\', \'0\', \',\', \'JGitUtils\', \'.\', \'getFilesInPath\', \'(\', \'null\', \',\', \'null\', \',\', \'null\', \')\', \'.\', \'size\', \'(\', \')\', \')\', \';\', \'Repository\', \'repository\', \'=\', \'GitBlitSuite\', \'.\', \'getHelloworldRepository\', \'(\', \')\', \';\', \'List\', \'<\', \'PathModel\', \'>\', \'files\', \'=\', \'JGitUtils\', \'.\', \'getFilesInPath\', \'(\', \'repository\', \',\', \'null\', \',\', \'null\', \')\', \';\', \'repository\', \'.\', \'close\', \'(\', \')\', \';\', \'assertTrue\', \'(\', \'files\', \'.\', \'size\', \'(\', \')\', \'>\', \'10\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { METHOD_2 ( 0 , TYPE_1 . METHOD_3 ( null , null , null ) . size ( ) ) ; TYPE_2 VAR_1 = TYPE_3 . METHOD_4 ( ) ; List < TYPE_4 > VAR_2 = TYPE_1 . METHOD_3 ( VAR_1 , null , null ) ; VAR_1 . close ( ) ; METHOD_5 ( VAR_2 . size ( ) > INT_1 ) ; }', '[\'TYPE_2: Repository\', \'TYPE_3: GitBlitSuite\', \'TYPE_4: PathModel\', \'TYPE_1: JGitUtils\', \'METHOD_5: assertTrue\', \'METHOD_3: getFilesInPath\', \'METHOD_1: testFilesInPath\', \'METHOD_4: getHelloworldRepository\', \'METHOD_2: assertEquals\', \'VAR_2: files\', \'VAR_1: repository\', \'INT_1: 10\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/JGitUtilsTest.java', 24, '337:9', '344:9', 69, 7 ), ( 5, 33, 20, '@Test\n    public void testRevLogRange() throws Exception {\n    Repository repository = GitBlitSuite.getHelloworldRepository();\n    List<RevCommit> commits = JGitUtils.getRevLog(repository,\n    				"fbd14fa6d1a01d4aefa1fca725792683800fc67e",\n    				"85a0e4087b8439c0aa6b1f4f9e08c26052ab7e87");\n    repository.close();\n    assertEquals(14, commits.size());\n    }', '[\'public\', \'void\', \'testRevLogRange\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'Repository\', \'repository\', \'=\', \'GitBlitSuite\', \'.\', \'getHelloworldRepository\', \'(\', \')\', \';\', \'List\', \'<\', \'RevCommit\', \'>\', \'commits\', \'=\', \'JGitUtils\', \'.\', \'getRevLog\', \'(\', \'repository\', \',\', \'"fbd14fa6d1a01d4aefa1fca725792683800fc67e"\', \',\', \'"85a0e4087b8439c0aa6b1f4f9e08c26052ab7e87"\', \')\', \';\', \'repository\', \'.\', \'close\', \'(\', \')\', \';\', \'assertEquals\', \'(\', \'14\', \',\', \'commits\', \'.\', \'size\', \'(\', \')\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; List < TYPE_3 > VAR_2 = TYPE_4 . METHOD_3 ( VAR_1 , STRING_1 , STRING_2 ) ; VAR_1 . close ( ) ; METHOD_4 ( INT_1 , VAR_2 . size ( ) ) ; }', '[\'TYPE_1: Repository\', \'TYPE_2: GitBlitSuite\', \'TYPE_4: JGitUtils\', \'TYPE_3: RevCommit\', \'METHOD_3: getRevLog\', \'METHOD_1: testRevLogRange\', \'METHOD_2: getHelloworldRepository\', \'METHOD_4: assertEquals\', \'VAR_2: commits\', \'VAR_1: repository\', \'INT_1: 14\', \'STRING_2: "85a0e4087b8439c0aa6b1f4f9e08c26052ab7e87"\', \'STRING_1: "fbd14fa6d1a01d4aefa1fca725792683800fc67e"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/JGitUtilsTest.java', 24, '398:9', '406:9', 50, 8 ), ( 5, 34, 0, '@Test\n    public void testTicgitBranch() throws Exception {\n    Repository repository = GitBlitSuite.getTicgitRepository();\n    RefModel branch = TicgitUtils.getTicketsBranch(repository);\n    repository.close();\n    assertNotNull("Ticgit branch does not exist!", branch);\n    repository = GitBlitSuite.getHelloworldRepository();\n    branch = TicgitUtils.getTicketsBranch(repository);\n    repository.close();\n    assertNull("Ticgit branch exists!", branch);\n    }', '[\'public\', \'void\', \'testTicgitBranch\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'Repository\', \'repository\', \'=\', \'GitBlitSuite\', \'.\', \'getTicgitRepository\', \'(\', \')\', \';\', \'RefModel\', \'branch\', \'=\', \'TicgitUtils\', \'.\', \'getTicketsBranch\', \'(\', \'repository\', \')\', \';\', \'repository\', \'.\', \'close\', \'(\', \')\', \';\', \'assertNotNull\', \'(\', \'"Ticgit branch does not exist!"\', \',\', \'branch\', \')\', \';\', \'repository\', \'=\', \'GitBlitSuite\', \'.\', \'getHelloworldRepository\', \'(\', \')\', \';\', \'branch\', \'=\', \'TicgitUtils\', \'.\', \'getTicketsBranch\', \'(\', \'repository\', \')\', \';\', \'repository\', \'.\', \'close\', \'(\', \')\', \';\', \'assertNull\', \'(\', \'"Ticgit branch exists!"\', \',\', \'branch\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; TYPE_3 VAR_2 = TYPE_4 . METHOD_3 ( VAR_1 ) ; VAR_1 . close ( ) ; METHOD_4 ( STRING_1 , VAR_2 ) ; VAR_1 = TYPE_2 . METHOD_5 ( ) ; VAR_2 = TYPE_4 . METHOD_3 ( VAR_1 ) ; VAR_1 . close ( ) ; METHOD_6 ( STRING_2 , VAR_2 ) ; }', '[\'TYPE_1: Repository\', \'TYPE_3: RefModel\', \'TYPE_4: TicgitUtils\', \'TYPE_2: GitBlitSuite\', \'METHOD_6: assertNull\', \'METHOD_3: getTicketsBranch\', \'METHOD_2: getTicgitRepository\', \'METHOD_4: assertNotNull\', \'METHOD_5: getHelloworldRepository\', \'METHOD_1: testTicgitBranch\', \'VAR_1: repository\', \'VAR_2: branch\', \'STRING_1: "Ticgit branch does not exist!"\', \'STRING_2: "Ticgit branch exists!"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/TicgitUtilsTest.java', 3, '36:9', '47:9', 68, 10 ), ( 5, 34, 2, '@Test\n    public void testReadTicket() throws Exception {\n    Repository repository = GitBlitSuite.getTicgitRepository();\n    List<TicketModel> tickets = TicgitUtils.getTickets(repository);\n    TicketModel ticket = TicgitUtils\n    .getTicket(repository, tickets.get(tickets.size() - 1).name);\n    repository.close();\n    assertNotNull(ticket);\n    assertEquals("1206206148_add-attachment-to-ticket_138", ticket.name);\n    }', '[\'public\', \'void\', \'testReadTicket\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'Repository\', \'repository\', \'=\', \'GitBlitSuite\', \'.\', \'getTicgitRepository\', \'(\', \')\', \';\', \'List\', \'<\', \'TicketModel\', \'>\', \'tickets\', \'=\', \'TicgitUtils\', \'.\', \'getTickets\', \'(\', \'repository\', \')\', \';\', \'TicketModel\', \'ticket\', \'=\', \'TicgitUtils\', \'.\', \'getTicket\', \'(\', \'repository\', \',\', \'tickets\', \'.\', \'get\', \'(\', \'tickets\', \'.\', \'size\', \'(\', \')\', \'-\', \'1\', \')\', \'.\', \'name\', \')\', \';\', \'repository\', \'.\', \'close\', \'(\', \')\', \';\', \'assertNotNull\', \'(\', \'ticket\', \')\', \';\', \'assertEquals\', \'(\', \'"1206206148_add-attachment-to-ticket_138"\', \',\', \'ticket\', \'.\', \'name\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; List < TYPE_3 > VAR_2 = TYPE_4 . METHOD_3 ( VAR_1 ) ; TYPE_3 VAR_3 = TYPE_4 . METHOD_4 ( VAR_1 , VAR_2 . get ( VAR_2 . size ( ) - 1 ) . name ) ; VAR_1 . close ( ) ; METHOD_5 ( VAR_3 ) ; METHOD_6 ( STRING_1 , VAR_3 . name ) ; }', '[\'TYPE_1: Repository\', \'TYPE_4: TicgitUtils\', \'TYPE_2: GitBlitSuite\', \'TYPE_3: TicketModel\', \'METHOD_3: getTickets\', \'METHOD_2: getTicgitRepository\', \'METHOD_5: assertNotNull\', \'METHOD_1: testReadTicket\', \'METHOD_6: assertEquals\', \'METHOD_4: getTicket\', \'VAR_2: tickets\', \'VAR_3: ticket\', \'VAR_1: repository\', \'STRING_1: "1206206148_add-attachment-to-ticket_138"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/TicgitUtilsTest.java', 3, '77:9', '86:9', 74, 9 ), ( 5, 35, 9, 'public void run() {\n    GitBlitServer.main("--httpPort", "" + port, "--httpsPort", "0", "--shutdownPort",\n    						"" + shutdownPort, "--gitPort", "" + gitPort, "--repositoriesFolder",\n    						"\\"" + GitBlitSuite.REPOSITORIES.getAbsolutePath() + "\\"", "--userService",\n    						"test-users.conf", "--settings", "test-gitblit.properties",\n    						"--baseFolder", "data");\n    }', '[\'public\', \'void\', \'run\', \'(\', \')\', \'{\', \'GitBlitServer\', \'.\', \'main\', \'(\', \'"--httpPort"\', \',\', \'""\', \'+\', \'port\', \',\', \'"--httpsPort"\', \',\', \'"0"\', \',\', \'"--shutdownPort"\', \',\', \'""\', \'+\', \'shutdownPort\', \',\', \'"--gitPort"\', \',\', \'""\', \'+\', \'gitPort\', \',\', \'"--repositoriesFolder"\', \',\', \'"\\\\""\', \'+\', \'GitBlitSuite.REPOSITORIES\', \'.\', \'getAbsolutePath\', \'(\', \')\', \'+\', \'"\\\\""\', \',\', \'"--userService"\', \',\', \'"test-users.conf"\', \',\', \'"--settings"\', \',\', \'"test-gitblit.properties"\', \',\', \'"--baseFolder"\', \',\', \'"data"\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 + VAR_1 , STRING_3 , STRING_4 , STRING_5 , STRING_2 + VAR_2 , STRING_6 , STRING_2 + VAR_3 , STRING_7 , STRING_8 + TYPE_2 . METHOD_3 ( ) + STRING_8 , STRING_9 , STRING_10 , STRING_11 , STRING_12 , STRING_13 , STRING_14 ) ; }', '[\'TYPE_2: GitBlitSuite.REPOSITORIES\', \'TYPE_1: GitBlitServer\', \'METHOD_3: getAbsolutePath\', \'METHOD_1: run\', \'METHOD_2: main\', \'VAR_2: shutdownPort\', \'VAR_3: gitPort\', \'VAR_1: port\', \'STRING_2: ""\', \'STRING_12: "test-gitblit.properties"\', \'STRING_1: "--httpPort"\', \'STRING_9: "--userService"\', \'STRING_14: "data"\', \'STRING_8: "\\\\""\', \'STRING_7: "--repositoriesFolder"\', \'STRING_13: "--baseFolder"\', \'STRING_10: "test-users.conf"\', \'STRING_4: "0"\', \'STRING_6: "--gitPort"\', \'STRING_11: "--settings"\', \'STRING_5: "--shutdownPort"\', \'STRING_3: "--httpsPort"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/GitBlitSuite.java', 21, '125:25', '131:25', 58, 6 ), ( 5, 35, 13, 'private static void cloneOrFetch(String name, String fromUrl) throws Exception {\n    System.out.print("Fetching " + name + "... ");\n    try {\n    JGitUtils.cloneRepository(REPOSITORIES, name, fromUrl);\n    } catch (Throwable t) {\n    System.out.println("Error: " + t.getMessage());\n    }\n    System.out.println("done.");\n    }', '[\'private\', \'static\', \'void\', \'cloneOrFetch\', \'(\', \'String\', \'name\', \',\', \'String\', \'fromUrl\', \')\', \'throws\', \'Exception\', \'{\', \'System.out\', \'.\', \'print\', \'(\', \'"Fetching "\', \'+\', \'name\', \'+\', \'"... "\', \')\', \';\', \'try\', \'{\', \'JGitUtils\', \'.\', \'cloneRepository\', \'(\', \'REPOSITORIES\', \',\', \'name\', \',\', \'fromUrl\', \')\', \';\', \'}\', \'catch\', \'(\', \'Throwable\', \'t\', \')\', \'{\', \'System.out\', \'.\', \'println\', \'(\', \'"Error: "\', \'+\', \'t\', \'.\', \'getMessage\', \'(\', \')\', \')\', \';\', \'}\', \'System.out\', \'.\', \'println\', \'(\', \'"done."\', \')\', \';\', \'}\']', 'private static void METHOD_1 ( String name , String VAR_1 ) throws Exception { VAR_2 . METHOD_2 ( STRING_1 + name + STRING_2 ) ; try { TYPE_1 . METHOD_3 ( VAR_3 , name , VAR_1 ) ; } catch ( Throwable t ) { VAR_2 . println ( STRING_3 + t . getMessage ( ) ) ; } VAR_2 . println ( STRING_4 ) ; }', '[\'TYPE_1: JGitUtils\', \'METHOD_2: print\', \'METHOD_3: cloneRepository\', \'METHOD_1: cloneOrFetch\', \'VAR_3: REPOSITORIES\', \'VAR_1: fromUrl\', \'VAR_2: System.out\', \'STRING_4: "done."\', \'STRING_3: "Error: "\', \'STRING_1: "Fetching "\', \'STRING_2: "... "\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/GitBlitSuite.java', 21, '176:9', '184:9', 72, 7 ), ( 5, 35, 14, 'private static void enableTickets(String repositoryName) {\n    try {\n    RepositoryModel model = GitBlit.self().getRepositoryModel(repositoryName);\n    model.useTickets = true;\n    GitBlit.self().updateRepositoryModel(model.name, model, false);\n    } catch (GitBlitException g) {\n    g.printStackTrace();\n    }\n    }', '[\'private\', \'static\', \'void\', \'enableTickets\', \'(\', \'String\', \'repositoryName\', \')\', \'{\', \'try\', \'{\', \'RepositoryModel\', \'model\', \'=\', \'GitBlit\', \'.\', \'self\', \'(\', \')\', \'.\', \'getRepositoryModel\', \'(\', \'repositoryName\', \')\', \';\', \'model.useTickets\', \'=\', \'true\', \';\', \'GitBlit\', \'.\', \'self\', \'(\', \')\', \'.\', \'updateRepositoryModel\', \'(\', \'model\', \'.\', \'name\', \',\', \'model\', \',\', \'false\', \')\', \';\', \'}\', \'catch\', \'(\', \'GitBlitException\', \'g\', \')\', \'{\', \'g\', \'.\', \'printStackTrace\', \'(\', \')\', \';\', \'}\', \'}\']', 'private static void METHOD_1 ( String VAR_1 ) { try { TYPE_1 model = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; VAR_2 = true ; TYPE_2 . METHOD_2 ( ) . METHOD_4 ( model . name , model , false ) ; } catch ( TYPE_3 VAR_3 ) { VAR_3 . METHOD_5 ( ) ; } }', '[\'TYPE_3: GitBlitException\', \'TYPE_1: RepositoryModel\', \'TYPE_2: GitBlit\', \'METHOD_4: updateRepositoryModel\', \'METHOD_5: printStackTrace\', \'METHOD_2: self\', \'METHOD_1: enableTickets\', \'METHOD_3: getRepositoryModel\', \'VAR_3: g\', \'VAR_2: model.useTickets\', \'VAR_1: repositoryName\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/GitBlitSuite.java', 21, '186:9', '194:9', 60, 7 ), ( 5, 35, 15, 'private static void enableDocs(String repositoryName) {\n    try {\n    RepositoryModel model = GitBlit.self().getRepositoryModel(repositoryName);\n    model.useDocs = true;\n    GitBlit.self().updateRepositoryModel(model.name, model, false);\n    } catch (GitBlitException g) {\n    g.printStackTrace();\n    }\n    }', '[\'private\', \'static\', \'void\', \'enableDocs\', \'(\', \'String\', \'repositoryName\', \')\', \'{\', \'try\', \'{\', \'RepositoryModel\', \'model\', \'=\', \'GitBlit\', \'.\', \'self\', \'(\', \')\', \'.\', \'getRepositoryModel\', \'(\', \'repositoryName\', \')\', \';\', \'model.useDocs\', \'=\', \'true\', \';\', \'GitBlit\', \'.\', \'self\', \'(\', \')\', \'.\', \'updateRepositoryModel\', \'(\', \'model\', \'.\', \'name\', \',\', \'model\', \',\', \'false\', \')\', \';\', \'}\', \'catch\', \'(\', \'GitBlitException\', \'g\', \')\', \'{\', \'g\', \'.\', \'printStackTrace\', \'(\', \')\', \';\', \'}\', \'}\']', 'private static void METHOD_1 ( String VAR_1 ) { try { TYPE_1 model = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; VAR_2 = true ; TYPE_2 . METHOD_2 ( ) . METHOD_4 ( model . name , model , false ) ; } catch ( TYPE_3 VAR_3 ) { VAR_3 . METHOD_5 ( ) ; } }', '[\'TYPE_3: GitBlitException\', \'TYPE_1: RepositoryModel\', \'TYPE_2: GitBlit\', \'METHOD_4: updateRepositoryModel\', \'METHOD_5: printStackTrace\', \'METHOD_2: self\', \'METHOD_3: getRepositoryModel\', \'METHOD_1: enableDocs\', \'VAR_2: model.useDocs\', \'VAR_3: g\', \'VAR_1: repositoryName\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/GitBlitSuite.java', 21, '196:9', '204:9', 60, 7 ), ( 5, 35, 16, 'private static void showRemoteBranches(String repositoryName) {\n    try {\n    RepositoryModel model = GitBlit.self().getRepositoryModel(repositoryName);\n    model.showRemoteBranches = true;\n    GitBlit.self().updateRepositoryModel(model.name, model, false);\n    } catch (GitBlitException g) {\n    g.printStackTrace();\n    }\n    }', '[\'private\', \'static\', \'void\', \'showRemoteBranches\', \'(\', \'String\', \'repositoryName\', \')\', \'{\', \'try\', \'{\', \'RepositoryModel\', \'model\', \'=\', \'GitBlit\', \'.\', \'self\', \'(\', \')\', \'.\', \'getRepositoryModel\', \'(\', \'repositoryName\', \')\', \';\', \'model.showRemoteBranches\', \'=\', \'true\', \';\', \'GitBlit\', \'.\', \'self\', \'(\', \')\', \'.\', \'updateRepositoryModel\', \'(\', \'model\', \'.\', \'name\', \',\', \'model\', \',\', \'false\', \')\', \';\', \'}\', \'catch\', \'(\', \'GitBlitException\', \'g\', \')\', \'{\', \'g\', \'.\', \'printStackTrace\', \'(\', \')\', \';\', \'}\', \'}\']', 'private static void METHOD_1 ( String VAR_1 ) { try { TYPE_1 model = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; VAR_2 = true ; TYPE_2 . METHOD_2 ( ) . METHOD_4 ( model . name , model , false ) ; } catch ( TYPE_3 VAR_3 ) { VAR_3 . METHOD_5 ( ) ; } }', '[\'TYPE_3: GitBlitException\', \'TYPE_1: RepositoryModel\', \'TYPE_2: GitBlit\', \'METHOD_4: updateRepositoryModel\', \'METHOD_5: printStackTrace\', \'METHOD_2: self\', \'METHOD_3: getRepositoryModel\', \'METHOD_1: showRemoteBranches\', \'VAR_3: g\', \'VAR_1: repositoryName\', \'VAR_2: model.showRemoteBranches\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/GitBlitSuite.java', 21, '206:9', '214:9', 60, 7 ), ( 5, 35, 17, 'private static void automaticallyTagBranchTips(String repositoryName) {\n    try {\n    RepositoryModel model = GitBlit.self().getRepositoryModel(repositoryName);\n    model.useIncrementalPushTags = true;\n    GitBlit.self().updateRepositoryModel(model.name, model, false);\n    } catch (GitBlitException g) {\n    g.printStackTrace();\n    }\n    }', '[\'private\', \'static\', \'void\', \'automaticallyTagBranchTips\', \'(\', \'String\', \'repositoryName\', \')\', \'{\', \'try\', \'{\', \'RepositoryModel\', \'model\', \'=\', \'GitBlit\', \'.\', \'self\', \'(\', \')\', \'.\', \'getRepositoryModel\', \'(\', \'repositoryName\', \')\', \';\', \'model.useIncrementalPushTags\', \'=\', \'true\', \';\', \'GitBlit\', \'.\', \'self\', \'(\', \')\', \'.\', \'updateRepositoryModel\', \'(\', \'model\', \'.\', \'name\', \',\', \'model\', \',\', \'false\', \')\', \';\', \'}\', \'catch\', \'(\', \'GitBlitException\', \'g\', \')\', \'{\', \'g\', \'.\', \'printStackTrace\', \'(\', \')\', \';\', \'}\', \'}\']', 'private static void METHOD_1 ( String VAR_1 ) { try { TYPE_1 model = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; VAR_2 = true ; TYPE_2 . METHOD_2 ( ) . METHOD_4 ( model . name , model , false ) ; } catch ( TYPE_3 VAR_3 ) { VAR_3 . METHOD_5 ( ) ; } }', '[\'TYPE_3: GitBlitException\', \'TYPE_1: RepositoryModel\', \'TYPE_2: GitBlit\', \'METHOD_4: updateRepositoryModel\', \'METHOD_5: printStackTrace\', \'METHOD_2: self\', \'METHOD_3: getRepositoryModel\', \'METHOD_1: automaticallyTagBranchTips\', \'VAR_3: g\', \'VAR_2: model.useIncrementalPushTags\', \'VAR_1: repositoryName\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/GitBlitSuite.java', 21, '216:9', '224:9', 60, 7 ), ( 5, 35, 18, 'public static void close(File repository) {\n    try {\n    File gitDir = FileKey.resolve(repository, FS.detect());\n    if (gitDir != null && gitDir.exists()) {\n    close(RepositoryCache.open(FileKey.exact(gitDir, FS.detect())));\n    }\n    } catch (Exception e) {\n    e.printStackTrace();\n    }\n    }', '[\'public\', \'static\', \'void\', \'close\', \'(\', \'File\', \'repository\', \')\', \'{\', \'try\', \'{\', \'File\', \'gitDir\', \'=\', \'FileKey\', \'.\', \'resolve\', \'(\', \'repository\', \',\', \'FS\', \'.\', \'detect\', \'(\', \')\', \')\', \';\', \'if\', \'(\', \'gitDir\', \'!=\', \'null\', \'&&\', \'gitDir\', \'.\', \'exists\', \'(\', \')\', \')\', \'{\', \'close\', \'(\', \'RepositoryCache\', \'.\', \'open\', \'(\', \'FileKey\', \'.\', \'exact\', \'(\', \'gitDir\', \',\', \'FS\', \'.\', \'detect\', \'(\', \')\', \')\', \')\', \')\', \';\', \'}\', \'}\', \'catch\', \'(\', \'Exception\', \'e\', \')\', \'{\', \'e\', \'.\', \'printStackTrace\', \'(\', \')\', \';\', \'}\', \'}\']', 'public static void close ( File VAR_1 ) { try { File VAR_2 = TYPE_1 . METHOD_1 ( VAR_1 , TYPE_2 . METHOD_2 ( ) ) ; if ( VAR_2 != null && VAR_2 . METHOD_3 ( ) ) { close ( TYPE_3 . METHOD_4 ( TYPE_1 . METHOD_5 ( VAR_2 , TYPE_2 . METHOD_2 ( ) ) ) ) ; } } catch ( Exception e ) { e . METHOD_6 ( ) ; } }', '[\'TYPE_1: FileKey\', \'TYPE_3: RepositoryCache\', \'TYPE_2: FS\', \'METHOD_1: resolve\', \'METHOD_6: printStackTrace\', \'METHOD_5: exact\', \'METHOD_2: detect\', \'METHOD_3: exists\', \'METHOD_4: open\', \'VAR_2: gitDir\', \'VAR_1: repository\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/GitBlitSuite.java', 21, '226:9', '235:9', 73, 7 ), ( 5, 35, 20, 'public static void close(Repository r) {\n    RepositoryCache.close(r);\n    // assume 2 uses in case reflection fails\n    int uses = 2;\n    try {\n    Field useCnt = Repository.class.getDeclaredField("useCnt");\n    useCnt.setAccessible(true);\n    uses = ((AtomicInteger) useCnt.get(r)).get();\n    } catch (Exception e) {\n    e.printStackTrace();\n    }\n    for (int i = 0; i < uses; i++) {\n    r.close();\n    }\n    }', '[\'public\', \'static\', \'void\', \'close\', \'(\', \'Repository\', \'r\', \')\', \'{\', \'RepositoryCache\', \'.\', \'close\', \'(\', \'r\', \')\', \';\', \'int\', \'uses\', \'=\', \'2\', \';\', \'try\', \'{\', \'Field\', \'useCnt\', \'=\', \'Repository.\', \'class\', \'.\', \'getDeclaredField\', \'(\', \'"useCnt"\', \')\', \';\', \'useCnt\', \'.\', \'setAccessible\', \'(\', \'true\', \')\', \';\', \'uses\', \'=\', \'(\', \'(\', \'AtomicInteger\', \')\', \'useCnt\', \'.\', \'get\', \'(\', \'r\', \')\', \')\', \'.\', \'get\', \'(\', \')\', \';\', \'}\', \'catch\', \'(\', \'Exception\', \'e\', \')\', \'{\', \'e\', \'.\', \'printStackTrace\', \'(\', \')\', \';\', \'}\', \'for\', \'(\', \'int\', \'i\', \'=\', \'0\', \';\', \'i\', \'<\', \'uses\', \';\', \'i\', \'++\', \')\', \'{\', \'r\', \'.\', \'close\', \'(\', \')\', \';\', \'}\', \'}\']', 'public static void close ( TYPE_1 r ) { TYPE_2 . close ( r ) ; int VAR_1 = 2 ; try { Field VAR_2 = VAR_3 class . METHOD_1 ( STRING_1 ) ; VAR_2 . METHOD_2 ( true ) ; VAR_1 = ( ( TYPE_3 ) VAR_2 . get ( r ) ) . get ( ) ; } catch ( Exception e ) { e . METHOD_3 ( ) ; } for ( int i = 0 ; i < VAR_1 ; i ++ ) { r . close ( ) ; } }', '[\'TYPE_1: Repository\', \'TYPE_3: AtomicInteger\', \'TYPE_2: RepositoryCache\', \'METHOD_1: getDeclaredField\', \'METHOD_2: setAccessible\', \'METHOD_3: printStackTrace\', \'VAR_2: useCnt\', \'VAR_1: uses\', \'VAR_3: Repository.\', \'STRING_1: "useCnt"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/GitBlitSuite.java', 21, '241:9', '256:9', 95, 11 ), ( 5, 36, 1, '@Before\n    public void prepare() throws Exception {\n    cleanUp();\n    X509Metadata goMetadata = new X509Metadata("localhost", caPassword);\n    X509Utils.prepareX509Infrastructure(goMetadata, folder, log);\n    }', '[\'public\', \'void\', \'prepare\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'cleanUp\', \'(\', \')\', \';\', \'X509Metadata\', \'goMetadata\', \'=\', \'new\', \'X509Metadata\', \'(\', \'"localhost"\', \',\', \'caPassword\', \')\', \';\', \'X509Utils\', \'.\', \'prepareX509Infrastructure\', \'(\', \'goMetadata\', \',\', \'folder\', \',\', \'log\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { METHOD_2 ( ) ; TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 , VAR_2 ) ; TYPE_2 . METHOD_3 ( VAR_1 , VAR_3 , log ) ; }', '[\'TYPE_1: X509Metadata\', \'TYPE_2: X509Utils\', \'METHOD_1: prepare\', \'METHOD_2: cleanUp\', \'METHOD_3: prepareX509Infrastructure\', \'VAR_2: caPassword\', \'VAR_3: folder\', \'VAR_1: goMetadata\', \'STRING_1: "localhost"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/X509UtilsTest.java', 7, '59:9', '64:9', 35, 5 ), ( 5, 36, 3, '@Test\n    public void testNewCA() throws Exception {\n    File storeFile = new File(folder, X509Utils.CA_KEY_STORE);\n    X509Utils.getPrivateKey(X509Utils.CA_ALIAS, storeFile, caPassword);\n    X509Certificate cert = X509Utils.getCertificate(X509Utils.CA_ALIAS, storeFile, caPassword);\n    assertEquals("O=Gitblit,OU=Gitblit,CN=Gitblit Certificate Authority", cert.getIssuerDN().getName());\n    }', '[\'public\', \'void\', \'testNewCA\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'File\', \'storeFile\', \'=\', \'new\', \'File\', \'(\', \'folder\', \',\', \'X509Utils.CA_KEY_STORE\', \')\', \';\', \'X509Utils\', \'.\', \'getPrivateKey\', \'(\', \'X509Utils.CA_ALIAS\', \',\', \'storeFile\', \',\', \'caPassword\', \')\', \';\', \'X509Certificate\', \'cert\', \'=\', \'X509Utils\', \'.\', \'getCertificate\', \'(\', \'X509Utils.CA_ALIAS\', \',\', \'storeFile\', \',\', \'caPassword\', \')\', \';\', \'assertEquals\', \'(\', \'"O=Gitblit\', \',\', \'cert\', \'.\', \'getIssuerDN\', \'(\', \')\', \'.\', \'getName\', \'(\', \')\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { File VAR_1 = new File ( VAR_2 , VAR_3 ) ; TYPE_1 . METHOD_2 ( VAR_4 , VAR_1 , VAR_5 ) ; TYPE_2 VAR_6 = TYPE_1 . METHOD_3 ( VAR_4 , VAR_1 , VAR_5 ) ; METHOD_4 ( STRING_1 , VAR_6 . METHOD_5 ( ) . getName ( ) ) ; }', '[\'TYPE_1: X509Utils\', \'TYPE_2: X509Certificate\', \'METHOD_3: getCertificate\', \'METHOD_5: getIssuerDN\', \'METHOD_4: assertEquals\', \'METHOD_2: getPrivateKey\', \'METHOD_1: testNewCA\', \'VAR_3: X509Utils.CA_KEY_STORE\', \'VAR_5: caPassword\', \'VAR_2: folder\', \'VAR_4: X509Utils.CA_ALIAS\', \'VAR_6: cert\', \'VAR_1: storeFile\', \'STRING_1: "O=Gitblit\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/X509UtilsTest.java', 7, '73:9', '79:9', 65, 6 ), ( 5, 37, 0, '@Test\n    public void testDiffOutputTypes() throws Exception {\n    assertEquals(DiffOutputType.PLAIN, DiffOutputType.forName("plain"));\n    assertEquals(DiffOutputType.GITWEB, DiffOutputType.forName("gitweb"));\n    assertEquals(DiffOutputType.GITBLIT, DiffOutputType.forName("gitblit"));\n    assertEquals(null, DiffOutputType.forName(null));\n    }', '[\'public\', \'void\', \'testDiffOutputTypes\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'assertEquals\', \'(\', \'DiffOutputType.PLAIN\', \',\', \'DiffOutputType\', \'.\', \'forName\', \'(\', \'"plain"\', \')\', \')\', \';\', \'assertEquals\', \'(\', \'DiffOutputType.GITWEB\', \',\', \'DiffOutputType\', \'.\', \'forName\', \'(\', \'"gitweb"\', \')\', \')\', \';\', \'assertEquals\', \'(\', \'DiffOutputType.GITBLIT\', \',\', \'DiffOutputType\', \'.\', \'forName\', \'(\', \'"gitblit"\', \')\', \')\', \';\', \'assertEquals\', \'(\', \'null\', \',\', \'DiffOutputType\', \'.\', \'forName\', \'(\', \'null\', \')\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { METHOD_2 ( VAR_1 , TYPE_1 . METHOD_3 ( STRING_1 ) ) ; METHOD_2 ( VAR_2 , TYPE_1 . METHOD_3 ( STRING_2 ) ) ; METHOD_2 ( VAR_3 , TYPE_1 . METHOD_3 ( STRING_3 ) ) ; METHOD_2 ( null , TYPE_1 . METHOD_3 ( null ) ) ; }', '[\'TYPE_1: DiffOutputType\', \'METHOD_1: testDiffOutputTypes\', \'METHOD_3: forName\', \'METHOD_2: assertEquals\', \'VAR_3: DiffOutputType.GITBLIT\', \'VAR_2: DiffOutputType.GITWEB\', \'VAR_1: DiffOutputType.PLAIN\', \'STRING_1: "plain"\', \'STRING_3: "gitblit"\', \'STRING_2: "gitweb"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/DiffUtilsTest.java', 8, '34:9', '40:9', 64, 6 ), ( 5, 37, 1, '@Test\n    public void testParentCommitDiff() throws Exception {\n    Repository repository = GitBlitSuite.getHelloworldRepository();\n    RevCommit commit = JGitUtils.getCommit(repository,\n    				"1d0c2933a4ae69c362f76797d42d6bd182d05176");\n    String diff = DiffUtils.getCommitDiff(repository, commit, DiffOutputType.PLAIN);\n    repository.close();\n    assertTrue(diff != null && diff.length() > 0);\n    String expected = "-		system.out.println(\\"Hello World\\");\\n+		System.out.println(\\"Hello World\\"";\n    assertTrue(diff.indexOf(expected) > -1);\n    }', '[\'public\', \'void\', \'testParentCommitDiff\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'Repository\', \'repository\', \'=\', \'GitBlitSuite\', \'.\', \'getHelloworldRepository\', \'(\', \')\', \';\', \'RevCommit\', \'commit\', \'=\', \'JGitUtils\', \'.\', \'getCommit\', \'(\', \'repository\', \',\', \'"1d0c2933a4ae69c362f76797d42d6bd182d05176"\', \')\', \';\', \'String\', \'diff\', \'=\', \'DiffUtils\', \'.\', \'getCommitDiff\', \'(\', \'repository\', \',\', \'commit\', \',\', \'DiffOutputType.PLAIN\', \')\', \';\', \'repository\', \'.\', \'close\', \'(\', \')\', \';\', \'assertTrue\', \'(\', \'diff\', \'!=\', \'null\', \'&&\', \'diff\', \'.\', \'length\', \'(\', \')\', \'>\', \'0\', \')\', \';\', \'String\', \'expected\', \'=\', \'"-\\t\\tsystem.out.println(\\\\"Hello World\\\\");\\\\n+\\t\\tSystem.out.println(\\\\"Hello World\\\\""\', \';\', \'assertTrue\', \'(\', \'diff\', \'.\', \'indexOf\', \'(\', \'expected\', \')\', \'>\', \'-\', \'1\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; TYPE_3 VAR_2 = TYPE_4 . METHOD_3 ( VAR_1 , STRING_1 ) ; String VAR_3 = TYPE_5 . METHOD_4 ( VAR_1 , VAR_2 , VAR_4 ) ; VAR_1 . close ( ) ; METHOD_5 ( VAR_3 != null && VAR_3 . length ( ) > 0 ) ; String VAR_5 = STRING_2 ; METHOD_5 ( VAR_3 . METHOD_6 ( VAR_5 ) > - 1 ) ; }', '[\'TYPE_1: Repository\', \'TYPE_2: GitBlitSuite\', \'TYPE_4: JGitUtils\', \'TYPE_5: DiffUtils\', \'TYPE_3: RevCommit\', \'METHOD_5: assertTrue\', \'METHOD_1: testParentCommitDiff\', \'METHOD_4: getCommitDiff\', \'METHOD_2: getHelloworldRepository\', \'METHOD_3: getCommit\', \'METHOD_6: indexOf\', \'VAR_5: expected\', \'VAR_2: commit\', \'VAR_3: diff\', \'VAR_1: repository\', \'VAR_4: DiffOutputType.PLAIN\', \'STRING_2: "-\\t\\tsystem.out.println(\\\\"Hello World\\\\");\\\\n+\\t\\tSystem.out.println(\\\\"Hello World\\\\""\', \'STRING_1: "1d0c2933a4ae69c362f76797d42d6bd182d05176"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/DiffUtilsTest.java', 8, '42:9', '52:9', 83, 10 ), ( 5, 37, 2, '@Test\n    public void testArbitraryCommitDiff() throws Exception {\n    Repository repository = GitBlitSuite.getHelloworldRepository();\n    RevCommit baseCommit = JGitUtils.getCommit(repository,\n    				"8baf6a833b5579384d9b9ceb8a16b5d0ea2ec4ca");\n    RevCommit commit = JGitUtils.getCommit(repository,\n    				"1d0c2933a4ae69c362f76797d42d6bd182d05176");\n    String diff = DiffUtils.getDiff(repository, baseCommit, commit, DiffOutputType.PLAIN);\n    repository.close();\n    assertTrue(diff != null && diff.length() > 0);\n    String expected = "-		system.out.println(\\"Hello World\\");\\n+		System.out.println(\\"Hello World\\"";\n    assertTrue(diff.indexOf(expected) > -1);\n    }', '[\'public\', \'void\', \'testArbitraryCommitDiff\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'Repository\', \'repository\', \'=\', \'GitBlitSuite\', \'.\', \'getHelloworldRepository\', \'(\', \')\', \';\', \'RevCommit\', \'baseCommit\', \'=\', \'JGitUtils\', \'.\', \'getCommit\', \'(\', \'repository\', \',\', \'"8baf6a833b5579384d9b9ceb8a16b5d0ea2ec4ca"\', \')\', \';\', \'RevCommit\', \'commit\', \'=\', \'JGitUtils\', \'.\', \'getCommit\', \'(\', \'repository\', \',\', \'"1d0c2933a4ae69c362f76797d42d6bd182d05176"\', \')\', \';\', \'String\', \'diff\', \'=\', \'DiffUtils\', \'.\', \'getDiff\', \'(\', \'repository\', \',\', \'baseCommit\', \',\', \'commit\', \',\', \'DiffOutputType.PLAIN\', \')\', \';\', \'repository\', \'.\', \'close\', \'(\', \')\', \';\', \'assertTrue\', \'(\', \'diff\', \'!=\', \'null\', \'&&\', \'diff\', \'.\', \'length\', \'(\', \')\', \'>\', \'0\', \')\', \';\', \'String\', \'expected\', \'=\', \'"-\\t\\tsystem.out.println(\\\\"Hello World\\\\");\\\\n+\\t\\tSystem.out.println(\\\\"Hello World\\\\""\', \';\', \'assertTrue\', \'(\', \'diff\', \'.\', \'indexOf\', \'(\', \'expected\', \')\', \'>\', \'-\', \'1\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; TYPE_3 VAR_2 = TYPE_4 . METHOD_3 ( VAR_1 , STRING_1 ) ; TYPE_3 VAR_3 = TYPE_4 . METHOD_3 ( VAR_1 , STRING_2 ) ; String VAR_4 = TYPE_5 . METHOD_4 ( VAR_1 , VAR_2 , VAR_3 , VAR_5 ) ; VAR_1 . close ( ) ; METHOD_5 ( VAR_4 != null && VAR_4 . length ( ) > 0 ) ; String VAR_6 = STRING_3 ; METHOD_5 ( VAR_4 . METHOD_6 ( VAR_6 ) > - 1 ) ; }', '[\'TYPE_1: Repository\', \'TYPE_2: GitBlitSuite\', \'TYPE_4: JGitUtils\', \'TYPE_5: DiffUtils\', \'TYPE_3: RevCommit\', \'METHOD_4: getDiff\', \'METHOD_5: assertTrue\', \'METHOD_2: getHelloworldRepository\', \'METHOD_3: getCommit\', \'METHOD_1: testArbitraryCommitDiff\', \'METHOD_6: indexOf\', \'VAR_2: baseCommit\', \'VAR_6: expected\', \'VAR_3: commit\', \'VAR_4: diff\', \'VAR_1: repository\', \'VAR_5: DiffOutputType.PLAIN\', \'STRING_3: "-\\t\\tsystem.out.println(\\\\"Hello World\\\\");\\\\n+\\t\\tSystem.out.println(\\\\"Hello World\\\\""\', \'STRING_2: "1d0c2933a4ae69c362f76797d42d6bd182d05176"\', \'STRING_1: "8baf6a833b5579384d9b9ceb8a16b5d0ea2ec4ca"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/DiffUtilsTest.java', 8, '54:9', '66:9', 97, 12 ), ( 5, 37, 3, '@Test\n    public void testPlainFileDiff() throws Exception {\n    Repository repository = GitBlitSuite.getHelloworldRepository();\n    RevCommit commit = JGitUtils.getCommit(repository,\n    				"1d0c2933a4ae69c362f76797d42d6bd182d05176");\n    String diff = DiffUtils.getDiff(repository, commit, "java.java", DiffOutputType.PLAIN);\n    repository.close();\n    assertTrue(diff != null && diff.length() > 0);\n    String expected = "-		system.out.println(\\"Hello World\\");\\n+		System.out.println(\\"Hello World\\"";\n    assertTrue(diff.indexOf(expected) > -1);\n    }', '[\'public\', \'void\', \'testPlainFileDiff\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'Repository\', \'repository\', \'=\', \'GitBlitSuite\', \'.\', \'getHelloworldRepository\', \'(\', \')\', \';\', \'RevCommit\', \'commit\', \'=\', \'JGitUtils\', \'.\', \'getCommit\', \'(\', \'repository\', \',\', \'"1d0c2933a4ae69c362f76797d42d6bd182d05176"\', \')\', \';\', \'String\', \'diff\', \'=\', \'DiffUtils\', \'.\', \'getDiff\', \'(\', \'repository\', \',\', \'commit\', \',\', \'"java.java"\', \',\', \'DiffOutputType.PLAIN\', \')\', \';\', \'repository\', \'.\', \'close\', \'(\', \')\', \';\', \'assertTrue\', \'(\', \'diff\', \'!=\', \'null\', \'&&\', \'diff\', \'.\', \'length\', \'(\', \')\', \'>\', \'0\', \')\', \';\', \'String\', \'expected\', \'=\', \'"-\\t\\tsystem.out.println(\\\\"Hello World\\\\");\\\\n+\\t\\tSystem.out.println(\\\\"Hello World\\\\""\', \';\', \'assertTrue\', \'(\', \'diff\', \'.\', \'indexOf\', \'(\', \'expected\', \')\', \'>\', \'-\', \'1\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; TYPE_3 VAR_2 = TYPE_4 . METHOD_3 ( VAR_1 , STRING_1 ) ; String VAR_3 = TYPE_5 . METHOD_4 ( VAR_1 , VAR_2 , STRING_2 , VAR_4 ) ; VAR_1 . close ( ) ; METHOD_5 ( VAR_3 != null && VAR_3 . length ( ) > 0 ) ; String VAR_5 = STRING_3 ; METHOD_5 ( VAR_3 . METHOD_6 ( VAR_5 ) > - 1 ) ; }', '[\'TYPE_1: Repository\', \'TYPE_2: GitBlitSuite\', \'TYPE_4: JGitUtils\', \'TYPE_5: DiffUtils\', \'TYPE_3: RevCommit\', \'METHOD_4: getDiff\', \'METHOD_5: assertTrue\', \'METHOD_2: getHelloworldRepository\', \'METHOD_1: testPlainFileDiff\', \'METHOD_3: getCommit\', \'METHOD_6: indexOf\', \'VAR_5: expected\', \'VAR_2: commit\', \'VAR_3: diff\', \'VAR_1: repository\', \'VAR_4: DiffOutputType.PLAIN\', \'STRING_2: "java.java"\', \'STRING_3: "-\\t\\tsystem.out.println(\\\\"Hello World\\\\");\\\\n+\\t\\tSystem.out.println(\\\\"Hello World\\\\""\', \'STRING_1: "1d0c2933a4ae69c362f76797d42d6bd182d05176"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/DiffUtilsTest.java', 8, '68:9', '78:9', 85, 10 ), ( 5, 37, 4, '@Test\n    public void testFilePatch() throws Exception {\n    Repository repository = GitBlitSuite.getHelloworldRepository();\n    RevCommit commit = JGitUtils.getCommit(repository,\n    				"1d0c2933a4ae69c362f76797d42d6bd182d05176");\n    String patch = DiffUtils.getCommitPatch(repository, null, commit, "java.java");\n    repository.close();\n    assertTrue(patch != null && patch.length() > 0);\n    String expected = "-		system.out.println(\\"Hello World\\");\\n+		System.out.println(\\"Hello World\\"";\n    assertTrue(patch.indexOf(expected) > -1);\n    }', '[\'public\', \'void\', \'testFilePatch\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'Repository\', \'repository\', \'=\', \'GitBlitSuite\', \'.\', \'getHelloworldRepository\', \'(\', \')\', \';\', \'RevCommit\', \'commit\', \'=\', \'JGitUtils\', \'.\', \'getCommit\', \'(\', \'repository\', \',\', \'"1d0c2933a4ae69c362f76797d42d6bd182d05176"\', \')\', \';\', \'String\', \'patch\', \'=\', \'DiffUtils\', \'.\', \'getCommitPatch\', \'(\', \'repository\', \',\', \'null\', \',\', \'commit\', \',\', \'"java.java"\', \')\', \';\', \'repository\', \'.\', \'close\', \'(\', \')\', \';\', \'assertTrue\', \'(\', \'patch\', \'!=\', \'null\', \'&&\', \'patch\', \'.\', \'length\', \'(\', \')\', \'>\', \'0\', \')\', \';\', \'String\', \'expected\', \'=\', \'"-\\t\\tsystem.out.println(\\\\"Hello World\\\\");\\\\n+\\t\\tSystem.out.println(\\\\"Hello World\\\\""\', \';\', \'assertTrue\', \'(\', \'patch\', \'.\', \'indexOf\', \'(\', \'expected\', \')\', \'>\', \'-\', \'1\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; TYPE_3 VAR_2 = TYPE_4 . METHOD_3 ( VAR_1 , STRING_1 ) ; String VAR_3 = TYPE_5 . METHOD_4 ( VAR_1 , null , VAR_2 , STRING_2 ) ; VAR_1 . close ( ) ; METHOD_5 ( VAR_3 != null && VAR_3 . length ( ) > 0 ) ; String VAR_4 = STRING_3 ; METHOD_5 ( VAR_3 . METHOD_6 ( VAR_4 ) > - 1 ) ; }', '[\'TYPE_1: Repository\', \'TYPE_2: GitBlitSuite\', \'TYPE_4: JGitUtils\', \'TYPE_5: DiffUtils\', \'TYPE_3: RevCommit\', \'METHOD_1: testFilePatch\', \'METHOD_4: getCommitPatch\', \'METHOD_5: assertTrue\', \'METHOD_2: getHelloworldRepository\', \'METHOD_3: getCommit\', \'METHOD_6: indexOf\', \'VAR_3: patch\', \'VAR_4: expected\', \'VAR_2: commit\', \'VAR_1: repository\', \'STRING_2: "java.java"\', \'STRING_3: "-\\t\\tsystem.out.println(\\\\"Hello World\\\\");\\\\n+\\t\\tSystem.out.println(\\\\"Hello World\\\\""\', \'STRING_1: "1d0c2933a4ae69c362f76797d42d6bd182d05176"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/DiffUtilsTest.java', 8, '80:9', '90:9', 83, 10 ), ( 5, 37, 5, '@Test\n    public void testArbitraryFilePatch() throws Exception {\n    Repository repository = GitBlitSuite.getHelloworldRepository();\n    RevCommit baseCommit = JGitUtils.getCommit(repository,\n    				"8baf6a833b5579384d9b9ceb8a16b5d0ea2ec4ca");\n    RevCommit commit = JGitUtils.getCommit(repository,\n    				"1d0c2933a4ae69c362f76797d42d6bd182d05176");\n    String patch = DiffUtils.getCommitPatch(repository, baseCommit, commit, "java.java");\n    repository.close();\n    assertTrue(patch != null && patch.length() > 0);\n    String expected = "-		system.out.println(\\"Hello World\\");\\n+		System.out.println(\\"Hello World\\"";\n    assertTrue(patch.indexOf(expected) > -1);\n    }', '[\'public\', \'void\', \'testArbitraryFilePatch\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'Repository\', \'repository\', \'=\', \'GitBlitSuite\', \'.\', \'getHelloworldRepository\', \'(\', \')\', \';\', \'RevCommit\', \'baseCommit\', \'=\', \'JGitUtils\', \'.\', \'getCommit\', \'(\', \'repository\', \',\', \'"8baf6a833b5579384d9b9ceb8a16b5d0ea2ec4ca"\', \')\', \';\', \'RevCommit\', \'commit\', \'=\', \'JGitUtils\', \'.\', \'getCommit\', \'(\', \'repository\', \',\', \'"1d0c2933a4ae69c362f76797d42d6bd182d05176"\', \')\', \';\', \'String\', \'patch\', \'=\', \'DiffUtils\', \'.\', \'getCommitPatch\', \'(\', \'repository\', \',\', \'baseCommit\', \',\', \'commit\', \',\', \'"java.java"\', \')\', \';\', \'repository\', \'.\', \'close\', \'(\', \')\', \';\', \'assertTrue\', \'(\', \'patch\', \'!=\', \'null\', \'&&\', \'patch\', \'.\', \'length\', \'(\', \')\', \'>\', \'0\', \')\', \';\', \'String\', \'expected\', \'=\', \'"-\\t\\tsystem.out.println(\\\\"Hello World\\\\");\\\\n+\\t\\tSystem.out.println(\\\\"Hello World\\\\""\', \';\', \'assertTrue\', \'(\', \'patch\', \'.\', \'indexOf\', \'(\', \'expected\', \')\', \'>\', \'-\', \'1\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; TYPE_3 VAR_2 = TYPE_4 . METHOD_3 ( VAR_1 , STRING_1 ) ; TYPE_3 VAR_3 = TYPE_4 . METHOD_3 ( VAR_1 , STRING_2 ) ; String VAR_4 = TYPE_5 . METHOD_4 ( VAR_1 , VAR_2 , VAR_3 , STRING_3 ) ; VAR_1 . close ( ) ; METHOD_5 ( VAR_4 != null && VAR_4 . length ( ) > 0 ) ; String VAR_5 = STRING_4 ; METHOD_5 ( VAR_4 . METHOD_6 ( VAR_5 ) > - 1 ) ; }', '[\'TYPE_1: Repository\', \'TYPE_2: GitBlitSuite\', \'TYPE_4: JGitUtils\', \'TYPE_5: DiffUtils\', \'TYPE_3: RevCommit\', \'METHOD_4: getCommitPatch\', \'METHOD_5: assertTrue\', \'METHOD_1: testArbitraryFilePatch\', \'METHOD_2: getHelloworldRepository\', \'METHOD_3: getCommit\', \'METHOD_6: indexOf\', \'VAR_4: patch\', \'VAR_2: baseCommit\', \'VAR_5: expected\', \'VAR_3: commit\', \'VAR_1: repository\', \'STRING_3: "java.java"\', \'STRING_4: "-\\t\\tsystem.out.println(\\\\"Hello World\\\\");\\\\n+\\t\\tSystem.out.println(\\\\"Hello World\\\\""\', \'STRING_2: "1d0c2933a4ae69c362f76797d42d6bd182d05176"\', \'STRING_1: "8baf6a833b5579384d9b9ceb8a16b5d0ea2ec4ca"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/DiffUtilsTest.java', 8, '92:9', '104:9', 95, 12 ), ( 5, 37, 6, '@Test\n    public void testArbitraryCommitPatch() throws Exception {\n    Repository repository = GitBlitSuite.getHelloworldRepository();\n    RevCommit baseCommit = JGitUtils.getCommit(repository,\n    				"8baf6a833b5579384d9b9ceb8a16b5d0ea2ec4ca");\n    RevCommit commit = JGitUtils.getCommit(repository,\n    				"1d0c2933a4ae69c362f76797d42d6bd182d05176");\n    String patch = DiffUtils.getCommitPatch(repository, baseCommit, commit, null);\n    repository.close();\n    assertTrue(patch != null && patch.length() > 0);\n    String expected = "-		system.out.println(\\"Hello World\\");\\n+		System.out.println(\\"Hello World\\"";\n    assertTrue(patch.indexOf(expected) > -1);\n    }', '[\'public\', \'void\', \'testArbitraryCommitPatch\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'Repository\', \'repository\', \'=\', \'GitBlitSuite\', \'.\', \'getHelloworldRepository\', \'(\', \')\', \';\', \'RevCommit\', \'baseCommit\', \'=\', \'JGitUtils\', \'.\', \'getCommit\', \'(\', \'repository\', \',\', \'"8baf6a833b5579384d9b9ceb8a16b5d0ea2ec4ca"\', \')\', \';\', \'RevCommit\', \'commit\', \'=\', \'JGitUtils\', \'.\', \'getCommit\', \'(\', \'repository\', \',\', \'"1d0c2933a4ae69c362f76797d42d6bd182d05176"\', \')\', \';\', \'String\', \'patch\', \'=\', \'DiffUtils\', \'.\', \'getCommitPatch\', \'(\', \'repository\', \',\', \'baseCommit\', \',\', \'commit\', \',\', \'null\', \')\', \';\', \'repository\', \'.\', \'close\', \'(\', \')\', \';\', \'assertTrue\', \'(\', \'patch\', \'!=\', \'null\', \'&&\', \'patch\', \'.\', \'length\', \'(\', \')\', \'>\', \'0\', \')\', \';\', \'String\', \'expected\', \'=\', \'"-\\t\\tsystem.out.println(\\\\"Hello World\\\\");\\\\n+\\t\\tSystem.out.println(\\\\"Hello World\\\\""\', \';\', \'assertTrue\', \'(\', \'patch\', \'.\', \'indexOf\', \'(\', \'expected\', \')\', \'>\', \'-\', \'1\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; TYPE_3 VAR_2 = TYPE_4 . METHOD_3 ( VAR_1 , STRING_1 ) ; TYPE_3 VAR_3 = TYPE_4 . METHOD_3 ( VAR_1 , STRING_2 ) ; String VAR_4 = TYPE_5 . METHOD_4 ( VAR_1 , VAR_2 , VAR_3 , null ) ; VAR_1 . close ( ) ; METHOD_5 ( VAR_4 != null && VAR_4 . length ( ) > 0 ) ; String VAR_5 = STRING_3 ; METHOD_5 ( VAR_4 . METHOD_6 ( VAR_5 ) > - 1 ) ; }', '[\'TYPE_1: Repository\', \'TYPE_2: GitBlitSuite\', \'TYPE_4: JGitUtils\', \'TYPE_5: DiffUtils\', \'TYPE_3: RevCommit\', \'METHOD_4: getCommitPatch\', \'METHOD_5: assertTrue\', \'METHOD_1: testArbitraryCommitPatch\', \'METHOD_2: getHelloworldRepository\', \'METHOD_3: getCommit\', \'METHOD_6: indexOf\', \'VAR_4: patch\', \'VAR_2: baseCommit\', \'VAR_5: expected\', \'VAR_3: commit\', \'VAR_1: repository\', \'STRING_3: "-\\t\\tsystem.out.println(\\\\"Hello World\\\\");\\\\n+\\t\\tSystem.out.println(\\\\"Hello World\\\\""\', \'STRING_2: "1d0c2933a4ae69c362f76797d42d6bd182d05176"\', \'STRING_1: "8baf6a833b5579384d9b9ceb8a16b5d0ea2ec4ca"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/DiffUtilsTest.java', 8, '106:9', '118:9', 95, 12 ), ( 5, 37, 7, '@Test\n    public void testBlame() throws Exception {\n    Repository repository = GitBlitSuite.getHelloworldRepository();\n    List<AnnotatedLine> lines = DiffUtils.blame(repository, "java.java",\n    				"1d0c2933a4ae69c362f76797d42d6bd182d05176");\n    repository.close();\n    assertTrue(lines.size() > 0);\n    assertEquals("c6d31dccf5cc75e8e46299fc62d38f60ec6d41e0", lines.get(0).commitId);\n    }', '[\'public\', \'void\', \'testBlame\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'Repository\', \'repository\', \'=\', \'GitBlitSuite\', \'.\', \'getHelloworldRepository\', \'(\', \')\', \';\', \'List\', \'<\', \'AnnotatedLine\', \'>\', \'lines\', \'=\', \'DiffUtils\', \'.\', \'blame\', \'(\', \'repository\', \',\', \'"java.java"\', \',\', \'"1d0c2933a4ae69c362f76797d42d6bd182d05176"\', \')\', \';\', \'repository\', \'.\', \'close\', \'(\', \')\', \';\', \'assertTrue\', \'(\', \'lines\', \'.\', \'size\', \'(\', \')\', \'>\', \'0\', \')\', \';\', \'assertEquals\', \'(\', \'"c6d31dccf5cc75e8e46299fc62d38f60ec6d41e0"\', \',\', \'lines\', \'.\', \'get\', \'(\', \'0\', \')\', \'.\', \'commitId\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; List < TYPE_3 > VAR_2 = TYPE_4 . METHOD_3 ( VAR_1 , STRING_1 , STRING_2 ) ; VAR_1 . close ( ) ; METHOD_4 ( VAR_2 . size ( ) > 0 ) ; METHOD_5 ( STRING_3 , VAR_2 . get ( 0 ) . VAR_3 ) ; }', '[\'TYPE_3: AnnotatedLine\', \'TYPE_1: Repository\', \'TYPE_2: GitBlitSuite\', \'TYPE_4: DiffUtils\', \'METHOD_1: testBlame\', \'METHOD_4: assertTrue\', \'METHOD_3: blame\', \'METHOD_2: getHelloworldRepository\', \'METHOD_5: assertEquals\', \'VAR_3: commitId\', \'VAR_1: repository\', \'VAR_2: lines\', \'STRING_1: "java.java"\', \'STRING_3: "c6d31dccf5cc75e8e46299fc62d38f60ec6d41e0"\', \'STRING_2: "1d0c2933a4ae69c362f76797d42d6bd182d05176"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/DiffUtilsTest.java', 8, '120:9', '128:9', 64, 8 ), ( 5, 38, 0, '@Test\n    public void testIsEmpty() throws Exception {\n    assertTrue(StringUtils.isEmpty(null));\n    assertTrue(StringUtils.isEmpty(""));\n    assertTrue(StringUtils.isEmpty("  "));\n    assertFalse(StringUtils.isEmpty("A"));\n    }', '[\'public\', \'void\', \'testIsEmpty\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'assertTrue\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'null\', \')\', \')\', \';\', \'assertTrue\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'""\', \')\', \')\', \';\', \'assertTrue\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'"  "\', \')\', \')\', \';\', \'assertFalse\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'"A"\', \')\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { METHOD_2 ( StringUtils . isEmpty ( null ) ) ; METHOD_2 ( StringUtils . isEmpty ( STRING_1 ) ) ; METHOD_2 ( StringUtils . isEmpty ( STRING_2 ) ) ; METHOD_3 ( StringUtils . isEmpty ( STRING_3 ) ) ; }', '[\'METHOD_1: testIsEmpty\', \'METHOD_2: assertTrue\', \'METHOD_3: assertFalse\', \'STRING_1: ""\', \'STRING_3: "A"\', \'STRING_2: "  "\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/StringUtilsTest.java', 15, '31:9', '37:9', 50, 6 ), ( 5, 38, 1, '@Test\n    public void testBreakLinesForHtml() throws Exception {\n    String input = "this\\nis\\r\\na\\rtest\\r\\n\\r\\nof\\n\\nline\\r\\rbreaking";\n    String output = "this<br/>is<br/>a<br/>test<br/><br/>of<br/><br/>line<br/><br/>breaking";\n    assertEquals(output, StringUtils.breakLinesForHtml(input));\n    }', '[\'public\', \'void\', \'testBreakLinesForHtml\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'String\', \'input\', \'=\', \'"this\\\\nis\\\\r\\\\na\\\\rtest\\\\r\\\\n\\\\r\\\\nof\\\\n\\\\nline\\\\r\\\\rbreaking"\', \';\', \'String\', \'output\', \'=\', \'"this<br/>is<br/>a<br/>test<br/><br/>of<br/><br/>line<br/><br/>breaking"\', \';\', \'assertEquals\', \'(\', \'output\', \',\', \'StringUtils\', \'.\', \'breakLinesForHtml\', \'(\', \'input\', \')\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { String input = STRING_1 ; String output = STRING_2 ; METHOD_2 ( output , StringUtils . METHOD_3 ( input ) ) ; }', '[\'METHOD_1: testBreakLinesForHtml\', \'METHOD_3: breakLinesForHtml\', \'METHOD_2: assertEquals\', \'STRING_1: "this\\\\nis\\\\r\\\\na\\\\rtest\\\\r\\\\n\\\\r\\\\nof\\\\n\\\\nline\\\\r\\\\rbreaking"\', \'STRING_2: "this<br/>is<br/>a<br/>test<br/><br/>of<br/><br/>line<br/><br/>breaking"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/StringUtilsTest.java', 15, '39:9', '44:9', 32, 5 ), ( 5, 38, 2, '@Test\n    public void testEncodeUrl() throws Exception {\n    String input = "test /";\n    String output = "test%20%2F";\n    assertEquals(output, StringUtils.encodeURL(input));\n    }', '[\'public\', \'void\', \'testEncodeUrl\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'String\', \'input\', \'=\', \'"test /"\', \';\', \'String\', \'output\', \'=\', \'"test%20%2F"\', \';\', \'assertEquals\', \'(\', \'output\', \',\', \'StringUtils\', \'.\', \'encodeURL\', \'(\', \'input\', \')\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { String input = STRING_1 ; String output = STRING_2 ; METHOD_2 ( output , StringUtils . METHOD_3 ( input ) ) ; }', '[\'METHOD_1: testEncodeUrl\', \'METHOD_2: assertEquals\', \'METHOD_3: encodeURL\', \'STRING_1: "test /"\', \'STRING_2: "test%20%2F"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/StringUtilsTest.java', 15, '46:9', '51:9', 32, 5 ), ( 5, 38, 3, '@Test\n    public void testEscapeForHtml() throws Exception {\n    String input = "& < > \\" \\t";\n    String outputNoChange = "&amp; &lt; &gt; &quot; \\t";\n    String outputChange = "&amp;&nbsp;&lt;&nbsp;&gt;&nbsp;&quot;&nbsp; &nbsp; &nbsp;";\n    assertEquals(outputNoChange, StringUtils.escapeForHtml(input, false));\n    assertEquals(outputChange, StringUtils.escapeForHtml(input, true));\n    }', '[\'public\', \'void\', \'testEscapeForHtml\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'String\', \'input\', \'=\', \'"& < > \\\\" \\\\t"\', \';\', \'String\', \'outputNoChange\', \'=\', \'"&amp; &lt; &gt; &quot; \\\\t"\', \';\', \'String\', \'outputChange\', \'=\', \'"&amp;&nbsp;&lt;&nbsp;&gt;&nbsp;&quot;&nbsp; &nbsp; &nbsp;"\', \';\', \'assertEquals\', \'(\', \'outputNoChange\', \',\', \'StringUtils\', \'.\', \'escapeForHtml\', \'(\', \'input\', \',\', \'false\', \')\', \')\', \';\', \'assertEquals\', \'(\', \'outputChange\', \',\', \'StringUtils\', \'.\', \'escapeForHtml\', \'(\', \'input\', \',\', \'true\', \')\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { String input = STRING_1 ; String VAR_1 = STRING_2 ; String VAR_2 = STRING_3 ; METHOD_2 ( VAR_1 , StringUtils . METHOD_3 ( input , false ) ) ; METHOD_2 ( VAR_2 , StringUtils . METHOD_3 ( input , true ) ) ; }', '[\'METHOD_3: escapeForHtml\', \'METHOD_1: testEscapeForHtml\', \'METHOD_2: assertEquals\', \'VAR_1: outputNoChange\', \'VAR_2: outputChange\', \'STRING_3: "&amp;&nbsp;&lt;&nbsp;&gt;&nbsp;&quot;&nbsp; &nbsp; &nbsp;"\', \'STRING_2: "&amp; &lt; &gt; &quot; \\\\t"\', \'STRING_1: "& < > \\\\" \\\\t"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/StringUtilsTest.java', 15, '53:9', '60:9', 53, 7 ), ( 5, 38, 4, '@Test\n    public void testDecodeForHtml() throws Exception {\n    String input = "&amp; &lt; &gt; &quot;";\n    String output = "& < > \\"";\n    assertEquals(output, StringUtils.decodeFromHtml(input));\n    }', '[\'public\', \'void\', \'testDecodeForHtml\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'String\', \'input\', \'=\', \'"&amp; &lt; &gt; &quot;"\', \';\', \'String\', \'output\', \'=\', \'"& < > \\\\""\', \';\', \'assertEquals\', \'(\', \'output\', \',\', \'StringUtils\', \'.\', \'decodeFromHtml\', \'(\', \'input\', \')\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { String input = STRING_1 ; String output = STRING_2 ; METHOD_2 ( output , StringUtils . METHOD_3 ( input ) ) ; }', '[\'METHOD_3: decodeFromHtml\', \'METHOD_2: assertEquals\', \'METHOD_1: testDecodeForHtml\', \'STRING_2: "& < > \\\\""\', \'STRING_1: "&amp; &lt; &gt; &quot;"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/StringUtilsTest.java', 15, '62:9', '67:9', 32, 5 ), ( 5, 38, 6, '@Test\n    public void testTrim() throws Exception {\n    String input = "123456789 123456789 123456789 123456789 123456789 123456789 123456789 ";\n    String output = "123456789 123456789 123456789 123456789 123456789 1234567...";\n    assertEquals(output, StringUtils.trimString(input, 60));\n    assertEquals(input, StringUtils.trimString(input, input.length()));\n    }', '[\'public\', \'void\', \'testTrim\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'String\', \'input\', \'=\', \'"123456789 123456789 123456789 123456789 123456789 123456789 123456789 "\', \';\', \'String\', \'output\', \'=\', \'"123456789 123456789 123456789 123456789 123456789 1234567..."\', \';\', \'assertEquals\', \'(\', \'output\', \',\', \'StringUtils\', \'.\', \'trimString\', \'(\', \'input\', \',\', \'60\', \')\', \')\', \';\', \'assertEquals\', \'(\', \'input\', \',\', \'StringUtils\', \'.\', \'trimString\', \'(\', \'input\', \',\', \'input\', \'.\', \'length\', \'(\', \')\', \')\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { String input = STRING_1 ; String output = STRING_2 ; METHOD_2 ( output , StringUtils . METHOD_3 ( input , INT_1 ) ) ; METHOD_2 ( input , StringUtils . METHOD_3 ( input , input . length ( ) ) ) ; }', '[\'METHOD_1: testTrim\', \'METHOD_2: assertEquals\', \'METHOD_3: trimString\', \'INT_1: 60\', \'STRING_2: "123456789 123456789 123456789 123456789 123456789 1234567..."\', \'STRING_1: "123456789 123456789 123456789 123456789 123456789 123456789 123456789 "\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/StringUtilsTest.java', 15, '75:9', '81:9', 51, 6 ), ( 5, 38, 7, '@Test\n    public void testPadding() throws Exception {\n    String input = "test";\n    assertEquals("      test", StringUtils.leftPad(input, 6 + input.length(), \' \'));\n    assertEquals("test      ", StringUtils.rightPad(input, 6 + input.length(), \' \'));\n    assertEquals(input, StringUtils.leftPad(input, input.length(), \' \'));\n    assertEquals(input, StringUtils.rightPad(input, input.length(), \' \'));\n    }', '[\'public\', \'void\', \'testPadding\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'String\', \'input\', \'=\', \'"test"\', \';\', \'assertEquals\', \'(\', \'"      test"\', \',\', \'StringUtils\', \'.\', \'leftPad\', \'(\', \'input\', \',\', \'6\', \'+\', \'input\', \'.\', \'length\', \'(\', \')\', \',\', "\' \'", \')\', \')\', \';\', \'assertEquals\', \'(\', \'"test      "\', \',\', \'StringUtils\', \'.\', \'rightPad\', \'(\', \'input\', \',\', \'6\', \'+\', \'input\', \'.\', \'length\', \'(\', \')\', \',\', "\' \'", \')\', \')\', \';\', \'assertEquals\', \'(\', \'input\', \',\', \'StringUtils\', \'.\', \'leftPad\', \'(\', \'input\', \',\', \'input\', \'.\', \'length\', \'(\', \')\', \',\', "\' \'", \')\', \')\', \';\', \'assertEquals\', \'(\', \'input\', \',\', \'StringUtils\', \'.\', \'rightPad\', \'(\', \'input\', \',\', \'input\', \'.\', \'length\', \'(\', \')\', \',\', "\' \'", \')\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { String input = STRING_1 ; METHOD_2 ( STRING_2 , StringUtils . METHOD_3 ( input , INT_1 + input . length ( ) , CHAR_1 ) ) ; METHOD_2 ( STRING_3 , StringUtils . METHOD_4 ( input , INT_1 + input . length ( ) , CHAR_1 ) ) ; METHOD_2 ( input , StringUtils . METHOD_3 ( input , input . length ( ) , CHAR_1 ) ) ; METHOD_2 ( input , StringUtils . METHOD_4 ( input , input . length ( ) , CHAR_1 ) ) ; }', '[\'METHOD_3: leftPad\', \'METHOD_4: rightPad\', \'METHOD_1: testPadding\', \'METHOD_2: assertEquals\', "CHAR_1: \' \'", \'INT_1: 6\', \'STRING_3: "test      "\', \'STRING_1: "test"\', \'STRING_2: "      test"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/StringUtilsTest.java', 15, '83:9', '91:9', 95, 7 ), ( 5, 38, 10, '@Test\n    public void testRootPath() throws Exception {\n    String input = "/nested/path/to/repository";\n    String output = "/nested/path/to";\n    assertEquals(output, StringUtils.getRootPath(input));\n    assertEquals("", StringUtils.getRootPath("repository"));\n    }', '[\'public\', \'void\', \'testRootPath\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'String\', \'input\', \'=\', \'"/nested/path/to/repository"\', \';\', \'String\', \'output\', \'=\', \'"/nested/path/to"\', \';\', \'assertEquals\', \'(\', \'output\', \',\', \'StringUtils\', \'.\', \'getRootPath\', \'(\', \'input\', \')\', \')\', \';\', \'assertEquals\', \'(\', \'""\', \',\', \'StringUtils\', \'.\', \'getRootPath\', \'(\', \'"repository"\', \')\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { String input = STRING_1 ; String output = STRING_2 ; METHOD_2 ( output , StringUtils . METHOD_3 ( input ) ) ; METHOD_2 ( STRING_3 , StringUtils . METHOD_3 ( STRING_4 ) ) ; }', '[\'METHOD_1: testRootPath\', \'METHOD_2: assertEquals\', \'METHOD_3: getRootPath\', \'STRING_2: "/nested/path/to"\', \'STRING_3: ""\', \'STRING_1: "/nested/path/to/repository"\', \'STRING_4: "repository"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/StringUtilsTest.java', 15, '105:9', '111:9', 44, 6 ), ( 5, 38, 12, '@Test\n    public void testStringsFromValue2() throws Exception {\n    List<String> strings = StringUtils.getStringsFromValue("common/* libraries/*");\n    assertEquals(2, strings.size());\n    assertEquals("common/*", strings.get(0));\n    assertEquals("libraries/*", strings.get(1));\n    }', '[\'public\', \'void\', \'testStringsFromValue2\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'List\', \'<\', \'String\', \'>\', \'strings\', \'=\', \'StringUtils\', \'.\', \'getStringsFromValue\', \'(\', \'"common/* libraries/*"\', \')\', \';\', \'assertEquals\', \'(\', \'2\', \',\', \'strings\', \'.\', \'size\', \'(\', \')\', \')\', \';\', \'assertEquals\', \'(\', \'"common/*"\', \',\', \'strings\', \'.\', \'get\', \'(\', \'0\', \')\', \')\', \';\', \'assertEquals\', \'(\', \'"libraries/*"\', \',\', \'strings\', \'.\', \'get\', \'(\', \'1\', \')\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { List < String > VAR_1 = StringUtils . METHOD_2 ( STRING_1 ) ; METHOD_3 ( 2 , VAR_1 . size ( ) ) ; METHOD_3 ( STRING_2 , VAR_1 . get ( 0 ) ) ; METHOD_3 ( STRING_3 , VAR_1 . get ( 1 ) ) ; }', '[\'METHOD_1: testStringsFromValue2\', \'METHOD_2: getStringsFromValue\', \'METHOD_3: assertEquals\', \'VAR_1: strings\', \'STRING_3: "libraries/*"\', \'STRING_1: "common/* libraries/*"\', \'STRING_2: "common/*"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/StringUtilsTest.java', 15, '134:9', '140:9', 57, 6 ), ( 5, 38, 13, '@Test\n    public void testFuzzyMatching() throws Exception {\n    assertTrue(StringUtils.fuzzyMatch("12345", "12345"));\n    assertTrue(StringUtils.fuzzyMatch("AbCdEf", "abcdef"));\n    assertTrue(StringUtils.fuzzyMatch("AbCdEf", "abc*"));\n    assertTrue(StringUtils.fuzzyMatch("AbCdEf", "*def"));\n    assertTrue(StringUtils.fuzzyMatch("AbCdEfHIJ", "abc*hij"));\n    assertFalse(StringUtils.fuzzyMatch("123", "12345"));\n    assertFalse(StringUtils.fuzzyMatch("AbCdEfHIJ", "abc*hhh"));\n    }', '[\'public\', \'void\', \'testFuzzyMatching\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'assertTrue\', \'(\', \'StringUtils\', \'.\', \'fuzzyMatch\', \'(\', \'"12345"\', \',\', \'"12345"\', \')\', \')\', \';\', \'assertTrue\', \'(\', \'StringUtils\', \'.\', \'fuzzyMatch\', \'(\', \'"AbCdEf"\', \',\', \'"abcdef"\', \')\', \')\', \';\', \'assertTrue\', \'(\', \'StringUtils\', \'.\', \'fuzzyMatch\', \'(\', \'"AbCdEf"\', \',\', \'"abc*"\', \')\', \')\', \';\', \'assertTrue\', \'(\', \'StringUtils\', \'.\', \'fuzzyMatch\', \'(\', \'"AbCdEf"\', \',\', \'"*def"\', \')\', \')\', \';\', \'assertTrue\', \'(\', \'StringUtils\', \'.\', \'fuzzyMatch\', \'(\', \'"AbCdEfHIJ"\', \',\', \'"abc*hij"\', \')\', \')\', \';\', \'assertFalse\', \'(\', \'StringUtils\', \'.\', \'fuzzyMatch\', \'(\', \'"123"\', \',\', \'"12345"\', \')\', \')\', \';\', \'assertFalse\', \'(\', \'StringUtils\', \'.\', \'fuzzyMatch\', \'(\', \'"AbCdEfHIJ"\', \',\', \'"abc*hhh"\', \')\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { METHOD_2 ( StringUtils . METHOD_3 ( STRING_1 , STRING_1 ) ) ; METHOD_2 ( StringUtils . METHOD_3 ( STRING_2 , STRING_3 ) ) ; METHOD_2 ( StringUtils . METHOD_3 ( STRING_2 , STRING_4 ) ) ; METHOD_2 ( StringUtils . METHOD_3 ( STRING_2 , STRING_5 ) ) ; METHOD_2 ( StringUtils . METHOD_3 ( STRING_6 , STRING_7 ) ) ; METHOD_4 ( StringUtils . METHOD_3 ( STRING_8 , STRING_1 ) ) ; METHOD_4 ( StringUtils . METHOD_3 ( STRING_6 , STRING_9 ) ) ; }', '[\'METHOD_2: assertTrue\', \'METHOD_4: assertFalse\', \'METHOD_1: testFuzzyMatching\', \'METHOD_3: fuzzyMatch\', \'STRING_4: "abc*"\', \'STRING_8: "123"\', \'STRING_5: "*def"\', \'STRING_1: "12345"\', \'STRING_7: "abc*hij"\', \'STRING_2: "AbCdEf"\', \'STRING_3: "abcdef"\', \'STRING_6: "AbCdEfHIJ"\', \'STRING_9: "abc*hhh"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/StringUtilsTest.java', 15, '142:9', '152:9', 94, 9 ), ( 5, 38, 14, '@Test\n    public void testGetRepositoryPath() throws Exception {\n    assertEquals("gitblit/gitblit.git", StringUtils.extractRepositoryPath("git://github.com/gitblit/gitblit.git", new String [] { ".*?://github.com/(.*)" }));\n    assertEquals("gitblit.git", StringUtils.extractRepositoryPath("git://github.com/gitblit/gitblit.git", new String [] { ".*?://github.com/[^/].*?/(.*)" }));\n    assertEquals("gitblit.git", StringUtils.extractRepositoryPath("git://github.com/gitblit/gitblit.git"));\n    }', '[\'public\', \'void\', \'testGetRepositoryPath\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'assertEquals\', \'(\', \'"gitblit/gitblit.git"\', \',\', \'StringUtils\', \'.\', \'extractRepositoryPath\', \'(\', \'"git:<DOUBLE_SLASH>github.com/gitblit/gitblit.git"\', \',\', \'new\', \'String\', \'[\', \']\', \'{\', \'".*?:<DOUBLE_SLASH>github.com/(.*)"\', \'}\', \')\', \')\', \';\', \'assertEquals\', \'(\', \'"gitblit.git"\', \',\', \'StringUtils\', \'.\', \'extractRepositoryPath\', \'(\', \'"git:<DOUBLE_SLASH>github.com/gitblit/gitblit.git"\', \',\', \'new\', \'String\', \'[\', \']\', \'{\', \'".*?:<DOUBLE_SLASH>github.com/[^/].*?/(.*)"\', \'}\', \')\', \')\', \';\', \'assertEquals\', \'(\', \'"gitblit.git"\', \',\', \'StringUtils\', \'.\', \'extractRepositoryPath\', \'(\', \'"git:<DOUBLE_SLASH>github.com/gitblit/gitblit.git"\', \')\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { METHOD_2 ( STRING_1 , StringUtils . METHOD_3 ( STRING_2 , new String [ ] { STRING_3 } ) ) ; METHOD_2 ( STRING_4 , StringUtils . METHOD_3 ( STRING_2 , new String [ ] { STRING_5 } ) ) ; METHOD_2 ( STRING_4 , StringUtils . METHOD_3 ( STRING_2 ) ) ; }', '[\'METHOD_1: testGetRepositoryPath\', \'METHOD_3: extractRepositoryPath\', \'METHOD_2: assertEquals\', \'STRING_4: "gitblit.git"\', \'STRING_5: ".*?:<DOUBLE_SLASH>github.com/[^/].*?/(.*)"\', \'STRING_3: ".*?:<DOUBLE_SLASH>github.com/(.*)"\', \'STRING_1: "gitblit/gitblit.git"\', \'STRING_2: "git:<DOUBLE_SLASH>github.com/gitblit/gitblit.git"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/StringUtilsTest.java', 15, '154:9', '159:9', 60, 5 ) ;

INSERT INTO method (id_repo, id_file, id_method, code, code_tokens, abstract_code, abstract_representation, repo_name, repo_url,repo_commit, file_name, num_methods, start_method, end_method, num_tokens, num_lines) VALUES ( 5, 39, 0, '@Test\n    public void testArrays() {\n    Object [] nullArray = null;\n    assertTrue(ArrayUtils.isEmpty(nullArray));\n    Object [] emptyArray = new Object[0];\n    assertTrue(ArrayUtils.isEmpty(emptyArray));\n    assertFalse(ArrayUtils.isEmpty(new String [] { "" }));\n    }', '[\'public\', \'void\', \'testArrays\', \'(\', \')\', \'{\', \'Object\', \'[\', \']\', \'nullArray\', \'=\', \'null\', \';\', \'assertTrue\', \'(\', \'ArrayUtils\', \'.\', \'isEmpty\', \'(\', \'nullArray\', \')\', \')\', \';\', \'Object\', \'[\', \']\', \'emptyArray\', \'=\', \'new\', \'Object\', \'[\', \'0\', \']\', \';\', \'assertTrue\', \'(\', \'ArrayUtils\', \'.\', \'isEmpty\', \'(\', \'emptyArray\', \')\', \')\', \';\', \'assertFalse\', \'(\', \'ArrayUtils\', \'.\', \'isEmpty\', \'(\', \'new\', \'String\', \'[\', \']\', \'{\', \'""\', \'}\', \')\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) { Object [ ] VAR_1 = null ; METHOD_2 ( TYPE_1 . isEmpty ( VAR_1 ) ) ; Object [ ] VAR_2 = new Object [ 0 ] ; METHOD_2 ( TYPE_1 . isEmpty ( VAR_2 ) ) ; METHOD_3 ( TYPE_1 . isEmpty ( new String [ ] { STRING_1 } ) ) ; }', '[\'TYPE_1: ArrayUtils\', \'METHOD_2: assertTrue\', \'METHOD_3: assertFalse\', \'METHOD_1: testArrays\', \'VAR_1: nullArray\', \'VAR_2: emptyArray\', \'STRING_1: ""\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/ArrayUtilsTest.java', 3, '33:9', '42:9', 59, 7 ), ( 5, 39, 1, '@Test\n    public void testLists() {\n    List<?> nullList = null;\n    assertTrue(ArrayUtils.isEmpty(nullList));\n    List<?> emptyList = new ArrayList<Object>();\n    assertTrue(ArrayUtils.isEmpty(emptyList));\n    List<?> list = Arrays.asList("");\n    assertFalse(ArrayUtils.isEmpty(list));\n    }', '[\'public\', \'void\', \'testLists\', \'(\', \')\', \'{\', \'List\', \'<\', \'?\', \'>\', \'nullList\', \'=\', \'null\', \';\', \'assertTrue\', \'(\', \'ArrayUtils\', \'.\', \'isEmpty\', \'(\', \'nullList\', \')\', \')\', \';\', \'List\', \'<\', \'?\', \'>\', \'emptyList\', \'=\', \'new\', \'ArrayList\', \'<\', \'Object\', \'>\', \'(\', \')\', \';\', \'assertTrue\', \'(\', \'ArrayUtils\', \'.\', \'isEmpty\', \'(\', \'emptyList\', \')\', \')\', \';\', \'List\', \'<\', \'?\', \'>\', \'list\', \'=\', \'Arrays\', \'.\', \'asList\', \'(\', \'""\', \')\', \';\', \'assertFalse\', \'(\', \'ArrayUtils\', \'.\', \'isEmpty\', \'(\', \'list\', \')\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) { List < ? > VAR_1 = null ; METHOD_2 ( TYPE_1 . isEmpty ( VAR_1 ) ) ; List < ? > VAR_2 = new ArrayList < Object > ( ) ; METHOD_2 ( TYPE_1 . isEmpty ( VAR_2 ) ) ; List < ? > list = TYPE_2 . METHOD_3 ( STRING_1 ) ; METHOD_4 ( TYPE_1 . isEmpty ( list ) ) ; }', '[\'TYPE_1: ArrayUtils\', \'TYPE_2: Arrays\', \'METHOD_2: assertTrue\', \'METHOD_4: assertFalse\', \'METHOD_1: testLists\', \'METHOD_3: asList\', \'VAR_2: emptyList\', \'VAR_1: nullList\', \'STRING_1: ""\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/ArrayUtilsTest.java', 3, '44:9', '54:9', 72, 8 ), ( 5, 39, 2, '@Test\n    public void testSets() {\n    Set<?> nullSet = null;\n    assertTrue(ArrayUtils.isEmpty(nullSet));\n    Set<?> emptySet = new HashSet<Object>();\n    assertTrue(ArrayUtils.isEmpty(emptySet));\n    Set<?> set = new HashSet<Object>(Arrays.asList(""));\n    assertFalse(ArrayUtils.isEmpty(set));\n    }', '[\'public\', \'void\', \'testSets\', \'(\', \')\', \'{\', \'Set\', \'<\', \'?\', \'>\', \'nullSet\', \'=\', \'null\', \';\', \'assertTrue\', \'(\', \'ArrayUtils\', \'.\', \'isEmpty\', \'(\', \'nullSet\', \')\', \')\', \';\', \'Set\', \'<\', \'?\', \'>\', \'emptySet\', \'=\', \'new\', \'HashSet\', \'<\', \'Object\', \'>\', \'(\', \')\', \';\', \'assertTrue\', \'(\', \'ArrayUtils\', \'.\', \'isEmpty\', \'(\', \'emptySet\', \')\', \')\', \';\', \'Set\', \'<\', \'?\', \'>\', \'set\', \'=\', \'new\', \'HashSet\', \'<\', \'Object\', \'>\', \'(\', \'Arrays\', \'.\', \'asList\', \'(\', \'""\', \')\', \')\', \';\', \'assertFalse\', \'(\', \'ArrayUtils\', \'.\', \'isEmpty\', \'(\', \'set\', \')\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) { Set < ? > VAR_1 = null ; METHOD_2 ( TYPE_1 . isEmpty ( VAR_1 ) ) ; Set < ? > VAR_2 = new TYPE_2 < Object > ( ) ; METHOD_2 ( TYPE_1 . isEmpty ( VAR_2 ) ) ; Set < ? > set = new TYPE_2 < Object > ( TYPE_3 . METHOD_3 ( STRING_1 ) ) ; METHOD_4 ( TYPE_1 . isEmpty ( set ) ) ; }', '[\'TYPE_1: ArrayUtils\', \'TYPE_3: Arrays\', \'TYPE_2: HashSet\', \'METHOD_2: assertTrue\', \'METHOD_1: testSets\', \'METHOD_4: assertFalse\', \'METHOD_3: asList\', \'VAR_2: emptySet\', \'VAR_1: nullSet\', \'STRING_1: ""\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/ArrayUtilsTest.java', 3, '56:9', '66:9', 79, 8 ), ( 5, 40, 102, '@Test\n    public void testAdminTeamInheritance() throws Exception {\n    UserModel user = new UserModel("test");\n    TeamModel team = new TeamModel("team");\n    team.canAdmin = true;\n    user.teams.add(team);\n    assertTrue("User did not inherit admin privileges", user.canAdmin());\n    }', '[\'public\', \'void\', \'testAdminTeamInheritance\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'UserModel\', \'user\', \'=\', \'new\', \'UserModel\', \'(\', \'"test"\', \')\', \';\', \'TeamModel\', \'team\', \'=\', \'new\', \'TeamModel\', \'(\', \'"team"\', \')\', \';\', \'team.canAdmin\', \'=\', \'true\', \';\', \'user.teams\', \'.\', \'add\', \'(\', \'team\', \')\', \';\', \'assertTrue\', \'(\', \'"User did not inherit admin privileges"\', \',\', \'user\', \'.\', \'canAdmin\', \'(\', \')\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( STRING_2 ) ; VAR_3 = true ; VAR_4 . add ( VAR_2 ) ; METHOD_2 ( STRING_3 , VAR_1 . METHOD_3 ( ) ) ; }', '[\'TYPE_1: UserModel\', \'TYPE_2: TeamModel\', \'METHOD_2: assertTrue\', \'METHOD_3: canAdmin\', \'METHOD_1: testAdminTeamInheritance\', \'VAR_3: team.canAdmin\', \'VAR_2: team\', \'VAR_1: user\', \'VAR_4: user.teams\', \'STRING_3: "User did not inherit admin privileges"\', \'STRING_2: "team"\', \'STRING_1: "test"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/PermissionsTest.java', 107, '2819:9', '2826:9', 53, 7 ), ( 5, 40, 103, '@Test\n    public void testForkTeamInheritance() throws Exception {\n    UserModel user = new UserModel("test");\n    TeamModel team = new TeamModel("team");\n    team.canFork = true;\n    user.teams.add(team);\n    assertTrue("User did not inherit fork privileges", user.canFork());\n    }', '[\'public\', \'void\', \'testForkTeamInheritance\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'UserModel\', \'user\', \'=\', \'new\', \'UserModel\', \'(\', \'"test"\', \')\', \';\', \'TeamModel\', \'team\', \'=\', \'new\', \'TeamModel\', \'(\', \'"team"\', \')\', \';\', \'team.canFork\', \'=\', \'true\', \';\', \'user.teams\', \'.\', \'add\', \'(\', \'team\', \')\', \';\', \'assertTrue\', \'(\', \'"User did not inherit fork privileges"\', \',\', \'user\', \'.\', \'canFork\', \'(\', \')\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( STRING_2 ) ; VAR_3 = true ; VAR_4 . add ( VAR_2 ) ; METHOD_2 ( STRING_3 , VAR_1 . METHOD_3 ( ) ) ; }', '[\'TYPE_1: UserModel\', \'TYPE_2: TeamModel\', \'METHOD_2: assertTrue\', \'METHOD_1: testForkTeamInheritance\', \'METHOD_3: canFork\', \'VAR_3: team.canFork\', \'VAR_2: team\', \'VAR_1: user\', \'VAR_4: user.teams\', \'STRING_2: "team"\', \'STRING_1: "test"\', \'STRING_3: "User did not inherit fork privileges"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/PermissionsTest.java', 107, '2828:9', '2835:9', 53, 7 ), ( 5, 40, 104, '@Test\n    public void testCreateTeamInheritance() throws Exception {\n    UserModel user = new UserModel("test");\n    TeamModel team = new TeamModel("team");\n    team.canCreate= true;\n    user.teams.add(team);\n    assertTrue("User did not inherit create privileges", user.canCreate());\n    }', '[\'public\', \'void\', \'testCreateTeamInheritance\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'UserModel\', \'user\', \'=\', \'new\', \'UserModel\', \'(\', \'"test"\', \')\', \';\', \'TeamModel\', \'team\', \'=\', \'new\', \'TeamModel\', \'(\', \'"team"\', \')\', \';\', \'team.canCreate\', \'=\', \'true\', \';\', \'user.teams\', \'.\', \'add\', \'(\', \'team\', \')\', \';\', \'assertTrue\', \'(\', \'"User did not inherit create privileges"\', \',\', \'user\', \'.\', \'canCreate\', \'(\', \')\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( STRING_2 ) ; VAR_3 = true ; VAR_4 . add ( VAR_2 ) ; METHOD_2 ( STRING_3 , VAR_1 . METHOD_3 ( ) ) ; }', '[\'TYPE_1: UserModel\', \'TYPE_2: TeamModel\', \'METHOD_2: assertTrue\', \'METHOD_1: testCreateTeamInheritance\', \'METHOD_3: canCreate\', \'VAR_3: team.canCreate\', \'VAR_2: team\', \'VAR_1: user\', \'VAR_4: user.teams\', \'STRING_3: "User did not inherit create privileges"\', \'STRING_2: "team"\', \'STRING_1: "test"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/PermissionsTest.java', 107, '2837:9', '2844:9', 53, 7 ), ( 5, 41, 0, '@BeforeClass\n    public static void createInMemoryLdapServer() throws Exception {\n    InMemoryDirectoryServerConfig config = new InMemoryDirectoryServerConfig("dc=MyDomain");\n    config.addAdditionalBindCredentials("cn=Directory Manager", "password");\n    config.setListenerConfigs(InMemoryListenerConfig.createLDAPConfig("default", ldapPort));\n    config.setSchema(null);\n    InMemoryDirectoryServer ds = new InMemoryDirectoryServer(config);\n    ds.importFromLDIF(true, new LDIFReader(LdapUserServiceTest.class.getResourceAsStream("resources/ldapUserServiceSampleData.ldif")));\n    ds.startListening();\n    }', '[\'public\', \'static\', \'void\', \'createInMemoryLdapServer\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'InMemoryDirectoryServerConfig\', \'config\', \'=\', \'new\', \'InMemoryDirectoryServerConfig\', \'(\', \'"dc=MyDomain"\', \')\', \';\', \'config\', \'.\', \'addAdditionalBindCredentials\', \'(\', \'"cn=Directory Manager"\', \',\', \'"password"\', \')\', \';\', \'config\', \'.\', \'setListenerConfigs\', \'(\', \'InMemoryListenerConfig\', \'.\', \'createLDAPConfig\', \'(\', \'"default"\', \',\', \'ldapPort\', \')\', \')\', \';\', \'config\', \'.\', \'setSchema\', \'(\', \'null\', \')\', \';\', \'InMemoryDirectoryServer\', \'ds\', \'=\', \'new\', \'InMemoryDirectoryServer\', \'(\', \'config\', \')\', \';\', \'ds\', \'.\', \'importFromLDIF\', \'(\', \'true\', \',\', \'new\', \'LDIFReader\', \'(\', \'LdapUserServiceTest.\', \'class\', \'.\', \'getResourceAsStream\', \'(\', \'"resources/ldapUserServiceSampleData.ldif"\', \')\', \')\', \')\', \';\', \'ds\', \'.\', \'startListening\', \'(\', \')\', \';\', \'}\']', 'public static void METHOD_1 ( ) throws Exception { TYPE_1 config = new TYPE_1 ( STRING_1 ) ; config . METHOD_2 ( STRING_2 , STRING_3 ) ; config . METHOD_3 ( TYPE_2 . METHOD_4 ( STRING_4 , VAR_1 ) ) ; config . METHOD_5 ( null ) ; TYPE_3 VAR_2 = new TYPE_3 ( config ) ; VAR_2 . METHOD_6 ( true , new TYPE_4 ( VAR_3 class . METHOD_7 ( STRING_5 ) ) ) ; VAR_2 . METHOD_8 ( ) ; }', '[\'TYPE_3: InMemoryDirectoryServer\', \'TYPE_4: LDIFReader\', \'TYPE_1: InMemoryDirectoryServerConfig\', \'TYPE_2: InMemoryListenerConfig\', \'METHOD_1: createInMemoryLdapServer\', \'METHOD_6: importFromLDIF\', \'METHOD_8: startListening\', \'METHOD_7: getResourceAsStream\', \'METHOD_2: addAdditionalBindCredentials\', \'METHOD_4: createLDAPConfig\', \'METHOD_5: setSchema\', \'METHOD_3: setListenerConfigs\', \'VAR_3: LdapUserServiceTest.\', \'VAR_1: ldapPort\', \'VAR_2: ds\', \'STRING_2: "cn=Directory Manager"\', \'STRING_5: "resources/ldapUserServiceSampleData.ldif"\', \'STRING_1: "dc=MyDomain"\', \'STRING_3: "password"\', \'STRING_4: "default"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/LdapUserServiceTest.java', 8, '53:9', '63:9', 84, 9 ), ( 5, 41, 4, '@Test\n    public void testDisplayName() {\n    UserModel userOneModel = ldapUserService.authenticate("UserOne", "userOnePassword".toCharArray());\n    assertNotNull(userOneModel);\n    assertEquals("User One", userOneModel.displayName);\n    // Test more complicated scenarios - concat\n    MemorySettings ms = getSettings();\n    ms.put("realm.ldap.displayName", "${personalTitle}. ${givenName} ${surname}");\n    ldapUserService = new LdapUserService();\n    ldapUserService.setup(ms);\n    userOneModel = ldapUserService.authenticate("UserOne", "userOnePassword".toCharArray());\n    assertNotNull(userOneModel);\n    assertEquals("Mr. User One", userOneModel.displayName);\n    }', '[\'public\', \'void\', \'testDisplayName\', \'(\', \')\', \'{\', \'UserModel\', \'userOneModel\', \'=\', \'ldapUserService\', \'.\', \'authenticate\', \'(\', \'"UserOne"\', \',\', \'"userOnePassword"\', \'.\', \'toCharArray\', \'(\', \')\', \')\', \';\', \'assertNotNull\', \'(\', \'userOneModel\', \')\', \';\', \'assertEquals\', \'(\', \'"User One"\', \',\', \'userOneModel.displayName\', \')\', \';\', \'MemorySettings\', \'ms\', \'=\', \'getSettings\', \'(\', \')\', \';\', \'ms\', \'.\', \'put\', \'(\', \'"realm.ldap.displayName"\', \',\', \'"${personalTitle}. ${givenName} ${surname}"\', \')\', \';\', \'ldapUserService\', \'=\', \'new\', \'LdapUserService\', \'(\', \')\', \';\', \'ldapUserService\', \'.\', \'setup\', \'(\', \'ms\', \')\', \';\', \'userOneModel\', \'=\', \'ldapUserService\', \'.\', \'authenticate\', \'(\', \'"UserOne"\', \',\', \'"userOnePassword"\', \'.\', \'toCharArray\', \'(\', \')\', \')\', \';\', \'assertNotNull\', \'(\', \'userOneModel\', \')\', \';\', \'assertEquals\', \'(\', \'"Mr. User One"\', \',\', \'userOneModel.displayName\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( STRING_1 , STRING_2 . METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( STRING_3 , VAR_3 ) ; TYPE_2 VAR_4 = METHOD_6 ( ) ; VAR_4 . put ( STRING_4 , STRING_5 ) ; VAR_2 = new TYPE_3 ( ) ; VAR_2 . METHOD_7 ( VAR_4 ) ; VAR_1 = VAR_2 . METHOD_2 ( STRING_1 , STRING_2 . METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( STRING_6 , VAR_3 ) ; }', '[\'TYPE_1: UserModel\', \'TYPE_3: LdapUserService\', \'TYPE_2: MemorySettings\', \'METHOD_3: toCharArray\', \'METHOD_2: authenticate\', \'METHOD_6: getSettings\', \'METHOD_1: testDisplayName\', \'METHOD_4: assertNotNull\', \'METHOD_7: setup\', \'METHOD_5: assertEquals\', \'VAR_2: ldapUserService\', \'VAR_3: userOneModel.displayName\', \'VAR_4: ms\', \'VAR_1: userOneModel\', \'STRING_1: "UserOne"\', \'STRING_5: "${personalTitle}. ${givenName} ${surname}"\', \'STRING_3: "User One"\', \'STRING_2: "userOnePassword"\', \'STRING_4: "realm.ldap.displayName"\', \'STRING_6: "Mr. User One"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/LdapUserServiceTest.java', 8, '116:9', '131:9', 94, 12 ), ( 5, 41, 5, '@Test\n    public void testEmail() {\n    UserModel userOneModel = ldapUserService.authenticate("UserOne", "userOnePassword".toCharArray());\n    assertNotNull(userOneModel);\n    assertEquals("userone@gitblit.com", userOneModel.emailAddress);\n    // Test more complicated scenarios - concat\n    MemorySettings ms = getSettings();\n    ms.put("realm.ldap.email", "${givenName}.${surname}@gitblit.com");\n    ldapUserService = new LdapUserService();\n    ldapUserService.setup(ms);\n    userOneModel = ldapUserService.authenticate("UserOne", "userOnePassword".toCharArray());\n    assertNotNull(userOneModel);\n    assertEquals("User.One@gitblit.com", userOneModel.emailAddress);\n    }', '[\'public\', \'void\', \'testEmail\', \'(\', \')\', \'{\', \'UserModel\', \'userOneModel\', \'=\', \'ldapUserService\', \'.\', \'authenticate\', \'(\', \'"UserOne"\', \',\', \'"userOnePassword"\', \'.\', \'toCharArray\', \'(\', \')\', \')\', \';\', \'assertNotNull\', \'(\', \'userOneModel\', \')\', \';\', \'assertEquals\', \'(\', \'"userone<AT>gitblit.com"\', \',\', \'userOneModel.emailAddress\', \')\', \';\', \'MemorySettings\', \'ms\', \'=\', \'getSettings\', \'(\', \')\', \';\', \'ms\', \'.\', \'put\', \'(\', \'"realm.ldap.email"\', \',\', \'"${givenName}.${surname}<AT>gitblit.com"\', \')\', \';\', \'ldapUserService\', \'=\', \'new\', \'LdapUserService\', \'(\', \')\', \';\', \'ldapUserService\', \'.\', \'setup\', \'(\', \'ms\', \')\', \';\', \'userOneModel\', \'=\', \'ldapUserService\', \'.\', \'authenticate\', \'(\', \'"UserOne"\', \',\', \'"userOnePassword"\', \'.\', \'toCharArray\', \'(\', \')\', \')\', \';\', \'assertNotNull\', \'(\', \'userOneModel\', \')\', \';\', \'assertEquals\', \'(\', \'"User.One<AT>gitblit.com"\', \',\', \'userOneModel.emailAddress\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( STRING_1 , STRING_2 . METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( STRING_3 , VAR_3 ) ; TYPE_2 VAR_4 = METHOD_6 ( ) ; VAR_4 . put ( STRING_4 , STRING_5 ) ; VAR_2 = new TYPE_3 ( ) ; VAR_2 . METHOD_7 ( VAR_4 ) ; VAR_1 = VAR_2 . METHOD_2 ( STRING_1 , STRING_2 . METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( STRING_6 , VAR_3 ) ; }', '[\'TYPE_1: UserModel\', \'TYPE_3: LdapUserService\', \'TYPE_2: MemorySettings\', \'METHOD_3: toCharArray\', \'METHOD_2: authenticate\', \'METHOD_6: getSettings\', \'METHOD_4: assertNotNull\', \'METHOD_7: setup\', \'METHOD_5: assertEquals\', \'METHOD_1: testEmail\', \'VAR_2: ldapUserService\', \'VAR_4: ms\', \'VAR_1: userOneModel\', \'VAR_3: userOneModel.emailAddress\', \'STRING_4: "realm.ldap.email"\', \'STRING_1: "UserOne"\', \'STRING_2: "userOnePassword"\', \'STRING_6: "User.One<AT>gitblit.com"\', \'STRING_5: "${givenName}.${surname}<AT>gitblit.com"\', \'STRING_3: "userone<AT>gitblit.com"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/LdapUserServiceTest.java', 8, '133:9', '148:9', 94, 12 ), ( 5, 41, 7, '@Test\n    public void testLocalAccount() {\n    UserModel localAccount = new UserModel("bruce");\n    localAccount.displayName = "Bruce Campbell";\n    localAccount.password = StringUtils.MD5_TYPE + StringUtils.getMD5("gimmesomesugar");\n    ldapUserService.deleteUser(localAccount.username);\n    assertTrue("Failed to add local account",\n    				ldapUserService.updateUserModel(localAccount));\n    assertEquals("Accounts are not equal!", \n    				localAccount, \n    				ldapUserService.authenticate(localAccount.username, "gimmesomesugar".toCharArray()));\n    assertTrue("Failed to delete local account!",\n    				ldapUserService.deleteUser(localAccount.username));\n    }', '[\'public\', \'void\', \'testLocalAccount\', \'(\', \')\', \'{\', \'UserModel\', \'localAccount\', \'=\', \'new\', \'UserModel\', \'(\', \'"bruce"\', \')\', \';\', \'localAccount.displayName\', \'=\', \'"Bruce Campbell"\', \';\', \'localAccount.password\', \'=\', \'StringUtils.MD5_TYPE\', \'+\', \'StringUtils\', \'.\', \'getMD5\', \'(\', \'"gimmesomesugar"\', \')\', \';\', \'ldapUserService\', \'.\', \'deleteUser\', \'(\', \'localAccount.username\', \')\', \';\', \'assertTrue\', \'(\', \'"Failed to add local account"\', \',\', \'ldapUserService\', \'.\', \'updateUserModel\', \'(\', \'localAccount\', \')\', \')\', \';\', \'assertEquals\', \'(\', \'"Accounts are not equal!"\', \',\', \'localAccount\', \',\', \'ldapUserService\', \'.\', \'authenticate\', \'(\', \'localAccount.username\', \',\', \'"gimmesomesugar"\', \'.\', \'toCharArray\', \'(\', \')\', \')\', \')\', \';\', \'assertTrue\', \'(\', \'"Failed to delete local account!"\', \',\', \'ldapUserService\', \'.\', \'deleteUser\', \'(\', \'localAccount.username\', \')\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 ) ; VAR_2 = STRING_2 ; VAR_3 = VAR_4 + StringUtils . METHOD_2 ( STRING_3 ) ; VAR_5 . METHOD_3 ( VAR_6 ) ; METHOD_4 ( STRING_4 , VAR_5 . METHOD_5 ( VAR_1 ) ) ; METHOD_6 ( STRING_5 , VAR_1 , VAR_5 . METHOD_7 ( VAR_6 , STRING_3 . METHOD_8 ( ) ) ) ; METHOD_4 ( STRING_6 , VAR_5 . METHOD_3 ( VAR_6 ) ) ; }', '[\'TYPE_1: UserModel\', \'METHOD_2: getMD5\', \'METHOD_5: updateUserModel\', \'METHOD_8: toCharArray\', \'METHOD_7: authenticate\', \'METHOD_1: testLocalAccount\', \'METHOD_4: assertTrue\', \'METHOD_3: deleteUser\', \'METHOD_6: assertEquals\', \'VAR_6: localAccount.username\', \'VAR_5: ldapUserService\', \'VAR_2: localAccount.displayName\', \'VAR_3: localAccount.password\', \'VAR_4: StringUtils.MD5_TYPE\', \'VAR_1: localAccount\', \'STRING_2: "Bruce Campbell"\', \'STRING_6: "Failed to delete local account!"\', \'STRING_3: "gimmesomesugar"\', \'STRING_1: "bruce"\', \'STRING_5: "Accounts are not equal!"\', \'STRING_4: "Failed to add local account"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/LdapUserServiceTest.java', 8, '159:9', '172:9', 94, 13 ), ( 5, 43, 3, '@Test\n    public void testJsonRepositories() throws Exception {\n    String requrl = FederationUtils.asLink(url, token, FederationRequest.PULL_REPOSITORIES);\n    String json = JsonUtils.retrieveJsonString(requrl, null, null);\n    assertNotNull(json);\n    }', '[\'public\', \'void\', \'testJsonRepositories\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'String\', \'requrl\', \'=\', \'FederationUtils\', \'.\', \'asLink\', \'(\', \'url\', \',\', \'token\', \',\', \'FederationRequest.PULL_REPOSITORIES\', \')\', \';\', \'String\', \'json\', \'=\', \'JsonUtils\', \'.\', \'retrieveJsonString\', \'(\', \'requrl\', \',\', \'null\', \',\', \'null\', \')\', \';\', \'assertNotNull\', \'(\', \'json\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { String VAR_1 = TYPE_1 . METHOD_2 ( url , token , VAR_2 ) ; String json = TYPE_2 . METHOD_3 ( VAR_1 , null , null ) ; METHOD_4 ( json ) ; }', '[\'TYPE_1: FederationUtils\', \'TYPE_2: JsonUtils\', \'METHOD_2: asLink\', \'METHOD_3: retrieveJsonString\', \'METHOD_4: assertNotNull\', \'METHOD_1: testJsonRepositories\', \'VAR_2: FederationRequest.PULL_REPOSITORIES\', \'VAR_1: requrl\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/FederationTests.java', 11, '90:9', '95:9', 45, 5 ), ( 5, 43, 4, '@Test\n    public void testJsonUsers() throws Exception {\n    String requrl = FederationUtils.asLink(url, token, FederationRequest.PULL_USERS);\n    String json = JsonUtils.retrieveJsonString(requrl, null, null);\n    assertNotNull(json);\n    }', '[\'public\', \'void\', \'testJsonUsers\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'String\', \'requrl\', \'=\', \'FederationUtils\', \'.\', \'asLink\', \'(\', \'url\', \',\', \'token\', \',\', \'FederationRequest.PULL_USERS\', \')\', \';\', \'String\', \'json\', \'=\', \'JsonUtils\', \'.\', \'retrieveJsonString\', \'(\', \'requrl\', \',\', \'null\', \',\', \'null\', \')\', \';\', \'assertNotNull\', \'(\', \'json\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { String VAR_1 = TYPE_1 . METHOD_2 ( url , token , VAR_2 ) ; String json = TYPE_2 . METHOD_3 ( VAR_1 , null , null ) ; METHOD_4 ( json ) ; }', '[\'TYPE_1: FederationUtils\', \'TYPE_2: JsonUtils\', \'METHOD_2: asLink\', \'METHOD_3: retrieveJsonString\', \'METHOD_4: assertNotNull\', \'METHOD_1: testJsonUsers\', \'VAR_2: FederationRequest.PULL_USERS\', \'VAR_1: requrl\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/FederationTests.java', 11, '97:9', '102:9', 45, 5 ), ( 5, 43, 5, '@Test\n    public void testJsonTeams() throws Exception {\n    String requrl = FederationUtils.asLink(url, token, FederationRequest.PULL_TEAMS);\n    String json = JsonUtils.retrieveJsonString(requrl, null, null);\n    assertNotNull(json);\n    }', '[\'public\', \'void\', \'testJsonTeams\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'String\', \'requrl\', \'=\', \'FederationUtils\', \'.\', \'asLink\', \'(\', \'url\', \',\', \'token\', \',\', \'FederationRequest.PULL_TEAMS\', \')\', \';\', \'String\', \'json\', \'=\', \'JsonUtils\', \'.\', \'retrieveJsonString\', \'(\', \'requrl\', \',\', \'null\', \',\', \'null\', \')\', \';\', \'assertNotNull\', \'(\', \'json\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { String VAR_1 = TYPE_1 . METHOD_2 ( url , token , VAR_2 ) ; String json = TYPE_2 . METHOD_3 ( VAR_1 , null , null ) ; METHOD_4 ( json ) ; }', '[\'TYPE_1: FederationUtils\', \'TYPE_2: JsonUtils\', \'METHOD_2: asLink\', \'METHOD_1: testJsonTeams\', \'METHOD_3: retrieveJsonString\', \'METHOD_4: assertNotNull\', \'VAR_2: FederationRequest.PULL_TEAMS\', \'VAR_1: requrl\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/FederationTests.java', 11, '104:9', '109:9', 45, 5 ), ( 5, 43, 6, 'private FederationModel getRegistration() {\n    FederationModel model = new FederationModel("localhost");\n    model.url = this.url;\n    model.token = this.token;\n    return model;\n    }', '[\'private\', \'FederationModel\', \'getRegistration\', \'(\', \')\', \'{\', \'FederationModel\', \'model\', \'=\', \'new\', \'FederationModel\', \'(\', \'"localhost"\', \')\', \';\', \'model\', \'.\', \'url\', \'=\', \'this\', \'.\', \'url\', \';\', \'model\', \'.\', \'token\', \'=\', \'this\', \'.\', \'token\', \';\', \'return\', \'model\', \';\', \'}\']', 'private TYPE_1 METHOD_1 ( ) { TYPE_1 model = new TYPE_1 ( STRING_1 ) ; model . url = this . url ; model . token = this . token ; return model ; }', '[\'TYPE_1: FederationModel\', \'METHOD_1: getRegistration\', \'STRING_1: "localhost"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/FederationTests.java', 11, '111:9', '116:9', 34, 5 ), ( 5, 43, 7, '@Test\n    public void testPullRepositories() throws Exception {\n    Map<String, RepositoryModel> repos = FederationUtils.getRepositories(getRegistration(),\n    				false);\n    assertNotNull(repos);\n    assertTrue(repos.size() > 0);\n    }', '[\'public\', \'void\', \'testPullRepositories\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'Map\', \'<\', \'String\', \',\', \'RepositoryModel\', \'>\', \'repos\', \'=\', \'FederationUtils\', \'.\', \'getRepositories\', \'(\', \'getRegistration\', \'(\', \')\', \',\', \'false\', \')\', \';\', \'assertNotNull\', \'(\', \'repos\', \')\', \';\', \'assertTrue\', \'(\', \'repos\', \'.\', \'size\', \'(\', \')\', \'>\', \'0\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { Map < String , TYPE_1 > VAR_1 = TYPE_2 . METHOD_2 ( METHOD_3 ( ) , false ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( VAR_1 . size ( ) > 0 ) ; }', '[\'TYPE_2: FederationUtils\', \'TYPE_1: RepositoryModel\', \'METHOD_2: getRepositories\', \'METHOD_1: testPullRepositories\', \'METHOD_5: assertTrue\', \'METHOD_4: assertNotNull\', \'METHOD_3: getRegistration\', \'VAR_1: repos\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/FederationTests.java', 11, '118:9', '124:9', 43, 6 ), ( 5, 43, 9, '@Test\n    public void testPullTeams() throws Exception {\n    List<TeamModel> teams = FederationUtils.getTeams(getRegistration());\n    assertNotNull(teams);\n    assertTrue(teams.size() > 0);\n    }', '[\'public\', \'void\', \'testPullTeams\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'List\', \'<\', \'TeamModel\', \'>\', \'teams\', \'=\', \'FederationUtils\', \'.\', \'getTeams\', \'(\', \'getRegistration\', \'(\', \')\', \')\', \';\', \'assertNotNull\', \'(\', \'teams\', \')\', \';\', \'assertTrue\', \'(\', \'teams\', \'.\', \'size\', \'(\', \')\', \'>\', \'0\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { List < TYPE_1 > VAR_1 = TYPE_2 . METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( VAR_1 . size ( ) > 0 ) ; }', '[\'TYPE_1: TeamModel\', \'TYPE_2: FederationUtils\', \'METHOD_5: assertTrue\', \'METHOD_4: assertNotNull\', \'METHOD_3: getRegistration\', \'METHOD_1: testPullTeams\', \'METHOD_2: getTeams\', \'VAR_1: teams\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/FederationTests.java', 11, '153:9', '158:9', 39, 5 ), ( 5, 43, 10, '@Test\n    public void testPullScripts() throws Exception {\n    Map<String, String> scripts = FederationUtils.getScripts(getRegistration());\n    assertNotNull(scripts);\n    assertTrue(scripts.keySet().contains("sendmail"));\n    }', '[\'public\', \'void\', \'testPullScripts\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'Map\', \'<\', \'String\', \',\', \'String\', \'>\', \'scripts\', \'=\', \'FederationUtils\', \'.\', \'getScripts\', \'(\', \'getRegistration\', \'(\', \')\', \')\', \';\', \'assertNotNull\', \'(\', \'scripts\', \')\', \';\', \'assertTrue\', \'(\', \'scripts\', \'.\', \'keySet\', \'(\', \')\', \'.\', \'contains\', \'(\', \'"sendmail"\', \')\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { Map < String , String > VAR_1 = TYPE_1 . METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( VAR_1 . METHOD_6 ( ) . contains ( STRING_1 ) ) ; }', '[\'TYPE_1: FederationUtils\', \'METHOD_2: getScripts\', \'METHOD_5: assertTrue\', \'METHOD_4: assertNotNull\', \'METHOD_3: getRegistration\', \'METHOD_1: testPullScripts\', \'METHOD_6: keySet\', \'VAR_1: scripts\', \'STRING_1: "sendmail"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/FederationTests.java', 11, '160:9', '165:9', 44, 5 ), ( 5, 44, 0, '@Test\n    public void testFileUserService() throws IOException {\n    File file = new File("us-test.properties");\n    file.delete();\n    IUserService service = new FileUserService(file);\n    testUsers(service);\n    testTeams(service);\n    file.delete();\n    }', '[\'public\', \'void\', \'testFileUserService\', \'(\', \')\', \'throws\', \'IOException\', \'{\', \'File\', \'file\', \'=\', \'new\', \'File\', \'(\', \'"us-test.properties"\', \')\', \';\', \'file\', \'.\', \'delete\', \'(\', \')\', \';\', \'IUserService\', \'service\', \'=\', \'new\', \'FileUserService\', \'(\', \'file\', \')\', \';\', \'testUsers\', \'(\', \'service\', \')\', \';\', \'testTeams\', \'(\', \'service\', \')\', \';\', \'file\', \'.\', \'delete\', \'(\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws IOException { File file = new File ( STRING_1 ) ; file . METHOD_2 ( ) ; TYPE_1 VAR_1 = new TYPE_2 ( file ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( VAR_1 ) ; file . METHOD_2 ( ) ; }', '[\'TYPE_1: IUserService\', \'TYPE_2: FileUserService\', \'METHOD_1: testFileUserService\', \'METHOD_4: testTeams\', \'METHOD_2: delete\', \'METHOD_3: testUsers\', \'VAR_1: service\', \'STRING_1: "us-test.properties"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/UserServiceTest.java', 4, '37:9', '45:9', 48, 8 ), ( 5, 44, 1, '@Test\n    public void testConfigUserService() throws IOException {\n    File file = new File("us-test.conf");\n    file.delete();\n    IUserService service = new ConfigUserService(file);\n    testUsers(service);\n    testTeams(service);\n    file.delete();\n    }', '[\'public\', \'void\', \'testConfigUserService\', \'(\', \')\', \'throws\', \'IOException\', \'{\', \'File\', \'file\', \'=\', \'new\', \'File\', \'(\', \'"us-test.conf"\', \')\', \';\', \'file\', \'.\', \'delete\', \'(\', \')\', \';\', \'IUserService\', \'service\', \'=\', \'new\', \'ConfigUserService\', \'(\', \'file\', \')\', \';\', \'testUsers\', \'(\', \'service\', \')\', \';\', \'testTeams\', \'(\', \'service\', \')\', \';\', \'file\', \'.\', \'delete\', \'(\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws IOException { File file = new File ( STRING_1 ) ; file . METHOD_2 ( ) ; TYPE_1 VAR_1 = new TYPE_2 ( file ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( VAR_1 ) ; file . METHOD_2 ( ) ; }', '[\'TYPE_1: IUserService\', \'TYPE_2: ConfigUserService\', \'METHOD_4: testTeams\', \'METHOD_1: testConfigUserService\', \'METHOD_2: delete\', \'METHOD_3: testUsers\', \'VAR_1: service\', \'STRING_1: "us-test.conf"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/UserServiceTest.java', 4, '47:9', '55:9', 48, 8 ), ( 5, 45, 0, '@Test\n    public void testGitDaemonStop() throws Exception {\n    GitDaemon daemon = new GitDaemon("localhost", GitDaemon.DEFAULT_PORT + 1, GitBlitSuite.REPOSITORIES);\n    daemon.setTimeout(5);\n    daemon.start();\n    Thread.sleep(5000);\n    daemon.stop();\n    }', '[\'public\', \'void\', \'testGitDaemonStop\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'GitDaemon\', \'daemon\', \'=\', \'new\', \'GitDaemon\', \'(\', \'"localhost"\', \',\', \'GitDaemon.DEFAULT_PORT\', \'+\', \'1\', \',\', \'GitBlitSuite.REPOSITORIES\', \')\', \';\', \'daemon\', \'.\', \'setTimeout\', \'(\', \'5\', \')\', \';\', \'daemon\', \'.\', \'start\', \'(\', \')\', \';\', \'Thread\', \'.\', \'sleep\', \'(\', \'5000\', \')\', \';\', \'daemon\', \'.\', \'stop\', \'(\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 , VAR_2 + 1 , VAR_3 ) ; VAR_1 . METHOD_2 ( INT_1 ) ; VAR_1 . start ( ) ; TYPE_2 . METHOD_3 ( INT_2 ) ; VAR_1 . METHOD_4 ( ) ; }', '[\'TYPE_1: GitDaemon\', \'TYPE_2: Thread\', \'METHOD_3: sleep\', \'METHOD_1: testGitDaemonStop\', \'METHOD_2: setTimeout\', \'METHOD_4: stop\', \'VAR_3: GitBlitSuite.REPOSITORIES\', \'VAR_2: GitDaemon.DEFAULT_PORT\', \'VAR_1: daemon\', \'INT_2: 5000\', \'INT_1: 5\', \'STRING_1: "localhost"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/GitDaemonStopTest.java', 1, '25:9', '32:9', 53, 7 ), ( 5, 46, 6, '@Test\n    public void testFrequency() {\n    assertEquals(5, TimeUtils.convertFrequencyToMinutes("2 mins"));\n    assertEquals(10, TimeUtils.convertFrequencyToMinutes("10 mins"));\n    assertEquals(600, TimeUtils.convertFrequencyToMinutes("10 hours"));\n    assertEquals(14400, TimeUtils.convertFrequencyToMinutes(" 10 days "));\n    }', '[\'public\', \'void\', \'testFrequency\', \'(\', \')\', \'{\', \'assertEquals\', \'(\', \'5\', \',\', \'TimeUtils\', \'.\', \'convertFrequencyToMinutes\', \'(\', \'"2 mins"\', \')\', \')\', \';\', \'assertEquals\', \'(\', \'10\', \',\', \'TimeUtils\', \'.\', \'convertFrequencyToMinutes\', \'(\', \'"10 mins"\', \')\', \')\', \';\', \'assertEquals\', \'(\', \'600\', \',\', \'TimeUtils\', \'.\', \'convertFrequencyToMinutes\', \'(\', \'"10 hours"\', \')\', \')\', \';\', \'assertEquals\', \'(\', \'14400\', \',\', \'TimeUtils\', \'.\', \'convertFrequencyToMinutes\', \'(\', \'" 10 days "\', \')\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) { METHOD_2 ( INT_1 , TYPE_1 . METHOD_3 ( STRING_1 ) ) ; METHOD_2 ( INT_2 , TYPE_1 . METHOD_3 ( STRING_2 ) ) ; METHOD_2 ( INT_3 , TYPE_1 . METHOD_3 ( STRING_3 ) ) ; METHOD_2 ( INT_4 , TYPE_1 . METHOD_3 ( STRING_4 ) ) ; }', '[\'TYPE_1: TimeUtils\', \'METHOD_1: testFrequency\', \'METHOD_2: assertEquals\', \'METHOD_3: convertFrequencyToMinutes\', \'INT_1: 5\', \'INT_3: 600\', \'INT_4: 14400\', \'INT_2: 10\', \'STRING_2: "10 mins"\', \'STRING_3: "10 hours"\', \'STRING_4: " 10 days "\', \'STRING_1: "2 mins"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/TimeUtilsTest.java', 7, '104:9', '110:9', 56, 6 ), ( 5, 47, 3, '@Test\n    public void testListRepositories() throws IOException {\n    Map<String, RepositoryModel> map = RpcUtils.getRepositories(url, null, null);\n    assertNotNull("Repository list is null!", map);\n    assertTrue("Repository list is empty!", map.size() > 0);\n    }', '[\'public\', \'void\', \'testListRepositories\', \'(\', \')\', \'throws\', \'IOException\', \'{\', \'Map\', \'<\', \'String\', \',\', \'RepositoryModel\', \'>\', \'map\', \'=\', \'RpcUtils\', \'.\', \'getRepositories\', \'(\', \'url\', \',\', \'null\', \',\', \'null\', \')\', \';\', \'assertNotNull\', \'(\', \'"Repository list is null!"\', \',\', \'map\', \')\', \';\', \'assertTrue\', \'(\', \'"Repository list is empty!"\', \',\', \'map\', \'.\', \'size\', \'(\', \')\', \'>\', \'0\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws IOException { Map < String , TYPE_1 > map = TYPE_2 . METHOD_2 ( url , null , null ) ; METHOD_3 ( STRING_1 , map ) ; METHOD_4 ( STRING_2 , map . size ( ) > 0 ) ; }', '[\'TYPE_2: RpcUtils\', \'TYPE_1: RepositoryModel\', \'METHOD_2: getRepositories\', \'METHOD_4: assertTrue\', \'METHOD_3: assertNotNull\', \'METHOD_1: testListRepositories\', \'STRING_2: "Repository list is empty!"\', \'STRING_1: "Repository list is null!"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/RpcTests.java', 19, '86:9', '91:9', 48, 5 ), ( 5, 47, 4, '@Test\n    public void testListUsers() throws IOException {\n    List<UserModel> list = null;\n    try {\n    list = RpcUtils.getUsers(url, null, null);\n    } catch (UnauthorizedException e) {\n    }\n    assertNull("Server allows anyone to admin!", list);\n    list = RpcUtils.getUsers(url, "admin", "admin".toCharArray());\n    assertTrue("User list is empty!", list.size() > 0);\n    }', '[\'public\', \'void\', \'testListUsers\', \'(\', \')\', \'throws\', \'IOException\', \'{\', \'List\', \'<\', \'UserModel\', \'>\', \'list\', \'=\', \'null\', \';\', \'try\', \'{\', \'list\', \'=\', \'RpcUtils\', \'.\', \'getUsers\', \'(\', \'url\', \',\', \'null\', \',\', \'null\', \')\', \';\', \'}\', \'catch\', \'(\', \'UnauthorizedException\', \'e\', \')\', \'{\', \'}\', \'assertNull\', \'(\', \'"Server allows anyone to admin!"\', \',\', \'list\', \')\', \';\', \'list\', \'=\', \'RpcUtils\', \'.\', \'getUsers\', \'(\', \'url\', \',\', \'"admin"\', \',\', \'"admin"\', \'.\', \'toCharArray\', \'(\', \')\', \')\', \';\', \'assertTrue\', \'(\', \'"User list is empty!"\', \',\', \'list\', \'.\', \'size\', \'(\', \')\', \'>\', \'0\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws IOException { List < TYPE_1 > list = null ; try { list = TYPE_2 . METHOD_2 ( url , null , null ) ; } catch ( TYPE_3 e ) { } METHOD_3 ( STRING_1 , list ) ; list = TYPE_2 . METHOD_2 ( url , STRING_2 , STRING_2 . METHOD_4 ( ) ) ; METHOD_5 ( STRING_3 , list . size ( ) > 0 ) ; }', '[\'TYPE_1: UserModel\', \'TYPE_2: RpcUtils\', \'TYPE_3: UnauthorizedException\', \'METHOD_4: toCharArray\', \'METHOD_3: assertNull\', \'METHOD_5: assertTrue\', \'METHOD_2: getUsers\', \'METHOD_1: testListUsers\', \'STRING_2: "admin"\', \'STRING_1: "Server allows anyone to admin!"\', \'STRING_3: "User list is empty!"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/RpcTests.java', 19, '93:9', '104:9', 76, 9 ), ( 5, 47, 5, '@Test\n    public void testListTeams() throws IOException {\n    List<TeamModel> list = null;\n    try {\n    list = RpcUtils.getTeams(url, null, null);\n    } catch (UnauthorizedException e) {\n    }\n    assertNull("Server allows anyone to admin!", list);\n    list = RpcUtils.getTeams(url, "admin", "admin".toCharArray());\n    assertTrue("Team list is empty!", list.size() > 0);\n    assertEquals("admins", list.get(0).name);\n    }', '[\'public\', \'void\', \'testListTeams\', \'(\', \')\', \'throws\', \'IOException\', \'{\', \'List\', \'<\', \'TeamModel\', \'>\', \'list\', \'=\', \'null\', \';\', \'try\', \'{\', \'list\', \'=\', \'RpcUtils\', \'.\', \'getTeams\', \'(\', \'url\', \',\', \'null\', \',\', \'null\', \')\', \';\', \'}\', \'catch\', \'(\', \'UnauthorizedException\', \'e\', \')\', \'{\', \'}\', \'assertNull\', \'(\', \'"Server allows anyone to admin!"\', \',\', \'list\', \')\', \';\', \'list\', \'=\', \'RpcUtils\', \'.\', \'getTeams\', \'(\', \'url\', \',\', \'"admin"\', \',\', \'"admin"\', \'.\', \'toCharArray\', \'(\', \')\', \')\', \';\', \'assertTrue\', \'(\', \'"Team list is empty!"\', \',\', \'list\', \'.\', \'size\', \'(\', \')\', \'>\', \'0\', \')\', \';\', \'assertEquals\', \'(\', \'"admins"\', \',\', \'list\', \'.\', \'get\', \'(\', \'0\', \')\', \'.\', \'name\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws IOException { List < TYPE_1 > list = null ; try { list = TYPE_2 . METHOD_2 ( url , null , null ) ; } catch ( TYPE_3 e ) { } METHOD_3 ( STRING_1 , list ) ; list = TYPE_2 . METHOD_2 ( url , STRING_2 , STRING_2 . METHOD_4 ( ) ) ; METHOD_5 ( STRING_3 , list . size ( ) > 0 ) ; METHOD_6 ( STRING_4 , list . get ( 0 ) . name ) ; }', '[\'TYPE_2: RpcUtils\', \'TYPE_1: TeamModel\', \'TYPE_3: UnauthorizedException\', \'METHOD_4: toCharArray\', \'METHOD_3: assertNull\', \'METHOD_1: testListTeams\', \'METHOD_5: assertTrue\', \'METHOD_6: assertEquals\', \'METHOD_2: getTeams\', \'STRING_3: "Team list is empty!"\', \'STRING_4: "admins"\', \'STRING_2: "admin"\', \'STRING_1: "Server allows anyone to admin!"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/RpcTests.java', 19, '106:9', '118:9', 90, 10 ), ( 5, 47, 7, 'private UserModel findUser(String name) throws IOException {\n    List<UserModel> users = RpcUtils.getUsers(url, account, password.toCharArray());\n    UserModel retrievedUser = null;\n    for (UserModel model : users) {\n    if (model.username.equalsIgnoreCase(name)) {\n    retrievedUser = model;\n    break;\n    }\n    }\n    return retrievedUser;\n    }', '[\'private\', \'UserModel\', \'findUser\', \'(\', \'String\', \'name\', \')\', \'throws\', \'IOException\', \'{\', \'List\', \'<\', \'UserModel\', \'>\', \'users\', \'=\', \'RpcUtils\', \'.\', \'getUsers\', \'(\', \'url\', \',\', \'account\', \',\', \'password\', \'.\', \'toCharArray\', \'(\', \')\', \')\', \';\', \'UserModel\', \'retrievedUser\', \'=\', \'null\', \';\', \'for\', \'(\', \'UserModel\', \'model\', \':\', \'users\', \')\', \'{\', \'if\', \'(\', \'model.username\', \'.\', \'equalsIgnoreCase\', \'(\', \'name\', \')\', \')\', \'{\', \'retrievedUser\', \'=\', \'model\', \';\', \'break\', \';\', \'}\', \'}\', \'return\', \'retrievedUser\', \';\', \'}\']', 'private TYPE_1 METHOD_1 ( String name ) throws IOException { List < TYPE_1 > VAR_1 = TYPE_2 . METHOD_2 ( url , VAR_2 , VAR_3 . METHOD_3 ( ) ) ; TYPE_1 VAR_4 = null ; for ( TYPE_1 model : VAR_1 ) { if ( VAR_5 . METHOD_4 ( name ) ) { VAR_4 = model ; break ; } } return VAR_4 ; }', '[\'TYPE_1: UserModel\', \'TYPE_2: RpcUtils\', \'METHOD_1: findUser\', \'METHOD_3: toCharArray\', \'METHOD_2: getUsers\', \'METHOD_4: equalsIgnoreCase\', \'VAR_3: password\', \'VAR_5: model.username\', \'VAR_4: retrievedUser\', \'VAR_1: users\', \'VAR_2: account\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/RpcTests.java', 19, '153:9', '163:9', 66, 8 ), ( 5, 47, 9, 'private RepositoryModel findRepository(String name) throws IOException {\n    Map<String, RepositoryModel> repositories = RpcUtils.getRepositories(url, account,\n    				password.toCharArray());\n    RepositoryModel retrievedRepository = null;\n    for (RepositoryModel model : repositories.values()) {\n    if (model.name.equalsIgnoreCase(name)) {\n    retrievedRepository = model;\n    break;\n    }\n    }\n    return retrievedRepository;\n    }', '[\'private\', \'RepositoryModel\', \'findRepository\', \'(\', \'String\', \'name\', \')\', \'throws\', \'IOException\', \'{\', \'Map\', \'<\', \'String\', \',\', \'RepositoryModel\', \'>\', \'repositories\', \'=\', \'RpcUtils\', \'.\', \'getRepositories\', \'(\', \'url\', \',\', \'account\', \',\', \'password\', \'.\', \'toCharArray\', \'(\', \')\', \')\', \';\', \'RepositoryModel\', \'retrievedRepository\', \'=\', \'null\', \';\', \'for\', \'(\', \'RepositoryModel\', \'model\', \':\', \'repositories\', \'.\', \'values\', \'(\', \')\', \')\', \'{\', \'if\', \'(\', \'model.name\', \'.\', \'equalsIgnoreCase\', \'(\', \'name\', \')\', \')\', \'{\', \'retrievedRepository\', \'=\', \'model\', \';\', \'break\', \';\', \'}\', \'}\', \'return\', \'retrievedRepository\', \';\', \'}\']', 'private TYPE_1 METHOD_1 ( String name ) throws IOException { Map < String , TYPE_1 > VAR_1 = TYPE_2 . METHOD_2 ( url , VAR_2 , VAR_3 . METHOD_3 ( ) ) ; TYPE_1 VAR_4 = null ; for ( TYPE_1 model : VAR_1 . values ( ) ) { if ( VAR_5 . METHOD_4 ( name ) ) { VAR_4 = model ; break ; } } return VAR_4 ; }', '[\'TYPE_2: RpcUtils\', \'TYPE_1: RepositoryModel\', \'METHOD_2: getRepositories\', \'METHOD_3: toCharArray\', \'METHOD_1: findRepository\', \'METHOD_4: equalsIgnoreCase\', \'VAR_3: password\', \'VAR_5: model.name\', \'VAR_1: repositories\', \'VAR_4: retrievedRepository\', \'VAR_2: account\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/RpcTests.java', 19, '235:9', '246:9', 71, 9 ), ( 5, 47, 11, '@Test\n    public void testFederationRegistrations() throws Exception {\n    List<FederationModel> registrations = RpcUtils.getFederationRegistrations(url, account,\n    				password.toCharArray());\n    assertTrue("No federation registrations were retrieved!", registrations.size() >= 0);\n    }', '[\'public\', \'void\', \'testFederationRegistrations\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'List\', \'<\', \'FederationModel\', \'>\', \'registrations\', \'=\', \'RpcUtils\', \'.\', \'getFederationRegistrations\', \'(\', \'url\', \',\', \'account\', \',\', \'password\', \'.\', \'toCharArray\', \'(\', \')\', \')\', \';\', \'assertTrue\', \'(\', \'"No federation registrations were retrieved!"\', \',\', \'registrations\', \'.\', \'size\', \'(\', \')\', \'>=\', \'0\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { List < TYPE_1 > VAR_1 = TYPE_2 . METHOD_2 ( url , VAR_2 , VAR_3 . METHOD_3 ( ) ) ; METHOD_4 ( STRING_1 , VAR_1 . size ( ) >= 0 ) ; }', '[\'TYPE_1: FederationModel\', \'TYPE_2: RpcUtils\', \'METHOD_1: testFederationRegistrations\', \'METHOD_3: toCharArray\', \'METHOD_4: assertTrue\', \'METHOD_2: getFederationRegistrations\', \'VAR_3: password\', \'VAR_1: registrations\', \'VAR_2: account\', \'STRING_1: "No federation registrations were retrieved!"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/RpcTests.java', 19, '307:9', '312:9', 42, 5 ), ( 5, 47, 12, '@Test\n    public void testFederationResultRegistrations() throws Exception {\n    List<FederationModel> registrations = RpcUtils.getFederationResultRegistrations(url,\n    				account, password.toCharArray());\n    assertTrue("No federation result registrations were retrieved!", registrations.size() >= 0);\n    }', '[\'public\', \'void\', \'testFederationResultRegistrations\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'List\', \'<\', \'FederationModel\', \'>\', \'registrations\', \'=\', \'RpcUtils\', \'.\', \'getFederationResultRegistrations\', \'(\', \'url\', \',\', \'account\', \',\', \'password\', \'.\', \'toCharArray\', \'(\', \')\', \')\', \';\', \'assertTrue\', \'(\', \'"No federation result registrations were retrieved!"\', \',\', \'registrations\', \'.\', \'size\', \'(\', \')\', \'>=\', \'0\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { List < TYPE_1 > VAR_1 = TYPE_2 . METHOD_2 ( url , VAR_2 , VAR_3 . METHOD_3 ( ) ) ; METHOD_4 ( STRING_1 , VAR_1 . size ( ) >= 0 ) ; }', '[\'TYPE_1: FederationModel\', \'TYPE_2: RpcUtils\', \'METHOD_3: toCharArray\', \'METHOD_4: assertTrue\', \'METHOD_1: testFederationResultRegistrations\', \'METHOD_2: getFederationResultRegistrations\', \'VAR_3: password\', \'VAR_1: registrations\', \'VAR_2: account\', \'STRING_1: "No federation result registrations were retrieved!"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/RpcTests.java', 19, '314:9', '319:9', 42, 5 ), ( 5, 47, 13, '@Test\n    public void testFederationProposals() throws Exception {\n    List<FederationProposal> proposals = RpcUtils.getFederationProposals(url, account,\n    				password.toCharArray());\n    assertTrue("No federation proposals were retrieved!", proposals.size() >= 0);\n    }', '[\'public\', \'void\', \'testFederationProposals\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'List\', \'<\', \'FederationProposal\', \'>\', \'proposals\', \'=\', \'RpcUtils\', \'.\', \'getFederationProposals\', \'(\', \'url\', \',\', \'account\', \',\', \'password\', \'.\', \'toCharArray\', \'(\', \')\', \')\', \';\', \'assertTrue\', \'(\', \'"No federation proposals were retrieved!"\', \',\', \'proposals\', \'.\', \'size\', \'(\', \')\', \'>=\', \'0\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { List < TYPE_1 > VAR_1 = TYPE_2 . METHOD_2 ( url , VAR_2 , VAR_3 . METHOD_3 ( ) ) ; METHOD_4 ( STRING_1 , VAR_1 . size ( ) >= 0 ) ; }', '[\'TYPE_2: RpcUtils\', \'TYPE_1: FederationProposal\', \'METHOD_3: toCharArray\', \'METHOD_4: assertTrue\', \'METHOD_1: testFederationProposals\', \'METHOD_2: getFederationProposals\', \'VAR_3: password\', \'VAR_1: proposals\', \'VAR_2: account\', \'STRING_1: "No federation proposals were retrieved!"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/RpcTests.java', 19, '321:9', '326:9', 42, 5 ), ( 5, 47, 18, '@Test\n    public void testBranches() throws Exception {\n    Map<String, Collection<String>> branches = RpcUtils.getBranches(url, account,\n    				password.toCharArray());\n    assertNotNull(branches);\n    assertTrue(branches.size() > 0);\n    }', '[\'public\', \'void\', \'testBranches\', \'(\', \')\', \'throws\', \'Exception\', \'{\', \'Map\', \'<\', \'String\', \',\', \'Collection\', \'<\', \'String\', \'>\', \'>\', \'branches\', \'=\', \'RpcUtils\', \'.\', \'getBranches\', \'(\', \'url\', \',\', \'account\', \',\', \'password\', \'.\', \'toCharArray\', \'(\', \')\', \')\', \';\', \'assertNotNull\', \'(\', \'branches\', \')\', \';\', \'assertTrue\', \'(\', \'branches\', \'.\', \'size\', \'(\', \')\', \'>\', \'0\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) throws Exception { Map < String , Collection < String > > VAR_1 = TYPE_1 . METHOD_2 ( url , VAR_2 , VAR_3 . METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( VAR_1 . size ( ) > 0 ) ; }', '[\'TYPE_1: RpcUtils\', \'METHOD_2: getBranches\', \'METHOD_1: testBranches\', \'METHOD_3: toCharArray\', \'METHOD_5: assertTrue\', \'METHOD_4: assertNotNull\', \'VAR_3: password\', \'VAR_1: branches\', \'VAR_2: account\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/test/java/com/gitblit/tests/RpcTests.java', 19, '375:9', '381:9', 50, 6 ), ( 5, 49, 0, '@Override\n    protected TrustManager[] getTrustManagers(KeyStore trustStore, Collection<? extends CRL> crls)\n    throws Exception {\n    TrustManager[] managers = super.getTrustManagers(trustStore, crls);\n    X509TrustManager delegate = (X509TrustManager) managers[0];\n    GitblitTrustManager root = new GitblitTrustManager(delegate, caRevocationList);\n    // replace first manager with the GitblitTrustManager\n    managers[0] = root;\n    return managers;\n    }', '[\'protected\', \'TrustManager\', \'[\', \']\', \'getTrustManagers\', \'(\', \'KeyStore\', \'trustStore\', \',\', \'Collection\', \'<\', \'?\', \'extends\', \'CRL\', \'>\', \'crls\', \')\', \'throws\', \'Exception\', \'{\', \'TrustManager\', \'[\', \']\', \'managers\', \'=\', \'super\', \'.\', \'getTrustManagers\', \'(\', \'trustStore\', \',\', \'crls\', \')\', \';\', \'X509TrustManager\', \'delegate\', \'=\', \'(\', \'X509TrustManager\', \')\', \'managers\', \'[\', \'0\', \']\', \';\', \'GitblitTrustManager\', \'root\', \'=\', \'new\', \'GitblitTrustManager\', \'(\', \'delegate\', \',\', \'caRevocationList\', \')\', \';\', \'managers\', \'[\', \'0\', \']\', \'=\', \'root\', \';\', \'return\', \'managers\', \';\', \'}\']', 'protected TYPE_1 [ ] METHOD_1 ( TYPE_2 VAR_1 , Collection < ? extends TYPE_3 > VAR_2 ) throws Exception { TYPE_1 [ ] VAR_3 = super . METHOD_1 ( VAR_1 , VAR_2 ) ; TYPE_4 VAR_4 = ( TYPE_4 ) VAR_3 [ 0 ] ; TYPE_5 VAR_5 = new TYPE_5 ( VAR_4 , VAR_6 ) ; VAR_3 [ 0 ] = VAR_5 ; return VAR_3 ; }', '[\'TYPE_5: GitblitTrustManager\', \'TYPE_4: X509TrustManager\', \'TYPE_3: CRL\', \'TYPE_2: KeyStore\', \'TYPE_1: TrustManager\', \'METHOD_1: getTrustManagers\', \'VAR_4: delegate\', \'VAR_6: caRevocationList\', \'VAR_5: root\', \'VAR_1: trustStore\', \'VAR_2: crls\', \'VAR_3: managers\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitblitSslContextFactory.java', 2, '83:9', '93:9', 68, 8 ), ( 5, 50, 6, '@Override\n    public String getCookie(UserModel model) {\n    if (!StringUtils.isEmpty(model.cookie)) {\n    return model.cookie;\n    }\n    read();\n    UserModel storedModel = users.get(model.username.toLowerCase());\n    return storedModel.cookie;\n    }', '[\'public\', \'String\', \'getCookie\', \'(\', \'UserModel\', \'model\', \')\', \'{\', \'if\', \'(\', \'!\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'model.cookie\', \')\', \')\', \'{\', \'return\', \'model.cookie\', \';\', \'}\', \'read\', \'(\', \')\', \';\', \'UserModel\', \'storedModel\', \'=\', \'users\', \'.\', \'get\', \'(\', \'model.username\', \'.\', \'toLowerCase\', \'(\', \')\', \')\', \';\', \'return\', \'storedModel.cookie\', \';\', \'}\']', 'public String METHOD_1 ( TYPE_1 model ) { if ( ! StringUtils . isEmpty ( VAR_1 ) ) { return VAR_1 ; } read ( ) ; TYPE_1 VAR_2 = VAR_3 . get ( VAR_4 . METHOD_2 ( ) ) ; return VAR_5 ; }', '[\'TYPE_1: UserModel\', \'METHOD_2: toLowerCase\', \'METHOD_1: getCookie\', \'VAR_1: model.cookie\', \'VAR_4: model.username\', \'VAR_2: storedModel\', \'VAR_5: storedModel.cookie\', \'VAR_3: users\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/ConfigUserService.java', 37, '179:9', '187:9', 53, 7 ), ( 5, 50, 7, '@Override\n    public UserModel authenticate(char[] cookie) {\n    String hash = new String(cookie);\n    if (StringUtils.isEmpty(hash)) {\n    return null;\n    }\n    read();\n    UserModel model = null;\n    if (cookies.containsKey(hash)) {\n    model = cookies.get(hash);\n    }\n    return model;\n    }', '[\'public\', \'UserModel\', \'authenticate\', \'(\', \'char\', \'[\', \']\', \'cookie\', \')\', \'{\', \'String\', \'hash\', \'=\', \'new\', \'String\', \'(\', \'cookie\', \')\', \';\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'hash\', \')\', \')\', \'{\', \'return\', \'null\', \';\', \'}\', \'read\', \'(\', \')\', \';\', \'UserModel\', \'model\', \'=\', \'null\', \';\', \'if\', \'(\', \'cookies\', \'.\', \'containsKey\', \'(\', \'hash\', \')\', \')\', \'{\', \'model\', \'=\', \'cookies\', \'.\', \'get\', \'(\', \'hash\', \')\', \';\', \'}\', \'return\', \'model\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( char [ ] VAR_1 ) { String VAR_2 = new String ( VAR_1 ) ; if ( StringUtils . isEmpty ( VAR_2 ) ) { return null ; } read ( ) ; TYPE_1 model = null ; if ( VAR_3 . containsKey ( VAR_2 ) ) { model = VAR_3 . get ( VAR_2 ) ; } return model ; }', '[\'TYPE_1: UserModel\', \'METHOD_1: authenticate\', \'VAR_1: cookie\', \'VAR_2: hash\', \'VAR_3: cookies\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/ConfigUserService.java', 37, '195:9', '207:9', 66, 10 ), ( 5, 50, 10, '@Override\n    public UserModel getUserModel(String username) {\n    read();\n    UserModel model = users.get(username.toLowerCase());\n    if (model != null) {\n    // clone the model, otherwise all changes to this object are\n    // live and unpersisted\n    model = DeepCopier.copy(model);\n    }\n    return model;\n    }', '[\'public\', \'UserModel\', \'getUserModel\', \'(\', \'String\', \'username\', \')\', \'{\', \'read\', \'(\', \')\', \';\', \'UserModel\', \'model\', \'=\', \'users\', \'.\', \'get\', \'(\', \'username\', \'.\', \'toLowerCase\', \'(\', \')\', \')\', \';\', \'if\', \'(\', \'model\', \'!=\', \'null\', \')\', \'{\', \'model\', \'=\', \'DeepCopier\', \'.\', \'copy\', \'(\', \'model\', \')\', \';\', \'}\', \'return\', \'model\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( String VAR_1 ) { read ( ) ; TYPE_1 model = VAR_2 . get ( VAR_1 . METHOD_2 ( ) ) ; if ( model != null ) { model = TYPE_2 . copy ( model ) ; } return model ; }', '[\'TYPE_1: UserModel\', \'TYPE_2: DeepCopier\', \'METHOD_1: getUserModel\', \'METHOD_2: toLowerCase\', \'VAR_2: users\', \'VAR_1: username\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/ConfigUserService.java', 37, '259:9', '269:9', 49, 7 ), ( 5, 50, 16, '@Override\n    public List<String> getAllTeamNames() {\n    read();\n    List<String> list = new ArrayList<String>(teams.keySet());\n    Collections.sort(list);\n    return list;\n    }', '[\'public\', \'List\', \'<\', \'String\', \'>\', \'getAllTeamNames\', \'(\', \')\', \'{\', \'read\', \'(\', \')\', \';\', \'List\', \'<\', \'String\', \'>\', \'list\', \'=\', \'new\', \'ArrayList\', \'<\', \'String\', \'>\', \'(\', \'teams\', \'.\', \'keySet\', \'(\', \')\', \')\', \';\', \'Collections\', \'.\', \'sort\', \'(\', \'list\', \')\', \';\', \'return\', \'list\', \';\', \'}\']', 'public List < String > METHOD_1 ( ) { read ( ) ; List < String > list = new ArrayList < String > ( VAR_1 . METHOD_2 ( ) ) ; Collections . METHOD_3 ( list ) ; return list ; }', '[\'METHOD_1: getAllTeamNames\', \'METHOD_3: sort\', \'METHOD_2: keySet\', \'VAR_1: teams\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/ConfigUserService.java', 37, '443:9', '449:9', 42, 6 ), ( 5, 50, 17, '@Override\n    public List<TeamModel> getAllTeams() {\n    read();\n    List<TeamModel> list = new ArrayList<TeamModel>(teams.values());\n    list = DeepCopier.copy(list);\n    Collections.sort(list);\n    return list;\n    }', '[\'public\', \'List\', \'<\', \'TeamModel\', \'>\', \'getAllTeams\', \'(\', \')\', \'{\', \'read\', \'(\', \')\', \';\', \'List\', \'<\', \'TeamModel\', \'>\', \'list\', \'=\', \'new\', \'ArrayList\', \'<\', \'TeamModel\', \'>\', \'(\', \'teams\', \'.\', \'values\', \'(\', \')\', \')\', \';\', \'list\', \'=\', \'DeepCopier\', \'.\', \'copy\', \'(\', \'list\', \')\', \';\', \'Collections\', \'.\', \'sort\', \'(\', \'list\', \')\', \';\', \'return\', \'list\', \';\', \'}\']', 'public List < TYPE_1 > METHOD_1 ( ) { read ( ) ; List < TYPE_1 > list = new ArrayList < TYPE_1 > ( VAR_1 . values ( ) ) ; list = TYPE_2 . copy ( list ) ; Collections . METHOD_2 ( list ) ; return list ; }', '[\'TYPE_1: TeamModel\', \'TYPE_2: DeepCopier\', \'METHOD_2: sort\', \'METHOD_1: getAllTeams\', \'VAR_1: teams\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/ConfigUserService.java', 37, '457:9', '464:9', 51, 7 ), ( 5, 50, 20, '@Override\n    public TeamModel getTeamModel(String teamname) {\n    read();\n    TeamModel model = teams.get(teamname.toLowerCase());\n    if (model != null) {\n    // clone the model, otherwise all changes to this object are\n    // live and unpersisted\n    model = DeepCopier.copy(model);\n    }\n    return model;\n    }', '[\'public\', \'TeamModel\', \'getTeamModel\', \'(\', \'String\', \'teamname\', \')\', \'{\', \'read\', \'(\', \')\', \';\', \'TeamModel\', \'model\', \'=\', \'teams\', \'.\', \'get\', \'(\', \'teamname\', \'.\', \'toLowerCase\', \'(\', \')\', \')\', \';\', \'if\', \'(\', \'model\', \'!=\', \'null\', \')\', \'{\', \'model\', \'=\', \'DeepCopier\', \'.\', \'copy\', \'(\', \'model\', \')\', \';\', \'}\', \'return\', \'model\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( String VAR_1 ) { read ( ) ; TYPE_1 model = VAR_2 . get ( VAR_1 . METHOD_2 ( ) ) ; if ( model != null ) { model = TYPE_2 . copy ( model ) ; } return model ; }', '[\'TYPE_1: TeamModel\', \'TYPE_2: DeepCopier\', \'METHOD_1: getTeamModel\', \'METHOD_2: toLowerCase\', \'VAR_2: teams\', \'VAR_1: teamname\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/ConfigUserService.java', 37, '538:9', '548:9', 49, 7 ), ( 5, 50, 22, '@Override\n    public boolean updateTeamModels(Collection<TeamModel> models) {\n    try {\n    read();\n    for (TeamModel team : models) {\n    teams.put(team.name.toLowerCase(), team);\n    }\n    write();\n    return true;\n    } catch (Throwable t) {\n    logger.error(MessageFormat.format("Failed to update team {0} models!", models.size()), t);\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'updateTeamModels\', \'(\', \'Collection\', \'<\', \'TeamModel\', \'>\', \'models\', \')\', \'{\', \'try\', \'{\', \'read\', \'(\', \')\', \';\', \'for\', \'(\', \'TeamModel\', \'team\', \':\', \'models\', \')\', \'{\', \'teams\', \'.\', \'put\', \'(\', \'team.name\', \'.\', \'toLowerCase\', \'(\', \')\', \',\', \'team\', \')\', \';\', \'}\', \'write\', \'(\', \')\', \';\', \'return\', \'true\', \';\', \'}\', \'catch\', \'(\', \'Throwable\', \'t\', \')\', \'{\', \'logger\', \'.\', \'error\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'"Failed to update team {0} models!"\', \',\', \'models\', \'.\', \'size\', \'(\', \')\', \')\', \',\', \'t\', \')\', \';\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean METHOD_1 ( Collection < TYPE_1 > VAR_1 ) { try { read ( ) ; for ( TYPE_1 VAR_2 : VAR_1 ) { VAR_3 . put ( VAR_4 . METHOD_2 ( ) , VAR_2 ) ; } write ( ) ; return true ; } catch ( Throwable t ) { logger . error ( TYPE_2 . format ( STRING_1 , VAR_1 . size ( ) ) , t ) ; } return false ; }', '[\'TYPE_1: TeamModel\', \'TYPE_2: MessageFormat\', \'METHOD_2: toLowerCase\', \'METHOD_1: updateTeamModels\', \'VAR_1: models\', \'VAR_3: teams\', \'VAR_2: team\', \'VAR_4: team.name\', \'STRING_1: "Failed to update team {0} models!"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/ConfigUserService.java', 37, '569:9', '582:9', 78, 11 ), ( 5, 50, 25, '@Override\n    public boolean deleteTeam(String teamname) {\n    try {\n    // Read realm file\n    read();\n    teams.remove(teamname.toLowerCase());\n    write();\n    return true;\n    } catch (Throwable t) {\n    logger.error(MessageFormat.format("Failed to delete team {0}!", teamname), t);\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'deleteTeam\', \'(\', \'String\', \'teamname\', \')\', \'{\', \'try\', \'{\', \'read\', \'(\', \')\', \';\', \'teams\', \'.\', \'remove\', \'(\', \'teamname\', \'.\', \'toLowerCase\', \'(\', \')\', \')\', \';\', \'write\', \'(\', \')\', \';\', \'return\', \'true\', \';\', \'}\', \'catch\', \'(\', \'Throwable\', \'t\', \')\', \'{\', \'logger\', \'.\', \'error\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'"Failed to delete team {0}!"\', \',\', \'teamname\', \')\', \',\', \'t\', \')\', \';\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean METHOD_1 ( String VAR_1 ) { try { read ( ) ; VAR_2 . remove ( VAR_1 . METHOD_2 ( ) ) ; write ( ) ; return true ; } catch ( Throwable t ) { logger . error ( TYPE_1 . format ( STRING_1 , VAR_1 ) , t ) ; } return false ; }', '[\'TYPE_1: MessageFormat\', \'METHOD_1: deleteTeam\', \'METHOD_2: toLowerCase\', \'VAR_2: teams\', \'VAR_1: teamname\', \'STRING_1: "Failed to delete team {0}!"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/ConfigUserService.java', 37, '636:9', '648:9', 60, 10 ), ( 5, 50, 26, '@Override\n    public List<String> getAllUsernames() {\n    read();\n    List<String> list = new ArrayList<String>(users.keySet());\n    Collections.sort(list);\n    return list;\n    }', '[\'public\', \'List\', \'<\', \'String\', \'>\', \'getAllUsernames\', \'(\', \')\', \'{\', \'read\', \'(\', \')\', \';\', \'List\', \'<\', \'String\', \'>\', \'list\', \'=\', \'new\', \'ArrayList\', \'<\', \'String\', \'>\', \'(\', \'users\', \'.\', \'keySet\', \'(\', \')\', \')\', \';\', \'Collections\', \'.\', \'sort\', \'(\', \'list\', \')\', \';\', \'return\', \'list\', \';\', \'}\']', 'public List < String > METHOD_1 ( ) { read ( ) ; List < String > list = new ArrayList < String > ( VAR_1 . METHOD_2 ( ) ) ; Collections . METHOD_3 ( list ) ; return list ; }', '[\'METHOD_1: getAllUsernames\', \'METHOD_3: sort\', \'METHOD_2: keySet\', \'VAR_1: users\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/ConfigUserService.java', 37, '655:9', '661:9', 42, 6 ), ( 5, 50, 27, '@Override\n    public List<UserModel> getAllUsers() {\n    read();\n    List<UserModel> list = new ArrayList<UserModel>(users.values());\n    list = DeepCopier.copy(list);\n    Collections.sort(list);\n    return list;\n    }', '[\'public\', \'List\', \'<\', \'UserModel\', \'>\', \'getAllUsers\', \'(\', \')\', \'{\', \'read\', \'(\', \')\', \';\', \'List\', \'<\', \'UserModel\', \'>\', \'list\', \'=\', \'new\', \'ArrayList\', \'<\', \'UserModel\', \'>\', \'(\', \'users\', \'.\', \'values\', \'(\', \')\', \')\', \';\', \'list\', \'=\', \'DeepCopier\', \'.\', \'copy\', \'(\', \'list\', \')\', \';\', \'Collections\', \'.\', \'sort\', \'(\', \'list\', \')\', \';\', \'return\', \'list\', \';\', \'}\']', 'public List < TYPE_1 > METHOD_1 ( ) { read ( ) ; List < TYPE_1 > list = new ArrayList < TYPE_1 > ( VAR_1 . values ( ) ) ; list = TYPE_2 . copy ( list ) ; Collections . METHOD_2 ( list ) ; return list ; }', '[\'TYPE_1: UserModel\', \'TYPE_2: DeepCopier\', \'METHOD_1: getAllUsers\', \'METHOD_2: sort\', \'VAR_1: users\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/ConfigUserService.java', 37, '668:9', '675:9', 51, 7 ), ( 5, 50, 31, '@Override\n    public boolean deleteRepositoryRole(String role) {\n    try {\n    read();\n    // identify users which require role rename\n    for (UserModel user : users.values()) {\n    user.removeRepositoryPermission(role);\n    }\n    // identify teams which require role rename\n    for (TeamModel team : teams.values()) {\n    team.removeRepositoryPermission(role);\n    }\n    // persist changes\n    write();\n    return true;\n    } catch (Throwable t) {\n    logger.error(MessageFormat.format("Failed to delete role {0}!", role), t);\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'deleteRepositoryRole\', \'(\', \'String\', \'role\', \')\', \'{\', \'try\', \'{\', \'read\', \'(\', \')\', \';\', \'for\', \'(\', \'UserModel\', \'user\', \':\', \'users\', \'.\', \'values\', \'(\', \')\', \')\', \'{\', \'user\', \'.\', \'removeRepositoryPermission\', \'(\', \'role\', \')\', \';\', \'}\', \'for\', \'(\', \'TeamModel\', \'team\', \':\', \'teams\', \'.\', \'values\', \'(\', \')\', \')\', \'{\', \'team\', \'.\', \'removeRepositoryPermission\', \'(\', \'role\', \')\', \';\', \'}\', \'write\', \'(\', \')\', \';\', \'return\', \'true\', \';\', \'}\', \'catch\', \'(\', \'Throwable\', \'t\', \')\', \'{\', \'logger\', \'.\', \'error\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'"Failed to delete role {0}!"\', \',\', \'role\', \')\', \',\', \'t\', \')\', \';\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean METHOD_1 ( String VAR_1 ) { try { read ( ) ; for ( TYPE_1 VAR_2 : VAR_3 . values ( ) ) { VAR_2 . METHOD_2 ( VAR_1 ) ; } for ( TYPE_2 VAR_4 : VAR_5 . values ( ) ) { VAR_4 . METHOD_2 ( VAR_1 ) ; } write ( ) ; return true ; } catch ( Throwable t ) { logger . error ( TYPE_3 . format ( STRING_1 , VAR_1 ) , t ) ; } return false ; }', '[\'TYPE_1: UserModel\', \'TYPE_2: TeamModel\', \'TYPE_3: MessageFormat\', \'METHOD_1: deleteRepositoryRole\', \'METHOD_2: removeRepositoryPermission\', \'VAR_1: role\', \'VAR_5: teams\', \'VAR_4: team\', \'VAR_2: user\', \'VAR_3: users\', \'STRING_1: "Failed to delete role {0}!"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/ConfigUserService.java', 37, '785:9', '807:9', 90, 13 ), ( 5, 51, 2, 'private void sendStatusAcknowledgment(FederationModel registration) throws Exception {\n    if (!registration.sendStatus) {\n    // skip status acknowledgment\n    return;\n    }\n    InetAddress addr = InetAddress.getLocalHost();\n    String federationName = GitBlit.getString(Keys.federation.name, null);\n    if (StringUtils.isEmpty(federationName)) {\n    federationName = addr.getHostName();\n    }\n    FederationUtils.acknowledgeStatus(addr.getHostAddress(), registration);\n    logger.info(MessageFormat.format("Pull status sent to {0}", registration.url));\n    }', '[\'private\', \'void\', \'sendStatusAcknowledgment\', \'(\', \'FederationModel\', \'registration\', \')\', \'throws\', \'Exception\', \'{\', \'if\', \'(\', \'!\', \'registration.sendStatus\', \')\', \'{\', \'return\', \';\', \'}\', \'InetAddress\', \'addr\', \'=\', \'InetAddress\', \'.\', \'getLocalHost\', \'(\', \')\', \';\', \'String\', \'federationName\', \'=\', \'GitBlit\', \'.\', \'getString\', \'(\', \'Keys.federation\', \'.\', \'name\', \',\', \'null\', \')\', \';\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'federationName\', \')\', \')\', \'{\', \'federationName\', \'=\', \'addr\', \'.\', \'getHostName\', \'(\', \')\', \';\', \'}\', \'FederationUtils\', \'.\', \'acknowledgeStatus\', \'(\', \'addr\', \'.\', \'getHostAddress\', \'(\', \')\', \',\', \'registration\', \')\', \';\', \'logger\', \'.\', \'info\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'"Pull status sent to {0}"\', \',\', \'registration\', \'.\', \'url\', \')\', \')\', \';\', \'}\']', 'private void METHOD_1 ( TYPE_1 VAR_1 ) throws Exception { if ( ! VAR_2 ) { return ; } TYPE_2 VAR_3 = TYPE_2 . METHOD_2 ( ) ; String VAR_4 = TYPE_3 . getString ( VAR_5 . name , null ) ; if ( StringUtils . isEmpty ( VAR_4 ) ) { VAR_4 = VAR_3 . METHOD_3 ( ) ; } TYPE_4 . METHOD_4 ( VAR_3 . METHOD_5 ( ) , VAR_1 ) ; logger . info ( TYPE_5 . format ( STRING_1 , VAR_1 . url ) ) ; }', '[\'TYPE_1: FederationModel\', \'TYPE_4: FederationUtils\', \'TYPE_5: MessageFormat\', \'TYPE_2: InetAddress\', \'TYPE_3: GitBlit\', \'METHOD_1: sendStatusAcknowledgment\', \'METHOD_4: acknowledgeStatus\', \'METHOD_3: getHostName\', \'METHOD_5: getHostAddress\', \'METHOD_2: getLocalHost\', \'VAR_5: Keys.federation\', \'VAR_1: registration\', \'VAR_2: registration.sendStatus\', \'VAR_4: federationName\', \'VAR_3: addr\', \'STRING_1: "Pull status sent to {0}"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/FederationPullExecutor.java', 6, '494:9', '506:9', 92, 9 ), ( 5, 51, 3, 'private void schedule(FederationModel registration) {\n    // schedule the next pull\n    int mins = TimeUtils.convertFrequencyToMinutes(registration.frequency);\n    registration.nextPull = new Date(System.currentTimeMillis() + (mins * 60 * 1000L));\n    GitBlit.self().executor()\n    .schedule(new FederationPullExecutor(registration), mins, TimeUnit.MINUTES);\n    logger.info(MessageFormat.format(\n    				"Next pull of {0} @ {1} scheduled for {2,date,yyyy-MM-dd HH:mm}",\n    				registration.name, registration.url, registration.nextPull));\n    }', '[\'private\', \'void\', \'schedule\', \'(\', \'FederationModel\', \'registration\', \')\', \'{\', \'int\', \'mins\', \'=\', \'TimeUtils\', \'.\', \'convertFrequencyToMinutes\', \'(\', \'registration.frequency\', \')\', \';\', \'registration.nextPull\', \'=\', \'new\', \'Date\', \'(\', \'System\', \'.\', \'currentTimeMillis\', \'(\', \')\', \'+\', \'(\', \'mins\', \'*\', \'60\', \'*\', \'1000L\', \')\', \')\', \';\', \'GitBlit\', \'.\', \'self\', \'(\', \')\', \'.\', \'executor\', \'(\', \')\', \'.\', \'schedule\', \'(\', \'new\', \'FederationPullExecutor\', \'(\', \'registration\', \')\', \',\', \'mins\', \',\', \'TimeUnit.MINUTES\', \')\', \';\', \'logger\', \'.\', \'info\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'"Next pull of {0} <AT> {1} scheduled for {2\', \',\', \'registration\', \'.\', \'name\', \',\', \'registration\', \'.\', \'url\', \',\', \'registration.nextPull\', \')\', \')\', \';\', \'}\']', 'private void METHOD_1 ( TYPE_1 VAR_1 ) { int VAR_2 = TYPE_2 . METHOD_2 ( VAR_3 ) ; VAR_4 = new TYPE_3 ( System . METHOD_3 ( ) + ( VAR_2 * INT_1 * INT_2 ) ) ; TYPE_4 . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_1 ( new TYPE_5 ( VAR_1 ) , VAR_2 , VAR_5 ) ; logger . info ( TYPE_6 . format ( STRING_1 , VAR_1 . name , VAR_1 . url , VAR_4 ) ) ; }', '[\'TYPE_2: TimeUtils\', \'TYPE_1: FederationModel\', \'TYPE_6: MessageFormat\', \'TYPE_5: FederationPullExecutor\', \'TYPE_3: Date\', \'TYPE_4: GitBlit\', \'METHOD_1: schedule\', \'METHOD_5: executor\', \'METHOD_3: currentTimeMillis\', \'METHOD_4: self\', \'METHOD_2: convertFrequencyToMinutes\', \'VAR_2: mins\', \'VAR_4: registration.nextPull\', \'VAR_1: registration\', \'VAR_5: TimeUnit.MINUTES\', \'VAR_3: registration.frequency\', \'INT_2: 1000L\', \'INT_1: 60\', \'STRING_1: "Next pull of {0} <AT> {1} scheduled for {2\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/FederationPullExecutor.java', 6, '513:9', '522:9', 90, 8 ), ( 5, 54, 2, 'protected void processRequest(javax.servlet.http.HttpServletRequest request,\n    			javax.servlet.http.HttpServletResponse response) throws javax.servlet.ServletException,\n    			java.io.IOException {\n    File file = GitBlit.getFileOrFolder(Keys.web.robots.txt, null);\n    String content = "";\n    if (file.exists()) {\n    content = FileUtils.readContent(file, "\\n");\n    }\n    response.getWriter().append(content);\n    }', '[\'protected\', \'void\', \'processRequest\', \'(\', \'javax.servlet.http.HttpServletRequest\', \'request\', \',\', \'javax.servlet.http.HttpServletResponse\', \'response\', \')\', \'throws\', \'javax.servlet.ServletException\', \',\', \'java.io\', \'.\', \'IOException\', \'{\', \'File\', \'file\', \'=\', \'GitBlit\', \'.\', \'getFileOrFolder\', \'(\', \'Keys.web.robots.txt\', \',\', \'null\', \')\', \';\', \'String\', \'content\', \'=\', \'""\', \';\', \'if\', \'(\', \'file\', \'.\', \'exists\', \'(\', \')\', \')\', \'{\', \'content\', \'=\', \'FileUtils\', \'.\', \'readContent\', \'(\', \'file\', \',\', \'"\\\\n"\', \')\', \';\', \'}\', \'response\', \'.\', \'getWriter\', \'(\', \')\', \'.\', \'append\', \'(\', \'content\', \')\', \';\', \'}\']', 'protected void METHOD_1 ( TYPE_1 request , TYPE_2 response ) throws TYPE_3 , TYPE_4 . IOException { File file = TYPE_5 . METHOD_2 ( VAR_1 , null ) ; String content = STRING_1 ; if ( file . METHOD_3 ( ) ) { content = TYPE_6 . METHOD_4 ( file , STRING_2 ) ; } response . METHOD_5 ( ) . append ( content ) ; }', '[\'TYPE_1: javax.servlet.http.HttpServletRequest\', \'TYPE_4: java.io\', \'TYPE_3: javax.servlet.ServletException\', \'TYPE_6: FileUtils\', \'TYPE_2: javax.servlet.http.HttpServletResponse\', \'TYPE_5: GitBlit\', \'METHOD_5: getWriter\', \'METHOD_4: readContent\', \'METHOD_3: exists\', \'METHOD_2: getFileOrFolder\', \'METHOD_1: processRequest\', \'VAR_1: Keys.web.robots.txt\', \'STRING_1: ""\', \'STRING_2: "\\\\n"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/RobotsTxtServlet.java', 4, '54:9', '63:9', 89, 8 ), ( 5, 56, 1, 'private void mount(String location, Class<? extends WebPage> clazz, String... parameters) {\n    if (parameters == null) {\n    parameters = new String[] {};\n    }\n    if (!GitBlit.getBoolean(Keys.web.mountParameters, true)) {\n    parameters = new String[] {};\n    }\n    mount(new GitblitParamUrlCodingStrategy(location, clazz, parameters));\n    }', '[\'private\', \'void\', \'mount\', \'(\', \'String\', \'location\', \',\', \'Class\', \'<\', \'?\', \'extends\', \'WebPage\', \'>\', \'clazz\', \',\', \'String\', \'...\', \'parameters\', \')\', \'{\', \'if\', \'(\', \'parameters\', \'==\', \'null\', \')\', \'{\', \'parameters\', \'=\', \'new\', \'String\', \'[\', \']\', \'{\', \'}\', \';\', \'}\', \'if\', \'(\', \'!\', \'GitBlit\', \'.\', \'getBoolean\', \'(\', \'Keys.web.mountParameters\', \',\', \'true\', \')\', \')\', \'{\', \'parameters\', \'=\', \'new\', \'String\', \'[\', \']\', \'{\', \'}\', \';\', \'}\', \'mount\', \'(\', \'new\', \'GitblitParamUrlCodingStrategy\', \'(\', \'location\', \',\', \'clazz\', \',\', \'parameters\', \')\', \')\', \';\', \'}\']', 'private void METHOD_1 ( String VAR_1 , Class < ? extends TYPE_1 > clazz , String ... parameters ) { if ( parameters == null ) { parameters = new String [ ] { } ; } if ( ! TYPE_2 . METHOD_2 ( VAR_2 , true ) ) { parameters = new String [ ] { } ; } METHOD_1 ( new TYPE_3 ( VAR_1 , clazz , parameters ) ) ; }', '[\'TYPE_1: WebPage\', \'TYPE_3: GitblitParamUrlCodingStrategy\', \'TYPE_2: GitBlit\', \'METHOD_2: getBoolean\', \'METHOD_1: mount\', \'VAR_2: Keys.web.mountParameters\', \'VAR_1: location\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/GitBlitWebApp.java', 6, '143:9', '151:9', 74, 6 ), ( 5, 56, 3, '@Override\n    public final Session newSession(Request request, Response response) {\n    GitBlitWebSession gitBlitWebSession = new GitBlitWebSession(request);\n    String forcedLocale = GitBlit.getString(Keys.web.forceDefaultLocale, null);\n    if (!StringUtils.isEmpty(forcedLocale)) {\n    gitBlitWebSession.setLocale(new Locale(forcedLocale));\n    }\n    return gitBlitWebSession;\n    }', '[\'public\', \'final\', \'Session\', \'newSession\', \'(\', \'Request\', \'request\', \',\', \'Response\', \'response\', \')\', \'{\', \'GitBlitWebSession\', \'gitBlitWebSession\', \'=\', \'new\', \'GitBlitWebSession\', \'(\', \'request\', \')\', \';\', \'String\', \'forcedLocale\', \'=\', \'GitBlit\', \'.\', \'getString\', \'(\', \'Keys.web.forceDefaultLocale\', \',\', \'null\', \')\', \';\', \'if\', \'(\', \'!\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'forcedLocale\', \')\', \')\', \'{\', \'gitBlitWebSession\', \'.\', \'setLocale\', \'(\', \'new\', \'Locale\', \'(\', \'forcedLocale\', \')\', \')\', \';\', \'}\', \'return\', \'gitBlitWebSession\', \';\', \'}\']', 'public final TYPE_1 METHOD_1 ( TYPE_2 request , Response response ) { TYPE_3 VAR_1 = new TYPE_3 ( request ) ; String VAR_2 = TYPE_4 . getString ( VAR_3 , null ) ; if ( ! StringUtils . isEmpty ( VAR_2 ) ) { VAR_1 . METHOD_2 ( new TYPE_5 ( VAR_2 ) ) ; } return VAR_1 ; }', '[\'TYPE_5: Locale\', \'TYPE_2: Request\', \'TYPE_3: GitBlitWebSession\', \'TYPE_4: GitBlit\', \'TYPE_1: Session\', \'METHOD_1: newSession\', \'METHOD_2: setLocale\', \'VAR_3: Keys.web.forceDefaultLocale\', \'VAR_1: gitBlitWebSession\', \'VAR_2: forcedLocale\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/GitBlitWebApp.java', 6, '158:9', '167:9', 66, 7 ), ( 5, 56, 4, '@Override\n    public final String getConfigurationType() {\n    if (GitBlit.isDebugMode()) {\n    return Application.DEVELOPMENT;\n    }\n    return Application.DEPLOYMENT;\n    }', '[\'public\', \'final\', \'String\', \'getConfigurationType\', \'(\', \')\', \'{\', \'if\', \'(\', \'GitBlit\', \'.\', \'isDebugMode\', \'(\', \')\', \')\', \'{\', \'return\', \'Application.DEVELOPMENT\', \';\', \'}\', \'return\', \'Application.DEPLOYMENT\', \';\', \'}\']', 'public final String METHOD_1 ( ) { if ( TYPE_1 . METHOD_2 ( ) ) { return VAR_1 ; } return VAR_2 ; }', '[\'TYPE_1: GitBlit\', \'METHOD_2: isDebugMode\', \'METHOD_1: getConfigurationType\', \'VAR_1: Application.DEVELOPMENT\', \'VAR_2: Application.DEPLOYMENT\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/GitBlitWebApp.java', 6, '169:9', '175:9', 28, 5 ), ( 5, 57, 0, 'private void setParameter(String parameter, String value) {\n    if (!StringUtils.isEmpty(parameter)) {\n    if (StringUtils.isEmpty(value)) {\n    this.parameters.remove(parameter);\n    } else {\n    this.parameters.put(parameter, value);\n    }\n    }\n    }', '[\'private\', \'void\', \'setParameter\', \'(\', \'String\', \'parameter\', \',\', \'String\', \'value\', \')\', \'{\', \'if\', \'(\', \'!\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'parameter\', \')\', \')\', \'{\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'value\', \')\', \')\', \'{\', \'this\', \'.\', \'parameters\', \'.\', \'remove\', \'(\', \'parameter\', \')\', \';\', \'}\', \'else\', \'{\', \'this\', \'.\', \'parameters\', \'.\', \'put\', \'(\', \'parameter\', \',\', \'value\', \')\', \';\', \'}\', \'}\', \'}\']', 'private void METHOD_1 ( String VAR_1 , String value ) { if ( ! StringUtils . isEmpty ( VAR_1 ) ) { if ( StringUtils . isEmpty ( value ) ) { this . parameters . remove ( VAR_1 ) ; } else { this . parameters . put ( VAR_1 , value ) ; } } }', '[\'METHOD_1: setParameter\', \'VAR_1: parameter\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/PageRegistration.java', 15, '158:17', '166:17', 58, 6 ), ( 5, 57, 5, '@Override\n    public int hashCode() {\n    if (isDivider()) {\n    // divider menu item\n    return super.hashCode();\n    }\n    if (StringUtils.isEmpty(displayText)) {\n    return value.hashCode() + parameter.hashCode();\n    }\n    return displayText.hashCode();\n    }', '[\'public\', \'int\', \'hashCode\', \'(\', \')\', \'{\', \'if\', \'(\', \'isDivider\', \'(\', \')\', \')\', \'{\', \'return\', \'super\', \'.\', \'hashCode\', \'(\', \')\', \';\', \'}\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'displayText\', \')\', \')\', \'{\', \'return\', \'value\', \'.\', \'hashCode\', \'(\', \')\', \'+\', \'parameter\', \'.\', \'hashCode\', \'(\', \')\', \';\', \'}\', \'return\', \'displayText\', \'.\', \'hashCode\', \'(\', \')\', \';\', \'}\']', 'public int METHOD_1 ( ) { if ( METHOD_2 ( ) ) { return super . METHOD_1 ( ) ; } if ( StringUtils . isEmpty ( VAR_1 ) ) { return value . METHOD_1 ( ) + VAR_2 . METHOD_1 ( ) ; } return VAR_1 . METHOD_1 ( ) ; }', '[\'METHOD_2: isDivider\', \'METHOD_1: hashCode\', \'VAR_1: displayText\', \'VAR_2: parameter\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/PageRegistration.java', 15, '187:17', '197:17', 50, 7 ), ( 5, 57, 6, '@Override\n    public boolean equals(Object o) {\n    if (o instanceof DropDownMenuItem) {\n    return hashCode() == o.hashCode();\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'equals\', \'(\', \'Object\', \'o\', \')\', \'{\', \'if\', \'(\', \'o\', \'instanceof\', \'DropDownMenuItem\', \')\', \'{\', \'return\', \'hashCode\', \'(\', \')\', \'==\', \'o\', \'.\', \'hashCode\', \'(\', \')\', \';\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean equals ( Object o ) { if ( o instanceof TYPE_1 ) { return METHOD_1 ( ) == o . METHOD_1 ( ) ; } return false ; }', '[\'TYPE_1: DropDownMenuItem\', \'METHOD_1: hashCode\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/PageRegistration.java', 15, '199:17', '205:17', 31, 5 ), ( 5, 57, 7, '@Override\n    public String toString() {\n    if (StringUtils.isEmpty(displayText)) {\n    return formatParameter();\n    }\n    return displayText;\n    }', '[\'public\', \'String\', \'toString\', \'(\', \')\', \'{\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'displayText\', \')\', \')\', \'{\', \'return\', \'formatParameter\', \'(\', \')\', \';\', \'}\', \'return\', \'displayText\', \';\', \'}\']', 'public String toString ( ) { if ( StringUtils . isEmpty ( VAR_1 ) ) { return METHOD_1 ( ) ; } return VAR_1 ; }', '[\'METHOD_1: formatParameter\', \'VAR_1: displayText\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/PageRegistration.java', 15, '207:17', '213:17', 26, 5 ), ( 5, 57, 9, 'public PageRegistration(String translationKey, Class<? extends WebPage> pageClass,\n    			PageParameters params) {\n    this.translationKey = translationKey;\n    this.pageClass = pageClass;\n    this.params = params;\n    }', '[\'public\', \'PageRegistration\', \'(\', \'String\', \'translationKey\', \',\', \'Class\', \'<\', \'?\', \'extends\', \'WebPage\', \'>\', \'pageClass\', \',\', \'PageParameters\', \'params\', \')\', \'{\', \'this\', \'.\', \'translationKey\', \'=\', \'translationKey\', \';\', \'this\', \'.\', \'pageClass\', \'=\', \'pageClass\', \';\', \'this\', \'.\', \'params\', \'=\', \'params\', \';\', \'}\']', 'public VAR_1 ( String VAR_2 , Class < ? extends TYPE_1 > VAR_3 , TYPE_2 params ) { this . VAR_2 = VAR_2 ; this . VAR_3 = VAR_3 ; this . params = params ; }', '[\'TYPE_1: WebPage\', \'TYPE_2: PageParameters\', \'VAR_2: translationKey\', \'VAR_3: pageClass\', \'VAR_1: PageRegistration\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/PageRegistration.java', 15, '44:9', '49:9', 37, 5 ), ( 5, 59, 0, 'public void setValue(String name, String value) {\n    // IE and other browsers handle movie/data differently. So movie is used\n    // for IE, whereas\n    // data is used for all other browsers. The class uses movie parameter\n    // to handle url and\n    // puts the values to the maps depending on the browser information\n    String parameter = name.toLowerCase();\n    if ("data".equals(parameter))\n    parameter = "movie";\n    if ("movie".equals(parameter) && !getClientProperties().isBrowserInternetExplorer())\n    attributes.put("data", value);\n    if (attributeNames.contains(parameter))\n    attributes.put(parameter, value);\n    else if (parameterNames.contains(parameter))\n    parameters.put(parameter, value);\n    }', '[\'public\', \'void\', \'setValue\', \'(\', \'String\', \'name\', \',\', \'String\', \'value\', \')\', \'{\', \'String\', \'parameter\', \'=\', \'name\', \'.\', \'toLowerCase\', \'(\', \')\', \';\', \'if\', \'(\', \'"data"\', \'.\', \'equals\', \'(\', \'parameter\', \')\', \')\', \'parameter\', \'=\', \'"movie"\', \';\', \'if\', \'(\', \'"movie"\', \'.\', \'equals\', \'(\', \'parameter\', \')\', \'&&\', \'!\', \'getClientProperties\', \'(\', \')\', \'.\', \'isBrowserInternetExplorer\', \'(\', \')\', \')\', \'attributes\', \'.\', \'put\', \'(\', \'"data"\', \',\', \'value\', \')\', \';\', \'if\', \'(\', \'attributeNames\', \'.\', \'contains\', \'(\', \'parameter\', \')\', \')\', \'attributes\', \'.\', \'put\', \'(\', \'parameter\', \',\', \'value\', \')\', \';\', \'else\', \'if\', \'(\', \'parameterNames\', \'.\', \'contains\', \'(\', \'parameter\', \')\', \')\', \'parameters\', \'.\', \'put\', \'(\', \'parameter\', \',\', \'value\', \')\', \';\', \'}\']', 'public void METHOD_1 ( String name , String value ) { String VAR_1 = name . METHOD_2 ( ) ; if ( STRING_1 . equals ( VAR_1 ) ) VAR_1 = STRING_2 ; if ( STRING_2 . equals ( VAR_1 ) && ! METHOD_3 ( ) . METHOD_4 ( ) ) VAR_2 . put ( STRING_1 , value ) ; if ( VAR_3 . contains ( VAR_1 ) ) VAR_2 . put ( VAR_1 , value ) ; else if ( VAR_4 . contains ( VAR_1 ) ) parameters . put ( VAR_1 , value ) ; }', '[\'METHOD_3: getClientProperties\', \'METHOD_1: setValue\', \'METHOD_2: toLowerCase\', \'METHOD_4: isBrowserInternetExplorer\', \'VAR_3: attributeNames\', \'VAR_1: parameter\', \'VAR_2: attributes\', \'VAR_4: parameterNames\', \'STRING_2: "movie"\', \'STRING_1: "data"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/panels/ShockWaveComponent.java', 13, '84:9', '101:9', 99, 10 ), ( 5, 59, 2, 'public void onComponentTag(ComponentTag tag) {\n    // get options from the markup\n    IValueMap valueMap = tag.getAttributes();\n    // Iterate over valid options\n    for (String s : optionNames) {\n    if (valueMap.containsKey(s)) {\n    // if option isn\'t set programmatically, set value from markup\n    if (!attributes.containsKey(s) && !parameters.containsKey(s))\n    setValue(s, valueMap.getString(s));\n    // remove attribute - they are added in super.onComponentTag()\n    // to\n    // the right place as attribute or param\n    valueMap.remove(s);\n    }\n    }\n    super.onComponentTag(tag);\n    }', '[\'public\', \'void\', \'onComponentTag\', \'(\', \'ComponentTag\', \'tag\', \')\', \'{\', \'IValueMap\', \'valueMap\', \'=\', \'tag\', \'.\', \'getAttributes\', \'(\', \')\', \';\', \'for\', \'(\', \'String\', \'s\', \':\', \'optionNames\', \')\', \'{\', \'if\', \'(\', \'valueMap\', \'.\', \'containsKey\', \'(\', \'s\', \')\', \')\', \'{\', \'if\', \'(\', \'!\', \'attributes\', \'.\', \'containsKey\', \'(\', \'s\', \')\', \'&&\', \'!\', \'parameters\', \'.\', \'containsKey\', \'(\', \'s\', \')\', \')\', \'setValue\', \'(\', \'s\', \',\', \'valueMap\', \'.\', \'getString\', \'(\', \'s\', \')\', \')\', \';\', \'valueMap\', \'.\', \'remove\', \'(\', \'s\', \')\', \';\', \'}\', \'}\', \'super\', \'.\', \'onComponentTag\', \'(\', \'tag\', \')\', \';\', \'}\']', 'public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; for ( String s : VAR_3 ) { if ( VAR_2 . containsKey ( s ) ) { if ( ! VAR_4 . containsKey ( s ) && ! parameters . containsKey ( s ) ) METHOD_3 ( s , VAR_2 . getString ( s ) ) ; VAR_2 . remove ( s ) ; } } super . METHOD_1 ( VAR_1 ) ; }', '[\'TYPE_2: IValueMap\', \'TYPE_1: ComponentTag\', \'METHOD_2: getAttributes\', \'METHOD_3: setValue\', \'METHOD_1: onComponentTag\', \'VAR_2: valueMap\', \'VAR_3: optionNames\', \'VAR_4: attributes\', \'VAR_1: tag\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/panels/ShockWaveComponent.java', 13, '125:9', '143:9', 87, 8 ), ( 5, 59, 4, 'private void addParameter(Response response, String name, String value) {\n    response.write(" ");\n    response.write(name);\n    response.write("=\\"");\n    response.write(value);\n    response.write("\\"");\n    }', '[\'private\', \'void\', \'addParameter\', \'(\', \'Response\', \'response\', \',\', \'String\', \'name\', \',\', \'String\', \'value\', \')\', \'{\', \'response\', \'.\', \'write\', \'(\', \'" "\', \')\', \';\', \'response\', \'.\', \'write\', \'(\', \'name\', \')\', \';\', \'response\', \'.\', \'write\', \'(\', \'"=\\\\""\', \')\', \';\', \'response\', \'.\', \'write\', \'(\', \'value\', \')\', \';\', \'response\', \'.\', \'write\', \'(\', \'"\\\\""\', \')\', \';\', \'}\']', 'private void METHOD_1 ( Response response , String name , String value ) { response . write ( STRING_1 ) ; response . write ( name ) ; response . write ( STRING_2 ) ; response . write ( value ) ; response . write ( STRING_3 ) ; }', '[\'METHOD_1: addParameter\', \'STRING_1: " "\', \'STRING_3: "\\\\""\', \'STRING_2: "=\\\\""\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/panels/ShockWaveComponent.java', 13, '173:9', '179:9', 50, 6 ), ( 5, 59, 12, 'public ShockWaveComponent(String id, String movie, String width, String height) {\n    this(id);\n    setValue("movie", movie);\n    setValue("width", width);\n    setValue("height", height);\n    }', '[\'public\', \'ShockWaveComponent\', \'(\', \'String\', \'id\', \',\', \'String\', \'movie\', \',\', \'String\', \'width\', \',\', \'String\', \'height\', \')\', \'{\', \'this\', \'(\', \'id\', \')\', \';\', \'setValue\', \'(\', \'"movie"\', \',\', \'movie\', \')\', \';\', \'setValue\', \'(\', \'"width"\', \',\', \'width\', \')\', \';\', \'setValue\', \'(\', \'"height"\', \',\', \'height\', \')\', \';\', \'}\']', 'public VAR_1 ( String id , String VAR_2 , String VAR_3 , String VAR_4 ) { this ( id ) ; METHOD_1 ( STRING_1 , VAR_2 ) ; METHOD_1 ( STRING_2 , VAR_3 ) ; METHOD_1 ( STRING_3 , VAR_4 ) ; }', '[\'METHOD_1: setValue\', \'VAR_2: movie\', \'VAR_1: ShockWaveComponent\', \'VAR_3: width\', \'VAR_4: height\', \'STRING_1: "movie"\', \'STRING_2: "width"\', \'STRING_3: "height"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/panels/ShockWaveComponent.java', 13, '76:9', '82:9', 43, 5 ), ( 5, 61, 1, 'protected Map<ChangeType, AtomicInteger> getChangedPathsStats(List<PathChangeModel> paths) {\n    Map<ChangeType, AtomicInteger> stats = new HashMap<ChangeType, AtomicInteger>();\n    for (PathChangeModel path : paths) {\n    if (!stats.containsKey(path.changeType)) {\n    stats.put(path.changeType, new AtomicInteger(0));\n    }\n    stats.get(path.changeType).incrementAndGet();\n    }\n    return stats;\n    }', '[\'protected\', \'Map\', \'<\', \'ChangeType\', \',\', \'AtomicInteger\', \'>\', \'getChangedPathsStats\', \'(\', \'List\', \'<\', \'PathChangeModel\', \'>\', \'paths\', \')\', \'{\', \'Map\', \'<\', \'ChangeType\', \',\', \'AtomicInteger\', \'>\', \'stats\', \'=\', \'new\', \'HashMap\', \'<\', \'ChangeType\', \',\', \'AtomicInteger\', \'>\', \'(\', \')\', \';\', \'for\', \'(\', \'PathChangeModel\', \'path\', \':\', \'paths\', \')\', \'{\', \'if\', \'(\', \'!\', \'stats\', \'.\', \'containsKey\', \'(\', \'path.changeType\', \')\', \')\', \'{\', \'stats\', \'.\', \'put\', \'(\', \'path.changeType\', \',\', \'new\', \'AtomicInteger\', \'(\', \'0\', \')\', \')\', \';\', \'}\', \'stats\', \'.\', \'get\', \'(\', \'path.changeType\', \')\', \'.\', \'incrementAndGet\', \'(\', \')\', \';\', \'}\', \'return\', \'stats\', \';\', \'}\']', 'protected Map < TYPE_1 , TYPE_2 > METHOD_1 ( List < TYPE_3 > VAR_1 ) { Map < TYPE_1 , TYPE_2 > VAR_2 = new HashMap < TYPE_1 , TYPE_2 > ( ) ; for ( TYPE_3 path : VAR_1 ) { if ( ! VAR_2 . containsKey ( VAR_3 ) ) { VAR_2 . put ( VAR_3 , new TYPE_2 ( 0 ) ) ; } VAR_2 . get ( VAR_3 ) . METHOD_2 ( ) ; } return VAR_2 ; }', '[\'TYPE_1: ChangeType\', \'TYPE_2: AtomicInteger\', \'TYPE_3: PathChangeModel\', \'METHOD_2: incrementAndGet\', \'METHOD_1: getChangedPathsStats\', \'VAR_3: path.changeType\', \'VAR_2: stats\', \'VAR_1: paths\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/panels/CommitLegendPanel.java', 3, '78:9', '87:9', 87, 7 ), ( 5, 62, 3, '@Override\n    public void onClick() {\n    if (GitBlit.self().deleteRepositoryModel(entry)) {\n    if (dp instanceof SortableRepositoriesProvider) {\n    info(MessageFormat.format(getString("gb.repositoryDeleted"), entry));\n    ((SortableRepositoriesProvider) dp).remove(entry);\n    } else {\n    setResponsePage(getPage().getClass(), getPage().getPageParameters());\n    }\n    } else {\n    error(MessageFormat.format(getString("gb.repositoryDeleteFailed"), entry));\n    }\n    }', '[\'public\', \'void\', \'onClick\', \'(\', \')\', \'{\', \'if\', \'(\', \'GitBlit\', \'.\', \'self\', \'(\', \')\', \'.\', \'deleteRepositoryModel\', \'(\', \'entry\', \')\', \')\', \'{\', \'if\', \'(\', \'dp\', \'instanceof\', \'SortableRepositoriesProvider\', \')\', \'{\', \'info\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'getString\', \'(\', \'"gb.repositoryDeleted"\', \')\', \',\', \'entry\', \')\', \')\', \';\', \'(\', \'(\', \'SortableRepositoriesProvider\', \')\', \'dp\', \')\', \'.\', \'remove\', \'(\', \'entry\', \')\', \';\', \'}\', \'else\', \'{\', \'setResponsePage\', \'(\', \'getPage\', \'(\', \')\', \'.\', \'getClass\', \'(\', \')\', \',\', \'getPage\', \'(\', \')\', \'.\', \'getPageParameters\', \'(\', \')\', \')\', \';\', \'}\', \'}\', \'else\', \'{\', \'error\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'getString\', \'(\', \'"gb.repositoryDeleteFailed"\', \')\', \',\', \'entry\', \')\', \')\', \';\', \'}\', \'}\']', 'public void METHOD_1 ( ) { if ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( entry ) ) { if ( VAR_1 instanceof TYPE_2 ) { info ( TYPE_3 . format ( getString ( STRING_1 ) , entry ) ) ; ( ( TYPE_2 ) VAR_1 ) . remove ( entry ) ; } else { METHOD_4 ( METHOD_5 ( ) . getClass ( ) , METHOD_5 ( ) . METHOD_6 ( ) ) ; } } else { error ( TYPE_3 . format ( getString ( STRING_2 ) , entry ) ) ; } }', '[\'TYPE_3: MessageFormat\', \'TYPE_2: SortableRepositoriesProvider\', \'TYPE_1: GitBlit\', \'METHOD_4: setResponsePage\', \'METHOD_1: onClick\', \'METHOD_3: deleteRepositoryModel\', \'METHOD_5: getPage\', \'METHOD_2: self\', \'METHOD_6: getPageParameters\', \'VAR_1: dp\', \'STRING_1: "gb.repositoryDeleted"\', \'STRING_2: "gb.repositoryDeleteFailed"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/panels/RepositoriesPanel.java', 21, '338:49', '350:49', 93, 10 ), ( 5, 62, 10, '@Override\n    public int size() {\n    if (list == null) {\n    return 0;\n    }\n    return list.size();\n    }', '[\'public\', \'int\', \'size\', \'(\', \')\', \'{\', \'if\', \'(\', \'list\', \'==\', \'null\', \')\', \'{\', \'return\', \'0\', \';\', \'}\', \'return\', \'list\', \'.\', \'size\', \'(\', \')\', \';\', \'}\']', 'public int size ( ) { if ( list == null ) { return 0 ; } return list . size ( ) ; }', '[]', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/panels/RepositoriesPanel.java', 21, '492:17', '498:17', 25, 5 ), ( 5, 62, 13, '@Override\n    public int compare(RepositoryModel o1, RepositoryModel o2) {\n    if (asc) {\n    return o1.lastChange.compareTo(o2.lastChange);\n    }\n    return o2.lastChange.compareTo(o1.lastChange);\n    }', '[\'public\', \'int\', \'compare\', \'(\', \'RepositoryModel\', \'o1\', \',\', \'RepositoryModel\', \'o2\', \')\', \'{\', \'if\', \'(\', \'asc\', \')\', \'{\', \'return\', \'o1.lastChange\', \'.\', \'compareTo\', \'(\', \'o2.lastChange\', \')\', \';\', \'}\', \'return\', \'o2.lastChange\', \'.\', \'compareTo\', \'(\', \'o1.lastChange\', \')\', \';\', \'}\']', 'public int METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { if ( VAR_3 ) { return VAR_4 . METHOD_2 ( VAR_5 ) ; } return VAR_5 . METHOD_2 ( VAR_4 ) ; }', '[\'TYPE_1: RepositoryModel\', \'METHOD_1: compare\', \'METHOD_2: compareTo\', \'VAR_3: asc\', \'VAR_1: o1\', \'VAR_2: o2\', \'VAR_4: o1.lastChange\', \'VAR_5: o2.lastChange\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/panels/RepositoriesPanel.java', 21, '513:41', '519:41', 44, 5 ), ( 5, 62, 14, '@Override\n    public int compare(RepositoryModel o1, RepositoryModel o2) {\n    if (asc) {\n    return o1.name.compareTo(o2.name);\n    }\n    return o2.name.compareTo(o1.name);\n    }', '[\'public\', \'int\', \'compare\', \'(\', \'RepositoryModel\', \'o1\', \',\', \'RepositoryModel\', \'o2\', \')\', \'{\', \'if\', \'(\', \'asc\', \')\', \'{\', \'return\', \'o1.name\', \'.\', \'compareTo\', \'(\', \'o2\', \'.\', \'name\', \')\', \';\', \'}\', \'return\', \'o2.name\', \'.\', \'compareTo\', \'(\', \'o1\', \'.\', \'name\', \')\', \';\', \'}\']', 'public int METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { if ( VAR_3 ) { return VAR_4 . METHOD_2 ( VAR_2 . name ) ; } return VAR_5 . METHOD_2 ( VAR_1 . name ) ; }', '[\'TYPE_1: RepositoryModel\', \'METHOD_1: compare\', \'METHOD_2: compareTo\', \'VAR_3: asc\', \'VAR_1: o1\', \'VAR_2: o2\', \'VAR_5: o2.name\', \'VAR_4: o1.name\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/panels/RepositoriesPanel.java', 21, '523:41', '529:41', 44, 5 ), ( 5, 62, 15, '@Override\n    public int compare(RepositoryModel o1, RepositoryModel o2) {\n    String own1 = ArrayUtils.toString(o1.owners);\n    String own2 = ArrayUtils.toString(o2.owners);\n    if (asc) {\n    return own1.compareTo(own2);\n    }\n    return own2.compareTo(own1);\n    }', '[\'public\', \'int\', \'compare\', \'(\', \'RepositoryModel\', \'o1\', \',\', \'RepositoryModel\', \'o2\', \')\', \'{\', \'String\', \'own1\', \'=\', \'ArrayUtils\', \'.\', \'toString\', \'(\', \'o1.owners\', \')\', \';\', \'String\', \'own2\', \'=\', \'ArrayUtils\', \'.\', \'toString\', \'(\', \'o2.owners\', \')\', \';\', \'if\', \'(\', \'asc\', \')\', \'{\', \'return\', \'own1\', \'.\', \'compareTo\', \'(\', \'own2\', \')\', \';\', \'}\', \'return\', \'own2\', \'.\', \'compareTo\', \'(\', \'own1\', \')\', \';\', \'}\']', 'public int METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { String VAR_3 = TYPE_2 . toString ( VAR_4 ) ; String VAR_5 = TYPE_2 . toString ( VAR_6 ) ; if ( VAR_7 ) { return VAR_3 . METHOD_2 ( VAR_5 ) ; } return VAR_5 . METHOD_2 ( VAR_3 ) ; }', '[\'TYPE_2: ArrayUtils\', \'TYPE_1: RepositoryModel\', \'METHOD_1: compare\', \'METHOD_2: compareTo\', \'VAR_7: asc\', \'VAR_1: o1\', \'VAR_4: o1.owners\', \'VAR_2: o2\', \'VAR_6: o2.owners\', \'VAR_5: own2\', \'VAR_3: own1\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/panels/RepositoriesPanel.java', 21, '533:41', '541:41', 60, 7 ), ( 5, 62, 16, '@Override\n    public int compare(RepositoryModel o1, RepositoryModel o2) {\n    if (asc) {\n    return o1.description.compareTo(o2.description);\n    }\n    return o2.description.compareTo(o1.description);\n    }', '[\'public\', \'int\', \'compare\', \'(\', \'RepositoryModel\', \'o1\', \',\', \'RepositoryModel\', \'o2\', \')\', \'{\', \'if\', \'(\', \'asc\', \')\', \'{\', \'return\', \'o1.description\', \'.\', \'compareTo\', \'(\', \'o2.description\', \')\', \';\', \'}\', \'return\', \'o2.description\', \'.\', \'compareTo\', \'(\', \'o1.description\', \')\', \';\', \'}\']', 'public int METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { if ( VAR_3 ) { return VAR_4 . METHOD_2 ( VAR_5 ) ; } return VAR_5 . METHOD_2 ( VAR_4 ) ; }', '[\'TYPE_1: RepositoryModel\', \'METHOD_1: compare\', \'METHOD_2: compareTo\', \'VAR_3: asc\', \'VAR_1: o1\', \'VAR_2: o2\', \'VAR_5: o2.description\', \'VAR_4: o1.description\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/panels/RepositoriesPanel.java', 21, '545:41', '551:41', 44, 5 ), ( 5, 63, 0, '@Override\n    public void onClick() {\n    if (GitBlit.self().deleteRepositoryModel(entry)) {\n    // redirect to the owning page\n    if (entry.isPersonalRepository()) {\n    setResponsePage(getPage().getClass(), WicketUtils.newUsernameParameter(entry.projectPath.substring(1)));\n    } else {\n    setResponsePage(getPage().getClass(), WicketUtils.newProjectParameter(entry.projectPath));\n    }\n    } else {\n    error(MessageFormat.format(getString("gb.repositoryDeleteFailed"), entry));\n    }\n    }', '[\'public\', \'void\', \'onClick\', \'(\', \')\', \'{\', \'if\', \'(\', \'GitBlit\', \'.\', \'self\', \'(\', \')\', \'.\', \'deleteRepositoryModel\', \'(\', \'entry\', \')\', \')\', \'{\', \'if\', \'(\', \'entry\', \'.\', \'isPersonalRepository\', \'(\', \')\', \')\', \'{\', \'setResponsePage\', \'(\', \'getPage\', \'(\', \')\', \'.\', \'getClass\', \'(\', \')\', \',\', \'WicketUtils\', \'.\', \'newUsernameParameter\', \'(\', \'entry.projectPath\', \'.\', \'substring\', \'(\', \'1\', \')\', \')\', \')\', \';\', \'}\', \'else\', \'{\', \'setResponsePage\', \'(\', \'getPage\', \'(\', \')\', \'.\', \'getClass\', \'(\', \')\', \',\', \'WicketUtils\', \'.\', \'newProjectParameter\', \'(\', \'entry.projectPath\', \')\', \')\', \';\', \'}\', \'}\', \'else\', \'{\', \'error\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'getString\', \'(\', \'"gb.repositoryDeleteFailed"\', \')\', \',\', \'entry\', \')\', \')\', \';\', \'}\', \'}\']', 'public void METHOD_1 ( ) { if ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( entry ) ) { if ( entry . METHOD_4 ( ) ) { METHOD_5 ( METHOD_6 ( ) . getClass ( ) , TYPE_2 . METHOD_7 ( VAR_1 . substring ( 1 ) ) ) ; } else { METHOD_5 ( METHOD_6 ( ) . getClass ( ) , TYPE_2 . METHOD_8 ( VAR_1 ) ) ; } } else { error ( TYPE_3 . format ( getString ( STRING_1 ) , entry ) ) ; } }', '[\'TYPE_2: WicketUtils\', \'TYPE_3: MessageFormat\', \'TYPE_1: GitBlit\', \'METHOD_5: setResponsePage\', \'METHOD_1: onClick\', \'METHOD_4: isPersonalRepository\', \'METHOD_3: deleteRepositoryModel\', \'METHOD_6: getPage\', \'METHOD_7: newUsernameParameter\', \'METHOD_2: self\', \'METHOD_8: newProjectParameter\', \'VAR_1: entry.projectPath\', \'STRING_1: "gb.repositoryDeleteFailed"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/panels/ProjectRepositoryPanel.java', 2, '146:41', '158:41', 94, 9 ), ( 5, 68, 1, 'protected TimeUtils getTimeUtils() {\n    if (timeUtils == null) {\n    ResourceBundle bundle;\n    try {\n    bundle = ResourceBundle.getBundle("com.gitblit.wicket.GitBlitWebApp", GitBlitWebSession.get().getLocale());\n    } catch (Throwable t) {\n    bundle = ResourceBundle.getBundle("com.gitblit.wicket.GitBlitWebApp");\n    }\n    timeUtils = new TimeUtils(bundle);\n    }\n    return timeUtils;\n    }', '[\'protected\', \'TimeUtils\', \'getTimeUtils\', \'(\', \')\', \'{\', \'if\', \'(\', \'timeUtils\', \'==\', \'null\', \')\', \'{\', \'ResourceBundle\', \'bundle\', \';\', \'try\', \'{\', \'bundle\', \'=\', \'ResourceBundle\', \'.\', \'getBundle\', \'(\', \'"com.gitblit.wicket.GitBlitWebApp"\', \',\', \'GitBlitWebSession\', \'.\', \'get\', \'(\', \')\', \'.\', \'getLocale\', \'(\', \')\', \')\', \';\', \'}\', \'catch\', \'(\', \'Throwable\', \'t\', \')\', \'{\', \'bundle\', \'=\', \'ResourceBundle\', \'.\', \'getBundle\', \'(\', \'"com.gitblit.wicket.GitBlitWebApp"\', \')\', \';\', \'}\', \'timeUtils\', \'=\', \'new\', \'TimeUtils\', \'(\', \'bundle\', \')\', \';\', \'}\', \'return\', \'timeUtils\', \';\', \'}\']', 'protected TYPE_1 METHOD_1 ( ) { if ( VAR_1 == null ) { TYPE_2 VAR_2 ; try { VAR_2 = TYPE_2 . METHOD_2 ( STRING_1 , TYPE_3 . get ( ) . METHOD_3 ( ) ) ; } catch ( Throwable t ) { VAR_2 = TYPE_2 . METHOD_2 ( STRING_1 ) ; } VAR_1 = new TYPE_1 ( VAR_2 ) ; } return VAR_1 ; }', '[\'TYPE_1: TimeUtils\', \'TYPE_3: GitBlitWebSession\', \'TYPE_2: ResourceBundle\', \'METHOD_1: getTimeUtils\', \'METHOD_3: getLocale\', \'METHOD_2: getBundle\', \'VAR_1: timeUtils\', \'VAR_2: bundle\', \'STRING_1: "com.gitblit.wicket.GitBlitWebApp"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/panels/BasePanel.java', 8, '48:9', '59:9', 64, 9 ), ( 5, 68, 2, 'protected void setPersonSearchTooltip(Component component, String value, Constants.SearchType searchType) {\n    if (searchType.equals(Constants.SearchType.AUTHOR)) {\n    WicketUtils.setHtmlTooltip(component, getString("gb.searchForAuthor") + " " + value);\n    } else if (searchType.equals(Constants.SearchType.COMMITTER)) {\n    WicketUtils.setHtmlTooltip(component, getString("gb.searchForCommitter") + " " + value);\n    }\n    }', '[\'protected\', \'void\', \'setPersonSearchTooltip\', \'(\', \'Component\', \'component\', \',\', \'String\', \'value\', \',\', \'Constants.SearchType\', \'searchType\', \')\', \'{\', \'if\', \'(\', \'searchType\', \'.\', \'equals\', \'(\', \'Constants.SearchType.AUTHOR\', \')\', \')\', \'{\', \'WicketUtils\', \'.\', \'setHtmlTooltip\', \'(\', \'component\', \',\', \'getString\', \'(\', \'"gb.searchForAuthor"\', \')\', \'+\', \'" "\', \'+\', \'value\', \')\', \';\', \'}\', \'else\', \'if\', \'(\', \'searchType\', \'.\', \'equals\', \'(\', \'Constants.SearchType.COMMITTER\', \')\', \')\', \'{\', \'WicketUtils\', \'.\', \'setHtmlTooltip\', \'(\', \'component\', \',\', \'getString\', \'(\', \'"gb.searchForCommitter"\', \')\', \'+\', \'" "\', \'+\', \'value\', \')\', \';\', \'}\', \'}\']', 'protected void METHOD_1 ( TYPE_1 VAR_1 , String value , TYPE_2 VAR_2 ) { if ( VAR_2 . equals ( VAR_3 ) ) { TYPE_3 . METHOD_2 ( VAR_1 , getString ( STRING_1 ) + STRING_2 + value ) ; } else if ( VAR_2 . equals ( VAR_4 ) ) { TYPE_3 . METHOD_2 ( VAR_1 , getString ( STRING_3 ) + STRING_2 + value ) ; } }', '[\'TYPE_3: WicketUtils\', \'TYPE_1: Component\', \'TYPE_2: Constants.SearchType\', \'METHOD_2: setHtmlTooltip\', \'METHOD_1: setPersonSearchTooltip\', \'VAR_1: component\', \'VAR_2: searchType\', \'VAR_3: Constants.SearchType.AUTHOR\', \'VAR_4: Constants.SearchType.COMMITTER\', \'STRING_3: "gb.searchForCommitter"\', \'STRING_1: "gb.searchForAuthor"\', \'STRING_2: " "\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/panels/BasePanel.java', 8, '61:9', '67:9', 79, 5 ), ( 5, 68, 3, 'protected String newValue(final String currentValue, final String replacementValue) {\n    String prefix = "var conf = confirm(\'" + replacementValue + "\'); "\n    + "if (!conf) return false; ";\n    String result = prefix;\n    if (currentValue != null) {\n    result = prefix + currentValue;\n    }\n    return result;\n    }', '[\'protected\', \'String\', \'newValue\', \'(\', \'final\', \'String\', \'currentValue\', \',\', \'final\', \'String\', \'replacementValue\', \')\', \'{\', \'String\', \'prefix\', \'=\', \'"var conf = confirm(\\\'"\', \'+\', \'replacementValue\', \'+\', \'"\\\'); "\', \'+\', \'"if (!conf) return false; "\', \';\', \'String\', \'result\', \'=\', \'prefix\', \';\', \'if\', \'(\', \'currentValue\', \'!=\', \'null\', \')\', \'{\', \'result\', \'=\', \'prefix\', \'+\', \'currentValue\', \';\', \'}\', \'return\', \'result\', \';\', \'}\']', 'protected String METHOD_1 ( final String VAR_1 , final String VAR_2 ) { String VAR_3 = STRING_1 + VAR_2 + STRING_2 + STRING_3 ; String result = VAR_3 ; if ( VAR_1 != null ) { result = VAR_3 + VAR_1 ; } return result ; }', '[\'METHOD_1: newValue\', \'VAR_3: prefix\', \'VAR_2: replacementValue\', \'VAR_1: currentValue\', \'STRING_2: "\\\'); "\', \'STRING_1: "var conf = confirm(\\\'"\', \'STRING_3: "if (!conf) return false; "\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/panels/BasePanel.java', 8, '77:17', '85:17', 47, 7 ), ( 5, 71, 6, 'public PushesPanel(String wicketId, List<PushLogEntry> pushes) {\n    super(wicketId);\n    hasPushes = pushes.size() > 0;\n    setup(pushes);\n    add(new Label("morePushes").setVisible(false));\n    }', '[\'public\', \'PushesPanel\', \'(\', \'String\', \'wicketId\', \',\', \'List\', \'<\', \'PushLogEntry\', \'>\', \'pushes\', \')\', \'{\', \'super\', \'(\', \'wicketId\', \')\', \';\', \'hasPushes\', \'=\', \'pushes\', \'.\', \'size\', \'(\', \')\', \'>\', \'0\', \';\', \'setup\', \'(\', \'pushes\', \')\', \';\', \'add\', \'(\', \'new\', \'Label\', \'(\', \'"morePushes"\', \')\', \'.\', \'setVisible\', \'(\', \'false\', \')\', \')\', \';\', \'}\']', 'public VAR_1 ( String VAR_2 , List < TYPE_1 > VAR_3 ) { super ( VAR_2 ) ; VAR_4 = VAR_3 . size ( ) > 0 ; METHOD_1 ( VAR_3 ) ; add ( new TYPE_2 ( STRING_1 ) . METHOD_2 ( false ) ) ; }', '[\'TYPE_2: Label\', \'TYPE_1: PushLogEntry\', \'METHOD_2: setVisible\', \'METHOD_1: setup\', \'VAR_1: PushesPanel\', \'VAR_4: hasPushes\', \'VAR_2: wicketId\', \'VAR_3: pushes\', \'STRING_1: "morePushes"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/panels/PushesPanel.java', 7, '99:9', '104:9', 47, 5 ), ( 5, 75, 2, '@Override\n    public void onClick() {\n    if (GitBlit.self().deleteUser(entry.username)) {\n    users.remove(entry);\n    info(MessageFormat.format(getString("gb.userDeleted"), entry.username));\n    } else {\n    error(MessageFormat.format(getString("gb.deleteUserFailed"),\n    									entry.username));\n    }\n    }', '[\'public\', \'void\', \'onClick\', \'(\', \')\', \'{\', \'if\', \'(\', \'GitBlit\', \'.\', \'self\', \'(\', \')\', \'.\', \'deleteUser\', \'(\', \'entry.username\', \')\', \')\', \'{\', \'users\', \'.\', \'remove\', \'(\', \'entry\', \')\', \';\', \'info\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'getString\', \'(\', \'"gb.userDeleted"\', \')\', \',\', \'entry.username\', \')\', \')\', \';\', \'}\', \'else\', \'{\', \'error\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'getString\', \'(\', \'"gb.deleteUserFailed"\', \')\', \',\', \'entry.username\', \')\', \')\', \';\', \'}\', \'}\']', 'public void METHOD_1 ( ) { if ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ) { VAR_2 . remove ( entry ) ; info ( TYPE_2 . format ( getString ( STRING_1 ) , VAR_1 ) ) ; } else { error ( TYPE_2 . format ( getString ( STRING_2 ) , VAR_1 ) ) ; } }', '[\'TYPE_2: MessageFormat\', \'TYPE_1: GitBlit\', \'METHOD_1: onClick\', \'METHOD_3: deleteUser\', \'METHOD_2: self\', \'VAR_1: entry.username\', \'VAR_2: users\', \'STRING_1: "gb.userDeleted"\', \'STRING_2: "gb.deleteUserFailed"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/panels/UsersPanel.java', 4, '95:41', '104:41', 68, 8 ), ( 5, 77, 2, 'private String describeToken(FederationToken token) {\n    switch (token) {\n    case ALL:\n    return getString("gb.tokenAllDescription");\n    case USERS_AND_REPOSITORIES:\n    return getString("gb.tokenUnrDescription");\n    case REPOSITORIES:\n    default:\n    return getString("gb.tokenJurDescription");\n    }\n    }', '[\'private\', \'String\', \'describeToken\', \'(\', \'FederationToken\', \'token\', \')\', \'{\', \'switch\', \'(\', \'token\', \')\', \'{\', \'case\', \'ALL\', \':\', \'return\', \'getString\', \'(\', \'"gb.tokenAllDescription"\', \')\', \';\', \'case\', \'USERS_AND_REPOSITORIES\', \':\', \'return\', \'getString\', \'(\', \'"gb.tokenUnrDescription"\', \')\', \';\', \'case\', \'REPOSITORIES\', \':\', \'default\', \':\', \'return\', \'getString\', \'(\', \'"gb.tokenJurDescription"\', \')\', \';\', \'}\', \'}\']', 'private String METHOD_1 ( TYPE_1 token ) { switch ( token ) { case VAR_1 : return getString ( STRING_1 ) ; case VAR_2 : return getString ( STRING_2 ) ; case VAR_3 : default : return getString ( STRING_3 ) ; } }', '[\'TYPE_1: FederationToken\', \'METHOD_1: describeToken\', \'VAR_1: ALL\', \'VAR_3: REPOSITORIES\', \'VAR_2: USERS_AND_REPOSITORIES\', \'STRING_1: "gb.tokenAllDescription"\', \'STRING_3: "gb.tokenJurDescription"\', \'STRING_2: "gb.tokenUnrDescription"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/panels/FederationTokensPanel.java', 4, '99:9', '109:9', 43, 9 ), ( 5, 78, 0, 'public boolean show(RegistrantAccessPermission ap) {\n    switch (this) {\n    case specified:\n    return ap.mutable || ap.isOwner();\n    case mutable:\n    return ap.mutable;\n    case effective:\n    return true;\n    default:\n    return true;\n    }\n    }', '[\'public\', \'boolean\', \'show\', \'(\', \'RegistrantAccessPermission\', \'ap\', \')\', \'{\', \'switch\', \'(\', \'this\', \')\', \'{\', \'case\', \'specified\', \':\', \'return\', \'ap.mutable\', \'||\', \'ap\', \'.\', \'isOwner\', \'(\', \')\', \';\', \'case\', \'mutable\', \':\', \'return\', \'ap.mutable\', \';\', \'case\', \'effective\', \':\', \'return\', \'true\', \';\', \'default\', \':\', \'return\', \'true\', \';\', \'}\', \'}\']', 'public boolean METHOD_1 ( TYPE_1 VAR_1 ) { switch ( this ) { case VAR_2 : return VAR_3 || VAR_1 . METHOD_2 ( ) ; case VAR_4 : return VAR_3 ; case VAR_5 : return true ; default : return true ; } }', '[\'TYPE_1: RegistrantAccessPermission\', \'METHOD_2: isOwner\', \'METHOD_1: show\', \'VAR_5: effective\', \'VAR_4: mutable\', \'VAR_2: specified\', \'VAR_1: ap\', \'VAR_3: ap.mutable\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/panels/RegistrantPermissionsPanel.java', 15, '66:17', '77:17', 46, 10 ), ( 5, 78, 10, '@Override\n    protected void onBeforeRender()\n    {\n    String cssClass = "btn";\n    if (buttonState.equals(RegistrantPermissionsPanel.this.activeState)) {\n    cssClass = "btn btn-info active";\n    }\n    WicketUtils.setCssClass(this, cssClass);\n    super.onBeforeRender();\n    }', '[\'protected\', \'void\', \'onBeforeRender\', \'(\', \')\', \'{\', \'String\', \'cssClass\', \'=\', \'"btn"\', \';\', \'if\', \'(\', \'buttonState\', \'.\', \'equals\', \'(\', \'RegistrantPermissionsPanel.\', \'this\', \'.\', \'activeState\', \')\', \')\', \'{\', \'cssClass\', \'=\', \'"btn btn-info active"\', \';\', \'}\', \'WicketUtils\', \'.\', \'setCssClass\', \'(\', \'this\', \',\', \'cssClass\', \')\', \';\', \'super\', \'.\', \'onBeforeRender\', \'(\', \')\', \';\', \'}\']', 'protected void METHOD_1 ( ) { String VAR_1 = STRING_1 ; if ( VAR_2 . equals ( VAR_3 this . VAR_4 ) ) { VAR_1 = STRING_2 ; } TYPE_1 . METHOD_2 ( this , VAR_1 ) ; super . METHOD_1 ( ) ; }', '[\'TYPE_1: WicketUtils\', \'METHOD_2: setCssClass\', \'METHOD_1: onBeforeRender\', \'VAR_1: cssClass\', \'VAR_2: buttonState\', \'VAR_4: activeState\', \'VAR_3: RegistrantPermissionsPanel.\', \'STRING_2: "btn btn-info active"\', \'STRING_1: "btn"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/panels/RegistrantPermissionsPanel.java', 15, '323:17', '332:17', 46, 7 ), ( 5, 81, 2, '@Override\n    public void onClick() {\n    if (GitBlit.self().deletePendingFederationProposal(entry)) {\n    list.remove(entry);\n    info(MessageFormat.format("Proposal \'\'{0}\'\' deleted.", entry.name));\n    } else {\n    error(MessageFormat.format("Failed to delete proposal \'\'{0}\'\'!",\n    									entry.name));\n    }\n    }', '[\'public\', \'void\', \'onClick\', \'(\', \')\', \'{\', \'if\', \'(\', \'GitBlit\', \'.\', \'self\', \'(\', \')\', \'.\', \'deletePendingFederationProposal\', \'(\', \'entry\', \')\', \')\', \'{\', \'list\', \'.\', \'remove\', \'(\', \'entry\', \')\', \';\', \'info\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'"Proposal \\\'\\\'{0}\\\'\\\' deleted."\', \',\', \'entry\', \'.\', \'name\', \')\', \')\', \';\', \'}\', \'else\', \'{\', \'error\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'"Failed to delete proposal \\\'\\\'{0}\\\'\\\'!"\', \',\', \'entry\', \'.\', \'name\', \')\', \')\', \';\', \'}\', \'}\']', 'public void METHOD_1 ( ) { if ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( entry ) ) { list . remove ( entry ) ; info ( TYPE_2 . format ( STRING_1 , entry . name ) ) ; } else { error ( TYPE_2 . format ( STRING_2 , entry . name ) ) ; } }', '[\'TYPE_2: MessageFormat\', \'TYPE_1: GitBlit\', \'METHOD_3: deletePendingFederationProposal\', \'METHOD_1: onClick\', \'METHOD_2: self\', \'STRING_1: "Proposal \\\'\\\'{0}\\\'\\\' deleted."\', \'STRING_2: "Failed to delete proposal \\\'\\\'{0}\\\'\\\'!"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/panels/FederationProposalsPanel.java', 5, '68:41', '77:41', 60, 8 ), ( 5, 82, 0, 'public CommitHeaderPanel(String id, String title) {\n    super(id);\n    add(new Label("shortmessage", title));\n    add(new Label("commitid"));\n    add(new Label("author"));\n    add(new Label("date"));\n    add(new Label("authorAvatar"));\n    }', '[\'public\', \'CommitHeaderPanel\', \'(\', \'String\', \'id\', \',\', \'String\', \'title\', \')\', \'{\', \'super\', \'(\', \'id\', \')\', \';\', \'add\', \'(\', \'new\', \'Label\', \'(\', \'"shortmessage"\', \',\', \'title\', \')\', \')\', \';\', \'add\', \'(\', \'new\', \'Label\', \'(\', \'"commitid"\', \')\', \')\', \';\', \'add\', \'(\', \'new\', \'Label\', \'(\', \'"author"\', \')\', \')\', \';\', \'add\', \'(\', \'new\', \'Label\', \'(\', \'"date"\', \')\', \')\', \';\', \'add\', \'(\', \'new\', \'Label\', \'(\', \'"authorAvatar"\', \')\', \')\', \';\', \'}\']', 'public VAR_1 ( String id , String VAR_2 ) { super ( id ) ; add ( new TYPE_1 ( STRING_1 , VAR_2 ) ) ; add ( new TYPE_1 ( STRING_2 ) ) ; add ( new TYPE_1 ( STRING_3 ) ) ; add ( new TYPE_1 ( STRING_4 ) ) ; add ( new TYPE_1 ( STRING_5 ) ) ; }', '[\'TYPE_1: Label\', \'VAR_2: title\', \'VAR_1: CommitHeaderPanel\', \'STRING_2: "commitid"\', \'STRING_4: "date"\', \'STRING_1: "shortmessage"\', \'STRING_3: "author"\', \'STRING_5: "authorAvatar"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/panels/CommitHeaderPanel.java', 2, '30:9', '37:9', 63, 7 ), ( 5, 84, 2, '@Override\n    public void onClick() {\n    if (GitBlit.self().deleteTeam(entry.name)) {\n    teams.remove(entry);\n    info(MessageFormat.format("Team \'\'{0}\'\' deleted.", entry.name));\n    } else {\n    error(MessageFormat\n    .format("Failed to delete team \'\'{0}\'\'!", entry.name));\n    }\n    }', '[\'public\', \'void\', \'onClick\', \'(\', \')\', \'{\', \'if\', \'(\', \'GitBlit\', \'.\', \'self\', \'(\', \')\', \'.\', \'deleteTeam\', \'(\', \'entry\', \'.\', \'name\', \')\', \')\', \'{\', \'teams\', \'.\', \'remove\', \'(\', \'entry\', \')\', \';\', \'info\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'"Team \\\'\\\'{0}\\\'\\\' deleted."\', \',\', \'entry\', \'.\', \'name\', \')\', \')\', \';\', \'}\', \'else\', \'{\', \'error\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'"Failed to delete team \\\'\\\'{0}\\\'\\\'!"\', \',\', \'entry\', \'.\', \'name\', \')\', \')\', \';\', \'}\', \'}\']', 'public void METHOD_1 ( ) { if ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( entry . name ) ) { VAR_1 . remove ( entry ) ; info ( TYPE_2 . format ( STRING_1 , entry . name ) ) ; } else { error ( TYPE_2 . format ( STRING_2 , entry . name ) ) ; } }', '[\'TYPE_2: MessageFormat\', \'TYPE_1: GitBlit\', \'METHOD_1: onClick\', \'METHOD_3: deleteTeam\', \'METHOD_2: self\', \'VAR_1: teams\', \'STRING_1: "Team \\\'\\\'{0}\\\'\\\' deleted."\', \'STRING_2: "Failed to delete team \\\'\\\'{0}\\\'\\\'!"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/panels/TeamsPanel.java', 4, '74:41', '83:41', 62, 8 ), ( 5, 86, 9, 'protected Label createPermissionBadge(String wicketId, RepositoryUrl repoUrl) {\n    Label permissionLabel = new Label(wicketId, repoUrl.isExternal() ? externalPermission : repoUrl.permission.toString());\n    WicketUtils.setPermissionClass(permissionLabel, repoUrl.permission);\n    String tooltip = getProtocolPermissionDescription(repository, repoUrl);\n    WicketUtils.setHtmlTooltip(permissionLabel, tooltip);\n    return permissionLabel;\n    }', '[\'protected\', \'Label\', \'createPermissionBadge\', \'(\', \'String\', \'wicketId\', \',\', \'RepositoryUrl\', \'repoUrl\', \')\', \'{\', \'Label\', \'permissionLabel\', \'=\', \'new\', \'Label\', \'(\', \'wicketId\', \',\', \'repoUrl\', \'.\', \'isExternal\', \'(\', \')\', \'?\', \'externalPermission\', \':\', \'repoUrl.permission\', \'.\', \'toString\', \'(\', \')\', \')\', \';\', \'WicketUtils\', \'.\', \'setPermissionClass\', \'(\', \'permissionLabel\', \',\', \'repoUrl.permission\', \')\', \';\', \'String\', \'tooltip\', \'=\', \'getProtocolPermissionDescription\', \'(\', \'repository\', \',\', \'repoUrl\', \')\', \';\', \'WicketUtils\', \'.\', \'setHtmlTooltip\', \'(\', \'permissionLabel\', \',\', \'tooltip\', \')\', \';\', \'return\', \'permissionLabel\', \';\', \'}\']', 'protected TYPE_1 METHOD_1 ( String VAR_1 , TYPE_2 VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( VAR_1 , VAR_2 . METHOD_2 ( ) ? VAR_4 : VAR_5 . toString ( ) ) ; TYPE_3 . METHOD_3 ( VAR_3 , VAR_5 ) ; String VAR_6 = METHOD_4 ( VAR_7 , VAR_2 ) ; TYPE_3 . METHOD_5 ( VAR_3 , VAR_6 ) ; return VAR_3 ; }', '[\'TYPE_3: WicketUtils\', \'TYPE_1: Label\', \'TYPE_2: RepositoryUrl\', \'METHOD_2: isExternal\', \'METHOD_3: setPermissionClass\', \'METHOD_5: setHtmlTooltip\', \'METHOD_4: getProtocolPermissionDescription\', \'METHOD_1: createPermissionBadge\', \'VAR_2: repoUrl\', \'VAR_3: permissionLabel\', \'VAR_4: externalPermission\', \'VAR_6: tooltip\', \'VAR_1: wicketId\', \'VAR_5: repoUrl.permission\', \'VAR_7: repository\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/panels/RepositoryUrlPanel.java', 15, '340:9', '346:9', 68, 6 ), ( 5, 86, 14, 'public RepositoryUrlPanel(String wicketId, boolean onlyUrls, UserModel user, RepositoryModel repository) {\n    super(wicketId);\n    this.onlyUrls = onlyUrls;\n    this.user = user == null ? UserModel.ANONYMOUS : user;\n    this.repository = repository;\n    this.urlPermissionsMap = new HashMap<String, String>();\n    }', '[\'public\', \'RepositoryUrlPanel\', \'(\', \'String\', \'wicketId\', \',\', \'boolean\', \'onlyUrls\', \',\', \'UserModel\', \'user\', \',\', \'RepositoryModel\', \'repository\', \')\', \'{\', \'super\', \'(\', \'wicketId\', \')\', \';\', \'this\', \'.\', \'onlyUrls\', \'=\', \'onlyUrls\', \';\', \'this\', \'.\', \'user\', \'=\', \'user\', \'==\', \'null\', \'?\', \'UserModel.ANONYMOUS\', \':\', \'user\', \';\', \'this\', \'.\', \'repository\', \'=\', \'repository\', \';\', \'this\', \'.\', \'urlPermissionsMap\', \'=\', \'new\', \'HashMap\', \'<\', \'String\', \',\', \'String\', \'>\', \'(\', \')\', \';\', \'}\']', 'public VAR_1 ( String VAR_2 , boolean VAR_3 , TYPE_1 VAR_4 , TYPE_2 VAR_5 ) { super ( VAR_2 ) ; this . VAR_3 = VAR_3 ; this . VAR_4 = VAR_4 == null ? VAR_6 : VAR_4 ; this . VAR_5 = VAR_5 ; this . VAR_7 = new HashMap < String , String > ( ) ; }', '[\'TYPE_1: UserModel\', \'TYPE_2: RepositoryModel\', \'VAR_6: UserModel.ANONYMOUS\', \'VAR_7: urlPermissionsMap\', \'VAR_2: wicketId\', \'VAR_3: onlyUrls\', \'VAR_5: repository\', \'VAR_1: RepositoryUrlPanel\', \'VAR_4: user\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/panels/RepositoryUrlPanel.java', 15, '70:9', '76:9', 61, 6 ), ( 5, 87, 2, 'public void onComponentTagBody(MarkupStream markupStream, ComponentTag openTag) {\n    Response response = getResponse();\n    response.write("\\n");\n    // add all object\'s parameters:\n    for (String name : getParameterNames()) {\n    String value = getValue(name);\n    if (value != null) {\n    response.write("<param name=\\"");\n    response.write(name);\n    response.write("\\" value=\\"");\n    response.write(value);\n    response.write("\\"/>\\n");\n    }\n    }\n    super.onComponentTagBody(markupStream, openTag);\n    }', '[\'public\', \'void\', \'onComponentTagBody\', \'(\', \'MarkupStream\', \'markupStream\', \',\', \'ComponentTag\', \'openTag\', \')\', \'{\', \'Response\', \'response\', \'=\', \'getResponse\', \'(\', \')\', \';\', \'response\', \'.\', \'write\', \'(\', \'"\\\\n"\', \')\', \';\', \'for\', \'(\', \'String\', \'name\', \':\', \'getParameterNames\', \'(\', \')\', \')\', \'{\', \'String\', \'value\', \'=\', \'getValue\', \'(\', \'name\', \')\', \';\', \'if\', \'(\', \'value\', \'!=\', \'null\', \')\', \'{\', \'response\', \'.\', \'write\', \'(\', \'"<param name=\\\\""\', \')\', \';\', \'response\', \'.\', \'write\', \'(\', \'name\', \')\', \';\', \'response\', \'.\', \'write\', \'(\', \'"\\\\" value=\\\\""\', \')\', \';\', \'response\', \'.\', \'write\', \'(\', \'value\', \')\', \';\', \'response\', \'.\', \'write\', \'(\', \'"\\\\"/>\\\\n"\', \')\', \';\', \'}\', \'}\', \'super\', \'.\', \'onComponentTagBody\', \'(\', \'markupStream\', \',\', \'openTag\', \')\', \';\', \'}\']', 'public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { Response response = METHOD_2 ( ) ; response . write ( STRING_1 ) ; for ( String name : METHOD_3 ( ) ) { String value = getValue ( name ) ; if ( value != null ) { response . write ( STRING_2 ) ; response . write ( name ) ; response . write ( STRING_3 ) ; response . write ( value ) ; response . write ( STRING_4 ) ; } } super . METHOD_1 ( VAR_1 , VAR_2 ) ; }', '[\'TYPE_2: ComponentTag\', \'TYPE_1: MarkupStream\', \'METHOD_2: getResponse\', \'METHOD_3: getParameterNames\', \'METHOD_1: onComponentTagBody\', \'VAR_2: openTag\', \'VAR_1: markupStream\', \'STRING_4: "\\\\"/>\\\\n"\', \'STRING_3: "\\\\" value=\\\\""\', \'STRING_2: "<param name=\\\\""\', \'STRING_1: "\\\\n"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/panels/ObjectContainer.java', 5, '125:9', '142:9', 96, 12 ), ( 5, 87, 3, 'protected ClientProperties getClientProperties() {\n    if (clientProperties == null) {\n    ClientInfo clientInfo = WebSession.get().getClientInfo();\n    if (clientInfo == null || !(clientInfo instanceof WebClientInfo)) {\n    clientInfo = new WebClientInfo((WebRequestCycle) getRequestCycle());\n    WebSession.get().setClientInfo(clientInfo);\n    }\n    clientProperties = ((WebClientInfo) clientInfo).getProperties();\n    }\n    return (clientProperties);\n    }', '[\'protected\', \'ClientProperties\', \'getClientProperties\', \'(\', \')\', \'{\', \'if\', \'(\', \'clientProperties\', \'==\', \'null\', \')\', \'{\', \'ClientInfo\', \'clientInfo\', \'=\', \'WebSession\', \'.\', \'get\', \'(\', \')\', \'.\', \'getClientInfo\', \'(\', \')\', \';\', \'if\', \'(\', \'clientInfo\', \'==\', \'null\', \'||\', \'!\', \'(\', \'clientInfo\', \'instanceof\', \'WebClientInfo\', \')\', \')\', \'{\', \'clientInfo\', \'=\', \'new\', \'WebClientInfo\', \'(\', \'(\', \'WebRequestCycle\', \')\', \'getRequestCycle\', \'(\', \')\', \')\', \';\', \'WebSession\', \'.\', \'get\', \'(\', \')\', \'.\', \'setClientInfo\', \'(\', \'clientInfo\', \')\', \';\', \'}\', \'clientProperties\', \'=\', \'(\', \'(\', \'WebClientInfo\', \')\', \'clientInfo\', \')\', \'.\', \'getProperties\', \'(\', \')\', \';\', \'}\', \'return\', \'(\', \'clientProperties\', \')\', \';\', \'}\']', 'protected TYPE_1 METHOD_1 ( ) { if ( VAR_1 == null ) { TYPE_2 VAR_2 = TYPE_3 . get ( ) . METHOD_2 ( ) ; if ( VAR_2 == null || ! ( VAR_2 instanceof TYPE_4 ) ) { VAR_2 = new TYPE_4 ( ( TYPE_5 ) METHOD_3 ( ) ) ; TYPE_3 . get ( ) . METHOD_4 ( VAR_2 ) ; } VAR_1 = ( ( TYPE_4 ) VAR_2 ) . METHOD_5 ( ) ; } return ( VAR_1 ) ; }', '[\'TYPE_5: WebRequestCycle\', \'TYPE_4: WebClientInfo\', \'TYPE_1: ClientProperties\', \'TYPE_3: WebSession\', \'TYPE_2: ClientInfo\', \'METHOD_1: getClientProperties\', \'METHOD_3: getRequestCycle\', \'METHOD_5: getProperties\', \'METHOD_2: getClientInfo\', \'METHOD_4: setClientInfo\', \'VAR_1: clientProperties\', \'VAR_2: clientInfo\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/panels/ObjectContainer.java', 5, '145:9', '157:9', 79, 8 ), ( 5, 88, 1, 'public void cacheRequest(Class<? extends Page> pageClass) {\n    // build absolute url with correctly encoded parameters?!\n    Request req = WebRequestCycle.get().getRequest();\n    Map<String, ?> params = req.getRequestParameters().getParameters();\n    PageParameters pageParams = new PageParameters(params);\n    String relativeUrl = WebRequestCycle.get().urlFor(pageClass, pageParams).toString();\n    requestUrl = RequestUtils.toAbsolutePath(relativeUrl);\n    if (isTemporary())\n    {\n    // we must bind the temporary session into the session store\n    // so that we can re-use this session for reporting an error message\n    // on the redirected page and continuing the request after\n    // authentication.\n    bind();\n    }\n    }', '[\'public\', \'void\', \'cacheRequest\', \'(\', \'Class\', \'<\', \'?\', \'extends\', \'Page\', \'>\', \'pageClass\', \')\', \'{\', \'Request\', \'req\', \'=\', \'WebRequestCycle\', \'.\', \'get\', \'(\', \')\', \'.\', \'getRequest\', \'(\', \')\', \';\', \'Map\', \'<\', \'String\', \',\', \'?\', \'>\', \'params\', \'=\', \'req\', \'.\', \'getRequestParameters\', \'(\', \')\', \'.\', \'getParameters\', \'(\', \')\', \';\', \'PageParameters\', \'pageParams\', \'=\', \'new\', \'PageParameters\', \'(\', \'params\', \')\', \';\', \'String\', \'relativeUrl\', \'=\', \'WebRequestCycle\', \'.\', \'get\', \'(\', \')\', \'.\', \'urlFor\', \'(\', \'pageClass\', \',\', \'pageParams\', \')\', \'.\', \'toString\', \'(\', \')\', \';\', \'requestUrl\', \'=\', \'RequestUtils\', \'.\', \'toAbsolutePath\', \'(\', \'relativeUrl\', \')\', \';\', \'if\', \'(\', \'isTemporary\', \'(\', \')\', \')\', \'{\', \'bind\', \'(\', \')\', \';\', \'}\', \'}\']', 'public void METHOD_1 ( Class < ? extends TYPE_1 > VAR_1 ) { TYPE_2 VAR_2 = TYPE_3 . get ( ) . METHOD_2 ( ) ; Map < String , ? > params = VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) ; TYPE_4 VAR_3 = new TYPE_4 ( params ) ; String VAR_4 = TYPE_3 . get ( ) . METHOD_5 ( VAR_1 , VAR_3 ) . toString ( ) ; VAR_5 = TYPE_5 . METHOD_6 ( VAR_4 ) ; if ( METHOD_7 ( ) ) { METHOD_8 ( ) ; } }', '[\'TYPE_3: WebRequestCycle\', \'TYPE_2: Request\', \'TYPE_1: Page\', \'TYPE_4: PageParameters\', \'TYPE_5: RequestUtils\', \'METHOD_1: cacheRequest\', \'METHOD_8: bind\', \'METHOD_2: getRequest\', \'METHOD_3: getRequestParameters\', \'METHOD_5: urlFor\', \'METHOD_4: getParameters\', \'METHOD_6: toAbsolutePath\', \'METHOD_7: isTemporary\', \'VAR_5: requestUrl\', \'VAR_3: pageParams\', \'VAR_1: pageClass\', \'VAR_4: relativeUrl\', \'VAR_2: req\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/GitBlitWebSession.java', 15, '67:9', '82:9', 92, 8 ), ( 5, 88, 2, 'public boolean continueRequest() {\n    if (requestUrl != null) {\n    String url = requestUrl;\n    requestUrl = null;\n    throw new RedirectToUrlException(url);\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'continueRequest\', \'(\', \')\', \'{\', \'if\', \'(\', \'requestUrl\', \'!=\', \'null\', \')\', \'{\', \'String\', \'url\', \'=\', \'requestUrl\', \';\', \'requestUrl\', \'=\', \'null\', \';\', \'throw\', \'new\', \'RedirectToUrlException\', \'(\', \'url\', \')\', \';\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean METHOD_1 ( ) { if ( VAR_1 != null ) { String url = VAR_1 ; VAR_1 = null ; throw new TYPE_1 ( url ) ; } return false ; }', '[\'TYPE_1: RedirectToUrlException\', \'METHOD_1: continueRequest\', \'VAR_1: requestUrl\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/GitBlitWebSession.java', 15, '93:9', '100:9', 33, 6 ), ( 5, 88, 8, 'public TimeZone getTimezone() {\n    if (timezone == null) {\n    timezone = ((WebClientInfo) getClientInfo()).getProperties().getTimeZone();\n    }\n    // use server timezone if we can\'t determine the client timezone\n    if (timezone == null) {\n    timezone = TimeZone.getDefault();\n    }\n    return timezone;\n    }', '[\'public\', \'TimeZone\', \'getTimezone\', \'(\', \')\', \'{\', \'if\', \'(\', \'timezone\', \'==\', \'null\', \')\', \'{\', \'timezone\', \'=\', \'(\', \'(\', \'WebClientInfo\', \')\', \'getClientInfo\', \'(\', \')\', \')\', \'.\', \'getProperties\', \'(\', \')\', \'.\', \'getTimeZone\', \'(\', \')\', \';\', \'}\', \'if\', \'(\', \'timezone\', \'==\', \'null\', \')\', \'{\', \'timezone\', \'=\', \'TimeZone\', \'.\', \'getDefault\', \'(\', \')\', \';\', \'}\', \'return\', \'timezone\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( ) { if ( VAR_1 == null ) { VAR_1 = ( ( TYPE_2 ) METHOD_2 ( ) ) . METHOD_3 ( ) . METHOD_4 ( ) ; } if ( VAR_1 == null ) { VAR_1 = TYPE_1 . METHOD_5 ( ) ; } return VAR_1 ; }', '[\'TYPE_2: WebClientInfo\', \'TYPE_1: TimeZone\', \'METHOD_4: getTimeZone\', \'METHOD_1: getTimezone\', \'METHOD_3: getProperties\', \'METHOD_5: getDefault\', \'METHOD_2: getClientInfo\', \'VAR_1: timezone\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/GitBlitWebSession.java', 15, '125:9', '134:9', 49, 6 ), ( 5, 89, 0, 'protected String urlEncodePathComponent(String string) {\n    char altChar = GitBlit.getChar(Keys.web.forwardSlashCharacter, \'/\');\n    if (altChar != \'/\') {\n    string = string.replace(\'/\', altChar);\n    }\n    return super.urlEncodePathComponent(string);\n    }', '[\'protected\', \'String\', \'urlEncodePathComponent\', \'(\', \'String\', \'string\', \')\', \'{\', \'char\', \'altChar\', \'=\', \'GitBlit\', \'.\', \'getChar\', \'(\', \'Keys.web.forwardSlashCharacter\', \',\', "\'/\'", \')\', \';\', \'if\', \'(\', \'altChar\', \'!=\', "\'/\'", \')\', \'{\', \'string\', \'=\', \'string\', \'.\', \'replace\', \'(\', "\'/\'", \',\', \'altChar\', \')\', \';\', \'}\', \'return\', \'super\', \'.\', \'urlEncodePathComponent\', \'(\', \'string\', \')\', \';\', \'}\']', 'protected String METHOD_1 ( String VAR_1 ) { char VAR_2 = TYPE_1 . METHOD_2 ( VAR_3 , CHAR_1 ) ; if ( VAR_2 != CHAR_1 ) { VAR_1 = VAR_1 . METHOD_3 ( CHAR_1 , VAR_2 ) ; } return super . METHOD_1 ( VAR_1 ) ; }', '[\'TYPE_1: GitBlit\', \'METHOD_2: getChar\', \'METHOD_3: replace\', \'METHOD_1: urlEncodePathComponent\', \'VAR_1: string\', \'VAR_2: altChar\', \'VAR_3: Keys.web.forwardSlashCharacter\', "CHAR_1: \'/\'"]', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/GitblitParamUrlCodingStrategy.java', 4, '68:9', '74:9', 52, 5 ), ( 5, 89, 1, 'protected String urlDecodePathComponent(String value) {\n    char altChar = GitBlit.getChar(Keys.web.forwardSlashCharacter, \'/\');\n    if (altChar != \'/\') {\n    value = value.replace(altChar, \'/\');\n    }\n    return super.urlDecodePathComponent(value);\n    }', '[\'protected\', \'String\', \'urlDecodePathComponent\', \'(\', \'String\', \'value\', \')\', \'{\', \'char\', \'altChar\', \'=\', \'GitBlit\', \'.\', \'getChar\', \'(\', \'Keys.web.forwardSlashCharacter\', \',\', "\'/\'", \')\', \';\', \'if\', \'(\', \'altChar\', \'!=\', "\'/\'", \')\', \'{\', \'value\', \'=\', \'value\', \'.\', \'replace\', \'(\', \'altChar\', \',\', "\'/\'", \')\', \';\', \'}\', \'return\', \'super\', \'.\', \'urlDecodePathComponent\', \'(\', \'value\', \')\', \';\', \'}\']', 'protected String METHOD_1 ( String value ) { char VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 , CHAR_1 ) ; if ( VAR_1 != CHAR_1 ) { value = value . METHOD_3 ( VAR_1 , CHAR_1 ) ; } return super . METHOD_1 ( value ) ; }', '[\'TYPE_1: GitBlit\', \'METHOD_2: getChar\', \'METHOD_3: replace\', \'METHOD_1: urlDecodePathComponent\', \'VAR_1: altChar\', \'VAR_2: Keys.web.forwardSlashCharacter\', "CHAR_1: \'/\'"]', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/GitblitParamUrlCodingStrategy.java', 4, '83:9', '89:9', 52, 5 ), ( 5, 89, 2, '@Override\n    public IRequestTarget decode(RequestParameters requestParameters) {\n    final String parametersFragment = requestParameters.getPath().substring(\n    				getMountPath().length());\n    logger.debug(MessageFormat\n    .format("REQ: {0} PARAMS {1}", getMountPath(), parametersFragment));\n    final PageParameters parameters = new PageParameters(decodeParameters(parametersFragment,\n    				requestParameters.getParameters()));\n    return super.decode(requestParameters);\n    }', '[\'public\', \'IRequestTarget\', \'decode\', \'(\', \'RequestParameters\', \'requestParameters\', \')\', \'{\', \'final\', \'String\', \'parametersFragment\', \'=\', \'requestParameters\', \'.\', \'getPath\', \'(\', \')\', \'.\', \'substring\', \'(\', \'getMountPath\', \'(\', \')\', \'.\', \'length\', \'(\', \')\', \')\', \';\', \'logger\', \'.\', \'debug\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'"REQ: {0} PARAMS {1}"\', \',\', \'getMountPath\', \'(\', \')\', \',\', \'parametersFragment\', \')\', \')\', \';\', \'final\', \'PageParameters\', \'parameters\', \'=\', \'new\', \'PageParameters\', \'(\', \'decodeParameters\', \'(\', \'parametersFragment\', \',\', \'requestParameters\', \'.\', \'getParameters\', \'(\', \')\', \')\', \')\', \';\', \'return\', \'super\', \'.\', \'decode\', \'(\', \'requestParameters\', \')\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { final String VAR_2 = VAR_1 . METHOD_2 ( ) . substring ( METHOD_3 ( ) . length ( ) ) ; logger . debug ( TYPE_3 . format ( STRING_1 , METHOD_3 ( ) , VAR_2 ) ) ; final TYPE_4 parameters = new TYPE_4 ( METHOD_4 ( VAR_2 , VAR_1 . METHOD_5 ( ) ) ) ; return super . METHOD_1 ( VAR_1 ) ; }', '[\'TYPE_3: MessageFormat\', \'TYPE_1: IRequestTarget\', \'TYPE_4: PageParameters\', \'TYPE_2: RequestParameters\', \'METHOD_3: getMountPath\', \'METHOD_4: decodeParameters\', \'METHOD_2: getPath\', \'METHOD_5: getParameters\', \'METHOD_1: decode\', \'VAR_1: requestParameters\', \'VAR_2: parametersFragment\', \'STRING_1: "REQ: {0} PARAMS {1}"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/GitblitParamUrlCodingStrategy.java', 4, '98:9', '108:9', 72, 9 ), ( 5, 92, 5, 'public static void setChangeTypeCssClass(Component container, ChangeType type) {\n    switch (type) {\n    case ADD:\n    setCssClass(container, "addition");\n    break;\n    case COPY:\n    case RENAME:\n    setCssClass(container, "rename");\n    break;\n    case DELETE:\n    setCssClass(container, "deletion");\n    break;\n    case MODIFY:\n    setCssClass(container, "modification");\n    break;\n    }\n    }', '[\'public\', \'static\', \'void\', \'setChangeTypeCssClass\', \'(\', \'Component\', \'container\', \',\', \'ChangeType\', \'type\', \')\', \'{\', \'switch\', \'(\', \'type\', \')\', \'{\', \'case\', \'ADD\', \':\', \'setCssClass\', \'(\', \'container\', \',\', \'"addition"\', \')\', \';\', \'break\', \';\', \'case\', \'COPY\', \':\', \'case\', \'RENAME\', \':\', \'setCssClass\', \'(\', \'container\', \',\', \'"rename"\', \')\', \';\', \'break\', \';\', \'case\', \'DELETE\', \':\', \'setCssClass\', \'(\', \'container\', \',\', \'"deletion"\', \')\', \';\', \'break\', \';\', \'case\', \'MODIFY\', \':\', \'setCssClass\', \'(\', \'container\', \',\', \'"modification"\', \')\', \';\', \'break\', \';\', \'}\', \'}\']', 'public static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 type ) { switch ( type ) { case VAR_2 : METHOD_2 ( VAR_1 , STRING_1 ) ; break ; case VAR_3 : case VAR_4 : METHOD_2 ( VAR_1 , STRING_2 ) ; break ; case VAR_5 : METHOD_2 ( VAR_1 , STRING_3 ) ; break ; case VAR_6 : METHOD_2 ( VAR_1 , STRING_4 ) ; break ; } }', '[\'TYPE_2: ChangeType\', \'TYPE_1: Component\', \'METHOD_2: setCssClass\', \'METHOD_1: setChangeTypeCssClass\', \'VAR_1: container\', \'VAR_4: RENAME\', \'VAR_2: ADD\', \'VAR_5: DELETE\', \'VAR_6: MODIFY\', \'VAR_3: COPY\', \'STRING_1: "addition"\', \'STRING_2: "rename"\', \'STRING_3: "deletion"\', \'STRING_4: "modification"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/WicketUtils.java', 64, '78:9', '94:9', 66, 15 ), ( 5, 92, 6, 'public static void setTicketCssClass(Component container, String state) {\n    String css = null;\n    if (state.equals("open")) {\n    css = "label label-important";\n    } else if (state.equals("hold")) {\n    css = "label label-warning";\n    } else if (state.equals("resolved")) {\n    css = "label label-success";\n    } else if (state.equals("invalid")) {\n    css = "label";\n    }\n    if (css != null) {\n    setCssClass(container, css);\n    }\n    }', '[\'public\', \'static\', \'void\', \'setTicketCssClass\', \'(\', \'Component\', \'container\', \',\', \'String\', \'state\', \')\', \'{\', \'String\', \'css\', \'=\', \'null\', \';\', \'if\', \'(\', \'state\', \'.\', \'equals\', \'(\', \'"open"\', \')\', \')\', \'{\', \'css\', \'=\', \'"label label-important"\', \';\', \'}\', \'else\', \'if\', \'(\', \'state\', \'.\', \'equals\', \'(\', \'"hold"\', \')\', \')\', \'{\', \'css\', \'=\', \'"label label-warning"\', \';\', \'}\', \'else\', \'if\', \'(\', \'state\', \'.\', \'equals\', \'(\', \'"resolved"\', \')\', \')\', \'{\', \'css\', \'=\', \'"label label-success"\', \';\', \'}\', \'else\', \'if\', \'(\', \'state\', \'.\', \'equals\', \'(\', \'"invalid"\', \')\', \')\', \'{\', \'css\', \'=\', \'"label"\', \';\', \'}\', \'if\', \'(\', \'css\', \'!=\', \'null\', \')\', \'{\', \'setCssClass\', \'(\', \'container\', \',\', \'css\', \')\', \';\', \'}\', \'}\']', 'public static void METHOD_1 ( TYPE_1 VAR_1 , String state ) { String VAR_2 = null ; if ( state . equals ( STRING_1 ) ) { VAR_2 = STRING_2 ; } else if ( state . equals ( STRING_3 ) ) { VAR_2 = STRING_4 ; } else if ( state . equals ( STRING_5 ) ) { VAR_2 = STRING_6 ; } else if ( state . equals ( STRING_7 ) ) { VAR_2 = STRING_8 ; } if ( VAR_2 != null ) { METHOD_2 ( VAR_1 , VAR_2 ) ; } }', '[\'TYPE_1: Component\', \'METHOD_2: setCssClass\', \'METHOD_1: setTicketCssClass\', \'VAR_1: container\', \'VAR_2: css\', \'STRING_2: "label label-important"\', \'STRING_4: "label label-warning"\', \'STRING_1: "open"\', \'STRING_3: "hold"\', \'STRING_6: "label label-success"\', \'STRING_8: "label"\', \'STRING_5: "resolved"\', \'STRING_7: "invalid"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/WicketUtils.java', 64, '96:9', '110:9', 93, 12 ), ( 5, 92, 12, 'public static ContextImage getRegistrationImage(String wicketId, FederationModel registration,\n    			Component c) {\n    if (registration.isResultData()) {\n    return WicketUtils.newImage(wicketId, "information_16x16.png",\n    					c.getString("gb.federationResults"));\n    } else {\n    return WicketUtils.newImage(wicketId, "arrow_left.png",\n    					c.getString("gb.federationRegistration"));\n    }\n    }', '[\'public\', \'static\', \'ContextImage\', \'getRegistrationImage\', \'(\', \'String\', \'wicketId\', \',\', \'FederationModel\', \'registration\', \',\', \'Component\', \'c\', \')\', \'{\', \'if\', \'(\', \'registration\', \'.\', \'isResultData\', \'(\', \')\', \')\', \'{\', \'return\', \'WicketUtils\', \'.\', \'newImage\', \'(\', \'wicketId\', \',\', \'"information_16x16.png"\', \',\', \'c\', \'.\', \'getString\', \'(\', \'"gb.federationResults"\', \')\', \')\', \';\', \'}\', \'else\', \'{\', \'return\', \'WicketUtils\', \'.\', \'newImage\', \'(\', \'wicketId\', \',\', \'"arrow_left.png"\', \',\', \'c\', \'.\', \'getString\', \'(\', \'"gb.federationRegistration"\', \')\', \')\', \';\', \'}\', \'}\']', 'public static TYPE_1 METHOD_1 ( String VAR_1 , TYPE_2 VAR_2 , TYPE_3 c ) { if ( VAR_2 . METHOD_2 ( ) ) { return TYPE_4 . METHOD_3 ( VAR_1 , STRING_1 , c . getString ( STRING_2 ) ) ; } else { return TYPE_4 . METHOD_3 ( VAR_1 , STRING_3 , c . getString ( STRING_4 ) ) ; } }', '[\'TYPE_4: WicketUtils\', \'TYPE_2: FederationModel\', \'TYPE_1: ContextImage\', \'TYPE_3: Component\', \'METHOD_3: newImage\', \'METHOD_1: getRegistrationImage\', \'METHOD_2: isResultData\', \'VAR_1: wicketId\', \'VAR_2: registration\', \'STRING_4: "gb.federationRegistration"\', \'STRING_2: "gb.federationResults"\', \'STRING_1: "information_16x16.png"\', \'STRING_3: "arrow_left.png"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/WicketUtils.java', 64, '216:9', '225:9', 62, 8 ), ( 5, 92, 16, 'public static ContextImage newImage(String wicketId, String file, String tooltip) {\n    ContextImage img = new ContextImage(wicketId, file);\n    if (!StringUtils.isEmpty(tooltip)) {\n    setHtmlTooltip(img, tooltip);\n    }\n    return img;\n    }', '[\'public\', \'static\', \'ContextImage\', \'newImage\', \'(\', \'String\', \'wicketId\', \',\', \'String\', \'file\', \',\', \'String\', \'tooltip\', \')\', \'{\', \'ContextImage\', \'img\', \'=\', \'new\', \'ContextImage\', \'(\', \'wicketId\', \',\', \'file\', \')\', \';\', \'if\', \'(\', \'!\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'tooltip\', \')\', \')\', \'{\', \'setHtmlTooltip\', \'(\', \'img\', \',\', \'tooltip\', \')\', \';\', \'}\', \'return\', \'img\', \';\', \'}\']', 'public static TYPE_1 METHOD_1 ( String VAR_1 , String file , String VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( VAR_1 , file ) ; if ( ! StringUtils . isEmpty ( VAR_2 ) ) { METHOD_2 ( VAR_3 , VAR_2 ) ; } return VAR_3 ; }', '[\'TYPE_1: ContextImage\', \'METHOD_1: newImage\', \'METHOD_2: setHtmlTooltip\', \'VAR_3: img\', \'VAR_2: tooltip\', \'VAR_1: wicketId\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/WicketUtils.java', 64, '239:9', '245:9', 49, 5 ), ( 5, 92, 18, 'public static Label newBlankIcon(String wicketId) {\n    Label lbl = new Label(wicketId);\n    setCssClass(lbl, "");\n    lbl.setRenderBodyOnly(true);\n    return lbl;\n    }', '[\'public\', \'static\', \'Label\', \'newBlankIcon\', \'(\', \'String\', \'wicketId\', \')\', \'{\', \'Label\', \'lbl\', \'=\', \'new\', \'Label\', \'(\', \'wicketId\', \')\', \';\', \'setCssClass\', \'(\', \'lbl\', \',\', \'""\', \')\', \';\', \'lbl\', \'.\', \'setRenderBodyOnly\', \'(\', \'true\', \')\', \';\', \'return\', \'lbl\', \';\', \'}\']', 'public static TYPE_1 METHOD_1 ( String VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 , STRING_1 ) ; VAR_2 . METHOD_3 ( true ) ; return VAR_2 ; }', '[\'TYPE_1: Label\', \'METHOD_3: setRenderBodyOnly\', \'METHOD_1: newBlankIcon\', \'METHOD_2: setCssClass\', \'VAR_2: lbl\', \'VAR_1: wicketId\', \'STRING_1: ""\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/WicketUtils.java', 64, '253:9', '258:9', 36, 5 ), ( 5, 92, 22, 'public void renderHead(IHeaderResponse response) {\n    String contentType = "application/rss+xml";\n    StringBuilder buffer = new StringBuilder();\n    buffer.append("<link rel=\\"alternate\\" ");\n    buffer.append("type=\\"").append(contentType).append("\\" ");\n    buffer.append("title=\\"").append(feedTitle).append("\\" ");\n    buffer.append("href=\\"").append(url).append("\\" />");\n    response.renderString(buffer.toString());\n    }', '[\'public\', \'void\', \'renderHead\', \'(\', \'IHeaderResponse\', \'response\', \')\', \'{\', \'String\', \'contentType\', \'=\', \'"application/rss+xml"\', \';\', \'StringBuilder\', \'buffer\', \'=\', \'new\', \'StringBuilder\', \'(\', \')\', \';\', \'buffer\', \'.\', \'append\', \'(\', \'"<link rel=\\\\"alternate\\\\" "\', \')\', \';\', \'buffer\', \'.\', \'append\', \'(\', \'"type=\\\\""\', \')\', \'.\', \'append\', \'(\', \'contentType\', \')\', \'.\', \'append\', \'(\', \'"\\\\" "\', \')\', \';\', \'buffer\', \'.\', \'append\', \'(\', \'"title=\\\\""\', \')\', \'.\', \'append\', \'(\', \'feedTitle\', \')\', \'.\', \'append\', \'(\', \'"\\\\" "\', \')\', \';\', \'buffer\', \'.\', \'append\', \'(\', \'"href=\\\\""\', \')\', \'.\', \'append\', \'(\', \'url\', \')\', \'.\', \'append\', \'(\', \'"\\\\" />"\', \')\', \';\', \'response\', \'.\', \'renderString\', \'(\', \'buffer\', \'.\', \'toString\', \'(\', \')\', \')\', \';\', \'}\']', 'public void METHOD_1 ( TYPE_1 response ) { String VAR_1 = STRING_1 ; StringBuilder buffer = new StringBuilder ( ) ; buffer . append ( STRING_2 ) ; buffer . append ( STRING_3 ) . append ( VAR_1 ) . append ( STRING_4 ) ; buffer . append ( STRING_5 ) . append ( VAR_2 ) . append ( STRING_4 ) ; buffer . append ( STRING_6 ) . append ( url ) . append ( STRING_7 ) ; response . METHOD_2 ( buffer . toString ( ) ) ; }', '[\'TYPE_1: IHeaderResponse\', \'METHOD_1: renderHead\', \'METHOD_2: renderString\', \'VAR_2: feedTitle\', \'VAR_1: contentType\', \'STRING_4: "\\\\" "\', \'STRING_2: "<link rel=\\\\"alternate\\\\" "\', \'STRING_3: "type=\\\\""\', \'STRING_6: "href=\\\\""\', \'STRING_7: "\\\\" />"\', \'STRING_5: "title=\\\\""\', \'STRING_1: "application/rss+xml"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/WicketUtils.java', 64, '274:25', '283:25', 89, 8 ), ( 5, 92, 32, 'public static PageParameters newPathParameter(String repositoryName, String objectId,\n    			String path) {\n    if (StringUtils.isEmpty(path)) {\n    return newObjectParameter(repositoryName, objectId);\n    }\n    if (StringUtils.isEmpty(objectId)) {\n    return new PageParameters("r=" + repositoryName + ",f=" + path);\n    }\n    return new PageParameters("r=" + repositoryName + ",h=" + objectId + ",f=" + path);\n    }', '[\'public\', \'static\', \'PageParameters\', \'newPathParameter\', \'(\', \'String\', \'repositoryName\', \',\', \'String\', \'objectId\', \',\', \'String\', \'path\', \')\', \'{\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'path\', \')\', \')\', \'{\', \'return\', \'newObjectParameter\', \'(\', \'repositoryName\', \',\', \'objectId\', \')\', \';\', \'}\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'objectId\', \')\', \')\', \'{\', \'return\', \'new\', \'PageParameters\', \'(\', \'"r="\', \'+\', \'repositoryName\', \'+\', \'"\', \'+\', \'path\', \')\', \';\', \'}\', \'return\', \'new\', \'PageParameters\', \'(\', \'"r="\', \'+\', \'repositoryName\', \'+\', \'f="\', \'+\', \'objectId\', \'+\', \'"\', \'+\', \'path\', \')\', \';\', \'}\']', 'public static TYPE_1 METHOD_1 ( String VAR_1 , String VAR_2 , String path ) { if ( StringUtils . isEmpty ( path ) ) { return METHOD_2 ( VAR_1 , VAR_2 ) ; } if ( StringUtils . isEmpty ( VAR_2 ) ) { return new TYPE_1 ( STRING_1 + VAR_1 + STRING_2 + path ) ; } return new TYPE_1 ( STRING_1 + VAR_1 + STRING_3 + VAR_2 + STRING_2 + path ) ; }', '[\'TYPE_1: PageParameters\', \'METHOD_1: newPathParameter\', \'METHOD_2: newObjectParameter\', \'VAR_1: repositoryName\', \'VAR_2: objectId\', \'STRING_1: "r="\', \'STRING_2: "\', \'STRING_3: f="\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/WicketUtils.java', 64, '326:9', '335:9', 76, 7 ), ( 5, 92, 33, 'public static PageParameters newLogPageParameter(String repositoryName, String objectId,\n    			int pageNumber) {\n    if (pageNumber <= 1) {\n    return newObjectParameter(repositoryName, objectId);\n    }\n    if (StringUtils.isEmpty(objectId)) {\n    return new PageParameters("r=" + repositoryName + ",pg=" + pageNumber);\n    }\n    return new PageParameters("r=" + repositoryName + ",h=" + objectId + ",pg=" + pageNumber);\n    }', '[\'public\', \'static\', \'PageParameters\', \'newLogPageParameter\', \'(\', \'String\', \'repositoryName\', \',\', \'String\', \'objectId\', \',\', \'int\', \'pageNumber\', \')\', \'{\', \'if\', \'(\', \'pageNumber\', \'<=\', \'1\', \')\', \'{\', \'return\', \'newObjectParameter\', \'(\', \'repositoryName\', \',\', \'objectId\', \')\', \';\', \'}\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'objectId\', \')\', \')\', \'{\', \'return\', \'new\', \'PageParameters\', \'(\', \'pg="\', \'+\', \'repositoryName\', \'+\', \'"\', \'+\', \'pageNumber\', \')\', \';\', \'}\', \'return\', \'new\', \'PageParameters\', \'(\', \'pg="\', \'+\', \'repositoryName\', \'+\', \'"r="\', \'+\', \'objectId\', \'+\', \'"\', \'+\', \'pageNumber\', \')\', \';\', \'}\']', 'public static TYPE_1 METHOD_1 ( String VAR_1 , String VAR_2 , int VAR_3 ) { if ( VAR_3 <= 1 ) { return METHOD_2 ( VAR_1 , VAR_2 ) ; } if ( StringUtils . isEmpty ( VAR_2 ) ) { return new TYPE_1 ( STRING_1 + VAR_1 + STRING_2 + VAR_3 ) ; } return new TYPE_1 ( STRING_1 + VAR_1 + STRING_3 + VAR_2 + STRING_2 + VAR_3 ) ; }', '[\'TYPE_1: PageParameters\', \'METHOD_1: newLogPageParameter\', \'METHOD_2: newObjectParameter\', \'VAR_3: pageNumber\', \'VAR_1: repositoryName\', \'VAR_2: objectId\', \'STRING_2: "\', \'STRING_1: pg="\', \'STRING_3: "r="\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/WicketUtils.java', 64, '337:9', '346:9', 73, 7 ), ( 5, 92, 34, 'public static PageParameters newHistoryPageParameter(String repositoryName, String objectId,\n    			String path, int pageNumber) {\n    if (pageNumber <= 1) {\n    return newObjectParameter(repositoryName, objectId);\n    }\n    if (StringUtils.isEmpty(objectId)) {\n    return new PageParameters("r=" + repositoryName + ",f=" + path + ",pg=" + pageNumber);\n    }\n    return new PageParameters("r=" + repositoryName + ",h=" + objectId + ",f=" + path + ",pg="\n    + pageNumber);\n    }', '[\'public\', \'static\', \'PageParameters\', \'newHistoryPageParameter\', \'(\', \'String\', \'repositoryName\', \',\', \'String\', \'objectId\', \',\', \'String\', \'path\', \',\', \'int\', \'pageNumber\', \')\', \'{\', \'if\', \'(\', \'pageNumber\', \'<=\', \'1\', \')\', \'{\', \'return\', \'newObjectParameter\', \'(\', \'repositoryName\', \',\', \'objectId\', \')\', \';\', \'}\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'objectId\', \')\', \')\', \'{\', \'return\', \'new\', \'PageParameters\', \'(\', \'pg="\', \'+\', \'repositoryName\', \'+\', \'"r="\', \'+\', \'path\', \'+\', \'"\', \'+\', \'pageNumber\', \')\', \';\', \'}\', \'return\', \'new\', \'PageParameters\', \'(\', \'pg="\', \'+\', \'repositoryName\', \'+\', \'"\', \'+\', \'objectId\', \'+\', \'"r="\', \'+\', \'path\', \'+\', \'"\', \'+\', \'pageNumber\', \')\', \';\', \'}\']', 'public static TYPE_1 METHOD_1 ( String VAR_1 , String VAR_2 , String path , int VAR_3 ) { if ( VAR_3 <= 1 ) { return METHOD_2 ( VAR_1 , VAR_2 ) ; } if ( StringUtils . isEmpty ( VAR_2 ) ) { return new TYPE_1 ( STRING_1 + VAR_1 + STRING_2 + path + STRING_3 + VAR_3 ) ; } return new TYPE_1 ( STRING_1 + VAR_1 + STRING_4 + VAR_2 + STRING_2 + path + STRING_3 + VAR_3 ) ; }', '[\'TYPE_1: PageParameters\', \'METHOD_2: newObjectParameter\', \'METHOD_1: newHistoryPageParameter\', \'VAR_3: pageNumber\', \'VAR_1: repositoryName\', \'VAR_2: objectId\', \'STRING_3: "\', \'STRING_1: pg="\', \'STRING_2: "r="\', \'STRING_4: "\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/WicketUtils.java', 64, '348:9', '358:9', 84, 8 ), ( 5, 92, 35, 'public static PageParameters newBlobDiffParameter(String repositoryName, String baseCommitId,\n    			String commitId, String path) {\n    if (StringUtils.isEmpty(commitId)) {\n    return new PageParameters("r=" + repositoryName + ",f=" + path + ",hb=" + baseCommitId);\n    }\n    return new PageParameters("r=" + repositoryName + ",h=" + commitId + ",f=" + path + ",hb="\n    + baseCommitId);\n    }', '[\'public\', \'static\', \'PageParameters\', \'newBlobDiffParameter\', \'(\', \'String\', \'repositoryName\', \',\', \'String\', \'baseCommitId\', \',\', \'String\', \'commitId\', \',\', \'String\', \'path\', \')\', \'{\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'commitId\', \')\', \')\', \'{\', \'return\', \'new\', \'PageParameters\', \'(\', \'"r="\', \'+\', \'repositoryName\', \'+\', \'"\', \'+\', \'path\', \'+\', \'"\', \'+\', \'baseCommitId\', \')\', \';\', \'}\', \'return\', \'new\', \'PageParameters\', \'(\', \'"r="\', \'+\', \'repositoryName\', \'+\', \'f="\', \'+\', \'commitId\', \'+\', \'"\', \'+\', \'path\', \'+\', \'"\', \'+\', \'baseCommitId\', \')\', \';\', \'}\']', 'public static TYPE_1 METHOD_1 ( String VAR_1 , String VAR_2 , String VAR_3 , String path ) { if ( StringUtils . isEmpty ( VAR_3 ) ) { return new TYPE_1 ( STRING_1 + VAR_1 + STRING_2 + path + STRING_3 + VAR_2 ) ; } return new TYPE_1 ( STRING_1 + VAR_1 + STRING_4 + VAR_3 + STRING_2 + path + STRING_3 + VAR_2 ) ; }', '[\'TYPE_1: PageParameters\', \'METHOD_1: newBlobDiffParameter\', \'VAR_2: baseCommitId\', \'VAR_3: commitId\', \'VAR_1: repositoryName\', \'STRING_1: "r="\', \'STRING_2: "\', \'STRING_4: f="\', \'STRING_3: "\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/WicketUtils.java', 64, '360:9', '367:9', 68, 6 ), ( 5, 92, 36, 'public static PageParameters newSearchParameter(String repositoryName, String commitId,\n    			String search, Constants.SearchType type) {\n    if (StringUtils.isEmpty(commitId)) {\n    return new PageParameters("r=" + repositoryName + ",s=" + search + ",st=" + type.name());\n    }\n    return new PageParameters("r=" + repositoryName + ",h=" + commitId + ",s=" + search\n    + ",st=" + type.name());\n    }', '[\'public\', \'static\', \'PageParameters\', \'newSearchParameter\', \'(\', \'String\', \'repositoryName\', \',\', \'String\', \'commitId\', \',\', \'String\', \'search\', \',\', \'Constants.SearchType\', \'type\', \')\', \'{\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'commitId\', \')\', \')\', \'{\', \'return\', \'new\', \'PageParameters\', \'(\', \'"r="\', \'+\', \'repositoryName\', \'+\', \'"\', \'+\', \'search\', \'+\', \'"\', \'+\', \'type\', \'.\', \'name\', \'(\', \')\', \')\', \';\', \'}\', \'return\', \'new\', \'PageParameters\', \'(\', \'"r="\', \'+\', \'repositoryName\', \'+\', \'st="\', \'+\', \'commitId\', \'+\', \'"\', \'+\', \'search\', \'+\', \'"\', \'+\', \'type\', \'.\', \'name\', \'(\', \')\', \')\', \';\', \'}\']', 'public static TYPE_1 METHOD_1 ( String VAR_1 , String VAR_2 , String VAR_3 , TYPE_2 type ) { if ( StringUtils . isEmpty ( VAR_2 ) ) { return new TYPE_1 ( STRING_1 + VAR_1 + STRING_2 + VAR_3 + STRING_3 + type . name ( ) ) ; } return new TYPE_1 ( STRING_1 + VAR_1 + STRING_4 + VAR_2 + STRING_2 + VAR_3 + STRING_3 + type . name ( ) ) ; }', '[\'TYPE_1: PageParameters\', \'TYPE_2: Constants.SearchType\', \'METHOD_1: newSearchParameter\', \'VAR_3: search\', \'VAR_2: commitId\', \'VAR_1: repositoryName\', \'STRING_1: "r="\', \'STRING_3: "\', \'STRING_4: st="\', \'STRING_2: "\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/WicketUtils.java', 64, '369:9', '376:9', 76, 6 ), ( 5, 92, 37, 'public static PageParameters newSearchParameter(String repositoryName, String commitId,\n    			String search, Constants.SearchType type, int pageNumber) {\n    if (StringUtils.isEmpty(commitId)) {\n    return new PageParameters("r=" + repositoryName + ",s=" + search + ",st=" + type.name()\n    + ",pg=" + pageNumber);\n    }\n    return new PageParameters("r=" + repositoryName + ",h=" + commitId + ",s=" + search\n    + ",st=" + type.name() + ",pg=" + pageNumber);\n    }', '[\'public\', \'static\', \'PageParameters\', \'newSearchParameter\', \'(\', \'String\', \'repositoryName\', \',\', \'String\', \'commitId\', \',\', \'String\', \'search\', \',\', \'Constants.SearchType\', \'type\', \',\', \'int\', \'pageNumber\', \')\', \'{\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'commitId\', \')\', \')\', \'{\', \'return\', \'new\', \'PageParameters\', \'(\', \'pg="\', \'+\', \'repositoryName\', \'+\', \'st="\', \'+\', \'search\', \'+\', \'"r="\', \'+\', \'type\', \'.\', \'name\', \'(\', \')\', \'+\', \'"\', \'+\', \'pageNumber\', \')\', \';\', \'}\', \'return\', \'new\', \'PageParameters\', \'(\', \'pg="\', \'+\', \'repositoryName\', \'+\', \'"\', \'+\', \'commitId\', \'+\', \'st="\', \'+\', \'search\', \'+\', \'"r="\', \'+\', \'type\', \'.\', \'name\', \'(\', \')\', \'+\', \'"\', \'+\', \'pageNumber\', \')\', \';\', \'}\']', 'public static TYPE_1 METHOD_1 ( String VAR_1 , String VAR_2 , String VAR_3 , TYPE_2 type , int VAR_4 ) { if ( StringUtils . isEmpty ( VAR_2 ) ) { return new TYPE_1 ( STRING_1 + VAR_1 + STRING_2 + VAR_3 + STRING_3 + type . name ( ) + STRING_4 + VAR_4 ) ; } return new TYPE_1 ( STRING_1 + VAR_1 + STRING_5 + VAR_2 + STRING_2 + VAR_3 + STRING_3 + type . name ( ) + STRING_4 + VAR_4 ) ; }', '[\'TYPE_1: PageParameters\', \'TYPE_2: Constants.SearchType\', \'METHOD_1: newSearchParameter\', \'VAR_3: search\', \'VAR_4: pageNumber\', \'VAR_2: commitId\', \'VAR_1: repositoryName\', \'STRING_4: "\', \'STRING_1: pg="\', \'STRING_3: "r="\', \'STRING_5: "\', \'STRING_2: st="\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/WicketUtils.java', 64, '378:9', '386:9', 87, 7 ), ( 5, 92, 61, 'public static double maxValue(Collection<Metric> metrics) {\n    double max = Double.MIN_VALUE;\n    for (Metric m : metrics) {\n    if (m.count > max) {\n    max = m.count;\n    }\n    }\n    return max;\n    }', '[\'public\', \'static\', \'double\', \'maxValue\', \'(\', \'Collection\', \'<\', \'Metric\', \'>\', \'metrics\', \')\', \'{\', \'double\', \'max\', \'=\', \'Double.MIN_VALUE\', \';\', \'for\', \'(\', \'Metric\', \'m\', \':\', \'metrics\', \')\', \'{\', \'if\', \'(\', \'m\', \'.\', \'count\', \'>\', \'max\', \')\', \'{\', \'max\', \'=\', \'m\', \'.\', \'count\', \';\', \'}\', \'}\', \'return\', \'max\', \';\', \'}\']', 'public static double METHOD_1 ( Collection < TYPE_1 > VAR_1 ) { double VAR_2 = VAR_3 ; for ( TYPE_1 m : VAR_1 ) { if ( m . count > VAR_2 ) { VAR_2 = m . count ; } } return VAR_2 ; }', '[\'TYPE_1: Metric\', \'METHOD_1: maxValue\', \'VAR_2: max\', \'VAR_3: Double.MIN_VALUE\', \'VAR_1: metrics\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/WicketUtils.java', 64, '594:9', '602:9', 48, 6 ), ( 5, 95, 1, '@Override\n    public void renderHead(IHeaderResponse response) {\n    // add Google Chart JS API reference\n    response.renderJavascriptReference("https://www.google.com/jsapi");\n    // prepare draw chart function\n    StringBuilder sb = new StringBuilder();\n    line(sb, "google.load(\\"visualization\\", \\"1\\", {packages:[\\"corechart\\"]});");\n    line(sb, "google.setOnLoadCallback(drawChart);");\n    line(sb, "function drawChart() {");\n    // add charts to header\n    for (GoogleChart chart : charts) {\n    chart.appendChart(sb);\n    }\n    // end draw chart function\n    line(sb, "}");\n    response.renderJavascript(sb.toString(), null);\n    }', '[\'public\', \'void\', \'renderHead\', \'(\', \'IHeaderResponse\', \'response\', \')\', \'{\', \'response\', \'.\', \'renderJavascriptReference\', \'(\', \'"}"\', \')\', \';\', \'StringBuilder\', \'sb\', \'=\', \'new\', \'StringBuilder\', \'(\', \')\', \';\', \'line\', \'(\', \'sb\', \',\', \'"google.load(\\\\"visualization\\\\"\', \')\', \';\', \'line\', \'(\', \'sb\', \',\', \' {packages:[\\\\"corechart\\\\"]});"\', \')\', \';\', \'line\', \'(\', \'sb\', \',\', \'"function drawChart() {"\', \')\', \';\', \'for\', \'(\', \'GoogleChart\', \'chart\', \':\', \'charts\', \')\', \'{\', \'chart\', \'.\', \'appendChart\', \'(\', \'sb\', \')\', \';\', \'}\', \'line\', \'(\', \'sb\', \',\', \' \\\\"1\\\\"\', \')\', \';\', \'response\', \'.\', \'renderJavascript\', \'(\', \'sb\', \'.\', \'toString\', \'(\', \')\', \',\', \'null\', \')\', \';\', \'}\']', 'public void METHOD_1 ( TYPE_1 response ) { response . METHOD_2 ( STRING_1 ) ; StringBuilder sb = new StringBuilder ( ) ; line ( sb , STRING_2 ) ; line ( sb , STRING_3 ) ; line ( sb , STRING_4 ) ; for ( TYPE_2 VAR_1 : VAR_2 ) { VAR_1 . METHOD_3 ( sb ) ; } line ( sb , STRING_5 ) ; response . METHOD_4 ( sb . toString ( ) , null ) ; }', '[\'TYPE_2: GoogleChart\', \'TYPE_1: IHeaderResponse\', \'METHOD_1: renderHead\', \'METHOD_2: renderJavascriptReference\', \'METHOD_3: appendChart\', \'METHOD_4: renderJavascript\', \'VAR_2: charts\', \'VAR_1: chart\', \'STRING_4: "function drawChart() {"\', \'STRING_2: "google.load(\\\\"visualization\\\\"\', \'STRING_5:  \\\\"1\\\\"\', \'STRING_3:  {packages:[\\\\"corechart\\\\"]});"\', \'STRING_1: "}"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/charting/GoogleCharts.java', 3, '43:9', '62:9', 85, 11 ) ;

INSERT INTO method (id_repo, id_file, id_method, code, code_tokens, abstract_code, abstract_representation, repo_name, repo_url,repo_commit, file_name, num_methods, start_method, end_method, num_tokens, num_lines) VALUES ( 5, 96, 6, '@Override\n    public int compareTo(ChartValue o) {\n    // sorts the dataset by largest value first\n    if (value > o.value) {\n    return -1;\n    } else if (value < o.value) {\n    return 1;\n    }\n    return 0;\n    }', '[\'public\', \'int\', \'compareTo\', \'(\', \'ChartValue\', \'o\', \')\', \'{\', \'if\', \'(\', \'value\', \'>\', \'o\', \'.\', \'value\', \')\', \'{\', \'return\', \'-\', \'1\', \';\', \'}\', \'else\', \'if\', \'(\', \'value\', \'<\', \'o\', \'.\', \'value\', \')\', \'{\', \'return\', \'1\', \';\', \'}\', \'return\', \'0\', \';\', \'}\']', 'public int METHOD_1 ( TYPE_1 o ) { if ( value > o . value ) { return - 1 ; } else if ( value < o . value ) { return 1 ; } return 0 ; }', '[\'TYPE_1: ChartValue\', \'METHOD_1: compareTo\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/charting/GoogleChart.java', 9, '90:17', '99:17', 42, 7 ), ( 5, 96, 7, 'public GoogleChart(String tagId, String title, String keyName, String valueName) {\n    this.tagId = tagId;\n    this.dataName = StringUtils.getSHA1(title).substring(0, 8);\n    this.title = title;\n    this.keyName = keyName;\n    this.valueName = valueName;\n    values = new ArrayList<ChartValue>();\n    }', '[\'public\', \'GoogleChart\', \'(\', \'String\', \'tagId\', \',\', \'String\', \'title\', \',\', \'String\', \'keyName\', \',\', \'String\', \'valueName\', \')\', \'{\', \'this\', \'.\', \'tagId\', \'=\', \'tagId\', \';\', \'this\', \'.\', \'dataName\', \'=\', \'StringUtils\', \'.\', \'getSHA1\', \'(\', \'title\', \')\', \'.\', \'substring\', \'(\', \'0\', \',\', \'8\', \')\', \';\', \'this\', \'.\', \'title\', \'=\', \'title\', \';\', \'this\', \'.\', \'keyName\', \'=\', \'keyName\', \';\', \'this\', \'.\', \'valueName\', \'=\', \'valueName\', \';\', \'values\', \'=\', \'new\', \'ArrayList\', \'<\', \'ChartValue\', \'>\', \'(\', \')\', \';\', \'}\']', 'public VAR_1 ( String VAR_2 , String VAR_3 , String VAR_4 , String VAR_5 ) { this . VAR_2 = VAR_2 ; this . VAR_6 = StringUtils . METHOD_1 ( VAR_3 ) . substring ( 0 , 8 ) ; this . VAR_3 = VAR_3 ; this . VAR_4 = VAR_4 ; this . VAR_5 = VAR_5 ; values = new ArrayList < TYPE_1 > ( ) ; }', '[\'TYPE_1: ChartValue\', \'METHOD_1: getSHA1\', \'VAR_1: GoogleChart\', \'VAR_2: tagId\', \'VAR_5: valueName\', \'VAR_4: keyName\', \'VAR_6: dataName\', \'VAR_3: title\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/charting/GoogleChart.java', 9, '42:9', '49:9', 68, 7 ), ( 5, 97, 3, 'public SessionlessForm(String id, Class<? extends BasePage> bookmarkablePageClass,\n    			PageParameters pageParameters) {\n    super(id);\n    this.pageClass = bookmarkablePageClass;\n    this.pageParameters = pageParameters;\n    }', '[\'public\', \'SessionlessForm\', \'(\', \'String\', \'id\', \',\', \'Class\', \'<\', \'?\', \'extends\', \'BasePage\', \'>\', \'bookmarkablePageClass\', \',\', \'PageParameters\', \'pageParameters\', \')\', \'{\', \'super\', \'(\', \'id\', \')\', \';\', \'this\', \'.\', \'pageClass\', \'=\', \'bookmarkablePageClass\', \';\', \'this\', \'.\', \'pageParameters\', \'=\', \'pageParameters\', \';\', \'}\']', 'public VAR_1 ( String id , Class < ? extends TYPE_1 > VAR_2 , TYPE_2 VAR_3 ) { super ( id ) ; this . VAR_4 = VAR_2 ; this . VAR_3 = VAR_3 ; }', '[\'TYPE_2: PageParameters\', \'TYPE_1: BasePage\', \'VAR_1: SessionlessForm\', \'VAR_3: pageParameters\', \'VAR_4: pageClass\', \'VAR_2: bookmarkablePageClass\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/SessionlessForm.java', 4, '83:9', '88:9', 36, 5 ), ( 5, 98, 1, 'public <C extends Page> GitblitRedirectException(Class<C> pageClass, PageParameters params) {\n    RequestCycle cycle = RequestCycle.get();\n    String relativeUrl = cycle.urlFor(pageClass, params).toString();\n    String absoluteUrl = RequestUtils.toAbsolutePath(relativeUrl);\n    cycle.setRequestTarget(new RedirectRequestTarget(absoluteUrl));\n    cycle.setRedirect(true);\n    }', '[\'public\', \'<\', \'C\', \'extends\', \'Page\', \'>\', \'GitblitRedirectException\', \'(\', \'Class\', \'<\', \'C\', \'>\', \'pageClass\', \',\', \'PageParameters\', \'params\', \')\', \'{\', \'RequestCycle\', \'cycle\', \'=\', \'RequestCycle\', \'.\', \'get\', \'(\', \')\', \';\', \'String\', \'relativeUrl\', \'=\', \'cycle\', \'.\', \'urlFor\', \'(\', \'pageClass\', \',\', \'params\', \')\', \'.\', \'toString\', \'(\', \')\', \';\', \'String\', \'absoluteUrl\', \'=\', \'RequestUtils\', \'.\', \'toAbsolutePath\', \'(\', \'relativeUrl\', \')\', \';\', \'cycle\', \'.\', \'setRequestTarget\', \'(\', \'new\', \'RedirectRequestTarget\', \'(\', \'absoluteUrl\', \')\', \')\', \';\', \'cycle\', \'.\', \'setRedirect\', \'(\', \'true\', \')\', \';\', \'}\']', 'public < TYPE_1 extends TYPE_2 > VAR_1 ( Class < TYPE_1 > VAR_2 , TYPE_3 params ) { TYPE_4 VAR_3 = TYPE_4 . get ( ) ; String VAR_4 = VAR_3 . METHOD_1 ( VAR_2 , params ) . toString ( ) ; String VAR_5 = TYPE_5 . METHOD_2 ( VAR_4 ) ; VAR_3 . METHOD_3 ( new TYPE_6 ( VAR_5 ) ) ; VAR_3 . METHOD_4 ( true ) ; }', '[\'TYPE_6: RedirectRequestTarget\', \'TYPE_1: C\', \'TYPE_4: RequestCycle\', \'TYPE_2: Page\', \'TYPE_3: PageParameters\', \'TYPE_5: RequestUtils\', \'METHOD_4: setRedirect\', \'METHOD_1: urlFor\', \'METHOD_2: toAbsolutePath\', \'METHOD_3: setRequestTarget\', \'VAR_1: GitblitRedirectException\', \'VAR_5: absoluteUrl\', \'VAR_2: pageClass\', \'VAR_4: relativeUrl\', \'VAR_3: cycle\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/GitblitRedirectException.java', 2, '42:9', '48:9', 70, 6 ), ( 5, 101, 1, '@Override\n    public void onSubmit() {\n    setRedirect(false);\n    error(getString("gb.passwordChangeAborted"));\n    setResponsePage(RepositoriesPage.class);\n    }', '[\'public\', \'void\', \'onSubmit\', \'(\', \')\', \'{\', \'setRedirect\', \'(\', \'false\', \')\', \';\', \'error\', \'(\', \'getString\', \'(\', \'"gb.passwordChangeAborted"\', \')\', \')\', \';\', \'setResponsePage\', \'(\', \'RepositoriesPage.\', \'class\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) { METHOD_2 ( false ) ; error ( getString ( STRING_1 ) ) ; METHOD_3 ( VAR_1 class ) ; }', '[\'METHOD_3: setResponsePage\', \'METHOD_2: setRedirect\', \'METHOD_1: onSubmit\', \'VAR_1: RepositoriesPage.\', \'STRING_1: "gb.passwordChangeAborted"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/ChangePasswordPage.java', 3, '127:25', '132:25', 28, 5 ), ( 5, 102, 5, 'public EditUserPage() {\n    // create constructor\n    super();\n    if (!GitBlit.self().supportsAddUser()) {\n    error(MessageFormat.format(getString("gb.userServiceDoesNotPermitAddUser"),\n    					GitBlit.getString(Keys.realm.userService, "${baseFolder}/users.conf")), true);\n    }\n    isCreate = true;\n    setupPage(new UserModel(""));\n    setStatelessHint(false);\n    setOutputMarkupId(true);\n    }', '[\'public\', \'EditUserPage\', \'(\', \')\', \'{\', \'super\', \'(\', \')\', \';\', \'if\', \'(\', \'!\', \'GitBlit\', \'.\', \'self\', \'(\', \')\', \'.\', \'supportsAddUser\', \'(\', \')\', \')\', \'{\', \'error\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'getString\', \'(\', \'"gb.userServiceDoesNotPermitAddUser"\', \')\', \',\', \'GitBlit\', \'.\', \'getString\', \'(\', \'Keys.realm.userService\', \',\', \'"${baseFolder}/users.conf"\', \')\', \')\', \',\', \'true\', \')\', \';\', \'}\', \'isCreate\', \'=\', \'true\', \';\', \'setupPage\', \'(\', \'new\', \'UserModel\', \'(\', \'""\', \')\', \')\', \';\', \'setStatelessHint\', \'(\', \'false\', \')\', \';\', \'setOutputMarkupId\', \'(\', \'true\', \')\', \';\', \'}\']', 'public VAR_1 ( ) { super ( ) ; if ( ! TYPE_1 . METHOD_1 ( ) . METHOD_2 ( ) ) { error ( TYPE_2 . format ( getString ( STRING_1 ) , TYPE_1 . getString ( VAR_2 , STRING_2 ) ) , true ) ; } VAR_3 = true ; METHOD_3 ( new TYPE_3 ( STRING_3 ) ) ; METHOD_4 ( false ) ; METHOD_5 ( true ) ; }', '[\'TYPE_3: UserModel\', \'TYPE_2: MessageFormat\', \'TYPE_1: GitBlit\', \'METHOD_3: setupPage\', \'METHOD_5: setOutputMarkupId\', \'METHOD_4: setStatelessHint\', \'METHOD_1: self\', \'METHOD_2: supportsAddUser\', \'VAR_3: isCreate\', \'VAR_2: Keys.realm.userService\', \'VAR_1: EditUserPage\', \'STRING_3: ""\', \'STRING_1: "gb.userServiceDoesNotPermitAddUser"\', \'STRING_2: "${baseFolder}/users.conf"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/EditUserPage.java', 7, '55:9', '66:9', 73, 9 ), ( 5, 102, 6, 'public EditUserPage(PageParameters params) {\n    // edit constructor\n    super(params);\n    isCreate = false;\n    String name = WicketUtils.getUsername(params);\n    UserModel model = GitBlit.self().getUserModel(name);\n    setupPage(model);\n    setStatelessHint(false);\n    setOutputMarkupId(true);\n    }', '[\'public\', \'EditUserPage\', \'(\', \'PageParameters\', \'params\', \')\', \'{\', \'super\', \'(\', \'params\', \')\', \';\', \'isCreate\', \'=\', \'false\', \';\', \'String\', \'name\', \'=\', \'WicketUtils\', \'.\', \'getUsername\', \'(\', \'params\', \')\', \';\', \'UserModel\', \'model\', \'=\', \'GitBlit\', \'.\', \'self\', \'(\', \')\', \'.\', \'getUserModel\', \'(\', \'name\', \')\', \';\', \'setupPage\', \'(\', \'model\', \')\', \';\', \'setStatelessHint\', \'(\', \'false\', \')\', \';\', \'setOutputMarkupId\', \'(\', \'true\', \')\', \';\', \'}\']', 'public VAR_1 ( TYPE_1 params ) { super ( params ) ; VAR_2 = false ; String name = TYPE_2 . METHOD_1 ( params ) ; TYPE_3 model = TYPE_4 . METHOD_2 ( ) . METHOD_3 ( name ) ; METHOD_4 ( model ) ; METHOD_5 ( false ) ; METHOD_6 ( true ) ; }', '[\'TYPE_2: WicketUtils\', \'TYPE_3: UserModel\', \'TYPE_1: PageParameters\', \'TYPE_4: GitBlit\', \'METHOD_3: getUserModel\', \'METHOD_4: setupPage\', \'METHOD_6: setOutputMarkupId\', \'METHOD_5: setStatelessHint\', \'METHOD_2: self\', \'METHOD_1: getUsername\', \'VAR_2: isCreate\', \'VAR_1: EditUserPage\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/EditUserPage.java', 7, '68:9', '77:9', 56, 8 ), ( 5, 103, 5, 'public EditTeamPage() {\n    // create constructor\n    super();\n    isCreate = true;\n    setupPage(new TeamModel(""));\n    setStatelessHint(false);\n    setOutputMarkupId(true);\n    }', '[\'public\', \'EditTeamPage\', \'(\', \')\', \'{\', \'super\', \'(\', \')\', \';\', \'isCreate\', \'=\', \'true\', \';\', \'setupPage\', \'(\', \'new\', \'TeamModel\', \'(\', \'""\', \')\', \')\', \';\', \'setStatelessHint\', \'(\', \'false\', \')\', \';\', \'setOutputMarkupId\', \'(\', \'true\', \')\', \';\', \'}\']', 'public VAR_1 ( ) { super ( ) ; VAR_2 = true ; METHOD_1 ( new TYPE_1 ( STRING_1 ) ) ; METHOD_2 ( false ) ; METHOD_3 ( true ) ; }', '[\'TYPE_1: TeamModel\', \'METHOD_1: setupPage\', \'METHOD_3: setOutputMarkupId\', \'METHOD_2: setStatelessHint\', \'VAR_2: isCreate\', \'VAR_1: EditTeamPage\', \'STRING_1: ""\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/EditTeamPage.java', 7, '59:9', '66:9', 32, 6 ), ( 5, 103, 6, 'public EditTeamPage(PageParameters params) {\n    // edit constructor\n    super(params);\n    isCreate = false;\n    String name = WicketUtils.getTeamname(params);\n    TeamModel model = GitBlit.self().getTeamModel(name);\n    setupPage(model);\n    setStatelessHint(false);\n    setOutputMarkupId(true);\n    }', '[\'public\', \'EditTeamPage\', \'(\', \'PageParameters\', \'params\', \')\', \'{\', \'super\', \'(\', \'params\', \')\', \';\', \'isCreate\', \'=\', \'false\', \';\', \'String\', \'name\', \'=\', \'WicketUtils\', \'.\', \'getTeamname\', \'(\', \'params\', \')\', \';\', \'TeamModel\', \'model\', \'=\', \'GitBlit\', \'.\', \'self\', \'(\', \')\', \'.\', \'getTeamModel\', \'(\', \'name\', \')\', \';\', \'setupPage\', \'(\', \'model\', \')\', \';\', \'setStatelessHint\', \'(\', \'false\', \')\', \';\', \'setOutputMarkupId\', \'(\', \'true\', \')\', \';\', \'}\']', 'public VAR_1 ( TYPE_1 params ) { super ( params ) ; VAR_2 = false ; String name = TYPE_2 . METHOD_1 ( params ) ; TYPE_3 model = TYPE_4 . METHOD_2 ( ) . METHOD_3 ( name ) ; METHOD_4 ( model ) ; METHOD_5 ( false ) ; METHOD_6 ( true ) ; }', '[\'TYPE_2: WicketUtils\', \'TYPE_3: TeamModel\', \'TYPE_1: PageParameters\', \'TYPE_4: GitBlit\', \'METHOD_3: getTeamModel\', \'METHOD_4: setupPage\', \'METHOD_6: setOutputMarkupId\', \'METHOD_5: setStatelessHint\', \'METHOD_2: self\', \'METHOD_1: getTeamname\', \'VAR_2: isCreate\', \'VAR_1: EditTeamPage\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/EditTeamPage.java', 7, '68:9', '77:9', 56, 8 ), ( 5, 105, 2, '@Override\n    protected void addDropDownMenus(List<PageRegistration> pages) {\n    PageParameters params = getPageParameters();\n    DropDownMenuRegistration menu = new DropDownMenuRegistration("gb.filters",\n    				GitBlitWebApp.HOME_PAGE_CLASS);\n    // preserve time filter option on repository choices\n    menu.menuItems.addAll(getRepositoryFilterItems(params));\n    // preserve repository filter option on time choices\n    menu.menuItems.addAll(getTimeFilterItems(params));\n    if (menu.menuItems.size() > 0) {\n    // Reset Filter\n    menu.menuItems.add(new DropDownMenuItem(getString("gb.reset"), null, null));\n    }\n    pages.add(menu);\n    }', '[\'protected\', \'void\', \'addDropDownMenus\', \'(\', \'List\', \'<\', \'PageRegistration\', \'>\', \'pages\', \')\', \'{\', \'PageParameters\', \'params\', \'=\', \'getPageParameters\', \'(\', \')\', \';\', \'DropDownMenuRegistration\', \'menu\', \'=\', \'new\', \'DropDownMenuRegistration\', \'(\', \'"gb.filters"\', \',\', \'GitBlitWebApp.HOME_PAGE_CLASS\', \')\', \';\', \'menu.menuItems\', \'.\', \'addAll\', \'(\', \'getRepositoryFilterItems\', \'(\', \'params\', \')\', \')\', \';\', \'menu.menuItems\', \'.\', \'addAll\', \'(\', \'getTimeFilterItems\', \'(\', \'params\', \')\', \')\', \';\', \'if\', \'(\', \'menu.menuItems\', \'.\', \'size\', \'(\', \')\', \'>\', \'0\', \')\', \'{\', \'menu.menuItems\', \'.\', \'add\', \'(\', \'new\', \'DropDownMenuItem\', \'(\', \'getString\', \'(\', \'"gb.reset"\', \')\', \',\', \'null\', \',\', \'null\', \')\', \')\', \';\', \'}\', \'pages\', \'.\', \'add\', \'(\', \'menu\', \')\', \';\', \'}\']', 'protected void METHOD_1 ( List < TYPE_1 > VAR_1 ) { TYPE_2 params = METHOD_2 ( ) ; TYPE_3 VAR_2 = new TYPE_3 ( STRING_1 , VAR_3 ) ; VAR_4 . addAll ( METHOD_3 ( params ) ) ; VAR_4 . addAll ( METHOD_4 ( params ) ) ; if ( VAR_4 . size ( ) > 0 ) { VAR_4 . add ( new TYPE_4 ( getString ( STRING_2 ) , null , null ) ) ; } VAR_1 . add ( VAR_2 ) ; }', '[\'TYPE_3: DropDownMenuRegistration\', \'TYPE_2: PageParameters\', \'TYPE_1: PageRegistration\', \'TYPE_4: DropDownMenuItem\', \'METHOD_3: getRepositoryFilterItems\', \'METHOD_4: getTimeFilterItems\', \'METHOD_1: addDropDownMenus\', \'METHOD_2: getPageParameters\', \'VAR_1: pages\', \'VAR_4: menu.menuItems\', \'VAR_3: GitBlitWebApp.HOME_PAGE_CLASS\', \'VAR_2: menu\', \'STRING_1: "gb.filters"\', \'STRING_2: "gb.reset"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/HomePage.java', 7, '90:9', '108:9', 100, 10 ), ( 5, 106, 2, '@Override\n    protected void addDropDownMenus(List<PageRegistration> pages) {\n    PageParameters params = getPageParameters();\n    DropDownMenuRegistration menu = new DropDownMenuRegistration("gb.filters",\n    				RepositoriesPage.class);\n    // preserve time filter option on repository choices\n    menu.menuItems.addAll(getRepositoryFilterItems(params));\n    // preserve repository filter option on time choices\n    menu.menuItems.addAll(getTimeFilterItems(params));\n    if (menu.menuItems.size() > 0) {\n    // Reset Filter\n    menu.menuItems.add(new DropDownMenuItem(getString("gb.reset"), null, null));\n    }\n    pages.add(menu);\n    }', '[\'protected\', \'void\', \'addDropDownMenus\', \'(\', \'List\', \'<\', \'PageRegistration\', \'>\', \'pages\', \')\', \'{\', \'PageParameters\', \'params\', \'=\', \'getPageParameters\', \'(\', \')\', \';\', \'DropDownMenuRegistration\', \'menu\', \'=\', \'new\', \'DropDownMenuRegistration\', \'(\', \'"gb.filters"\', \',\', \'RepositoriesPage.\', \'class\', \')\', \';\', \'menu.menuItems\', \'.\', \'addAll\', \'(\', \'getRepositoryFilterItems\', \'(\', \'params\', \')\', \')\', \';\', \'menu.menuItems\', \'.\', \'addAll\', \'(\', \'getTimeFilterItems\', \'(\', \'params\', \')\', \')\', \';\', \'if\', \'(\', \'menu.menuItems\', \'.\', \'size\', \'(\', \')\', \'>\', \'0\', \')\', \'{\', \'menu.menuItems\', \'.\', \'add\', \'(\', \'new\', \'DropDownMenuItem\', \'(\', \'getString\', \'(\', \'"gb.reset"\', \')\', \',\', \'null\', \',\', \'null\', \')\', \')\', \';\', \'}\', \'pages\', \'.\', \'add\', \'(\', \'menu\', \')\', \';\', \'}\']', 'protected void METHOD_1 ( List < TYPE_1 > VAR_1 ) { TYPE_2 params = METHOD_2 ( ) ; TYPE_3 VAR_2 = new TYPE_3 ( STRING_1 , VAR_3 class ) ; VAR_4 . addAll ( METHOD_3 ( params ) ) ; VAR_4 . addAll ( METHOD_4 ( params ) ) ; if ( VAR_4 . size ( ) > 0 ) { VAR_4 . add ( new TYPE_4 ( getString ( STRING_2 ) , null , null ) ) ; } VAR_1 . add ( VAR_2 ) ; }', '[\'TYPE_3: DropDownMenuRegistration\', \'TYPE_2: PageParameters\', \'TYPE_1: PageRegistration\', \'TYPE_4: DropDownMenuItem\', \'METHOD_3: getRepositoryFilterItems\', \'METHOD_4: getTimeFilterItems\', \'METHOD_1: addDropDownMenus\', \'METHOD_2: getPageParameters\', \'VAR_1: pages\', \'VAR_4: menu.menuItems\', \'VAR_3: RepositoriesPage.\', \'VAR_2: menu\', \'STRING_1: "gb.filters"\', \'STRING_2: "gb.reset"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/RepositoriesPage.java', 7, '92:9', '110:9', 100, 10 ), ( 5, 109, 0, 'protected String missingBlob(String blobPath, RevCommit commit) {\n    StringBuilder sb = new StringBuilder();\n    sb.append("<div class=\\"alert alert-error\\">");\n    String pattern = getString("gb.doesNotExistInTree").replace("{0}", "<b>{0}</b>").replace("{1}", "<b>{1}</b>");\n    sb.append(MessageFormat.format(pattern, blobPath, commit.getTree().getId().getName()));\n    sb.append("</div>");\n    return sb.toString();\n    }', '[\'protected\', \'String\', \'missingBlob\', \'(\', \'String\', \'blobPath\', \',\', \'RevCommit\', \'commit\', \')\', \'{\', \'StringBuilder\', \'sb\', \'=\', \'new\', \'StringBuilder\', \'(\', \')\', \';\', \'sb\', \'.\', \'append\', \'(\', \'"<div class=\\\\"alert alert-error\\\\">"\', \')\', \';\', \'String\', \'pattern\', \'=\', \'getString\', \'(\', \'"gb.doesNotExistInTree"\', \')\', \'.\', \'replace\', \'(\', \'"{0}"\', \',\', \'"<b>{0}</b>"\', \')\', \'.\', \'replace\', \'(\', \'"{1}"\', \',\', \'"<b>{1}</b>"\', \')\', \';\', \'sb\', \'.\', \'append\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'pattern\', \',\', \'blobPath\', \',\', \'commit\', \'.\', \'getTree\', \'(\', \')\', \'.\', \'getId\', \'(\', \')\', \'.\', \'getName\', \'(\', \')\', \')\', \')\', \';\', \'sb\', \'.\', \'append\', \'(\', \'"</div>"\', \')\', \';\', \'return\', \'sb\', \'.\', \'toString\', \'(\', \')\', \';\', \'}\']', 'protected String METHOD_1 ( String VAR_1 , TYPE_1 VAR_2 ) { StringBuilder sb = new StringBuilder ( ) ; sb . append ( STRING_1 ) ; String VAR_3 = getString ( STRING_2 ) . METHOD_2 ( STRING_3 , STRING_4 ) . METHOD_2 ( STRING_5 , STRING_6 ) ; sb . append ( TYPE_2 . format ( VAR_3 , VAR_1 , VAR_2 . METHOD_3 ( ) . getId ( ) . getName ( ) ) ) ; sb . append ( STRING_7 ) ; return sb . toString ( ) ; }', '[\'TYPE_2: MessageFormat\', \'TYPE_1: RevCommit\', \'METHOD_1: missingBlob\', \'METHOD_3: getTree\', \'METHOD_2: replace\', \'VAR_2: commit\', \'VAR_3: pattern\', \'VAR_1: blobPath\', \'STRING_2: "gb.doesNotExistInTree"\', \'STRING_6: "<b>{1}</b>"\', \'STRING_7: "</div>"\', \'STRING_1: "<div class=\\\\"alert alert-error\\\\">"\', \'STRING_5: "{1}"\', \'STRING_3: "{0}"\', \'STRING_4: "<b>{0}</b>"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/BlobPage.java', 5, '154:9', '161:9', 86, 7 ), ( 5, 110, 5, '@Override\n    public int compare(Metric o1, Metric o2) {\n    if (o1.count > o2.count) {\n    return -1;\n    } else if (o1.count < o2.count) {\n    return 1;\n    }\n    return 0;\n    }', '[\'public\', \'int\', \'compare\', \'(\', \'Metric\', \'o1\', \',\', \'Metric\', \'o2\', \')\', \'{\', \'if\', \'(\', \'o1\', \'.\', \'count\', \'>\', \'o2\', \'.\', \'count\', \')\', \'{\', \'return\', \'-\', \'1\', \';\', \'}\', \'else\', \'if\', \'(\', \'o1\', \'.\', \'count\', \'<\', \'o2\', \'.\', \'count\', \')\', \'{\', \'return\', \'1\', \';\', \'}\', \'return\', \'0\', \';\', \'}\']', 'public int METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { if ( VAR_1 . count > VAR_2 . count ) { return - 1 ; } else if ( VAR_1 . count < VAR_2 . count ) { return 1 ; } return 0 ; }', '[\'TYPE_1: Metric\', \'METHOD_1: compare\', \'VAR_1: o1\', \'VAR_2: o2\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/MetricsPage.java', 9, '164:25', '172:25', 48, 7 ), ( 5, 112, 6, 'protected void onUpdate(AjaxRequestTarget target) {\n    // enable/disable permissions panel based on access restriction\n    boolean allowAuthorizationControl = repositoryModel.accessRestriction.exceeds(AccessRestrictionType.NONE);\n    authorizationControl.setEnabled(allowAuthorizationControl);\n    boolean allowFineGrainedControls = allowAuthorizationControl && repositoryModel.authorizationControl.equals(AuthorizationControl.NAMED);\n    usersPalette.setEnabled(allowFineGrainedControls);\n    teamsPalette.setEnabled(allowFineGrainedControls);\n    if (allowFineGrainedControls) {\n    repositoryModel.authorizationControl = AuthorizationControl.NAMED;\n    }\n    target.addComponent(authorizationControl);\n    target.addComponent(usersPalette);\n    target.addComponent(teamsPalette);\n    }', '[\'protected\', \'void\', \'onUpdate\', \'(\', \'AjaxRequestTarget\', \'target\', \')\', \'{\', \'boolean\', \'allowAuthorizationControl\', \'=\', \'repositoryModel.accessRestriction\', \'.\', \'exceeds\', \'(\', \'AccessRestrictionType.NONE\', \')\', \';\', \'authorizationControl\', \'.\', \'setEnabled\', \'(\', \'allowAuthorizationControl\', \')\', \';\', \'boolean\', \'allowFineGrainedControls\', \'=\', \'allowAuthorizationControl\', \'&&\', \'repositoryModel.authorizationControl\', \'.\', \'equals\', \'(\', \'AuthorizationControl.NAMED\', \')\', \';\', \'usersPalette\', \'.\', \'setEnabled\', \'(\', \'allowFineGrainedControls\', \')\', \';\', \'teamsPalette\', \'.\', \'setEnabled\', \'(\', \'allowFineGrainedControls\', \')\', \';\', \'if\', \'(\', \'allowFineGrainedControls\', \')\', \'{\', \'repositoryModel.authorizationControl\', \'=\', \'AuthorizationControl.NAMED\', \';\', \'}\', \'target\', \'.\', \'addComponent\', \'(\', \'authorizationControl\', \')\', \';\', \'target\', \'.\', \'addComponent\', \'(\', \'usersPalette\', \')\', \';\', \'target\', \'.\', \'addComponent\', \'(\', \'teamsPalette\', \')\', \';\', \'}\']', 'protected void METHOD_1 ( TYPE_1 target ) { boolean VAR_1 = VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_3 ( VAR_1 ) ; boolean VAR_5 = VAR_1 && VAR_6 . equals ( VAR_7 ) ; VAR_8 . METHOD_3 ( VAR_5 ) ; VAR_9 . METHOD_3 ( VAR_5 ) ; if ( VAR_5 ) { VAR_6 = VAR_7 ; } target . METHOD_4 ( VAR_4 ) ; target . METHOD_4 ( VAR_8 ) ; target . METHOD_4 ( VAR_9 ) ; }', '[\'TYPE_1: AjaxRequestTarget\', \'METHOD_3: setEnabled\', \'METHOD_2: exceeds\', \'METHOD_4: addComponent\', \'METHOD_1: onUpdate\', \'VAR_7: AuthorizationControl.NAMED\', \'VAR_5: allowFineGrainedControls\', \'VAR_8: usersPalette\', \'VAR_3: AccessRestrictionType.NONE\', \'VAR_9: teamsPalette\', \'VAR_6: repositoryModel.authorizationControl\', \'VAR_1: allowAuthorizationControl\', \'VAR_2: repositoryModel.accessRestriction\', \'VAR_4: authorizationControl\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/EditRepositoryPage.java', 26, '513:25', '529:25', 96, 11 ), ( 5, 112, 15, '@Override\n    public String getDisplayValue(Integer value) {\n    if (value == 1) {\n    return getString("gb.duration.oneDay");\n    } else {\n    return MessageFormat.format(getString("gb.duration.days"), value);\n    }\n    }', '[\'public\', \'String\', \'getDisplayValue\', \'(\', \'Integer\', \'value\', \')\', \'{\', \'if\', \'(\', \'value\', \'==\', \'1\', \')\', \'{\', \'return\', \'getString\', \'(\', \'"gb.duration.oneDay"\', \')\', \';\', \'}\', \'else\', \'{\', \'return\', \'MessageFormat\', \'.\', \'format\', \'(\', \'getString\', \'(\', \'"gb.duration.days"\', \')\', \',\', \'value\', \')\', \';\', \'}\', \'}\']', 'public String METHOD_1 ( Integer value ) { if ( value == 1 ) { return getString ( STRING_1 ) ; } else { return TYPE_1 . format ( getString ( STRING_2 ) , value ) ; } }', '[\'TYPE_1: MessageFormat\', \'METHOD_1: getDisplayValue\', \'STRING_1: "gb.duration.oneDay"\', \'STRING_2: "gb.duration.days"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/EditRepositoryPage.java', 26, '663:17', '670:17', 41, 6 ), ( 5, 112, 17, '@Override\n    public String getDisplayValue(Integer value) {\n    if (value == -1) {\n    return getString("gb.excludeFromActivity");\n    } else if (value == 0) {\n    return getString("gb.noMaximum");\n    } else {\n    return value + " " + getString("gb.commits");\n    }\n    }', '[\'public\', \'String\', \'getDisplayValue\', \'(\', \'Integer\', \'value\', \')\', \'{\', \'if\', \'(\', \'value\', \'==\', \'-\', \'1\', \')\', \'{\', \'return\', \'getString\', \'(\', \'"gb.excludeFromActivity"\', \')\', \';\', \'}\', \'else\', \'if\', \'(\', \'value\', \'==\', \'0\', \')\', \'{\', \'return\', \'getString\', \'(\', \'"gb.noMaximum"\', \')\', \';\', \'}\', \'else\', \'{\', \'return\', \'value\', \'+\', \'" "\', \'+\', \'getString\', \'(\', \'"gb.commits"\', \')\', \';\', \'}\', \'}\']', 'public String METHOD_1 ( Integer value ) { if ( value == - 1 ) { return getString ( STRING_1 ) ; } else if ( value == 0 ) { return getString ( STRING_2 ) ; } else { return value + STRING_3 + getString ( STRING_4 ) ; } }', '[\'METHOD_1: getDisplayValue\', \'STRING_3: " "\', \'STRING_1: "gb.excludeFromActivity"\', \'STRING_4: "gb.commits"\', \'STRING_2: "gb.noMaximum"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/EditRepositoryPage.java', 26, '685:17', '694:17', 53, 8 ), ( 5, 112, 20, 'public EditRepositoryPage(PageParameters params) {\n    // edit constructor\n    super(params);\n    isCreate = false;\n    String name = WicketUtils.getRepositoryName(params);\n    RepositoryModel model = GitBlit.self().getRepositoryModel(name);\n    setupPage(model);\n    setStatelessHint(false);\n    setOutputMarkupId(true);\n    }', '[\'public\', \'EditRepositoryPage\', \'(\', \'PageParameters\', \'params\', \')\', \'{\', \'super\', \'(\', \'params\', \')\', \';\', \'isCreate\', \'=\', \'false\', \';\', \'String\', \'name\', \'=\', \'WicketUtils\', \'.\', \'getRepositoryName\', \'(\', \'params\', \')\', \';\', \'RepositoryModel\', \'model\', \'=\', \'GitBlit\', \'.\', \'self\', \'(\', \')\', \'.\', \'getRepositoryModel\', \'(\', \'name\', \')\', \';\', \'setupPage\', \'(\', \'model\', \')\', \';\', \'setStatelessHint\', \'(\', \'false\', \')\', \';\', \'setOutputMarkupId\', \'(\', \'true\', \')\', \';\', \'}\']', 'public VAR_1 ( TYPE_1 params ) { super ( params ) ; VAR_2 = false ; String name = TYPE_2 . METHOD_1 ( params ) ; TYPE_3 model = TYPE_4 . METHOD_2 ( ) . METHOD_3 ( name ) ; METHOD_4 ( model ) ; METHOD_5 ( false ) ; METHOD_6 ( true ) ; }', '[\'TYPE_2: WicketUtils\', \'TYPE_1: PageParameters\', \'TYPE_3: RepositoryModel\', \'TYPE_4: GitBlit\', \'METHOD_4: setupPage\', \'METHOD_6: setOutputMarkupId\', \'METHOD_5: setStatelessHint\', \'METHOD_2: self\', \'METHOD_3: getRepositoryModel\', \'METHOD_1: getRepositoryName\', \'VAR_2: isCreate\', \'VAR_1: EditRepositoryPage\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/EditRepositoryPage.java', 26, '108:9', '117:9', 56, 8 ), ( 5, 113, 1, 'private String getInitials(String author) {\n    StringBuilder sb = new StringBuilder();\n    String[] chunks = author.split(" ");\n    for (String chunk : chunks) {\n    sb.append(chunk.charAt(0));\n    }\n    return sb.toString().toUpperCase();\n    }', '[\'private\', \'String\', \'getInitials\', \'(\', \'String\', \'author\', \')\', \'{\', \'StringBuilder\', \'sb\', \'=\', \'new\', \'StringBuilder\', \'(\', \')\', \';\', \'String\', \'[\', \']\', \'chunks\', \'=\', \'author\', \'.\', \'split\', \'(\', \'" "\', \')\', \';\', \'for\', \'(\', \'String\', \'chunk\', \':\', \'chunks\', \')\', \'{\', \'sb\', \'.\', \'append\', \'(\', \'chunk\', \'.\', \'charAt\', \'(\', \'0\', \')\', \')\', \';\', \'}\', \'return\', \'sb\', \'.\', \'toString\', \'(\', \')\', \'.\', \'toUpperCase\', \'(\', \')\', \';\', \'}\']', 'private String METHOD_1 ( String VAR_1 ) { StringBuilder sb = new StringBuilder ( ) ; String [ ] VAR_2 = VAR_1 . METHOD_2 ( STRING_1 ) ; for ( String VAR_3 : VAR_2 ) { sb . append ( VAR_3 . METHOD_3 ( 0 ) ) ; } return sb . toString ( ) . METHOD_4 ( ) ; }', '[\'METHOD_2: split\', \'METHOD_1: getInitials\', \'METHOD_4: toUpperCase\', \'METHOD_3: charAt\', \'VAR_1: author\', \'VAR_2: chunks\', \'VAR_3: chunk\', \'STRING_1: " "\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/BlamePage.java', 6, '136:9', '143:9', 57, 6 ), ( 5, 113, 4, 'protected String missingBlob(String blobPath, RevCommit commit) {\n    StringBuilder sb = new StringBuilder();\n    sb.append("<div class=\\"alert alert-error\\">");\n    String pattern = getString("gb.doesNotExistInTree").replace("{0}", "<b>{0}</b>").replace("{1}", "<b>{1}</b>");\n    sb.append(MessageFormat.format(pattern, blobPath, commit.getTree().getId().getName()));\n    sb.append("</div>");\n    return sb.toString();\n    }', '[\'protected\', \'String\', \'missingBlob\', \'(\', \'String\', \'blobPath\', \',\', \'RevCommit\', \'commit\', \')\', \'{\', \'StringBuilder\', \'sb\', \'=\', \'new\', \'StringBuilder\', \'(\', \')\', \';\', \'sb\', \'.\', \'append\', \'(\', \'"<div class=\\\\"alert alert-error\\\\">"\', \')\', \';\', \'String\', \'pattern\', \'=\', \'getString\', \'(\', \'"gb.doesNotExistInTree"\', \')\', \'.\', \'replace\', \'(\', \'"{0}"\', \',\', \'"<b>{0}</b>"\', \')\', \'.\', \'replace\', \'(\', \'"{1}"\', \',\', \'"<b>{1}</b>"\', \')\', \';\', \'sb\', \'.\', \'append\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'pattern\', \',\', \'blobPath\', \',\', \'commit\', \'.\', \'getTree\', \'(\', \')\', \'.\', \'getId\', \'(\', \')\', \'.\', \'getName\', \'(\', \')\', \')\', \')\', \';\', \'sb\', \'.\', \'append\', \'(\', \'"</div>"\', \')\', \';\', \'return\', \'sb\', \'.\', \'toString\', \'(\', \')\', \';\', \'}\']', 'protected String METHOD_1 ( String VAR_1 , TYPE_1 VAR_2 ) { StringBuilder sb = new StringBuilder ( ) ; sb . append ( STRING_1 ) ; String VAR_3 = getString ( STRING_2 ) . METHOD_2 ( STRING_3 , STRING_4 ) . METHOD_2 ( STRING_5 , STRING_6 ) ; sb . append ( TYPE_2 . format ( VAR_3 , VAR_1 , VAR_2 . METHOD_3 ( ) . getId ( ) . getName ( ) ) ) ; sb . append ( STRING_7 ) ; return sb . toString ( ) ; }', '[\'TYPE_2: MessageFormat\', \'TYPE_1: RevCommit\', \'METHOD_1: missingBlob\', \'METHOD_3: getTree\', \'METHOD_2: replace\', \'VAR_2: commit\', \'VAR_3: pattern\', \'VAR_1: blobPath\', \'STRING_2: "gb.doesNotExistInTree"\', \'STRING_6: "<b>{1}</b>"\', \'STRING_7: "</div>"\', \'STRING_1: "<div class=\\\\"alert alert-error\\\\">"\', \'STRING_5: "{1}"\', \'STRING_3: "{0}"\', \'STRING_4: "<b>{0}</b>"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/BlamePage.java', 6, '155:9', '162:9', 86, 7 ), ( 5, 115, 5, 'protected List<RepositoryModel> getRepositoryModels() {\n    if (repositoryModels.isEmpty()) {\n    final UserModel user = GitBlitWebSession.get().getUser();\n    List<RepositoryModel> repositories = GitBlit.self().getRepositoryModels(user);\n    repositoryModels.addAll(repositories);\n    Collections.sort(repositoryModels);\n    }\n    return repositoryModels;\n    }', '[\'protected\', \'List\', \'<\', \'RepositoryModel\', \'>\', \'getRepositoryModels\', \'(\', \')\', \'{\', \'if\', \'(\', \'repositoryModels\', \'.\', \'isEmpty\', \'(\', \')\', \')\', \'{\', \'final\', \'UserModel\', \'user\', \'=\', \'GitBlitWebSession\', \'.\', \'get\', \'(\', \')\', \'.\', \'getUser\', \'(\', \')\', \';\', \'List\', \'<\', \'RepositoryModel\', \'>\', \'repositories\', \'=\', \'GitBlit\', \'.\', \'self\', \'(\', \')\', \'.\', \'getRepositoryModels\', \'(\', \'user\', \')\', \';\', \'repositoryModels\', \'.\', \'addAll\', \'(\', \'repositories\', \')\', \';\', \'Collections\', \'.\', \'sort\', \'(\', \'repositoryModels\', \')\', \';\', \'}\', \'return\', \'repositoryModels\', \';\', \'}\']', 'protected List < TYPE_1 > METHOD_1 ( ) { if ( VAR_1 . isEmpty ( ) ) { final TYPE_2 VAR_2 = TYPE_3 . get ( ) . METHOD_2 ( ) ; List < TYPE_1 > VAR_3 = TYPE_4 . METHOD_3 ( ) . METHOD_1 ( VAR_2 ) ; VAR_1 . addAll ( VAR_3 ) ; Collections . METHOD_4 ( VAR_1 ) ; } return VAR_1 ; }', '[\'TYPE_2: UserModel\', \'TYPE_3: GitBlitWebSession\', \'TYPE_1: RepositoryModel\', \'TYPE_4: GitBlit\', \'METHOD_1: getRepositoryModels\', \'METHOD_2: getUser\', \'METHOD_3: self\', \'METHOD_4: sort\', \'VAR_1: repositoryModels\', \'VAR_3: repositories\', \'VAR_2: user\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/RootPage.java', 15, '223:9', '231:9', 63, 7 ), ( 5, 116, 2, '@Override\n    public void run() {\n    UserModel user = session.getUser();\n    try {\n    GitBlit.self().fork(repository, user);\n    } catch (Exception e) {\n    LoggerFactory.getLogger(ForkPage.class).error(MessageFormat.format("Failed to fork {0} for {1}", repository.name, user.username), e);\n    } finally {\n    session.isForking(false);\n    }\n    }', '[\'public\', \'void\', \'run\', \'(\', \')\', \'{\', \'UserModel\', \'user\', \'=\', \'session\', \'.\', \'getUser\', \'(\', \')\', \';\', \'try\', \'{\', \'GitBlit\', \'.\', \'self\', \'(\', \')\', \'.\', \'fork\', \'(\', \'repository\', \',\', \'user\', \')\', \';\', \'}\', \'catch\', \'(\', \'Exception\', \'e\', \')\', \'{\', \'LoggerFactory\', \'.\', \'getLogger\', \'(\', \'ForkPage.\', \'class\', \')\', \'.\', \'error\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'"Failed to fork {0} for {1}"\', \',\', \'repository\', \'.\', \'name\', \',\', \'user.username\', \')\', \',\', \'e\', \')\', \';\', \'}\', \'finally\', \'{\', \'session\', \'.\', \'isForking\', \'(\', \'false\', \')\', \';\', \'}\', \'}\']', 'public void METHOD_1 ( ) { TYPE_1 VAR_1 = session . METHOD_2 ( ) ; try { TYPE_2 . METHOD_3 ( ) . METHOD_4 ( VAR_2 , VAR_1 ) ; } catch ( Exception e ) { TYPE_3 . METHOD_5 ( VAR_3 class ) . error ( TYPE_4 . format ( STRING_1 , VAR_2 . name , VAR_4 ) , e ) ; } finally { session . METHOD_6 ( false ) ; } }', '[\'TYPE_1: UserModel\', \'TYPE_4: MessageFormat\', \'TYPE_3: LoggerFactory\', \'TYPE_2: GitBlit\', \'METHOD_4: fork\', \'METHOD_2: getUser\', \'METHOD_3: self\', \'METHOD_5: getLogger\', \'METHOD_6: isForking\', \'METHOD_1: run\', \'VAR_3: ForkPage.\', \'VAR_4: user.username\', \'VAR_2: repository\', \'VAR_1: user\', \'STRING_1: "Failed to fork {0} for {1}"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/ForkPage.java', 5, '95:17', '105:17', 77, 9 ), ( 5, 117, 3, 'private String prepareComment(String comment) {\n    String html = StringUtils.escapeForHtml(comment, false);\n    html = StringUtils.breakLinesForHtml(comment).trim();\n    return html.replaceAll("\\\\bcommit\\\\s*([A-Za-z0-9]*)\\\\b", "<a href=\\"/commit/"\n    + repositoryName + "/$1\\">commit $1</a>");\n    }', '[\'private\', \'String\', \'prepareComment\', \'(\', \'String\', \'comment\', \')\', \'{\', \'String\', \'html\', \'=\', \'StringUtils\', \'.\', \'escapeForHtml\', \'(\', \'comment\', \',\', \'false\', \')\', \';\', \'html\', \'=\', \'StringUtils\', \'.\', \'breakLinesForHtml\', \'(\', \'comment\', \')\', \'.\', \'trim\', \'(\', \')\', \';\', \'return\', \'html\', \'.\', \'replaceAll\', \'(\', \'"\\\\\\\\bcommit\\\\\\\\s*([A-Za-z0-9]*)\\\\\\\\b"\', \',\', \'"<a href=\\\\"/commit/"\', \'+\', \'repositoryName\', \'+\', \'"/$1\\\\">commit $1</a>"\', \')\', \';\', \'}\']', 'private String METHOD_1 ( String VAR_1 ) { String VAR_2 = StringUtils . METHOD_2 ( VAR_1 , false ) ; VAR_2 = StringUtils . METHOD_3 ( VAR_1 ) . METHOD_4 ( ) ; return VAR_2 . METHOD_5 ( STRING_1 , STRING_2 + VAR_3 + STRING_3 ) ; }', '[\'METHOD_1: prepareComment\', \'METHOD_2: escapeForHtml\', \'METHOD_3: breakLinesForHtml\', \'METHOD_4: trim\', \'METHOD_5: replaceAll\', \'VAR_1: comment\', \'VAR_2: html\', \'VAR_3: repositoryName\', \'STRING_3: "/$1\\\\">commit $1</a>"\', \'STRING_2: "<a href=\\\\"/commit/"\', \'STRING_1: "\\\\\\\\bcommit\\\\\\\\s*([A-Za-z0-9]*)\\\\\\\\b"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/TicketPage.java', 5, '80:9', '85:9', 47, 5 ), ( 5, 119, 3, 'protected List<FlatFork> flatten(ForkModel node, int level) {\n    List<FlatFork> list = new ArrayList<FlatFork>();\n    list.add(new FlatFork(node.repository, level));\n    if (!node.isLeaf()) {\n    for (ForkModel fork : node.forks) {\n    list.addAll(flatten(fork, level + 1));\n    }\n    }\n    return list;\n    }', '[\'protected\', \'List\', \'<\', \'FlatFork\', \'>\', \'flatten\', \'(\', \'ForkModel\', \'node\', \',\', \'int\', \'level\', \')\', \'{\', \'List\', \'<\', \'FlatFork\', \'>\', \'list\', \'=\', \'new\', \'ArrayList\', \'<\', \'FlatFork\', \'>\', \'(\', \')\', \';\', \'list\', \'.\', \'add\', \'(\', \'new\', \'FlatFork\', \'(\', \'node.repository\', \',\', \'level\', \')\', \')\', \';\', \'if\', \'(\', \'!\', \'node\', \'.\', \'isLeaf\', \'(\', \')\', \')\', \'{\', \'for\', \'(\', \'ForkModel\', \'fork\', \':\', \'node.forks\', \')\', \'{\', \'list\', \'.\', \'addAll\', \'(\', \'flatten\', \'(\', \'fork\', \',\', \'level\', \'+\', \'1\', \')\', \')\', \';\', \'}\', \'}\', \'return\', \'list\', \';\', \'}\']', 'protected List < TYPE_1 > METHOD_1 ( TYPE_2 node , int VAR_1 ) { List < TYPE_1 > list = new ArrayList < TYPE_1 > ( ) ; list . add ( new TYPE_1 ( VAR_2 , VAR_1 ) ) ; if ( ! node . METHOD_2 ( ) ) { for ( TYPE_2 VAR_3 : VAR_4 ) { list . addAll ( METHOD_1 ( VAR_3 , VAR_1 + 1 ) ) ; } } return list ; }', '[\'TYPE_2: ForkModel\', \'TYPE_1: FlatFork\', \'METHOD_1: flatten\', \'METHOD_2: isLeaf\', \'VAR_3: fork\', \'VAR_2: node.repository\', \'VAR_4: node.forks\', \'VAR_1: level\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/ForksPage.java', 6, '133:9', '142:9', 81, 7 ), ( 5, 123, 3, 'protected TimeUtils getTimeUtils() {\n    if (timeUtils == null) {\n    ResourceBundle bundle;\n    try {\n    bundle = ResourceBundle.getBundle("com.gitblit.wicket.GitBlitWebApp", GitBlitWebSession.get().getLocale());\n    } catch (Throwable t) {\n    bundle = ResourceBundle.getBundle("com.gitblit.wicket.GitBlitWebApp");\n    }\n    timeUtils = new TimeUtils(bundle);\n    }\n    return timeUtils;\n    }', '[\'protected\', \'TimeUtils\', \'getTimeUtils\', \'(\', \')\', \'{\', \'if\', \'(\', \'timeUtils\', \'==\', \'null\', \')\', \'{\', \'ResourceBundle\', \'bundle\', \';\', \'try\', \'{\', \'bundle\', \'=\', \'ResourceBundle\', \'.\', \'getBundle\', \'(\', \'"com.gitblit.wicket.GitBlitWebApp"\', \',\', \'GitBlitWebSession\', \'.\', \'get\', \'(\', \')\', \'.\', \'getLocale\', \'(\', \')\', \')\', \';\', \'}\', \'catch\', \'(\', \'Throwable\', \'t\', \')\', \'{\', \'bundle\', \'=\', \'ResourceBundle\', \'.\', \'getBundle\', \'(\', \'"com.gitblit.wicket.GitBlitWebApp"\', \')\', \';\', \'}\', \'timeUtils\', \'=\', \'new\', \'TimeUtils\', \'(\', \'bundle\', \')\', \';\', \'}\', \'return\', \'timeUtils\', \';\', \'}\']', 'protected TYPE_1 METHOD_1 ( ) { if ( VAR_1 == null ) { TYPE_2 VAR_2 ; try { VAR_2 = TYPE_2 . METHOD_2 ( STRING_1 , TYPE_3 . get ( ) . METHOD_3 ( ) ) ; } catch ( Throwable t ) { VAR_2 = TYPE_2 . METHOD_2 ( STRING_1 ) ; } VAR_1 = new TYPE_1 ( VAR_2 ) ; } return VAR_1 ; }', '[\'TYPE_1: TimeUtils\', \'TYPE_3: GitBlitWebSession\', \'TYPE_2: ResourceBundle\', \'METHOD_1: getTimeUtils\', \'METHOD_3: getLocale\', \'METHOD_2: getBundle\', \'VAR_1: timeUtils\', \'VAR_2: bundle\', \'STRING_1: "com.gitblit.wicket.GitBlitWebApp"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/BasePage.java', 21, '95:9', '106:9', 64, 9 ), ( 5, 123, 4, '@Override\n    protected void onBeforeRender() {\n    if (GitBlit.isDebugMode()) {\n    // strip Wicket tags in debug mode for jQuery DOM traversal\n    Application.get().getMarkupSettings().setStripWicketTags(true);\n    }\n    super.onBeforeRender();\n    }', '[\'protected\', \'void\', \'onBeforeRender\', \'(\', \')\', \'{\', \'if\', \'(\', \'GitBlit\', \'.\', \'isDebugMode\', \'(\', \')\', \')\', \'{\', \'Application\', \'.\', \'get\', \'(\', \')\', \'.\', \'getMarkupSettings\', \'(\', \')\', \'.\', \'setStripWicketTags\', \'(\', \'true\', \')\', \';\', \'}\', \'super\', \'.\', \'onBeforeRender\', \'(\', \')\', \';\', \'}\']', 'protected void METHOD_1 ( ) { if ( TYPE_1 . METHOD_2 ( ) ) { TYPE_2 . get ( ) . METHOD_3 ( ) . METHOD_4 ( true ) ; } super . METHOD_1 ( ) ; }', '[\'TYPE_2: Application\', \'TYPE_1: GitBlit\', \'METHOD_2: isDebugMode\', \'METHOD_1: onBeforeRender\', \'METHOD_3: getMarkupSettings\', \'METHOD_4: setStripWicketTags\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/BasePage.java', 21, '108:9', '115:9', 36, 5 ), ( 5, 123, 5, '@Override\n    protected void onAfterRender() {\n    if (GitBlit.isDebugMode()) {\n    // restore Wicket debug tags\n    Application.get().getMarkupSettings().setStripWicketTags(false);\n    }\n    super.onAfterRender();\n    }', '[\'protected\', \'void\', \'onAfterRender\', \'(\', \')\', \'{\', \'if\', \'(\', \'GitBlit\', \'.\', \'isDebugMode\', \'(\', \')\', \')\', \'{\', \'Application\', \'.\', \'get\', \'(\', \')\', \'.\', \'getMarkupSettings\', \'(\', \')\', \'.\', \'setStripWicketTags\', \'(\', \'false\', \')\', \';\', \'}\', \'super\', \'.\', \'onAfterRender\', \'(\', \')\', \';\', \'}\']', 'protected void METHOD_1 ( ) { if ( TYPE_1 . METHOD_2 ( ) ) { TYPE_2 . get ( ) . METHOD_3 ( ) . METHOD_4 ( false ) ; } super . METHOD_1 ( ) ; }', '[\'TYPE_2: Application\', \'TYPE_1: GitBlit\', \'METHOD_2: isDebugMode\', \'METHOD_1: onAfterRender\', \'METHOD_3: getMarkupSettings\', \'METHOD_4: setStripWicketTags\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/BasePage.java', 21, '117:9', '124:9', 36, 5 ), ( 5, 123, 9, 'protected Map<FederationStrategy, String> getFederationTypes() {\n    Map<FederationStrategy, String> map = new LinkedHashMap<FederationStrategy, String>();\n    for (FederationStrategy type : FederationStrategy.values()) {\n    switch (type) {\n    case EXCLUDE:\n    map.put(type, getString("gb.excludeFromFederation"));\n    break;\n    case FEDERATE_THIS:\n    map.put(type, getString("gb.federateThis"));\n    break;\n    case FEDERATE_ORIGIN:\n    map.put(type, getString("gb.federateOrigin"));\n    break;\n    }\n    }\n    return map;\n    }', '[\'protected\', \'Map\', \'<\', \'FederationStrategy\', \',\', \'String\', \'>\', \'getFederationTypes\', \'(\', \')\', \'{\', \'Map\', \'<\', \'FederationStrategy\', \',\', \'String\', \'>\', \'map\', \'=\', \'new\', \'LinkedHashMap\', \'<\', \'FederationStrategy\', \',\', \'String\', \'>\', \'(\', \')\', \';\', \'for\', \'(\', \'FederationStrategy\', \'type\', \':\', \'FederationStrategy\', \'.\', \'values\', \'(\', \')\', \')\', \'{\', \'switch\', \'(\', \'type\', \')\', \'{\', \'case\', \'EXCLUDE\', \':\', \'map\', \'.\', \'put\', \'(\', \'type\', \',\', \'getString\', \'(\', \'"gb.excludeFromFederation"\', \')\', \')\', \';\', \'break\', \';\', \'case\', \'FEDERATE_THIS\', \':\', \'map\', \'.\', \'put\', \'(\', \'type\', \',\', \'getString\', \'(\', \'"gb.federateThis"\', \')\', \')\', \';\', \'break\', \';\', \'case\', \'FEDERATE_ORIGIN\', \':\', \'map\', \'.\', \'put\', \'(\', \'type\', \',\', \'getString\', \'(\', \'"gb.federateOrigin"\', \')\', \')\', \';\', \'break\', \';\', \'}\', \'}\', \'return\', \'map\', \';\', \'}\']', 'protected Map < TYPE_1 , String > METHOD_1 ( ) { Map < TYPE_1 , String > map = new TYPE_2 < TYPE_1 , String > ( ) ; for ( TYPE_1 type : TYPE_1 . values ( ) ) { switch ( type ) { case VAR_1 : map . put ( type , getString ( STRING_1 ) ) ; break ; case VAR_2 : map . put ( type , getString ( STRING_2 ) ) ; break ; case VAR_3 : map . put ( type , getString ( STRING_3 ) ) ; break ; } } return map ; }', '[\'TYPE_1: FederationStrategy\', \'TYPE_2: LinkedHashMap\', \'METHOD_1: getFederationTypes\', \'VAR_3: FEDERATE_ORIGIN\', \'VAR_1: EXCLUDE\', \'VAR_2: FEDERATE_THIS\', \'STRING_1: "gb.excludeFromFederation"\', \'STRING_2: "gb.federateThis"\', \'STRING_3: "gb.federateOrigin"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/BasePage.java', 21, '201:9', '217:9', 97, 14 ), ( 5, 123, 10, 'protected Map<AuthorizationControl, String> getAuthorizationControls() {\n    Map<AuthorizationControl, String> map = new LinkedHashMap<AuthorizationControl, String>();\n    for (AuthorizationControl type : AuthorizationControl.values()) {\n    switch (type) {\n    case AUTHENTICATED:\n    map.put(type, getString("gb.allowAuthenticatedDescription"));\n    break;\n    case NAMED:\n    map.put(type, getString("gb.allowNamedDescription"));\n    break;\n    }\n    }\n    return map;\n    }', '[\'protected\', \'Map\', \'<\', \'AuthorizationControl\', \',\', \'String\', \'>\', \'getAuthorizationControls\', \'(\', \')\', \'{\', \'Map\', \'<\', \'AuthorizationControl\', \',\', \'String\', \'>\', \'map\', \'=\', \'new\', \'LinkedHashMap\', \'<\', \'AuthorizationControl\', \',\', \'String\', \'>\', \'(\', \')\', \';\', \'for\', \'(\', \'AuthorizationControl\', \'type\', \':\', \'AuthorizationControl\', \'.\', \'values\', \'(\', \')\', \')\', \'{\', \'switch\', \'(\', \'type\', \')\', \'{\', \'case\', \'AUTHENTICATED\', \':\', \'map\', \'.\', \'put\', \'(\', \'type\', \',\', \'getString\', \'(\', \'"gb.allowAuthenticatedDescription"\', \')\', \')\', \';\', \'break\', \';\', \'case\', \'NAMED\', \':\', \'map\', \'.\', \'put\', \'(\', \'type\', \',\', \'getString\', \'(\', \'"gb.allowNamedDescription"\', \')\', \')\', \';\', \'break\', \';\', \'}\', \'}\', \'return\', \'map\', \';\', \'}\']', 'protected Map < TYPE_1 , String > METHOD_1 ( ) { Map < TYPE_1 , String > map = new TYPE_2 < TYPE_1 , String > ( ) ; for ( TYPE_1 type : TYPE_1 . values ( ) ) { switch ( type ) { case VAR_1 : map . put ( type , getString ( STRING_1 ) ) ; break ; case VAR_2 : map . put ( type , getString ( STRING_2 ) ) ; break ; } } return map ; }', '[\'TYPE_1: AuthorizationControl\', \'TYPE_2: LinkedHashMap\', \'METHOD_1: getAuthorizationControls\', \'VAR_2: NAMED\', \'VAR_1: AUTHENTICATED\', \'STRING_1: "gb.allowAuthenticatedDescription"\', \'STRING_2: "gb.allowNamedDescription"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/BasePage.java', 21, '219:9', '232:9', 81, 11 ), ( 5, 123, 16, 'public void error(String message, boolean redirect) {\n    logger.error(message + " for " + GitBlitWebSession.get().getUsername());\n    if (redirect) {\n    GitBlitWebSession.get().cacheErrorMessage(message);\n    String relativeUrl = urlFor(RepositoriesPage.class, null).toString();\n    String absoluteUrl = RequestUtils.toAbsolutePath(relativeUrl);\n    throw new RedirectToUrlException(absoluteUrl);\n    } else {\n    super.error(message);\n    }\n    }', '[\'public\', \'void\', \'error\', \'(\', \'String\', \'message\', \',\', \'boolean\', \'redirect\', \')\', \'{\', \'logger\', \'.\', \'error\', \'(\', \'message\', \'+\', \'" for "\', \'+\', \'GitBlitWebSession\', \'.\', \'get\', \'(\', \')\', \'.\', \'getUsername\', \'(\', \')\', \')\', \';\', \'if\', \'(\', \'redirect\', \')\', \'{\', \'GitBlitWebSession\', \'.\', \'get\', \'(\', \')\', \'.\', \'cacheErrorMessage\', \'(\', \'message\', \')\', \';\', \'String\', \'relativeUrl\', \'=\', \'urlFor\', \'(\', \'RepositoriesPage.\', \'class\', \',\', \'null\', \')\', \'.\', \'toString\', \'(\', \')\', \';\', \'String\', \'absoluteUrl\', \'=\', \'RequestUtils\', \'.\', \'toAbsolutePath\', \'(\', \'relativeUrl\', \')\', \';\', \'throw\', \'new\', \'RedirectToUrlException\', \'(\', \'absoluteUrl\', \')\', \';\', \'}\', \'else\', \'{\', \'super\', \'.\', \'error\', \'(\', \'message\', \')\', \';\', \'}\', \'}\']', 'public void error ( String message , boolean VAR_1 ) { logger . error ( message + STRING_1 + TYPE_1 . get ( ) . METHOD_1 ( ) ) ; if ( VAR_1 ) { TYPE_1 . get ( ) . METHOD_2 ( message ) ; String VAR_2 = METHOD_3 ( VAR_3 class , null ) . toString ( ) ; String VAR_4 = TYPE_2 . METHOD_4 ( VAR_2 ) ; throw new TYPE_3 ( VAR_4 ) ; } else { super . error ( message ) ; } }', '[\'TYPE_3: RedirectToUrlException\', \'TYPE_1: GitBlitWebSession\', \'TYPE_2: RequestUtils\', \'METHOD_3: urlFor\', \'METHOD_4: toAbsolutePath\', \'METHOD_1: getUsername\', \'METHOD_2: cacheErrorMessage\', \'VAR_1: redirect\', \'VAR_4: absoluteUrl\', \'VAR_3: RepositoriesPage.\', \'VAR_2: relativeUrl\', \'STRING_1: " for "\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/BasePage.java', 21, '332:9', '342:9', 87, 9 ), ( 5, 123, 17, 'public void error(String message, Throwable t, boolean redirect) {\n    logger.error(message, t);\n    if (redirect) {\n    GitBlitWebSession.get().cacheErrorMessage(message);\n    throw new RestartResponseException(getApplication().getHomePage());\n    } else {\n    super.error(message);\n    }\n    }', '[\'public\', \'void\', \'error\', \'(\', \'String\', \'message\', \',\', \'Throwable\', \'t\', \',\', \'boolean\', \'redirect\', \')\', \'{\', \'logger\', \'.\', \'error\', \'(\', \'message\', \',\', \'t\', \')\', \';\', \'if\', \'(\', \'redirect\', \')\', \'{\', \'GitBlitWebSession\', \'.\', \'get\', \'(\', \')\', \'.\', \'cacheErrorMessage\', \'(\', \'message\', \')\', \';\', \'throw\', \'new\', \'RestartResponseException\', \'(\', \'getApplication\', \'(\', \')\', \'.\', \'getHomePage\', \'(\', \')\', \')\', \';\', \'}\', \'else\', \'{\', \'super\', \'.\', \'error\', \'(\', \'message\', \')\', \';\', \'}\', \'}\']', 'public void error ( String message , Throwable t , boolean VAR_1 ) { logger . error ( message , t ) ; if ( VAR_1 ) { TYPE_1 . get ( ) . METHOD_1 ( message ) ; throw new TYPE_2 ( METHOD_2 ( ) . METHOD_3 ( ) ) ; } else { super . error ( message ) ; } }', '[\'TYPE_2: RestartResponseException\', \'TYPE_1: GitBlitWebSession\', \'METHOD_2: getApplication\', \'METHOD_3: getHomePage\', \'METHOD_1: cacheErrorMessage\', \'VAR_1: redirect\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/BasePage.java', 21, '344:9', '352:9', 61, 7 ), ( 5, 123, 18, 'public void authenticationError(String message) {\n    logger.error(getRequest().getURL() + " for " + GitBlitWebSession.get().getUsername());\n    if (!GitBlitWebSession.get().isLoggedIn()) {\n    // cache the request if we have not authenticated.\n    // the request will continue after authentication.\n    GitBlitWebSession.get().cacheRequest(getClass());\n    }\n    error(message, true);\n    }', '[\'public\', \'void\', \'authenticationError\', \'(\', \'String\', \'message\', \')\', \'{\', \'logger\', \'.\', \'error\', \'(\', \'getRequest\', \'(\', \')\', \'.\', \'getURL\', \'(\', \')\', \'+\', \'" for "\', \'+\', \'GitBlitWebSession\', \'.\', \'get\', \'(\', \')\', \'.\', \'getUsername\', \'(\', \')\', \')\', \';\', \'if\', \'(\', \'!\', \'GitBlitWebSession\', \'.\', \'get\', \'(\', \')\', \'.\', \'isLoggedIn\', \'(\', \')\', \')\', \'{\', \'GitBlitWebSession\', \'.\', \'get\', \'(\', \')\', \'.\', \'cacheRequest\', \'(\', \'getClass\', \'(\', \')\', \')\', \';\', \'}\', \'error\', \'(\', \'message\', \',\', \'true\', \')\', \';\', \'}\']', 'public void METHOD_1 ( String message ) { logger . error ( METHOD_2 ( ) . METHOD_3 ( ) + STRING_1 + TYPE_1 . get ( ) . METHOD_4 ( ) ) ; if ( ! TYPE_1 . get ( ) . METHOD_5 ( ) ) { TYPE_1 . get ( ) . METHOD_6 ( getClass ( ) ) ; } error ( message , true ) ; }', '[\'TYPE_1: GitBlitWebSession\', \'METHOD_3: getURL\', \'METHOD_6: cacheRequest\', \'METHOD_2: getRequest\', \'METHOD_5: isLoggedIn\', \'METHOD_1: authenticationError\', \'METHOD_4: getUsername\', \'STRING_1: " for "\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/BasePage.java', 21, '354:9', '362:9', 63, 5 ), ( 5, 128, 1, 'public void populateItem(final Item<RepositoryStatus> item) {\n    final RepositoryStatus entry = item.getModelObject();\n    item.add(WicketUtils.getPullStatusImage("statusIcon", entry.status));\n    item.add(new Label("name", entry.name));\n    item.add(new Label("status", entry.status.name()));\n    WicketUtils.setAlternatingBackground(item, counter);\n    counter++;\n    }', '[\'public\', \'void\', \'populateItem\', \'(\', \'final\', \'Item\', \'<\', \'RepositoryStatus\', \'>\', \'item\', \')\', \'{\', \'final\', \'RepositoryStatus\', \'entry\', \'=\', \'item\', \'.\', \'getModelObject\', \'(\', \')\', \';\', \'item\', \'.\', \'add\', \'(\', \'WicketUtils\', \'.\', \'getPullStatusImage\', \'(\', \'"statusIcon"\', \',\', \'entry\', \'.\', \'status\', \')\', \')\', \';\', \'item\', \'.\', \'add\', \'(\', \'new\', \'Label\', \'(\', \'"name"\', \',\', \'entry\', \'.\', \'name\', \')\', \')\', \';\', \'item\', \'.\', \'add\', \'(\', \'new\', \'Label\', \'(\', \'"status"\', \',\', \'entry.status\', \'.\', \'name\', \'(\', \')\', \')\', \')\', \';\', \'WicketUtils\', \'.\', \'setAlternatingBackground\', \'(\', \'item\', \',\', \'counter\', \')\', \';\', \'counter\', \'++\', \';\', \'}\']', 'public void METHOD_1 ( final TYPE_1 < TYPE_2 > item ) { final TYPE_2 entry = item . METHOD_2 ( ) ; item . add ( TYPE_3 . METHOD_3 ( STRING_1 , entry . status ) ) ; item . add ( new TYPE_4 ( STRING_2 , entry . name ) ) ; item . add ( new TYPE_4 ( STRING_3 , VAR_1 . name ( ) ) ) ; TYPE_3 . METHOD_4 ( item , VAR_2 ) ; VAR_2 ++ ; }', '[\'TYPE_3: WicketUtils\', \'TYPE_1: Item\', \'TYPE_2: RepositoryStatus\', \'TYPE_4: Label\', \'METHOD_4: setAlternatingBackground\', \'METHOD_1: populateItem\', \'METHOD_2: getModelObject\', \'METHOD_3: getPullStatusImage\', \'VAR_1: entry.status\', \'VAR_2: counter\', \'STRING_2: "name"\', \'STRING_3: "status"\', \'STRING_1: "statusIcon"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/FederationRegistrationPage.java', 4, '84:25', '91:25', 83, 7 ), ( 5, 129, 0, 'public UsersPage() {\n    super();\n    setupPage("", "");\n    add(new TeamsPanel("teamsPanel", showAdmin).setVisible(showAdmin));\n    add(new UsersPanel("usersPanel", showAdmin).setVisible(showAdmin));\n    }', '[\'public\', \'UsersPage\', \'(\', \')\', \'{\', \'super\', \'(\', \')\', \';\', \'setupPage\', \'(\', \'""\', \',\', \'""\', \')\', \';\', \'add\', \'(\', \'new\', \'TeamsPanel\', \'(\', \'"teamsPanel"\', \',\', \'showAdmin\', \')\', \'.\', \'setVisible\', \'(\', \'showAdmin\', \')\', \')\', \';\', \'add\', \'(\', \'new\', \'UsersPanel\', \'(\', \'"usersPanel"\', \',\', \'showAdmin\', \')\', \'.\', \'setVisible\', \'(\', \'showAdmin\', \')\', \')\', \';\', \'}\']', 'public VAR_1 ( ) { super ( ) ; METHOD_1 ( STRING_1 , STRING_1 ) ; add ( new TYPE_1 ( STRING_2 , VAR_2 ) . METHOD_2 ( VAR_2 ) ) ; add ( new TYPE_2 ( STRING_3 , VAR_2 ) . METHOD_2 ( VAR_2 ) ) ; }', '[\'TYPE_2: UsersPanel\', \'TYPE_1: TeamsPanel\', \'METHOD_2: setVisible\', \'METHOD_1: setupPage\', \'VAR_2: showAdmin\', \'VAR_1: UsersPage\', \'STRING_1: ""\', \'STRING_3: "usersPanel"\', \'STRING_2: "teamsPanel"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/UsersPage.java', 1, '25:9', '32:9', 47, 5 ), ( 5, 136, 2, '@Override\n    protected void setupPage(String pageName, String subName) {\n    add(new Label("pageName", pageName));\n    if (!StringUtils.isEmpty(subName)) {\n    subName = "/ " + subName;\n    }\n    add(new Label("pageSubName", subName));\n    super.setupPage("", pageName);\n    }', '[\'protected\', \'void\', \'setupPage\', \'(\', \'String\', \'pageName\', \',\', \'String\', \'subName\', \')\', \'{\', \'add\', \'(\', \'new\', \'Label\', \'(\', \'"pageName"\', \',\', \'pageName\', \')\', \')\', \';\', \'if\', \'(\', \'!\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'subName\', \')\', \')\', \'{\', \'subName\', \'=\', \'"/ "\', \'+\', \'subName\', \';\', \'}\', \'add\', \'(\', \'new\', \'Label\', \'(\', \'"pageSubName"\', \',\', \'subName\', \')\', \')\', \';\', \'super\', \'.\', \'setupPage\', \'(\', \'""\', \',\', \'pageName\', \')\', \';\', \'}\']', 'protected void METHOD_1 ( String VAR_1 , String VAR_2 ) { add ( new TYPE_1 ( STRING_1 , VAR_1 ) ) ; if ( ! StringUtils . isEmpty ( VAR_2 ) ) { VAR_2 = STRING_2 + VAR_2 ; } add ( new TYPE_1 ( STRING_3 , VAR_2 ) ) ; super . METHOD_1 ( STRING_4 , VAR_1 ) ; }', '[\'TYPE_1: Label\', \'METHOD_1: setupPage\', \'VAR_2: subName\', \'VAR_1: pageName\', \'STRING_4: ""\', \'STRING_1: "pageName"\', \'STRING_3: "pageSubName"\', \'STRING_2: "/ "\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/RootSubPage.java', 6, '65:9', '73:9', 63, 7 ), ( 5, 138, 3, 'public void populateItem(final Item<RepositoryModel> item) {\n    final RepositoryModel entry = item.getModelObject();\n    ProjectRepositoryPanel row = new ProjectRepositoryPanel("repository", \n    						getLocalizer(), this, showAdmin, entry, getAccessRestrictions());\n    item.add(row);\n    }', '[\'public\', \'void\', \'populateItem\', \'(\', \'final\', \'Item\', \'<\', \'RepositoryModel\', \'>\', \'item\', \')\', \'{\', \'final\', \'RepositoryModel\', \'entry\', \'=\', \'item\', \'.\', \'getModelObject\', \'(\', \')\', \';\', \'ProjectRepositoryPanel\', \'row\', \'=\', \'new\', \'ProjectRepositoryPanel\', \'(\', \'"repository"\', \',\', \'getLocalizer\', \'(\', \')\', \',\', \'this\', \',\', \'showAdmin\', \',\', \'entry\', \',\', \'getAccessRestrictions\', \'(\', \')\', \')\', \';\', \'item\', \'.\', \'add\', \'(\', \'row\', \')\', \';\', \'}\']', 'public void METHOD_1 ( final TYPE_1 < TYPE_2 > item ) { final TYPE_2 entry = item . METHOD_2 ( ) ; TYPE_3 row = new TYPE_3 ( STRING_1 , METHOD_3 ( ) , this , VAR_1 , entry , METHOD_4 ( ) ) ; item . add ( row ) ; }', '[\'TYPE_1: Item\', \'TYPE_3: ProjectRepositoryPanel\', \'TYPE_2: RepositoryModel\', \'METHOD_3: getLocalizer\', \'METHOD_1: populateItem\', \'METHOD_2: getModelObject\', \'METHOD_4: getAccessRestrictions\', \'VAR_1: showAdmin\', \'STRING_1: "repository"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/ProjectPage.java', 13, '135:25', '141:25', 50, 5 ), ( 5, 138, 6, '@Override\n    protected List<ProjectModel> getProjectModels() {\n    if (projectModels.isEmpty()) {\n    List<RepositoryModel> repositories = getRepositoryModels();\n    List<ProjectModel> projects = GitBlit.self().getProjectModels(repositories, false);\n    projectModels.addAll(projects);\n    }\n    return projectModels;\n    }', '[\'protected\', \'List\', \'<\', \'ProjectModel\', \'>\', \'getProjectModels\', \'(\', \')\', \'{\', \'if\', \'(\', \'projectModels\', \'.\', \'isEmpty\', \'(\', \')\', \')\', \'{\', \'List\', \'<\', \'RepositoryModel\', \'>\', \'repositories\', \'=\', \'getRepositoryModels\', \'(\', \')\', \';\', \'List\', \'<\', \'ProjectModel\', \'>\', \'projects\', \'=\', \'GitBlit\', \'.\', \'self\', \'(\', \')\', \'.\', \'getProjectModels\', \'(\', \'repositories\', \',\', \'false\', \')\', \';\', \'projectModels\', \'.\', \'addAll\', \'(\', \'projects\', \')\', \';\', \'}\', \'return\', \'projectModels\', \';\', \'}\']', 'protected List < TYPE_1 > METHOD_1 ( ) { if ( VAR_1 . isEmpty ( ) ) { List < TYPE_2 > VAR_2 = METHOD_2 ( ) ; List < TYPE_1 > VAR_3 = TYPE_3 . METHOD_3 ( ) . METHOD_1 ( VAR_2 , false ) ; VAR_1 . addAll ( VAR_3 ) ; } return VAR_1 ; }', '[\'TYPE_2: RepositoryModel\', \'TYPE_1: ProjectModel\', \'TYPE_3: GitBlit\', \'METHOD_2: getRepositoryModels\', \'METHOD_3: self\', \'METHOD_1: getProjectModels\', \'VAR_3: projects\', \'VAR_2: repositories\', \'VAR_1: projectModels\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/ProjectPage.java', 13, '286:9', '294:9', 57, 7 ), ( 5, 138, 7, 'private ProjectModel getProjectModel(String name) {\n    for (ProjectModel project : getProjectModels()) {\n    if (name.equalsIgnoreCase(project.name)) {\n    return project;\n    }\n    }\n    return null;\n    }', '[\'private\', \'ProjectModel\', \'getProjectModel\', \'(\', \'String\', \'name\', \')\', \'{\', \'for\', \'(\', \'ProjectModel\', \'project\', \':\', \'getProjectModels\', \'(\', \')\', \')\', \'{\', \'if\', \'(\', \'name\', \'.\', \'equalsIgnoreCase\', \'(\', \'project\', \'.\', \'name\', \')\', \')\', \'{\', \'return\', \'project\', \';\', \'}\', \'}\', \'return\', \'null\', \';\', \'}\']', 'private TYPE_1 METHOD_1 ( String name ) { for ( TYPE_1 VAR_1 : METHOD_2 ( ) ) { if ( name . METHOD_3 ( VAR_1 . name ) ) { return VAR_1 ; } } return null ; }', '[\'TYPE_1: ProjectModel\', \'METHOD_1: getProjectModel\', \'METHOD_2: getProjectModels\', \'METHOD_3: equalsIgnoreCase\', \'VAR_1: project\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/ProjectPage.java', 13, '296:9', '303:9', 38, 5 ), ( 5, 138, 10, 'private String transformMarkdown(String markdown) {\n    String message = "";\n    if (!StringUtils.isEmpty(markdown)) {\n    // Read user-supplied message\n    try {\n    message = MarkdownUtils.transformMarkdown(markdown);\n    } catch (Throwable t) {\n    message = getString("gb.failedToRead") + " " + markdown;\n    warn(message, t);\n    }\n    }\n    return message;\n    }', '[\'private\', \'String\', \'transformMarkdown\', \'(\', \'String\', \'markdown\', \')\', \'{\', \'String\', \'message\', \'=\', \'""\', \';\', \'if\', \'(\', \'!\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'markdown\', \')\', \')\', \'{\', \'try\', \'{\', \'message\', \'=\', \'MarkdownUtils\', \'.\', \'transformMarkdown\', \'(\', \'markdown\', \')\', \';\', \'}\', \'catch\', \'(\', \'Throwable\', \'t\', \')\', \'{\', \'message\', \'=\', \'getString\', \'(\', \'"gb.failedToRead"\', \')\', \'+\', \'" "\', \'+\', \'markdown\', \';\', \'warn\', \'(\', \'message\', \',\', \'t\', \')\', \';\', \'}\', \'}\', \'return\', \'message\', \';\', \'}\']', 'private String METHOD_1 ( String VAR_1 ) { String message = STRING_1 ; if ( ! StringUtils . isEmpty ( VAR_1 ) ) { try { message = TYPE_1 . METHOD_1 ( VAR_1 ) ; } catch ( Throwable t ) { message = getString ( STRING_2 ) + STRING_3 + VAR_1 ; warn ( message , t ) ; } } return message ; }', '[\'TYPE_1: MarkdownUtils\', \'METHOD_1: transformMarkdown\', \'VAR_1: markdown\', \'STRING_1: ""\', \'STRING_2: "gb.failedToRead"\', \'STRING_3: " "\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/ProjectPage.java', 13, '342:9', '354:9', 67, 9 ), ( 5, 139, 3, 'public void populateItem(final Item<String> item) {\n    String tag = item.getModelObject();\n    Component c = new LinkPanel("tagLink", null, tag, TagPage.class,\n    									WicketUtils.newObjectParameter(sr.repository, Constants.R_TAGS + tag));\n    WicketUtils.setCssClass(c, "tagRef");\n    item.add(c);\n    }', '[\'public\', \'void\', \'populateItem\', \'(\', \'final\', \'Item\', \'<\', \'String\', \'>\', \'item\', \')\', \'{\', \'String\', \'tag\', \'=\', \'item\', \'.\', \'getModelObject\', \'(\', \')\', \';\', \'Component\', \'c\', \'=\', \'new\', \'LinkPanel\', \'(\', \'"tagLink"\', \',\', \'null\', \',\', \'tag\', \',\', \'TagPage.\', \'class\', \',\', \'WicketUtils\', \'.\', \'newObjectParameter\', \'(\', \'sr.repository\', \',\', \'Constants.R_TAGS\', \'+\', \'tag\', \')\', \')\', \';\', \'WicketUtils\', \'.\', \'setCssClass\', \'(\', \'c\', \',\', \'"tagRef"\', \')\', \';\', \'item\', \'.\', \'add\', \'(\', \'c\', \')\', \';\', \'}\']', 'public void METHOD_1 ( final TYPE_1 < String > item ) { String VAR_1 = item . METHOD_2 ( ) ; TYPE_2 c = new TYPE_3 ( STRING_1 , null , VAR_1 , VAR_2 class , TYPE_4 . METHOD_3 ( VAR_3 , VAR_4 + VAR_1 ) ) ; TYPE_4 . METHOD_4 ( c , STRING_2 ) ; item . add ( c ) ; }', '[\'TYPE_4: WicketUtils\', \'TYPE_1: Item\', \'TYPE_2: Component\', \'TYPE_3: LinkPanel\', \'METHOD_1: populateItem\', \'METHOD_4: setCssClass\', \'METHOD_2: getModelObject\', \'METHOD_3: newObjectParameter\', \'VAR_4: Constants.R_TAGS\', \'VAR_2: TagPage.\', \'VAR_1: tag\', \'VAR_3: sr.repository\', \'STRING_2: "tagRef"\', \'STRING_1: "tagLink"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/LuceneSearchPage.java', 6, '201:49', '207:49', 69, 6 ), ( 5, 140, 3, 'public void populateItem(final Item<RepositoryModel> item) {\n    final RepositoryModel entry = item.getModelObject();\n    ProjectRepositoryPanel row = new ProjectRepositoryPanel("repository", \n    						getLocalizer(), this, showAdmin, entry, getAccessRestrictions());\n    item.add(row);\n    }', '[\'public\', \'void\', \'populateItem\', \'(\', \'final\', \'Item\', \'<\', \'RepositoryModel\', \'>\', \'item\', \')\', \'{\', \'final\', \'RepositoryModel\', \'entry\', \'=\', \'item\', \'.\', \'getModelObject\', \'(\', \')\', \';\', \'ProjectRepositoryPanel\', \'row\', \'=\', \'new\', \'ProjectRepositoryPanel\', \'(\', \'"repository"\', \',\', \'getLocalizer\', \'(\', \')\', \',\', \'this\', \',\', \'showAdmin\', \',\', \'entry\', \',\', \'getAccessRestrictions\', \'(\', \')\', \')\', \';\', \'item\', \'.\', \'add\', \'(\', \'row\', \')\', \';\', \'}\']', 'public void METHOD_1 ( final TYPE_1 < TYPE_2 > item ) { final TYPE_2 entry = item . METHOD_2 ( ) ; TYPE_3 row = new TYPE_3 ( STRING_1 , METHOD_3 ( ) , this , VAR_1 , entry , METHOD_4 ( ) ) ; item . add ( row ) ; }', '[\'TYPE_1: Item\', \'TYPE_3: ProjectRepositoryPanel\', \'TYPE_2: RepositoryModel\', \'METHOD_3: getLocalizer\', \'METHOD_1: populateItem\', \'METHOD_2: getModelObject\', \'METHOD_4: getAccessRestrictions\', \'VAR_1: showAdmin\', \'STRING_1: "repository"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/UserPage.java', 7, '125:25', '131:25', 50, 5 ), ( 5, 140, 4, '@Override\n    protected void addDropDownMenus(List<PageRegistration> pages) {\n    PageParameters params = getPageParameters();\n    DropDownMenuRegistration menu = new DropDownMenuRegistration("gb.filters",\n    				UserPage.class);\n    // preserve time filter option on repository choices\n    menu.menuItems.addAll(getRepositoryFilterItems(params));\n    // preserve repository filter option on time choices\n    menu.menuItems.addAll(getTimeFilterItems(params));\n    if (menu.menuItems.size() > 0) {\n    // Reset Filter\n    menu.menuItems.add(new DropDownMenuItem(getString("gb.reset"), null, null));\n    }\n    pages.add(menu);\n    }', '[\'protected\', \'void\', \'addDropDownMenus\', \'(\', \'List\', \'<\', \'PageRegistration\', \'>\', \'pages\', \')\', \'{\', \'PageParameters\', \'params\', \'=\', \'getPageParameters\', \'(\', \')\', \';\', \'DropDownMenuRegistration\', \'menu\', \'=\', \'new\', \'DropDownMenuRegistration\', \'(\', \'"gb.filters"\', \',\', \'UserPage.\', \'class\', \')\', \';\', \'menu.menuItems\', \'.\', \'addAll\', \'(\', \'getRepositoryFilterItems\', \'(\', \'params\', \')\', \')\', \';\', \'menu.menuItems\', \'.\', \'addAll\', \'(\', \'getTimeFilterItems\', \'(\', \'params\', \')\', \')\', \';\', \'if\', \'(\', \'menu.menuItems\', \'.\', \'size\', \'(\', \')\', \'>\', \'0\', \')\', \'{\', \'menu.menuItems\', \'.\', \'add\', \'(\', \'new\', \'DropDownMenuItem\', \'(\', \'getString\', \'(\', \'"gb.reset"\', \')\', \',\', \'null\', \',\', \'null\', \')\', \')\', \';\', \'}\', \'pages\', \'.\', \'add\', \'(\', \'menu\', \')\', \';\', \'}\']', 'protected void METHOD_1 ( List < TYPE_1 > VAR_1 ) { TYPE_2 params = METHOD_2 ( ) ; TYPE_3 VAR_2 = new TYPE_3 ( STRING_1 , VAR_3 class ) ; VAR_4 . addAll ( METHOD_3 ( params ) ) ; VAR_4 . addAll ( METHOD_4 ( params ) ) ; if ( VAR_4 . size ( ) > 0 ) { VAR_4 . add ( new TYPE_4 ( getString ( STRING_2 ) , null , null ) ) ; } VAR_1 . add ( VAR_2 ) ; }', '[\'TYPE_3: DropDownMenuRegistration\', \'TYPE_2: PageParameters\', \'TYPE_1: PageRegistration\', \'TYPE_4: DropDownMenuItem\', \'METHOD_3: getRepositoryFilterItems\', \'METHOD_4: getTimeFilterItems\', \'METHOD_1: addDropDownMenus\', \'METHOD_2: getPageParameters\', \'VAR_1: pages\', \'VAR_4: menu.menuItems\', \'VAR_3: UserPage.\', \'VAR_2: menu\', \'STRING_1: "gb.filters"\', \'STRING_2: "gb.reset"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/UserPage.java', 7, '136:9', '154:9', 100, 10 ), ( 5, 144, 6, 'protected Repository getRepository() {\n    if (r == null) {\n    Repository r = GitBlit.self().getRepository(repositoryName);\n    if (r == null) {\n    error(getString("gb.canNotLoadRepository") + " " + repositoryName, true);\n    return null;\n    }\n    this.r = r;\n    }\n    return r;\n    }', '[\'protected\', \'Repository\', \'getRepository\', \'(\', \')\', \'{\', \'if\', \'(\', \'r\', \'==\', \'null\', \')\', \'{\', \'Repository\', \'r\', \'=\', \'GitBlit\', \'.\', \'self\', \'(\', \')\', \'.\', \'getRepository\', \'(\', \'repositoryName\', \')\', \';\', \'if\', \'(\', \'r\', \'==\', \'null\', \')\', \'{\', \'error\', \'(\', \'getString\', \'(\', \'"gb.canNotLoadRepository"\', \')\', \'+\', \'" "\', \'+\', \'repositoryName\', \',\', \'true\', \')\', \';\', \'return\', \'null\', \';\', \'}\', \'this\', \'.\', \'r\', \'=\', \'r\', \';\', \'}\', \'return\', \'r\', \';\', \'}\']', 'protected TYPE_1 METHOD_1 ( ) { if ( r == null ) { TYPE_1 r = TYPE_2 . METHOD_2 ( ) . METHOD_1 ( VAR_1 ) ; if ( r == null ) { error ( getString ( STRING_1 ) + STRING_2 + VAR_1 , true ) ; return null ; } this . r = r ; } return r ; }', '[\'TYPE_1: Repository\', \'TYPE_2: GitBlit\', \'METHOD_1: getRepository\', \'METHOD_2: self\', \'VAR_1: repositoryName\', \'STRING_2: " "\', \'STRING_1: "gb.canNotLoadRepository"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/RepositoryPage.java', 27, '302:9', '312:9', 61, 8 ), ( 5, 144, 7, 'protected RepositoryModel getRepositoryModel() {\n    if (m == null) {\n    RepositoryModel model = GitBlit.self().getRepositoryModel(\n    					GitBlitWebSession.get().getUser(), repositoryName);\n    if (model == null) {\n    if (GitBlit.self().hasRepository(repositoryName, true)) {\n    // has repository, but unauthorized\n    authenticationError(getString("gb.unauthorizedAccessForRepository") + " " + repositoryName);\n    } else {\n    // does not have repository\n    error(getString("gb.canNotLoadRepository") + " " + repositoryName, true);\n    }\n    return null;\n    }\n    m = model;\n    }\n    return m;\n    }', '[\'protected\', \'RepositoryModel\', \'getRepositoryModel\', \'(\', \')\', \'{\', \'if\', \'(\', \'m\', \'==\', \'null\', \')\', \'{\', \'RepositoryModel\', \'model\', \'=\', \'GitBlit\', \'.\', \'self\', \'(\', \')\', \'.\', \'getRepositoryModel\', \'(\', \'GitBlitWebSession\', \'.\', \'get\', \'(\', \')\', \'.\', \'getUser\', \'(\', \')\', \',\', \'repositoryName\', \')\', \';\', \'if\', \'(\', \'model\', \'==\', \'null\', \')\', \'{\', \'if\', \'(\', \'GitBlit\', \'.\', \'self\', \'(\', \')\', \'.\', \'hasRepository\', \'(\', \'repositoryName\', \',\', \'true\', \')\', \')\', \'{\', \'authenticationError\', \'(\', \'getString\', \'(\', \'"gb.unauthorizedAccessForRepository"\', \')\', \'+\', \'" "\', \'+\', \'repositoryName\', \')\', \';\', \'}\', \'else\', \'{\', \'error\', \'(\', \'getString\', \'(\', \'"gb.canNotLoadRepository"\', \')\', \'+\', \'" "\', \'+\', \'repositoryName\', \',\', \'true\', \')\', \';\', \'}\', \'return\', \'null\', \';\', \'}\', \'m\', \'=\', \'model\', \';\', \'}\', \'return\', \'m\', \';\', \'}\']', 'protected TYPE_1 METHOD_1 ( ) { if ( m == null ) { TYPE_1 model = TYPE_2 . METHOD_2 ( ) . METHOD_1 ( TYPE_3 . get ( ) . METHOD_3 ( ) , VAR_1 ) ; if ( model == null ) { if ( TYPE_2 . METHOD_2 ( ) . METHOD_4 ( VAR_1 , true ) ) { METHOD_5 ( getString ( STRING_1 ) + STRING_2 + VAR_1 ) ; } else { error ( getString ( STRING_3 ) + STRING_2 + VAR_1 , true ) ; } return null ; } m = model ; } return m ; }', '[\'TYPE_3: GitBlitWebSession\', \'TYPE_1: RepositoryModel\', \'TYPE_2: GitBlit\', \'METHOD_3: getUser\', \'METHOD_2: self\', \'METHOD_1: getRepositoryModel\', \'METHOD_4: hasRepository\', \'METHOD_5: authenticationError\', \'VAR_1: repositoryName\', \'STRING_1: "gb.unauthorizedAccessForRepository"\', \'STRING_2: " "\', \'STRING_3: "gb.canNotLoadRepository"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/RepositoryPage.java', 27, '314:9', '331:9', 100, 12 ), ( 5, 144, 8, 'protected RevCommit getCommit() {\n    RevCommit commit = JGitUtils.getCommit(r, objectId);\n    if (commit == null) {\n    error(MessageFormat.format(getString("gb.failedToFindCommit"),\n    					objectId, repositoryName, getPageName()), true);\n    }\n    getSubmodules(commit);\n    return commit;\n    }', '[\'protected\', \'RevCommit\', \'getCommit\', \'(\', \')\', \'{\', \'RevCommit\', \'commit\', \'=\', \'JGitUtils\', \'.\', \'getCommit\', \'(\', \'r\', \',\', \'objectId\', \')\', \';\', \'if\', \'(\', \'commit\', \'==\', \'null\', \')\', \'{\', \'error\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'getString\', \'(\', \'"gb.failedToFindCommit"\', \')\', \',\', \'objectId\', \',\', \'repositoryName\', \',\', \'getPageName\', \'(\', \')\', \')\', \',\', \'true\', \')\', \';\', \'}\', \'getSubmodules\', \'(\', \'commit\', \')\', \';\', \'return\', \'commit\', \';\', \'}\']', 'protected TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_1 ( r , VAR_2 ) ; if ( VAR_1 == null ) { error ( TYPE_3 . format ( getString ( STRING_1 ) , VAR_2 , VAR_3 , METHOD_2 ( ) ) , true ) ; } METHOD_3 ( VAR_1 ) ; return VAR_1 ; }', '[\'TYPE_3: MessageFormat\', \'TYPE_2: JGitUtils\', \'TYPE_1: RevCommit\', \'METHOD_2: getPageName\', \'METHOD_1: getCommit\', \'METHOD_3: getSubmodules\', \'VAR_1: commit\', \'VAR_3: repositoryName\', \'VAR_2: objectId\', \'STRING_1: "gb.failedToFindCommit"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/RepositoryPage.java', 27, '333:9', '341:9', 56, 7 ), ( 5, 144, 9, 'protected Map<String, SubmoduleModel> getSubmodules(RevCommit commit) {\n    if (submodules == null) {\n    submodules = new HashMap<String, SubmoduleModel>();\n    for (SubmoduleModel model : JGitUtils.getSubmodules(r, commit.getTree())) {\n    submodules.put(model.path, model);\n    }\n    }\n    return submodules;\n    }', '[\'protected\', \'Map\', \'<\', \'String\', \',\', \'SubmoduleModel\', \'>\', \'getSubmodules\', \'(\', \'RevCommit\', \'commit\', \')\', \'{\', \'if\', \'(\', \'submodules\', \'==\', \'null\', \')\', \'{\', \'submodules\', \'=\', \'new\', \'HashMap\', \'<\', \'String\', \',\', \'SubmoduleModel\', \'>\', \'(\', \')\', \';\', \'for\', \'(\', \'SubmoduleModel\', \'model\', \':\', \'JGitUtils\', \'.\', \'getSubmodules\', \'(\', \'r\', \',\', \'commit\', \'.\', \'getTree\', \'(\', \')\', \')\', \')\', \'{\', \'submodules\', \'.\', \'put\', \'(\', \'model\', \'.\', \'path\', \',\', \'model\', \')\', \';\', \'}\', \'}\', \'return\', \'submodules\', \';\', \'}\']', 'protected Map < String , TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 ) { if ( VAR_2 == null ) { VAR_2 = new HashMap < String , TYPE_1 > ( ) ; for ( TYPE_1 model : TYPE_3 . METHOD_1 ( r , VAR_1 . METHOD_2 ( ) ) ) { VAR_2 . put ( model . path , model ) ; } } return VAR_2 ; }', '[\'TYPE_1: SubmoduleModel\', \'TYPE_3: JGitUtils\', \'TYPE_2: RevCommit\', \'METHOD_2: getTree\', \'METHOD_1: getSubmodules\', \'VAR_2: submodules\', \'VAR_1: commit\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/RepositoryPage.java', 27, '343:9', '351:9', 66, 6 ), ( 5, 144, 13, 'protected void addFullText(String wicketId, String text, boolean substituteRegex) {\n    String html = StringUtils.escapeForHtml(text, false);\n    if (substituteRegex) {\n    html = GitBlit.self().processCommitMessage(repositoryName, html);\n    } else {\n    html = StringUtils.breakLinesForHtml(html);\n    }\n    add(new Label(wicketId, html).setEscapeModelStrings(false));\n    }', '[\'protected\', \'void\', \'addFullText\', \'(\', \'String\', \'wicketId\', \',\', \'String\', \'text\', \',\', \'boolean\', \'substituteRegex\', \')\', \'{\', \'String\', \'html\', \'=\', \'StringUtils\', \'.\', \'escapeForHtml\', \'(\', \'text\', \',\', \'false\', \')\', \';\', \'if\', \'(\', \'substituteRegex\', \')\', \'{\', \'html\', \'=\', \'GitBlit\', \'.\', \'self\', \'(\', \')\', \'.\', \'processCommitMessage\', \'(\', \'repositoryName\', \',\', \'html\', \')\', \';\', \'}\', \'else\', \'{\', \'html\', \'=\', \'StringUtils\', \'.\', \'breakLinesForHtml\', \'(\', \'html\', \')\', \';\', \'}\', \'add\', \'(\', \'new\', \'Label\', \'(\', \'wicketId\', \',\', \'html\', \')\', \'.\', \'setEscapeModelStrings\', \'(\', \'false\', \')\', \')\', \';\', \'}\']', 'protected void METHOD_1 ( String VAR_1 , String text , boolean VAR_2 ) { String VAR_3 = StringUtils . METHOD_2 ( text , false ) ; if ( VAR_2 ) { VAR_3 = TYPE_1 . METHOD_3 ( ) . METHOD_4 ( VAR_4 , VAR_3 ) ; } else { VAR_3 = StringUtils . METHOD_5 ( VAR_3 ) ; } add ( new TYPE_2 ( VAR_1 , VAR_3 ) . METHOD_6 ( false ) ) ; }', '[\'TYPE_2: Label\', \'TYPE_1: GitBlit\', \'METHOD_2: escapeForHtml\', \'METHOD_4: processCommitMessage\', \'METHOD_5: breakLinesForHtml\', \'METHOD_3: self\', \'METHOD_6: setEscapeModelStrings\', \'METHOD_1: addFullText\', \'VAR_2: substituteRegex\', \'VAR_1: wicketId\', \'VAR_3: html\', \'VAR_4: repositoryName\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/RepositoryPage.java', 27, '426:9', '434:9', 75, 7 ), ( 5, 144, 15, 'protected void setPersonSearchTooltip(Component component, String value,\n    			Constants.SearchType searchType) {\n    if (searchType.equals(Constants.SearchType.AUTHOR)) {\n    WicketUtils.setHtmlTooltip(component, getString("gb.searchForAuthor") + " " + value);\n    } else if (searchType.equals(Constants.SearchType.COMMITTER)) {\n    WicketUtils.setHtmlTooltip(component, getString("gb.searchForCommitter") + " " + value);\n    }\n    }', '[\'protected\', \'void\', \'setPersonSearchTooltip\', \'(\', \'Component\', \'component\', \',\', \'String\', \'value\', \',\', \'Constants.SearchType\', \'searchType\', \')\', \'{\', \'if\', \'(\', \'searchType\', \'.\', \'equals\', \'(\', \'Constants.SearchType.AUTHOR\', \')\', \')\', \'{\', \'WicketUtils\', \'.\', \'setHtmlTooltip\', \'(\', \'component\', \',\', \'getString\', \'(\', \'"gb.searchForAuthor"\', \')\', \'+\', \'" "\', \'+\', \'value\', \')\', \';\', \'}\', \'else\', \'if\', \'(\', \'searchType\', \'.\', \'equals\', \'(\', \'Constants.SearchType.COMMITTER\', \')\', \')\', \'{\', \'WicketUtils\', \'.\', \'setHtmlTooltip\', \'(\', \'component\', \',\', \'getString\', \'(\', \'"gb.searchForCommitter"\', \')\', \'+\', \'" "\', \'+\', \'value\', \')\', \';\', \'}\', \'}\']', 'protected void METHOD_1 ( TYPE_1 VAR_1 , String value , TYPE_2 VAR_2 ) { if ( VAR_2 . equals ( VAR_3 ) ) { TYPE_3 . METHOD_2 ( VAR_1 , getString ( STRING_1 ) + STRING_2 + value ) ; } else if ( VAR_2 . equals ( VAR_4 ) ) { TYPE_3 . METHOD_2 ( VAR_1 , getString ( STRING_3 ) + STRING_2 + value ) ; } }', '[\'TYPE_3: WicketUtils\', \'TYPE_1: Component\', \'TYPE_2: Constants.SearchType\', \'METHOD_2: setHtmlTooltip\', \'METHOD_1: setPersonSearchTooltip\', \'VAR_1: component\', \'VAR_2: searchType\', \'VAR_3: Constants.SearchType.AUTHOR\', \'VAR_4: Constants.SearchType.COMMITTER\', \'STRING_3: "gb.searchForCommitter"\', \'STRING_1: "gb.searchForAuthor"\', \'STRING_2: " "\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/RepositoryPage.java', 27, '476:9', '483:9', 79, 6 ), ( 5, 144, 16, 'protected void setChangeTypeTooltip(Component container, ChangeType type) {\n    switch (type) {\n    case ADD:\n    WicketUtils.setHtmlTooltip(container, getString("gb.addition"));\n    break;\n    case COPY:\n    case RENAME:\n    WicketUtils.setHtmlTooltip(container, getString("gb.rename"));\n    break;\n    case DELETE:\n    WicketUtils.setHtmlTooltip(container, getString("gb.deletion"));\n    break;\n    case MODIFY:\n    WicketUtils.setHtmlTooltip(container, getString("gb.modification"));\n    break;\n    }\n    }', '[\'protected\', \'void\', \'setChangeTypeTooltip\', \'(\', \'Component\', \'container\', \',\', \'ChangeType\', \'type\', \')\', \'{\', \'switch\', \'(\', \'type\', \')\', \'{\', \'case\', \'ADD\', \':\', \'WicketUtils\', \'.\', \'setHtmlTooltip\', \'(\', \'container\', \',\', \'getString\', \'(\', \'"gb.addition"\', \')\', \')\', \';\', \'break\', \';\', \'case\', \'COPY\', \':\', \'case\', \'RENAME\', \':\', \'WicketUtils\', \'.\', \'setHtmlTooltip\', \'(\', \'container\', \',\', \'getString\', \'(\', \'"gb.rename"\', \')\', \')\', \';\', \'break\', \';\', \'case\', \'DELETE\', \':\', \'WicketUtils\', \'.\', \'setHtmlTooltip\', \'(\', \'container\', \',\', \'getString\', \'(\', \'"gb.deletion"\', \')\', \')\', \';\', \'break\', \';\', \'case\', \'MODIFY\', \':\', \'WicketUtils\', \'.\', \'setHtmlTooltip\', \'(\', \'container\', \',\', \'getString\', \'(\', \'"gb.modification"\', \')\', \')\', \';\', \'break\', \';\', \'}\', \'}\']', 'protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 type ) { switch ( type ) { case VAR_2 : TYPE_3 . METHOD_2 ( VAR_1 , getString ( STRING_1 ) ) ; break ; case VAR_3 : case VAR_4 : TYPE_3 . METHOD_2 ( VAR_1 , getString ( STRING_2 ) ) ; break ; case VAR_5 : TYPE_3 . METHOD_2 ( VAR_1 , getString ( STRING_3 ) ) ; break ; case VAR_6 : TYPE_3 . METHOD_2 ( VAR_1 , getString ( STRING_4 ) ) ; break ; } }', '[\'TYPE_3: WicketUtils\', \'TYPE_2: ChangeType\', \'TYPE_1: Component\', \'METHOD_2: setHtmlTooltip\', \'METHOD_1: setChangeTypeTooltip\', \'VAR_1: container\', \'VAR_4: RENAME\', \'VAR_2: ADD\', \'VAR_5: DELETE\', \'VAR_6: MODIFY\', \'VAR_3: COPY\', \'STRING_2: "gb.rename"\', \'STRING_4: "gb.modification"\', \'STRING_1: "gb.addition"\', \'STRING_3: "gb.deletion"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/RepositoryPage.java', 27, '485:9', '501:9', 85, 15 ), ( 5, 144, 17, '@Override\n    protected void onBeforeRender() {\n    // dispose of repository object\n    if (r != null) {\n    r.close();\n    r = null;\n    }\n    // setup page header and footer\n    setupPage(repositoryName, "/ " + getPageName());\n    super.onBeforeRender();\n    }', '[\'protected\', \'void\', \'onBeforeRender\', \'(\', \')\', \'{\', \'if\', \'(\', \'r\', \'!=\', \'null\', \')\', \'{\', \'r\', \'.\', \'close\', \'(\', \')\', \';\', \'r\', \'=\', \'null\', \';\', \'}\', \'setupPage\', \'(\', \'repositoryName\', \',\', \'"/ "\', \'+\', \'getPageName\', \'(\', \')\', \')\', \';\', \'super\', \'.\', \'onBeforeRender\', \'(\', \')\', \';\', \'}\']', 'protected void METHOD_1 ( ) { if ( r != null ) { r . close ( ) ; r = null ; } METHOD_2 ( VAR_1 , STRING_1 + METHOD_3 ( ) ) ; super . METHOD_1 ( ) ; }', '[\'METHOD_3: getPageName\', \'METHOD_2: setupPage\', \'METHOD_1: onBeforeRender\', \'VAR_1: repositoryName\', \'STRING_1: "/ "\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/RepositoryPage.java', 27, '503:9', '513:9', 42, 7 ), ( 5, 144, 23, 'void setTranslatedAttributes() {\n    WicketUtils.setHtmlTooltip(get("searchType"), getString("gb.searchTypeTooltip"));\n    WicketUtils.setHtmlTooltip(get("searchBox"),\n    					MessageFormat.format(getString("gb.searchTooltip"), repositoryName));\n    WicketUtils.setInputPlaceholder(get("searchBox"), getString("gb.search"));\n    }', '[\'void\', \'setTranslatedAttributes\', \'(\', \')\', \'{\', \'WicketUtils\', \'.\', \'setHtmlTooltip\', \'(\', \'get\', \'(\', \'"searchType"\', \')\', \',\', \'getString\', \'(\', \'"gb.searchTypeTooltip"\', \')\', \')\', \';\', \'WicketUtils\', \'.\', \'setHtmlTooltip\', \'(\', \'get\', \'(\', \'"searchBox"\', \')\', \',\', \'MessageFormat\', \'.\', \'format\', \'(\', \'getString\', \'(\', \'"gb.searchTooltip"\', \')\', \',\', \'repositoryName\', \')\', \')\', \';\', \'WicketUtils\', \'.\', \'setInputPlaceholder\', \'(\', \'get\', \'(\', \'"searchBox"\', \')\', \',\', \'getString\', \'(\', \'"gb.search"\', \')\', \')\', \';\', \'}\']', 'void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( get ( STRING_1 ) , getString ( STRING_2 ) ) ; TYPE_1 . METHOD_2 ( get ( STRING_3 ) , TYPE_2 . format ( getString ( STRING_4 ) , VAR_1 ) ) ; TYPE_1 . METHOD_3 ( get ( STRING_3 ) , getString ( STRING_5 ) ) ; }', '[\'TYPE_1: WicketUtils\', \'TYPE_2: MessageFormat\', \'METHOD_3: setInputPlaceholder\', \'METHOD_2: setHtmlTooltip\', \'METHOD_1: setTranslatedAttributes\', \'VAR_1: repositoryName\', \'STRING_2: "gb.searchTypeTooltip"\', \'STRING_1: "searchType"\', \'STRING_4: "gb.searchTooltip"\', \'STRING_5: "gb.search"\', \'STRING_3: "searchBox"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/RepositoryPage.java', 27, '556:17', '561:17', 57, 5 ), ( 5, 146, 0, 'public void populateItem(final Item<String> item) {\n    String entry = item.getModelObject();\n    item.add(new LinkPanel("commitParent", "list", entry, CommitPage.class,\n    						newCommitParameter(entry)));\n    item.add(new BookmarkablePageLink<Void>("view", CommitPage.class,\n    						newCommitParameter(entry)));\n    item.add(new BookmarkablePageLink<Void>("diff", CommitDiffPage.class,\n    						newCommitParameter(entry)));\n    }', '[\'public\', \'void\', \'populateItem\', \'(\', \'final\', \'Item\', \'<\', \'String\', \'>\', \'item\', \')\', \'{\', \'String\', \'entry\', \'=\', \'item\', \'.\', \'getModelObject\', \'(\', \')\', \';\', \'item\', \'.\', \'add\', \'(\', \'new\', \'LinkPanel\', \'(\', \'"commitParent"\', \',\', \'"list"\', \',\', \'entry\', \',\', \'CommitPage.\', \'class\', \',\', \'newCommitParameter\', \'(\', \'entry\', \')\', \')\', \')\', \';\', \'item\', \'.\', \'add\', \'(\', \'new\', \'BookmarkablePageLink\', \'<\', \'Void\', \'>\', \'(\', \'"view"\', \',\', \'CommitPage.\', \'class\', \',\', \'newCommitParameter\', \'(\', \'entry\', \')\', \')\', \')\', \';\', \'item\', \'.\', \'add\', \'(\', \'new\', \'BookmarkablePageLink\', \'<\', \'Void\', \'>\', \'(\', \'"diff"\', \',\', \'CommitDiffPage.\', \'class\', \',\', \'newCommitParameter\', \'(\', \'entry\', \')\', \')\', \')\', \';\', \'}\']', 'public void METHOD_1 ( final TYPE_1 < String > item ) { String entry = item . METHOD_2 ( ) ; item . add ( new TYPE_2 ( STRING_1 , STRING_2 , entry , VAR_1 class , METHOD_3 ( entry ) ) ) ; item . add ( new TYPE_3 < TYPE_4 > ( STRING_3 , VAR_1 class , METHOD_3 ( entry ) ) ) ; item . add ( new TYPE_3 < TYPE_4 > ( STRING_4 , VAR_2 class , METHOD_3 ( entry ) ) ) ; }', '[\'TYPE_3: BookmarkablePageLink\', \'TYPE_1: Item\', \'TYPE_4: Void\', \'TYPE_2: LinkPanel\', \'METHOD_1: populateItem\', \'METHOD_2: getModelObject\', \'METHOD_3: newCommitParameter\', \'VAR_1: CommitPage.\', \'VAR_2: CommitDiffPage.\', \'STRING_2: "list"\', \'STRING_1: "commitParent"\', \'STRING_4: "diff"\', \'STRING_3: "view"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/CommitPage.java', 6, '105:25', '113:25', 91, 8 ), ( 5, 148, 1, '@Override\n    public void onSubmit() {\n    String from = ComparePage.this.fromRefId.getObject();\n    String to = ComparePage.this.toRefId.getObject();\n    PageParameters params = WicketUtils.newRangeParameter(repositoryName, from, to);\n    String relativeUrl = urlFor(ComparePage.class, params).toString();\n    String absoluteUrl = RequestUtils.toAbsolutePath(relativeUrl);\n    getRequestCycle().setRequestTarget(new RedirectRequestTarget(absoluteUrl));\n    }', '[\'public\', \'void\', \'onSubmit\', \'(\', \')\', \'{\', \'String\', \'from\', \'=\', \'ComparePage.\', \'this\', \'.\', \'fromRefId\', \'.\', \'getObject\', \'(\', \')\', \';\', \'String\', \'to\', \'=\', \'ComparePage.\', \'this\', \'.\', \'toRefId\', \'.\', \'getObject\', \'(\', \')\', \';\', \'PageParameters\', \'params\', \'=\', \'WicketUtils\', \'.\', \'newRangeParameter\', \'(\', \'repositoryName\', \',\', \'from\', \',\', \'to\', \')\', \';\', \'String\', \'relativeUrl\', \'=\', \'urlFor\', \'(\', \'ComparePage.\', \'class\', \',\', \'params\', \')\', \'.\', \'toString\', \'(\', \')\', \';\', \'String\', \'absoluteUrl\', \'=\', \'RequestUtils\', \'.\', \'toAbsolutePath\', \'(\', \'relativeUrl\', \')\', \';\', \'getRequestCycle\', \'(\', \')\', \'.\', \'setRequestTarget\', \'(\', \'new\', \'RedirectRequestTarget\', \'(\', \'absoluteUrl\', \')\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) { String VAR_1 = VAR_2 this . VAR_3 . METHOD_2 ( ) ; String VAR_4 = VAR_2 this . VAR_5 . METHOD_2 ( ) ; TYPE_1 params = TYPE_2 . METHOD_3 ( VAR_6 , VAR_1 , VAR_4 ) ; String VAR_7 = METHOD_4 ( VAR_2 class , params ) . toString ( ) ; String VAR_8 = TYPE_3 . METHOD_5 ( VAR_7 ) ; METHOD_6 ( ) . METHOD_7 ( new TYPE_4 ( VAR_8 ) ) ; }', '[\'TYPE_2: WicketUtils\', \'TYPE_4: RedirectRequestTarget\', \'TYPE_1: PageParameters\', \'TYPE_3: RequestUtils\', \'METHOD_2: getObject\', \'METHOD_4: urlFor\', \'METHOD_6: getRequestCycle\', \'METHOD_1: onSubmit\', \'METHOD_3: newRangeParameter\', \'METHOD_5: toAbsolutePath\', \'METHOD_7: setRequestTarget\', \'VAR_3: fromRefId\', \'VAR_8: absoluteUrl\', \'VAR_1: from\', \'VAR_4: to\', \'VAR_5: toRefId\', \'VAR_6: repositoryName\', \'VAR_7: relativeUrl\', \'VAR_2: ComparePage.\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/ComparePage.java', 7, '203:25', '212:25', 83, 8 ), ( 5, 148, 2, '@Override\n    public void onSubmit() {\n    String from = ComparePage.this.fromCommitId.getObject();\n    String to = ComparePage.this.toCommitId.getObject();\n    PageParameters params = WicketUtils.newRangeParameter(repositoryName, from, to);\n    String relativeUrl = urlFor(ComparePage.class, params).toString();\n    String absoluteUrl = RequestUtils.toAbsolutePath(relativeUrl);\n    getRequestCycle().setRequestTarget(new RedirectRequestTarget(absoluteUrl));\n    }', '[\'public\', \'void\', \'onSubmit\', \'(\', \')\', \'{\', \'String\', \'from\', \'=\', \'ComparePage.\', \'this\', \'.\', \'fromCommitId\', \'.\', \'getObject\', \'(\', \')\', \';\', \'String\', \'to\', \'=\', \'ComparePage.\', \'this\', \'.\', \'toCommitId\', \'.\', \'getObject\', \'(\', \')\', \';\', \'PageParameters\', \'params\', \'=\', \'WicketUtils\', \'.\', \'newRangeParameter\', \'(\', \'repositoryName\', \',\', \'from\', \',\', \'to\', \')\', \';\', \'String\', \'relativeUrl\', \'=\', \'urlFor\', \'(\', \'ComparePage.\', \'class\', \',\', \'params\', \')\', \'.\', \'toString\', \'(\', \')\', \';\', \'String\', \'absoluteUrl\', \'=\', \'RequestUtils\', \'.\', \'toAbsolutePath\', \'(\', \'relativeUrl\', \')\', \';\', \'getRequestCycle\', \'(\', \')\', \'.\', \'setRequestTarget\', \'(\', \'new\', \'RedirectRequestTarget\', \'(\', \'absoluteUrl\', \')\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) { String VAR_1 = VAR_2 this . VAR_3 . METHOD_2 ( ) ; String VAR_4 = VAR_2 this . VAR_5 . METHOD_2 ( ) ; TYPE_1 params = TYPE_2 . METHOD_3 ( VAR_6 , VAR_1 , VAR_4 ) ; String VAR_7 = METHOD_4 ( VAR_2 class , params ) . toString ( ) ; String VAR_8 = TYPE_3 . METHOD_5 ( VAR_7 ) ; METHOD_6 ( ) . METHOD_7 ( new TYPE_4 ( VAR_8 ) ) ; }', '[\'TYPE_2: WicketUtils\', \'TYPE_4: RedirectRequestTarget\', \'TYPE_1: PageParameters\', \'TYPE_3: RequestUtils\', \'METHOD_2: getObject\', \'METHOD_4: urlFor\', \'METHOD_6: getRequestCycle\', \'METHOD_1: onSubmit\', \'METHOD_3: newRangeParameter\', \'METHOD_5: toAbsolutePath\', \'METHOD_7: setRequestTarget\', \'VAR_3: fromCommitId\', \'VAR_8: absoluteUrl\', \'VAR_1: from\', \'VAR_5: toCommitId\', \'VAR_4: to\', \'VAR_6: repositoryName\', \'VAR_7: relativeUrl\', \'VAR_2: ComparePage.\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/ComparePage.java', 7, '238:25', '247:25', 83, 8 ), ( 5, 148, 5, 'private RevCommit getCommit(Repository r, String rev)\n    {\n    RevCommit otherCommit = JGitUtils.getCommit(r, rev);\n    if (otherCommit == null) {\n    error(MessageFormat.format(getString("gb.failedToFindCommit"), rev, repositoryName, getPageName()), true);\n    }\n    return otherCommit;\n    }', '[\'private\', \'RevCommit\', \'getCommit\', \'(\', \'Repository\', \'r\', \',\', \'String\', \'rev\', \')\', \'{\', \'RevCommit\', \'otherCommit\', \'=\', \'JGitUtils\', \'.\', \'getCommit\', \'(\', \'r\', \',\', \'rev\', \')\', \';\', \'if\', \'(\', \'otherCommit\', \'==\', \'null\', \')\', \'{\', \'error\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'getString\', \'(\', \'"gb.failedToFindCommit"\', \')\', \',\', \'rev\', \',\', \'repositoryName\', \',\', \'getPageName\', \'(\', \')\', \')\', \',\', \'true\', \')\', \';\', \'}\', \'return\', \'otherCommit\', \';\', \'}\']', 'private TYPE_1 METHOD_1 ( TYPE_2 r , String VAR_1 ) { TYPE_1 VAR_2 = TYPE_3 . METHOD_1 ( r , VAR_1 ) ; if ( VAR_2 == null ) { error ( TYPE_4 . format ( getString ( STRING_1 ) , VAR_1 , VAR_3 , METHOD_2 ( ) ) , true ) ; } return VAR_2 ; }', '[\'TYPE_2: Repository\', \'TYPE_4: MessageFormat\', \'TYPE_3: JGitUtils\', \'TYPE_1: RevCommit\', \'METHOD_2: getPageName\', \'METHOD_1: getCommit\', \'VAR_1: rev\', \'VAR_2: otherCommit\', \'VAR_3: repositoryName\', \'STRING_1: "gb.failedToFindCommit"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/wicket/pages/ComparePage.java', 7, '272:9', '279:9', 57, 5 ), ( 5, 150, 2, 'private void error(HttpServletResponse response, String mkd) throws ServletException,\n    			IOException, ParseException {\n    String content = MarkdownUtils.transformMarkdown(mkd);\n    response.setContentType("text/html; charset=" + Constants.ENCODING);\n    response.getWriter().write(content);\n    }', '[\'private\', \'void\', \'error\', \'(\', \'HttpServletResponse\', \'response\', \',\', \'String\', \'mkd\', \')\', \'throws\', \'ServletException\', \',\', \'IOException\', \',\', \'ParseException\', \'{\', \'String\', \'content\', \'=\', \'MarkdownUtils\', \'.\', \'transformMarkdown\', \'(\', \'mkd\', \')\', \';\', \'response\', \'.\', \'setContentType\', \'(\', \'"text/html; charset="\', \'+\', \'Constants.ENCODING\', \')\', \';\', \'response\', \'.\', \'getWriter\', \'(\', \')\', \'.\', \'write\', \'(\', \'content\', \')\', \';\', \'}\']', 'private void error ( TYPE_1 response , String VAR_1 ) throws TYPE_2 , IOException , TYPE_3 { String content = TYPE_4 . METHOD_1 ( VAR_1 ) ; response . METHOD_2 ( STRING_1 + VAR_2 ) ; response . METHOD_3 ( ) . write ( content ) ; }', '[\'TYPE_2: ServletException\', \'TYPE_1: HttpServletResponse\', \'TYPE_3: ParseException\', \'TYPE_4: MarkdownUtils\', \'METHOD_3: getWriter\', \'METHOD_2: setContentType\', \'METHOD_1: transformMarkdown\', \'VAR_1: mkd\', \'VAR_2: Constants.ENCODING\', \'STRING_1: "text/html; charset="\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/PagesServlet.java', 6, '231:9', '236:9', 49, 5 ), ( 5, 151, 5, 'public boolean queue(Message message) {\n    if (!isReady()) {\n    return false;\n    }\n    try {\n    message.saveChanges();\n    } catch (Throwable t) {\n    logger.error("Failed to save changes to message!", t);\n    }\n    queue.add(message);\n    return true;\n    }', '[\'public\', \'boolean\', \'queue\', \'(\', \'Message\', \'message\', \')\', \'{\', \'if\', \'(\', \'!\', \'isReady\', \'(\', \')\', \')\', \'{\', \'return\', \'false\', \';\', \'}\', \'try\', \'{\', \'message\', \'.\', \'saveChanges\', \'(\', \')\', \';\', \'}\', \'catch\', \'(\', \'Throwable\', \'t\', \')\', \'{\', \'logger\', \'.\', \'error\', \'(\', \'"Failed to save changes to message!"\', \',\', \'t\', \')\', \';\', \'}\', \'queue\', \'.\', \'add\', \'(\', \'message\', \')\', \';\', \'return\', \'true\', \';\', \'}\']', 'public boolean METHOD_1 ( TYPE_1 message ) { if ( ! METHOD_2 ( ) ) { return false ; } try { message . METHOD_3 ( ) ; } catch ( Throwable t ) { logger . error ( STRING_1 , t ) ; } VAR_1 . add ( message ) ; return true ; }', '[\'TYPE_1: Message\', \'METHOD_3: saveChanges\', \'METHOD_2: isReady\', \'METHOD_1: queue\', \'VAR_1: queue\', \'STRING_1: "Failed to save changes to message!"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/MailExecutor.java', 9, '184:9', '195:9', 54, 9 ), ( 5, 152, 6, '@Override\n    public String getCookie(UserModel model) {\n    if (!StringUtils.isEmpty(model.cookie)) {\n    return model.cookie;\n    }\n    Properties allUsers = super.read();\n    String value = allUsers.getProperty(model.username);\n    String[] roles = value.split(",");\n    String password = roles[0];\n    String cookie = StringUtils.getSHA1(model.username + password);\n    return cookie;\n    }', '[\'public\', \'String\', \'getCookie\', \'(\', \'UserModel\', \'model\', \')\', \'{\', \'if\', \'(\', \'!\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'model.cookie\', \')\', \')\', \'{\', \'return\', \'model.cookie\', \';\', \'}\', \'Properties\', \'allUsers\', \'=\', \'super\', \'.\', \'read\', \'(\', \')\', \';\', \'String\', \'value\', \'=\', \'allUsers\', \'.\', \'getProperty\', \'(\', \'model.username\', \')\', \';\', \'String\', \'[\', \']\', \'roles\', \'=\', \'value\', \'.\', \'split\', \'(\', \'","\', \')\', \';\', \'String\', \'password\', \'=\', \'roles\', \'[\', \'0\', \']\', \';\', \'String\', \'cookie\', \'=\', \'StringUtils\', \'.\', \'getSHA1\', \'(\', \'model.username\', \'+\', \'password\', \')\', \';\', \'return\', \'cookie\', \';\', \'}\']', 'public String METHOD_1 ( TYPE_1 model ) { if ( ! StringUtils . isEmpty ( VAR_1 ) ) { return VAR_1 ; } TYPE_2 VAR_2 = super . read ( ) ; String value = VAR_2 . getProperty ( VAR_3 ) ; String [ ] VAR_4 = value . METHOD_2 ( "," ) ; String VAR_5 = VAR_4 [ 0 ] ; String VAR_6 = StringUtils . METHOD_3 ( VAR_3 + VAR_5 ) ; return VAR_6 ; }', '[\'TYPE_1: UserModel\', \'TYPE_2: Properties\', \'METHOD_2: split\', \'METHOD_1: getCookie\', \'METHOD_3: getSHA1\', \'VAR_5: password\', \'VAR_1: model.cookie\', \'VAR_6: cookie\', \'VAR_2: allUsers\', \'VAR_3: model.username\', \'VAR_4: roles\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/FileUserService.java', 38, '137:9', '148:9', 86, 10 ), ( 5, 152, 7, '@Override\n    public UserModel authenticate(char[] cookie) {\n    String hash = new String(cookie);\n    if (StringUtils.isEmpty(hash)) {\n    return null;\n    }\n    read();\n    UserModel model = null;\n    if (cookies.containsKey(hash)) {\n    String username = cookies.get(hash);\n    model = getUserModel(username);\n    }\n    return model;\n    }', '[\'public\', \'UserModel\', \'authenticate\', \'(\', \'char\', \'[\', \']\', \'cookie\', \')\', \'{\', \'String\', \'hash\', \'=\', \'new\', \'String\', \'(\', \'cookie\', \')\', \';\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'hash\', \')\', \')\', \'{\', \'return\', \'null\', \';\', \'}\', \'read\', \'(\', \')\', \';\', \'UserModel\', \'model\', \'=\', \'null\', \';\', \'if\', \'(\', \'cookies\', \'.\', \'containsKey\', \'(\', \'hash\', \')\', \')\', \'{\', \'String\', \'username\', \'=\', \'cookies\', \'.\', \'get\', \'(\', \'hash\', \')\', \';\', \'model\', \'=\', \'getUserModel\', \'(\', \'username\', \')\', \';\', \'}\', \'return\', \'model\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( char [ ] VAR_1 ) { String VAR_2 = new String ( VAR_1 ) ; if ( StringUtils . isEmpty ( VAR_2 ) ) { return null ; } read ( ) ; TYPE_1 model = null ; if ( VAR_3 . containsKey ( VAR_2 ) ) { String VAR_4 = VAR_3 . get ( VAR_2 ) ; model = METHOD_2 ( VAR_4 ) ; } return model ; }', '[\'TYPE_1: UserModel\', \'METHOD_2: getUserModel\', \'METHOD_1: authenticate\', \'VAR_1: cookie\', \'VAR_2: hash\', \'VAR_3: cookies\', \'VAR_4: username\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/FileUserService.java', 38, '156:9', '169:9', 74, 11 ), ( 5, 152, 12, '@Override\n    public boolean updateUserModels(Collection<UserModel> models) {\n    try {\n    Properties allUsers = read();\n    for (UserModel model : models) {\n    updateUserCache(allUsers, model.username, model);\n    }\n    write(allUsers);\n    return true;\n    } catch (Throwable t) {\n    logger.error(MessageFormat.format("Failed to update {0} user models!", models.size()),\n    					t);\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'updateUserModels\', \'(\', \'Collection\', \'<\', \'UserModel\', \'>\', \'models\', \')\', \'{\', \'try\', \'{\', \'Properties\', \'allUsers\', \'=\', \'read\', \'(\', \')\', \';\', \'for\', \'(\', \'UserModel\', \'model\', \':\', \'models\', \')\', \'{\', \'updateUserCache\', \'(\', \'allUsers\', \',\', \'model.username\', \',\', \'model\', \')\', \';\', \'}\', \'write\', \'(\', \'allUsers\', \')\', \';\', \'return\', \'true\', \';\', \'}\', \'catch\', \'(\', \'Throwable\', \'t\', \')\', \'{\', \'logger\', \'.\', \'error\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'"Failed to update {0} user models!"\', \',\', \'models\', \'.\', \'size\', \'(\', \')\', \')\', \',\', \'t\', \')\', \';\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean METHOD_1 ( Collection < TYPE_1 > VAR_1 ) { try { TYPE_2 VAR_2 = read ( ) ; for ( TYPE_1 model : VAR_1 ) { METHOD_2 ( VAR_2 , VAR_3 , model ) ; } write ( VAR_2 ) ; return true ; } catch ( Throwable t ) { logger . error ( TYPE_3 . format ( STRING_1 , VAR_1 . size ( ) ) , t ) ; } return false ; }', '[\'TYPE_1: UserModel\', \'TYPE_3: MessageFormat\', \'TYPE_2: Properties\', \'METHOD_1: updateUserModels\', \'METHOD_2: updateUserCache\', \'VAR_1: models\', \'VAR_2: allUsers\', \'VAR_3: model.username\', \'STRING_1: "Failed to update {0} user models!"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/FileUserService.java', 38, '278:9', '292:9', 80, 12 ), ( 5, 152, 13, '@Override\n    public boolean updateUserModel(String username, UserModel model) {\n    try {\n    Properties allUsers = read();\n    updateUserCache(allUsers, username, model);\n    write(allUsers);\n    return true;\n    } catch (Throwable t) {\n    logger.error(MessageFormat.format("Failed to update user model {0}!", model.username),\n    					t);\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'updateUserModel\', \'(\', \'String\', \'username\', \',\', \'UserModel\', \'model\', \')\', \'{\', \'try\', \'{\', \'Properties\', \'allUsers\', \'=\', \'read\', \'(\', \')\', \';\', \'updateUserCache\', \'(\', \'allUsers\', \',\', \'username\', \',\', \'model\', \')\', \';\', \'write\', \'(\', \'allUsers\', \')\', \';\', \'return\', \'true\', \';\', \'}\', \'catch\', \'(\', \'Throwable\', \'t\', \')\', \'{\', \'logger\', \'.\', \'error\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'"Failed to update user model {0}!"\', \',\', \'model.username\', \')\', \',\', \'t\', \')\', \';\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean METHOD_1 ( String VAR_1 , TYPE_1 model ) { try { TYPE_2 VAR_2 = read ( ) ; METHOD_2 ( VAR_2 , VAR_1 , model ) ; write ( VAR_2 ) ; return true ; } catch ( Throwable t ) { logger . error ( TYPE_3 . format ( STRING_1 , VAR_3 ) , t ) ; } return false ; }', '[\'TYPE_1: UserModel\', \'TYPE_3: MessageFormat\', \'TYPE_2: Properties\', \'METHOD_1: updateUserModel\', \'METHOD_2: updateUserCache\', \'VAR_2: allUsers\', \'VAR_3: model.username\', \'VAR_1: username\', \'STRING_1: "Failed to update user model {0}!"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/FileUserService.java', 38, '304:9', '316:9', 68, 11 ), ( 5, 152, 17, '@Override\n    public List<String> getAllUsernames() {\n    Properties allUsers = read();\n    List<String> list = new ArrayList<String>();\n    for (String user : allUsers.stringPropertyNames()) {\n    if (user.charAt(0) == \'@\') {\n    // skip team user definitions\n    continue;\n    }\n    list.add(user);\n    }\n    Collections.sort(list);\n    return list;\n    }', '[\'public\', \'List\', \'<\', \'String\', \'>\', \'getAllUsernames\', \'(\', \')\', \'{\', \'Properties\', \'allUsers\', \'=\', \'read\', \'(\', \')\', \';\', \'List\', \'<\', \'String\', \'>\', \'list\', \'=\', \'new\', \'ArrayList\', \'<\', \'String\', \'>\', \'(\', \')\', \';\', \'for\', \'(\', \'String\', \'user\', \':\', \'allUsers.stringPropertyNames\', \'(\', \')\', \')\', \'{\', \'if\', \'(\', \'user.charAt\', \'(\', \'0\', \')\', \'==\', \'continue\', \';\', \'}\', \'list\', \'.\', \'add\', \'(\', \'user\', \')\', \';\', \'}\', \'Collections.sort\', \'(\', \'list\', \')\', \';\', \'return\', \'list\', \';\', \'}\']', 'public List < String > VAR_1 ( ) { VAR_2 VAR_3 = read ( ) ; List < String > list = new ArrayList < String > ( ) ; for ( String VAR_4 : VAR_5 ( ) ) { if ( VAR_6 ( 0 ) == continue ; } list . add ( VAR_4 ) ; } VAR_7 ( list ) ; return list ; }', '[\'VAR_1: getAllUsernames\', \'VAR_6: user.charAt\', \'VAR_7: Collections.sort\', \'VAR_3: allUsers\', \'VAR_5: allUsers.stringPropertyNames\', \'VAR_2: Properties\', \'VAR_4: user\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/FileUserService.java', 38, '452:9', '465:9', 74, 10 ), ( 5, 152, 18, '@Override\n    public List<UserModel> getAllUsers() {\n    read();\n    List<UserModel> list = new ArrayList<UserModel>();\n    for (String username : getAllUsernames()) {\n    list.add(getUserModel(username));\n    }\n    Collections.sort(list);\n    return list;\n    }', '[\'public\', \'List\', \'<\', \'UserModel\', \'>\', \'getAllUsers\', \'(\', \')\', \'{\', \'read\', \'(\', \')\', \';\', \'List\', \'<\', \'UserModel\', \'>\', \'list\', \'=\', \'new\', \'ArrayList\', \'<\', \'UserModel\', \'>\', \'(\', \')\', \';\', \'for\', \'(\', \'String\', \'username\', \':\', \'getAllUsernames\', \'(\', \')\', \')\', \'{\', \'list\', \'.\', \'add\', \'(\', \'getUserModel\', \'(\', \'username\', \')\', \')\', \';\', \'}\', \'Collections\', \'.\', \'sort\', \'(\', \'list\', \')\', \';\', \'return\', \'list\', \';\', \'}\']', 'public List < TYPE_1 > METHOD_1 ( ) { read ( ) ; List < TYPE_1 > list = new ArrayList < TYPE_1 > ( ) ; for ( String VAR_1 : METHOD_2 ( ) ) { list . add ( METHOD_3 ( VAR_1 ) ) ; } Collections . METHOD_4 ( list ) ; return list ; }', '[\'TYPE_1: UserModel\', \'METHOD_1: getAllUsers\', \'METHOD_2: getAllUsernames\', \'METHOD_3: getUserModel\', \'METHOD_4: sort\', \'VAR_1: username\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/FileUserService.java', 38, '472:9', '481:9', 57, 8 ), ( 5, 152, 26, '@Override\n    public List<String> getAllTeamNames() {\n    List<String> list = new ArrayList<String>(teams.keySet());\n    Collections.sort(list);\n    return list;\n    }', '[\'public\', \'List\', \'<\', \'String\', \'>\', \'getAllTeamNames\', \'(\', \')\', \'{\', \'List\', \'<\', \'String\', \'>\', \'list\', \'=\', \'new\', \'ArrayList\', \'<\', \'String\', \'>\', \'(\', \'teams\', \'.\', \'keySet\', \'(\', \')\', \')\', \';\', \'Collections\', \'.\', \'sort\', \'(\', \'list\', \')\', \';\', \'return\', \'list\', \';\', \'}\']', 'public List < String > METHOD_1 ( ) { List < String > list = new ArrayList < String > ( VAR_1 . METHOD_2 ( ) ) ; Collections . METHOD_3 ( list ) ; return list ; }', '[\'METHOD_1: getAllTeamNames\', \'METHOD_3: sort\', \'METHOD_2: keySet\', \'VAR_1: teams\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/FileUserService.java', 38, '830:9', '835:9', 39, 5 ), ( 5, 152, 27, '@Override\n    public List<TeamModel> getAllTeams() {\n    List<TeamModel> list = new ArrayList<TeamModel>(teams.values());\n    list = DeepCopier.copy(list);\n    Collections.sort(list);\n    return list;\n    }', '[\'public\', \'List\', \'<\', \'TeamModel\', \'>\', \'getAllTeams\', \'(\', \')\', \'{\', \'List\', \'<\', \'TeamModel\', \'>\', \'list\', \'=\', \'new\', \'ArrayList\', \'<\', \'TeamModel\', \'>\', \'(\', \'teams\', \'.\', \'values\', \'(\', \')\', \')\', \';\', \'list\', \'=\', \'DeepCopier\', \'.\', \'copy\', \'(\', \'list\', \')\', \';\', \'Collections\', \'.\', \'sort\', \'(\', \'list\', \')\', \';\', \'return\', \'list\', \';\', \'}\']', 'public List < TYPE_1 > METHOD_1 ( ) { List < TYPE_1 > list = new ArrayList < TYPE_1 > ( VAR_1 . values ( ) ) ; list = TYPE_2 . copy ( list ) ; Collections . METHOD_2 ( list ) ; return list ; }', '[\'TYPE_1: TeamModel\', \'TYPE_2: DeepCopier\', \'METHOD_2: sort\', \'METHOD_1: getAllTeams\', \'VAR_1: teams\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/FileUserService.java', 38, '843:9', '849:9', 48, 6 ), ( 5, 152, 30, '@Override\n    public TeamModel getTeamModel(String teamname) {\n    read();\n    TeamModel team = teams.get(teamname.toLowerCase());\n    if (team != null) {\n    // clone the model, otherwise all changes to this object are\n    // live and unpersisted\n    team = DeepCopier.copy(team);\n    }\n    return team;\n    }', '[\'public\', \'TeamModel\', \'getTeamModel\', \'(\', \'String\', \'teamname\', \')\', \'{\', \'read\', \'(\', \')\', \';\', \'TeamModel\', \'team\', \'=\', \'teams\', \'.\', \'get\', \'(\', \'teamname\', \'.\', \'toLowerCase\', \'(\', \')\', \')\', \';\', \'if\', \'(\', \'team\', \'!=\', \'null\', \')\', \'{\', \'team\', \'=\', \'DeepCopier\', \'.\', \'copy\', \'(\', \'team\', \')\', \';\', \'}\', \'return\', \'team\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( String VAR_1 ) { read ( ) ; TYPE_1 VAR_2 = VAR_3 . get ( VAR_1 . METHOD_2 ( ) ) ; if ( VAR_2 != null ) { VAR_2 = TYPE_2 . copy ( VAR_2 ) ; } return VAR_2 ; }', '[\'TYPE_1: TeamModel\', \'TYPE_2: DeepCopier\', \'METHOD_1: getTeamModel\', \'METHOD_2: toLowerCase\', \'VAR_3: teams\', \'VAR_2: team\', \'VAR_1: teamname\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/FileUserService.java', 38, '970:9', '980:9', 49, 7 ), ( 5, 152, 32, 'public boolean updateTeamModels(Collection<TeamModel> models) {\n    try {\n    Properties allUsers = read();\n    for (TeamModel model : models) {\n    updateTeamCache(allUsers, model.name, model);\n    }\n    write(allUsers);\n    return true;\n    } catch (Throwable t) {\n    logger.error(MessageFormat.format("Failed to update {0} team models!", models.size()), t);\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'updateTeamModels\', \'(\', \'Collection\', \'<\', \'TeamModel\', \'>\', \'models\', \')\', \'{\', \'try\', \'{\', \'Properties\', \'allUsers\', \'=\', \'read\', \'(\', \')\', \';\', \'for\', \'(\', \'TeamModel\', \'model\', \':\', \'models\', \')\', \'{\', \'updateTeamCache\', \'(\', \'allUsers\', \',\', \'model\', \'.\', \'name\', \',\', \'model\', \')\', \';\', \'}\', \'write\', \'(\', \'allUsers\', \')\', \';\', \'return\', \'true\', \';\', \'}\', \'catch\', \'(\', \'Throwable\', \'t\', \')\', \'{\', \'logger\', \'.\', \'error\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'"Failed to update {0} team models!"\', \',\', \'models\', \'.\', \'size\', \'(\', \')\', \')\', \',\', \'t\', \')\', \';\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean METHOD_1 ( Collection < TYPE_1 > VAR_1 ) { try { TYPE_2 VAR_2 = read ( ) ; for ( TYPE_1 model : VAR_1 ) { METHOD_2 ( VAR_2 , model . name , model ) ; } write ( VAR_2 ) ; return true ; } catch ( Throwable t ) { logger . error ( TYPE_3 . format ( STRING_1 , VAR_1 . size ( ) ) , t ) ; } return false ; }', '[\'TYPE_1: TeamModel\', \'TYPE_3: MessageFormat\', \'TYPE_2: Properties\', \'METHOD_2: updateTeamCache\', \'METHOD_1: updateTeamModels\', \'VAR_1: models\', \'VAR_2: allUsers\', \'STRING_1: "Failed to update {0} team models!"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/FileUserService.java', 38, '1001:9', '1013:9', 78, 10 ), ( 5, 152, 33, '@Override\n    public boolean updateTeamModel(String teamname, TeamModel model) {\n    try {\n    Properties allUsers = read();\n    updateTeamCache(allUsers, teamname, model);\n    write(allUsers);\n    return true;\n    } catch (Throwable t) {\n    logger.error(MessageFormat.format("Failed to update team model {0}!", model.name), t);\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'updateTeamModel\', \'(\', \'String\', \'teamname\', \',\', \'TeamModel\', \'model\', \')\', \'{\', \'try\', \'{\', \'Properties\', \'allUsers\', \'=\', \'read\', \'(\', \')\', \';\', \'updateTeamCache\', \'(\', \'allUsers\', \',\', \'teamname\', \',\', \'model\', \')\', \';\', \'write\', \'(\', \'allUsers\', \')\', \';\', \'return\', \'true\', \';\', \'}\', \'catch\', \'(\', \'Throwable\', \'t\', \')\', \'{\', \'logger\', \'.\', \'error\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'"Failed to update team model {0}!"\', \',\', \'model\', \'.\', \'name\', \')\', \',\', \'t\', \')\', \';\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean METHOD_1 ( String VAR_1 , TYPE_1 model ) { try { TYPE_2 VAR_2 = read ( ) ; METHOD_2 ( VAR_2 , VAR_1 , model ) ; write ( VAR_2 ) ; return true ; } catch ( Throwable t ) { logger . error ( TYPE_3 . format ( STRING_1 , model . name ) , t ) ; } return false ; }', '[\'TYPE_1: TeamModel\', \'TYPE_3: MessageFormat\', \'TYPE_2: Properties\', \'METHOD_1: updateTeamModel\', \'METHOD_2: updateTeamCache\', \'VAR_2: allUsers\', \'VAR_1: teamname\', \'STRING_1: "Failed to update team model {0}!"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/FileUserService.java', 38, '1026:9', '1037:9', 68, 10 ), ( 5, 152, 36, '@Override\n    public boolean deleteTeam(String teamname) {\n    Properties allUsers = read();\n    teams.remove(teamname.toLowerCase());\n    allUsers.remove("@" + teamname);\n    try {\n    write(allUsers);\n    return true;\n    } catch (Throwable t) {\n    logger.error(MessageFormat.format("Failed to delete team {0}!", teamname), t);\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'deleteTeam\', \'(\', \'String\', \'teamname\', \')\', \'{\', \'Properties\', \'allUsers\', \'=\', \'read\', \'(\', \')\', \';\', \'teams\', \'.\', \'remove\', \'(\', \'teamname\', \'.\', \'toLowerCase\', \'(\', \')\', \')\', \';\', \'allUsers\', \'.\', \'remove\', \'(\', \'"<AT>"\', \'+\', \'teamname\', \')\', \';\', \'try\', \'{\', \'write\', \'(\', \'allUsers\', \')\', \';\', \'return\', \'true\', \';\', \'}\', \'catch\', \'(\', \'Throwable\', \'t\', \')\', \'{\', \'logger\', \'.\', \'error\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'"Failed to delete team {0}!"\', \',\', \'teamname\', \')\', \',\', \'t\', \')\', \';\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean METHOD_1 ( String VAR_1 ) { TYPE_1 VAR_2 = read ( ) ; VAR_3 . remove ( VAR_1 . METHOD_2 ( ) ) ; VAR_2 . remove ( STRING_1 + VAR_1 ) ; try { write ( VAR_2 ) ; return true ; } catch ( Throwable t ) { logger . error ( TYPE_2 . format ( STRING_2 , VAR_1 ) , t ) ; } return false ; }', '[\'TYPE_2: MessageFormat\', \'TYPE_1: Properties\', \'METHOD_1: deleteTeam\', \'METHOD_2: toLowerCase\', \'VAR_3: teams\', \'VAR_2: allUsers\', \'VAR_1: teamname\', \'STRING_1: "<AT>"\', \'STRING_2: "Failed to delete team {0}!"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/FileUserService.java', 38, '1133:9', '1145:9', 73, 11 ), ( 5, 153, 0, 'public static String getRepositoryName(String value) {\n    String repository = value;\n    // get the repository name from the url by finding a known url suffix\n    for (String urlSuffix : suffixes) {\n    if (repository.indexOf(urlSuffix) > -1) {\n    repository = repository.substring(0, repository.indexOf(urlSuffix));\n    }\n    }\n    return repository;\n    }', '[\'public\', \'static\', \'String\', \'getRepositoryName\', \'(\', \'String\', \'value\', \')\', \'{\', \'String\', \'repository\', \'=\', \'value\', \';\', \'for\', \'(\', \'String\', \'urlSuffix\', \':\', \'suffixes\', \')\', \'{\', \'if\', \'(\', \'repository\', \'.\', \'indexOf\', \'(\', \'urlSuffix\', \')\', \'>\', \'-\', \'1\', \')\', \'{\', \'repository\', \'=\', \'repository\', \'.\', \'substring\', \'(\', \'0\', \',\', \'repository\', \'.\', \'indexOf\', \'(\', \'urlSuffix\', \')\', \')\', \';\', \'}\', \'}\', \'return\', \'repository\', \';\', \'}\']', 'public static String METHOD_1 ( String value ) { String VAR_1 = value ; for ( String VAR_2 : VAR_3 ) { if ( VAR_1 . METHOD_2 ( VAR_2 ) > - 1 ) { VAR_1 = VAR_1 . substring ( 0 , VAR_1 . METHOD_2 ( VAR_2 ) ) ; } } return VAR_1 ; }', '[\'METHOD_1: getRepositoryName\', \'METHOD_2: indexOf\', \'VAR_2: urlSuffix\', \'VAR_3: suffixes\', \'VAR_1: repository\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitFilter.java', 9, '49:9', '58:9', 58, 6 ), ( 5, 153, 2, '@Override\n    protected String getUrlRequestAction(String suffix) {\n    if (!StringUtils.isEmpty(suffix)) {\n    if (suffix.startsWith(gitReceivePack)) {\n    return gitReceivePack;\n    } else if (suffix.startsWith(gitUploadPack)) {\n    return gitUploadPack;\n    } else if (suffix.contains("?service=git-receive-pack")) {\n    return gitReceivePack;\n    } else if (suffix.contains("?service=git-upload-pack")) {\n    return gitUploadPack;\n    } else {\n    return gitUploadPack;\n    }\n    }\n    return null;\n    }', '[\'protected\', \'String\', \'getUrlRequestAction\', \'(\', \'String\', \'suffix\', \')\', \'{\', \'if\', \'(\', \'!\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'suffix\', \')\', \')\', \'{\', \'if\', \'(\', \'suffix\', \'.\', \'startsWith\', \'(\', \'gitReceivePack\', \')\', \')\', \'{\', \'return\', \'gitReceivePack\', \';\', \'}\', \'else\', \'if\', \'(\', \'suffix\', \'.\', \'startsWith\', \'(\', \'gitUploadPack\', \')\', \')\', \'{\', \'return\', \'gitUploadPack\', \';\', \'}\', \'else\', \'if\', \'(\', \'suffix\', \'.\', \'contains\', \'(\', \'"?service=git-receive-pack"\', \')\', \')\', \'{\', \'return\', \'gitReceivePack\', \';\', \'}\', \'else\', \'if\', \'(\', \'suffix\', \'.\', \'contains\', \'(\', \'"?service=git-upload-pack"\', \')\', \')\', \'{\', \'return\', \'gitUploadPack\', \';\', \'}\', \'else\', \'{\', \'return\', \'gitUploadPack\', \';\', \'}\', \'}\', \'return\', \'null\', \';\', \'}\']', 'protected String METHOD_1 ( String VAR_1 ) { if ( ! StringUtils . isEmpty ( VAR_1 ) ) { if ( VAR_1 . startsWith ( VAR_2 ) ) { return VAR_2 ; } else if ( VAR_1 . startsWith ( VAR_3 ) ) { return VAR_3 ; } else if ( VAR_1 . contains ( STRING_1 ) ) { return VAR_2 ; } else if ( VAR_1 . contains ( STRING_2 ) ) { return VAR_3 ; } else { return VAR_3 ; } } return null ; }', '[\'METHOD_1: getUrlRequestAction\', \'VAR_3: gitUploadPack\', \'VAR_2: gitReceivePack\', \'VAR_1: suffix\', \'STRING_2: "?service=git-upload-pack"\', \'STRING_1: "?service=git-receive-pack"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitFilter.java', 9, '78:9', '94:9', 88, 14 ), ( 5, 153, 6, '@Override\n    protected boolean requiresAuthentication(RepositoryModel repository, String action) {\n    if (gitUploadPack.equals(action)) {\n    // send to client\n    return repository.accessRestriction.atLeast(AccessRestrictionType.CLONE);\n    } else if (gitReceivePack.equals(action)) {\n    // receive from client\n    return repository.accessRestriction.atLeast(AccessRestrictionType.PUSH);\n    }\n    return false;\n    }', '[\'protected\', \'boolean\', \'requiresAuthentication\', \'(\', \'RepositoryModel\', \'repository\', \',\', \'String\', \'action\', \')\', \'{\', \'if\', \'(\', \'gitUploadPack\', \'.\', \'equals\', \'(\', \'action\', \')\', \')\', \'{\', \'return\', \'repository.accessRestriction\', \'.\', \'atLeast\', \'(\', \'AccessRestrictionType.CLONE\', \')\', \';\', \'}\', \'else\', \'if\', \'(\', \'gitReceivePack\', \'.\', \'equals\', \'(\', \'action\', \')\', \')\', \'{\', \'return\', \'repository.accessRestriction\', \'.\', \'atLeast\', \'(\', \'AccessRestrictionType.PUSH\', \')\', \';\', \'}\', \'return\', \'false\', \';\', \'}\']', 'protected boolean METHOD_1 ( TYPE_1 VAR_1 , String VAR_2 ) { if ( VAR_3 . equals ( VAR_2 ) ) { return VAR_4 . METHOD_2 ( VAR_5 ) ; } else if ( VAR_6 . equals ( VAR_2 ) ) { return VAR_4 . METHOD_2 ( VAR_7 ) ; } return false ; }', '[\'TYPE_1: RepositoryModel\', \'METHOD_2: atLeast\', \'METHOD_1: requiresAuthentication\', \'VAR_4: repository.accessRestriction\', \'VAR_3: gitUploadPack\', \'VAR_7: AccessRestrictionType.PUSH\', \'VAR_2: action\', \'VAR_5: AccessRestrictionType.CLONE\', \'VAR_6: gitReceivePack\', \'VAR_1: repository\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitFilter.java', 9, '132:9', '142:9', 65, 7 ), ( 5, 154, 0, 'public void applyOverrides(File overrideFile) {\n    this.overrideFile = overrideFile;\n    // apply any web-configured overrides\n    if (overrideFile.exists()) {\n    try {\n    InputStream is = new FileInputStream(overrideFile);\n    properties.load(is);\n    is.close();\n    } catch (Throwable t) {\n    logger.error(\n    						MessageFormat.format("Failed to apply {0} setting overrides",\n    								overrideFile.getAbsolutePath()), t);\n    }\n    }\n    }', '[\'public\', \'void\', \'applyOverrides\', \'(\', \'File\', \'overrideFile\', \')\', \'{\', \'this\', \'.\', \'overrideFile\', \'=\', \'overrideFile\', \';\', \'if\', \'(\', \'overrideFile\', \'.\', \'exists\', \'(\', \')\', \')\', \'{\', \'try\', \'{\', \'InputStream\', \'is\', \'=\', \'new\', \'FileInputStream\', \'(\', \'overrideFile\', \')\', \';\', \'properties\', \'.\', \'load\', \'(\', \'is\', \')\', \';\', \'is\', \'.\', \'close\', \'(\', \')\', \';\', \'}\', \'catch\', \'(\', \'Throwable\', \'t\', \')\', \'{\', \'logger\', \'.\', \'error\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'"Failed to apply {0} setting overrides"\', \',\', \'overrideFile\', \'.\', \'getAbsolutePath\', \'(\', \')\', \')\', \',\', \'t\', \')\', \';\', \'}\', \'}\', \'}\']', 'public void METHOD_1 ( File VAR_1 ) { this . VAR_1 = VAR_1 ; if ( VAR_1 . METHOD_2 ( ) ) { try { TYPE_1 VAR_2 = new TYPE_2 ( VAR_1 ) ; properties . METHOD_3 ( VAR_2 ) ; VAR_2 . close ( ) ; } catch ( Throwable t ) { logger . error ( TYPE_3 . format ( STRING_1 , VAR_1 . METHOD_4 ( ) ) , t ) ; } } }', '[\'TYPE_3: MessageFormat\', \'TYPE_1: InputStream\', \'TYPE_2: FileInputStream\', \'METHOD_3: load\', \'METHOD_4: getAbsolutePath\', \'METHOD_2: exists\', \'METHOD_1: applyOverrides\', \'VAR_1: overrideFile\', \'VAR_2: is\', \'STRING_1: "Failed to apply {0} setting overrides"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/WebXmlSettings.java', 6, '55:9', '70:9', 75, 11 ), ( 5, 154, 5, 'public WebXmlSettings(ServletContext context) {\n    super(WebXmlSettings.class);\n    Enumeration<?> keys = context.getInitParameterNames();\n    while (keys.hasMoreElements()) {\n    String key = keys.nextElement().toString();\n    String value = context.getInitParameter(key);\n    properties.put(key, decodeValue(value));\n    logger.debug(key + "=" + properties.getProperty(key));\n    }\n    }', '[\'public\', \'WebXmlSettings\', \'(\', \'ServletContext\', \'context\', \')\', \'{\', \'super\', \'(\', \'WebXmlSettings.\', \'class\', \')\', \';\', \'Enumeration\', \'<\', \'?\', \'>\', \'keys\', \'=\', \'context\', \'.\', \'getInitParameterNames\', \'(\', \')\', \';\', \'while\', \'(\', \'keys\', \'.\', \'hasMoreElements\', \'(\', \')\', \')\', \'{\', \'String\', \'key\', \'=\', \'keys\', \'.\', \'nextElement\', \'(\', \')\', \'.\', \'toString\', \'(\', \')\', \';\', \'String\', \'value\', \'=\', \'context\', \'.\', \'getInitParameter\', \'(\', \'key\', \')\', \';\', \'properties\', \'.\', \'put\', \'(\', \'key\', \',\', \'decodeValue\', \'(\', \'value\', \')\', \')\', \';\', \'logger\', \'.\', \'debug\', \'(\', \'key\', \'+\', \'"="\', \'+\', \'properties\', \'.\', \'getProperty\', \'(\', \'key\', \')\', \')\', \';\', \'}\', \'}\']', 'public TYPE_1 ( TYPE_2 context ) { super ( VAR_1 class ) ; TYPE_3 < ? > VAR_2 = context . METHOD_1 ( ) ; while ( VAR_2 . METHOD_2 ( ) ) { String key = VAR_2 . METHOD_3 ( ) . toString ( ) ; String value = context . METHOD_4 ( key ) ; properties . put ( key , METHOD_5 ( value ) ) ; logger . debug ( key + STRING_1 + properties . getProperty ( key ) ) ; } }', '[\'TYPE_3: Enumeration\', \'TYPE_1: WebXmlSettings\', \'TYPE_2: ServletContext\', \'METHOD_4: getInitParameter\', \'METHOD_2: hasMoreElements\', \'METHOD_5: decodeValue\', \'METHOD_1: getInitParameterNames\', \'METHOD_3: nextElement\', \'VAR_1: WebXmlSettings.\', \'VAR_2: keys\', \'STRING_1: "="\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/WebXmlSettings.java', 6, '44:9', '53:9', 84, 8 ), ( 5, 156, 11, 'public void start() {\n    if (isRunning.get()) {\n    logger.warn(MessageFormat.format("{0} is already running", name));\n    return;\n    }\n    serviceThread = new Thread(this);\n    serviceThread.setName(MessageFormat.format("{0} {1}:{2,number,0}", name, host == null ? "all" : host, port));\n    serviceThread.start();\n    }', '[\'public\', \'void\', \'start\', \'(\', \')\', \'{\', \'if\', \'(\', \'isRunning\', \'.\', \'get\', \'(\', \')\', \')\', \'{\', \'logger\', \'.\', \'warn\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'"{0} is already running"\', \',\', \'name\', \')\', \')\', \';\', \'return\', \';\', \'}\', \'serviceThread\', \'=\', \'new\', \'Thread\', \'(\', \'this\', \')\', \';\', \'serviceThread\', \'.\', \'setName\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'"{0} {1}:{2\', \',\', \'name\', \',\', \'host\', \'==\', \'null\', \'?\', \'number\', \':\', \'host\', \',\', \'port\', \')\', \')\', \';\', \'serviceThread\', \'.\', \'start\', \'(\', \')\', \';\', \'}\']', 'public void start ( ) { if ( VAR_1 . get ( ) ) { logger . warn ( TYPE_1 . format ( STRING_1 , name ) ) ; return ; } VAR_2 = new TYPE_2 ( this ) ; VAR_2 . METHOD_1 ( TYPE_1 . format ( STRING_2 , name , VAR_3 == null ? STRING_3 : VAR_3 , VAR_4 ) ) ; VAR_2 . start ( ) ; }', '[\'TYPE_1: MessageFormat\', \'TYPE_2: Thread\', \'METHOD_1: setName\', \'VAR_1: isRunning\', \'VAR_4: port\', \'VAR_3: host\', \'VAR_2: serviceThread\', \'STRING_1: "{0} is already running"\', \'STRING_2: "{0} {1}:{2\', \'STRING_3: number\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/fanout/FanoutService.java', 30, '248:9', '256:9', 67, 7 ), ( 5, 156, 12, 'public void startSynchronously() {\n    start();\n    while (!isReady()) {\n    try {\n    Thread.sleep(100);\n    } catch (Exception e) {\n    }\n    }\n    }', '[\'public\', \'void\', \'startSynchronously\', \'(\', \')\', \'{\', \'start\', \'(\', \')\', \';\', \'while\', \'(\', \'!\', \'isReady\', \'(\', \')\', \')\', \'{\', \'try\', \'{\', \'Thread\', \'.\', \'sleep\', \'(\', \'100\', \')\', \';\', \'}\', \'catch\', \'(\', \'Exception\', \'e\', \')\', \'{\', \'}\', \'}\', \'}\']', 'public void METHOD_1 ( ) { start ( ) ; while ( ! METHOD_2 ( ) ) { try { TYPE_1 . METHOD_3 ( INT_1 ) ; } catch ( Exception e ) { } } }', '[\'TYPE_1: Thread\', \'METHOD_3: sleep\', \'METHOD_1: startSynchronously\', \'METHOD_2: isReady\', \'INT_1: 100\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/fanout/FanoutService.java', 30, '262:9', '270:9', 34, 6 ), ( 5, 156, 15, 'protected void resetState() {\n    // reset state data\n    connections.clear();\n    subscriptions.clear();\n    rejectedConnectionCount.set(0);\n    peakConnectionCount.set(0);\n    totalConnections.set(0);\n    totalAnnouncements.set(0);\n    totalMessages.set(0);\n    totalSubscribes.set(0);\n    totalUnsubscribes.set(0);\n    totalPings.set(0);\n    }', '[\'protected\', \'void\', \'resetState\', \'(\', \')\', \'{\', \'connections\', \'.\', \'clear\', \'(\', \')\', \';\', \'subscriptions\', \'.\', \'clear\', \'(\', \')\', \';\', \'rejectedConnectionCount\', \'.\', \'set\', \'(\', \'0\', \')\', \';\', \'peakConnectionCount\', \'.\', \'set\', \'(\', \'0\', \')\', \';\', \'totalConnections\', \'.\', \'set\', \'(\', \'0\', \')\', \';\', \'totalAnnouncements\', \'.\', \'set\', \'(\', \'0\', \')\', \';\', \'totalMessages\', \'.\', \'set\', \'(\', \'0\', \')\', \';\', \'totalSubscribes\', \'.\', \'set\', \'(\', \'0\', \')\', \';\', \'totalUnsubscribes\', \'.\', \'set\', \'(\', \'0\', \')\', \';\', \'totalPings\', \'.\', \'set\', \'(\', \'0\', \')\', \';\', \'}\']', 'protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 . set ( 0 ) ; VAR_4 . set ( 0 ) ; VAR_5 . set ( 0 ) ; VAR_6 . set ( 0 ) ; VAR_7 . set ( 0 ) ; VAR_8 . set ( 0 ) ; VAR_9 . set ( 0 ) ; VAR_10 . set ( 0 ) ; }', '[\'METHOD_1: resetState\', \'METHOD_2: clear\', \'VAR_4: peakConnectionCount\', \'VAR_10: totalPings\', \'VAR_2: subscriptions\', \'VAR_8: totalSubscribes\', \'VAR_5: totalConnections\', \'VAR_9: totalUnsubscribes\', \'VAR_6: totalAnnouncements\', \'VAR_7: totalMessages\', \'VAR_3: rejectedConnectionCount\', \'VAR_1: connections\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/fanout/FanoutService.java', 30, '321:9', '333:9', 73, 11 ), ( 5, 156, 26, 'private String asHexArray(String req) {\n    StringBuilder sb = new StringBuilder();\n    for (char c : req.toCharArray()) {\n    sb.append(Integer.toHexString(c)).append(\' \');\n    }\n    return "[ " + sb.toString().trim() + " ]";\n    }', '[\'private\', \'String\', \'asHexArray\', \'(\', \'String\', \'req\', \')\', \'{\', \'StringBuilder\', \'sb\', \'=\', \'new\', \'StringBuilder\', \'(\', \')\', \';\', \'for\', \'(\', \'char\', \'c\', \':\', \'req\', \'.\', \'toCharArray\', \'(\', \')\', \')\', \'{\', \'sb\', \'.\', \'append\', \'(\', \'Integer\', \'.\', \'toHexString\', \'(\', \'c\', \')\', \')\', \'.\', \'append\', \'(\', "\' \'", \')\', \';\', \'}\', \'return\', \'"[ "\', \'+\', \'sb\', \'.\', \'toString\', \'(\', \')\', \'.\', \'trim\', \'(\', \')\', \'+\', \'" ]"\', \';\', \'}\']', 'private String METHOD_1 ( String VAR_1 ) { StringBuilder sb = new StringBuilder ( ) ; for ( char c : VAR_1 . METHOD_2 ( ) ) { sb . append ( Integer . METHOD_3 ( c ) ) . append ( CHAR_1 ) ; } return STRING_1 + sb . toString ( ) . METHOD_4 ( ) + STRING_2 ; }', '[\'METHOD_2: toCharArray\', \'METHOD_3: toHexString\', \'METHOD_4: trim\', \'METHOD_1: asHexArray\', \'VAR_1: req\', "CHAR_1: \' \'", \'STRING_1: "[ "\', \'STRING_2: " ]"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/fanout/FanoutService.java', 30, '539:9', '545:9', 58, 5 ), ( 5, 157, 0, 'public static void main(String[] args) throws Exception {\n    FanoutSocketService pubsub = new FanoutSocketService(null, DEFAULT_PORT);\n    pubsub.setStrictRequestTermination(false);\n    pubsub.setAllowAllChannelAnnouncements(false);\n    pubsub.start();\n    }', '[\'public\', \'static\', \'void\', \'main\', \'(\', \'String\', \'[\', \']\', \'args\', \')\', \'throws\', \'Exception\', \'{\', \'FanoutSocketService\', \'pubsub\', \'=\', \'new\', \'FanoutSocketService\', \'(\', \'null\', \',\', \'DEFAULT_PORT\', \')\', \';\', \'pubsub\', \'.\', \'setStrictRequestTermination\', \'(\', \'false\', \')\', \';\', \'pubsub\', \'.\', \'setAllowAllChannelAnnouncements\', \'(\', \'false\', \')\', \';\', \'pubsub\', \'.\', \'start\', \'(\', \')\', \';\', \'}\']', 'public static void METHOD_1 ( String [ ] args ) throws Exception { TYPE_1 VAR_1 = new TYPE_1 ( null , VAR_2 ) ; VAR_1 . METHOD_2 ( false ) ; VAR_1 . METHOD_3 ( false ) ; VAR_1 . start ( ) ; }', '[\'TYPE_1: FanoutSocketService\', \'METHOD_3: setAllowAllChannelAnnouncements\', \'METHOD_1: main\', \'METHOD_2: setStrictRequestTermination\', \'VAR_2: DEFAULT_PORT\', \'VAR_1: pubsub\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/fanout/FanoutSocketService.java', 11, '47:9', '52:9', 43, 5 ), ( 5, 157, 3, '@Override\n    protected void disconnect() {\n    try {\n    if (serviceSocket != null) {\n    logger.debug(MessageFormat.format("closing {0} server socket", name));\n    serviceSocket.close();\n    serviceSocket = null;\n    }\n    } catch (IOException e) {\n    logger.error(MessageFormat.format("failed to disconnect {0}", name), e);\n    }\n    }', '[\'protected\', \'void\', \'disconnect\', \'(\', \')\', \'{\', \'try\', \'{\', \'if\', \'(\', \'serviceSocket\', \'!=\', \'null\', \')\', \'{\', \'logger\', \'.\', \'debug\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'"closing {0} server socket"\', \',\', \'name\', \')\', \')\', \';\', \'serviceSocket\', \'.\', \'close\', \'(\', \')\', \';\', \'serviceSocket\', \'=\', \'null\', \';\', \'}\', \'}\', \'catch\', \'(\', \'IOException\', \'e\', \')\', \'{\', \'logger\', \'.\', \'error\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'"failed to disconnect {0}"\', \',\', \'name\', \')\', \',\', \'e\', \')\', \';\', \'}\', \'}\']', 'protected void METHOD_1 ( ) { try { if ( VAR_1 != null ) { logger . debug ( TYPE_1 . format ( STRING_1 , name ) ) ; VAR_1 . close ( ) ; VAR_1 = null ; } } catch ( IOException e ) { logger . error ( TYPE_1 . format ( STRING_2 , name ) , e ) ; } }', '[\'TYPE_1: MessageFormat\', \'METHOD_1: disconnect\', \'VAR_1: serviceSocket\', \'STRING_1: "closing {0} server socket"\', \'STRING_2: "failed to disconnect {0}"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/fanout/FanoutSocketService.java', 11, '102:9', '113:9', 65, 9 ), ( 5, 157, 6, '@Override\n    protected void reply(String content) throws IOException {\n    // synchronously send reply\n    logger.debug(MessageFormat.format("fanout reply to {0}: {1}", id, content));\n    OutputStream os = socket.getOutputStream();\n    byte [] bytes = content.getBytes(FanoutConstants.CHARSET);\n    os.write(bytes);\n    if (bytes[bytes.length - 1] != 0xa) {\n    os.write(0xa);\n    }\n    os.flush();\n    }', '[\'protected\', \'void\', \'reply\', \'(\', \'String\', \'content\', \')\', \'throws\', \'IOException\', \'{\', \'logger\', \'.\', \'debug\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'"fanout reply to {0}: {1}"\', \',\', \'id\', \',\', \'content\', \')\', \')\', \';\', \'OutputStream\', \'os\', \'=\', \'socket\', \'.\', \'getOutputStream\', \'(\', \')\', \';\', \'byte\', \'[\', \']\', \'bytes\', \'=\', \'content\', \'.\', \'getBytes\', \'(\', \'FanoutConstants.CHARSET\', \')\', \';\', \'os\', \'.\', \'write\', \'(\', \'bytes\', \')\', \';\', \'if\', \'(\', \'bytes\', \'[\', \'bytes\', \'.\', \'length\', \'-\', \'1\', \']\', \'!=\', \'0xa\', \')\', \'{\', \'os\', \'.\', \'write\', \'(\', \'0xa\', \')\', \';\', \'}\', \'os\', \'.\', \'flush\', \'(\', \')\', \';\', \'}\']', 'protected void METHOD_1 ( String content ) throws IOException { logger . debug ( TYPE_1 . format ( STRING_1 , id , content ) ) ; TYPE_2 VAR_1 = VAR_2 . METHOD_2 ( ) ; byte [ ] bytes = content . METHOD_3 ( VAR_3 ) ; VAR_1 . write ( bytes ) ; if ( bytes [ bytes . length - 1 ] != INT_1 ) { VAR_1 . write ( INT_1 ) ; } VAR_1 . METHOD_4 ( ) ; }', '[\'TYPE_1: MessageFormat\', \'TYPE_2: OutputStream\', \'METHOD_4: flush\', \'METHOD_2: getOutputStream\', \'METHOD_1: reply\', \'METHOD_3: getBytes\', \'VAR_1: os\', \'VAR_2: socket\', \'VAR_3: FanoutConstants.CHARSET\', \'INT_1: 0xa\', \'STRING_1: "fanout reply to {0}: {1}"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/fanout/FanoutSocketService.java', 11, '209:17', '220:17', 85, 9 ), ( 5, 157, 7, 'protected void closeConnection() {\n    // close the connection socket\n    try {\n    socket.close();\n    } catch (IOException e) {\n    }\n    socket = null;\n    // remove this connection from the service\n    removeConnection(this);\n    }', '[\'protected\', \'void\', \'closeConnection\', \'(\', \')\', \'{\', \'try\', \'{\', \'socket\', \'.\', \'close\', \'(\', \')\', \';\', \'}\', \'catch\', \'(\', \'IOException\', \'e\', \')\', \'{\', \'}\', \'socket\', \'=\', \'null\', \';\', \'removeConnection\', \'(\', \'this\', \')\', \';\', \'}\']', 'protected void METHOD_1 ( ) { try { VAR_1 . close ( ) ; } catch ( IOException e ) { } VAR_1 = null ; METHOD_2 ( this ) ; }', '[\'METHOD_2: removeConnection\', \'METHOD_1: closeConnection\', \'VAR_1: socket\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/fanout/FanoutSocketService.java', 11, '222:17', '232:17', 32, 6 ), ( 5, 158, 0, 'public static void main(String[] args) throws Exception {\n    FanoutNioService pubsub = new FanoutNioService(null, DEFAULT_PORT);\n    pubsub.setStrictRequestTermination(false);\n    pubsub.setAllowAllChannelAnnouncements(false);\n    pubsub.start();\n    }', '[\'public\', \'static\', \'void\', \'main\', \'(\', \'String\', \'[\', \']\', \'args\', \')\', \'throws\', \'Exception\', \'{\', \'FanoutNioService\', \'pubsub\', \'=\', \'new\', \'FanoutNioService\', \'(\', \'null\', \',\', \'DEFAULT_PORT\', \')\', \';\', \'pubsub\', \'.\', \'setStrictRequestTermination\', \'(\', \'false\', \')\', \';\', \'pubsub\', \'.\', \'setAllowAllChannelAnnouncements\', \'(\', \'false\', \')\', \';\', \'pubsub\', \'.\', \'start\', \'(\', \')\', \';\', \'}\']', 'public static void METHOD_1 ( String [ ] args ) throws Exception { TYPE_1 VAR_1 = new TYPE_1 ( null , VAR_2 ) ; VAR_1 . METHOD_2 ( false ) ; VAR_1 . METHOD_3 ( false ) ; VAR_1 . start ( ) ; }', '[\'TYPE_1: FanoutNioService\', \'METHOD_3: setAllowAllChannelAnnouncements\', \'METHOD_1: main\', \'METHOD_2: setStrictRequestTermination\', \'VAR_2: DEFAULT_PORT\', \'VAR_1: pubsub\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/fanout/FanoutNioService.java', 14, '58:9', '63:9', 43, 5 ), ( 5, 158, 5, 'protected void closeClientSocket(String id, SocketChannel ch) {\n    try {\n    ch.close();\n    } catch (IOException e) {\n    logger.error(MessageFormat.format("fanout connection {0}", id), e);\n    }\n    }', '[\'protected\', \'void\', \'closeClientSocket\', \'(\', \'String\', \'id\', \',\', \'SocketChannel\', \'ch\', \')\', \'{\', \'try\', \'{\', \'ch\', \'.\', \'close\', \'(\', \')\', \';\', \'}\', \'catch\', \'(\', \'IOException\', \'e\', \')\', \'{\', \'logger\', \'.\', \'error\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'"fanout connection {0}"\', \',\', \'id\', \')\', \',\', \'e\', \')\', \';\', \'}\', \'}\']', 'protected void METHOD_1 ( String id , TYPE_1 VAR_1 ) { try { VAR_1 . close ( ) ; } catch ( IOException e ) { logger . error ( TYPE_2 . format ( STRING_1 , id ) , e ) ; } }', '[\'TYPE_1: SocketChannel\', \'TYPE_2: MessageFormat\', \'METHOD_1: closeClientSocket\', \'VAR_1: ch\', \'STRING_1: "fanout connection {0}"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/fanout/FanoutNioService.java', 14, '217:9', '223:9', 43, 5 ), ( 5, 158, 7, 'protected Map<String, SocketChannel> getCurrentClientSockets() {\n    Map<String, SocketChannel> sockets = new HashMap<String, SocketChannel>();\n    for (SelectionKey key : selector.keys()) {\n    if (key.channel() instanceof SocketChannel) {\n    SocketChannel ch = (SocketChannel) key.channel();\n    String id = FanoutConstants.getRemoteSocketId(ch.socket());\n    sockets.put(id, ch);\n    }\n    }\n    return sockets;\n    }', '[\'protected\', \'Map\', \'<\', \'String\', \',\', \'SocketChannel\', \'>\', \'getCurrentClientSockets\', \'(\', \')\', \'{\', \'Map\', \'<\', \'String\', \',\', \'SocketChannel\', \'>\', \'sockets\', \'=\', \'new\', \'HashMap\', \'<\', \'String\', \',\', \'SocketChannel\', \'>\', \'(\', \')\', \';\', \'for\', \'(\', \'SelectionKey\', \'key\', \':\', \'selector\', \'.\', \'keys\', \'(\', \')\', \')\', \'{\', \'if\', \'(\', \'key\', \'.\', \'channel\', \'(\', \')\', \'instanceof\', \'SocketChannel\', \')\', \'{\', \'SocketChannel\', \'ch\', \'=\', \'(\', \'SocketChannel\', \')\', \'key\', \'.\', \'channel\', \'(\', \')\', \';\', \'String\', \'id\', \'=\', \'FanoutConstants\', \'.\', \'getRemoteSocketId\', \'(\', \'ch\', \'.\', \'socket\', \'(\', \')\', \')\', \';\', \'sockets\', \'.\', \'put\', \'(\', \'id\', \',\', \'ch\', \')\', \';\', \'}\', \'}\', \'return\', \'sockets\', \';\', \'}\']', 'protected Map < String , TYPE_1 > METHOD_1 ( ) { Map < String , TYPE_1 > VAR_1 = new HashMap < String , TYPE_1 > ( ) ; for ( TYPE_2 key : VAR_2 . METHOD_2 ( ) ) { if ( key . METHOD_3 ( ) instanceof TYPE_1 ) { TYPE_1 VAR_3 = ( TYPE_1 ) key . METHOD_3 ( ) ; String id = TYPE_3 . METHOD_4 ( VAR_3 . METHOD_5 ( ) ) ; VAR_1 . put ( id , VAR_3 ) ; } } return VAR_1 ; }', '[\'TYPE_1: SocketChannel\', \'TYPE_2: SelectionKey\', \'TYPE_3: FanoutConstants\', \'METHOD_4: getRemoteSocketId\', \'METHOD_1: getCurrentClientSockets\', \'METHOD_2: keys\', \'METHOD_3: channel\', \'METHOD_5: socket\', \'VAR_3: ch\', \'VAR_2: selector\', \'VAR_1: sockets\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/fanout/FanoutNioService.java', 14, '245:9', '255:9', 87, 8 ), ( 5, 158, 13, 'FanoutNioConnection(SocketChannel ch) {\n    super(ch.socket());\n    readBuffer = ByteBuffer.allocate(FanoutConstants.BUFFER_LENGTH);\n    writeBuffer = ByteBuffer.allocate(FanoutConstants.BUFFER_LENGTH);\n    requestQueue = new ArrayList<String>();\n    replyQueue = new ArrayList<String>();\n    decoder = Charset.forName(FanoutConstants.CHARSET).newDecoder();\n    }', '[\'FanoutNioConnection\', \'(\', \'SocketChannel\', \'ch\', \')\', \'{\', \'super\', \'(\', \'ch\', \'.\', \'socket\', \'(\', \')\', \')\', \';\', \'readBuffer\', \'=\', \'ByteBuffer\', \'.\', \'allocate\', \'(\', \'FanoutConstants.BUFFER_LENGTH\', \')\', \';\', \'writeBuffer\', \'=\', \'ByteBuffer\', \'.\', \'allocate\', \'(\', \'FanoutConstants.BUFFER_LENGTH\', \')\', \';\', \'requestQueue\', \'=\', \'new\', \'ArrayList\', \'<\', \'String\', \'>\', \'(\', \')\', \';\', \'replyQueue\', \'=\', \'new\', \'ArrayList\', \'<\', \'String\', \'>\', \'(\', \')\', \';\', \'decoder\', \'=\', \'Charset\', \'.\', \'forName\', \'(\', \'FanoutConstants.CHARSET\', \')\', \'.\', \'newDecoder\', \'(\', \')\', \';\', \'}\']', 'VAR_1 ( TYPE_1 VAR_2 ) { super ( VAR_2 . METHOD_1 ( ) ) ; VAR_3 = TYPE_2 . METHOD_2 ( VAR_4 ) ; VAR_5 = TYPE_2 . METHOD_2 ( VAR_4 ) ; VAR_6 = new ArrayList < String > ( ) ; VAR_7 = new ArrayList < String > ( ) ; VAR_8 = TYPE_3 . METHOD_3 ( VAR_9 ) . METHOD_4 ( ) ; }', '[\'TYPE_1: SocketChannel\', \'TYPE_3: Charset\', \'TYPE_2: ByteBuffer\', \'METHOD_2: allocate\', \'METHOD_3: forName\', \'METHOD_4: newDecoder\', \'METHOD_1: socket\', \'VAR_3: readBuffer\', \'VAR_4: FanoutConstants.BUFFER_LENGTH\', \'VAR_2: ch\', \'VAR_7: replyQueue\', \'VAR_6: requestQueue\', \'VAR_8: decoder\', \'VAR_5: writeBuffer\', \'VAR_9: FanoutConstants.CHARSET\', \'VAR_1: FanoutNioConnection\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/fanout/FanoutNioService.java', 14, '271:17', '278:17', 69, 7 ), ( 5, 159, 2, 'protected String reply(String channel, String message) {\n    String content;\n    if (channel != null) {\n    content = channel + "!" + message;\n    } else {\n    content = message;\n    }\n    try {\n    reply(content);\n    } catch (Exception e) {\n    logger.error("failed to reply to fanout connection " + id, e);\n    }\n    return content;\n    }', '[\'protected\', \'String\', \'reply\', \'(\', \'String\', \'channel\', \',\', \'String\', \'message\', \')\', \'{\', \'String\', \'content\', \';\', \'if\', \'(\', \'channel\', \'!=\', \'null\', \')\', \'{\', \'content\', \'=\', \'channel\', \'+\', \'"!"\', \'+\', \'message\', \';\', \'}\', \'else\', \'{\', \'content\', \'=\', \'message\', \';\', \'}\', \'try\', \'{\', \'reply\', \'(\', \'content\', \')\', \';\', \'}\', \'catch\', \'(\', \'Exception\', \'e\', \')\', \'{\', \'logger\', \'.\', \'error\', \'(\', \'"failed to reply to fanout connection "\', \'+\', \'id\', \',\', \'e\', \')\', \';\', \'}\', \'return\', \'content\', \';\', \'}\']', 'protected String METHOD_1 ( String VAR_1 , String message ) { String content ; if ( VAR_1 != null ) { content = VAR_1 + STRING_1 + message ; } else { content = message ; } try { METHOD_1 ( content ) ; } catch ( Exception e ) { logger . error ( STRING_2 + id , e ) ; } return content ; }', '[\'METHOD_1: reply\', \'VAR_1: channel\', \'STRING_1: "!"\', \'STRING_2: "failed to reply to fanout connection "\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/fanout/FanoutServiceConnection.java', 8, '68:9', '81:9', 67, 11 ), ( 5, 159, 4, '@Override\n    public boolean equals(Object o) {\n    if (o instanceof FanoutServiceConnection) {\n    return id.equals(((FanoutServiceConnection) o).id);\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'equals\', \'(\', \'Object\', \'o\', \')\', \'{\', \'if\', \'(\', \'o\', \'instanceof\', \'FanoutServiceConnection\', \')\', \'{\', \'return\', \'id\', \'.\', \'equals\', \'(\', \'(\', \'(\', \'FanoutServiceConnection\', \')\', \'o\', \')\', \'.\', \'id\', \')\', \';\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean equals ( Object o ) { if ( o instanceof TYPE_1 ) { return id . equals ( ( ( TYPE_1 ) o ) . id ) ; } return false ; }', '[\'TYPE_1: FanoutServiceConnection\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/fanout/FanoutServiceConnection.java', 8, '88:9', '94:9', 37, 5 ), ( 5, 160, 16, 'public void start() {\n    if (isRunning.get()) {\n    logger.warn("Fanout client is already running");\n    return;\n    }\n    clientThread = new Thread(this, "Fanout client");\n    clientThread.start();\n    }', '[\'public\', \'void\', \'start\', \'(\', \')\', \'{\', \'if\', \'(\', \'isRunning\', \'.\', \'get\', \'(\', \')\', \')\', \'{\', \'logger\', \'.\', \'warn\', \'(\', \'"Fanout client is already running"\', \')\', \';\', \'return\', \';\', \'}\', \'clientThread\', \'=\', \'new\', \'Thread\', \'(\', \'this\', \',\', \'"Fanout client"\', \')\', \';\', \'clientThread\', \'.\', \'start\', \'(\', \')\', \';\', \'}\']', 'public void start ( ) { if ( VAR_1 . get ( ) ) { logger . warn ( STRING_1 ) ; return ; } VAR_2 = new TYPE_1 ( this , STRING_2 ) ; VAR_2 . start ( ) ; }', '[\'TYPE_1: Thread\', \'VAR_2: clientThread\', \'VAR_1: isRunning\', \'STRING_1: "Fanout client is already running"\', \'STRING_2: "Fanout client"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/fanout/FanoutClient.java', 28, '180:9', '187:9', 38, 6 ), ( 5, 160, 17, 'public void startSynchronously() {\n    start();\n    while (!isConnected()) {\n    try {\n    Thread.sleep(100);\n    } catch (Exception e) {\n    }\n    }\n    }', '[\'public\', \'void\', \'startSynchronously\', \'(\', \')\', \'{\', \'start\', \'(\', \')\', \';\', \'while\', \'(\', \'!\', \'isConnected\', \'(\', \')\', \')\', \'{\', \'try\', \'{\', \'Thread\', \'.\', \'sleep\', \'(\', \'100\', \')\', \';\', \'}\', \'catch\', \'(\', \'Exception\', \'e\', \')\', \'{\', \'}\', \'}\', \'}\']', 'public void METHOD_1 ( ) { start ( ) ; while ( ! METHOD_2 ( ) ) { try { TYPE_1 . METHOD_3 ( INT_1 ) ; } catch ( Exception e ) { } } }', '[\'TYPE_1: Thread\', \'METHOD_3: sleep\', \'METHOD_1: startSynchronously\', \'METHOD_2: isConnected\', \'INT_1: 100\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/fanout/FanoutClient.java', 28, '192:9', '200:9', 34, 6 ), ( 5, 160, 18, 'public void stop() {\n    if (!isRunning.get()) {\n    logger.warn("Fanout client is not running");\n    return;\n    }\n    isRunning.set(false);\n    try {\n    if (clientThread != null) {\n    clientThread.join();\n    clientThread = null;\n    }\n    } catch (InterruptedException e1) {\n    }\n    }', '[\'public\', \'void\', \'stop\', \'(\', \')\', \'{\', \'if\', \'(\', \'!\', \'isRunning\', \'.\', \'get\', \'(\', \')\', \')\', \'{\', \'logger\', \'.\', \'warn\', \'(\', \'"Fanout client is not running"\', \')\', \';\', \'return\', \';\', \'}\', \'isRunning\', \'.\', \'set\', \'(\', \'false\', \')\', \';\', \'try\', \'{\', \'if\', \'(\', \'clientThread\', \'!=\', \'null\', \')\', \'{\', \'clientThread\', \'.\', \'join\', \'(\', \')\', \';\', \'clientThread\', \'=\', \'null\', \';\', \'}\', \'}\', \'catch\', \'(\', \'InterruptedException\', \'e1\', \')\', \'{\', \'}\', \'}\']', 'public void METHOD_1 ( ) { if ( ! VAR_1 . get ( ) ) { logger . warn ( STRING_1 ) ; return ; } VAR_1 . set ( false ) ; try { if ( VAR_2 != null ) { VAR_2 . METHOD_2 ( ) ; VAR_2 = null ; } } catch ( TYPE_1 VAR_3 ) { } }', '[\'TYPE_1: InterruptedException\', \'METHOD_1: stop\', \'METHOD_2: join\', \'VAR_2: clientThread\', \'VAR_1: isRunning\', \'VAR_3: e1\', \'STRING_1: "Fanout client is not running"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/fanout/FanoutClient.java', 28, '206:9', '219:9', 58, 10 ), ( 5, 160, 20, 'protected void resetState() {\n    readBuffer.clear();\n    writeBuffer.clear();\n    isRunning.set(false);\n    isConnected.set(false);\n    }', '[\'protected\', \'void\', \'resetState\', \'(\', \')\', \'{\', \'readBuffer\', \'.\', \'clear\', \'(\', \')\', \';\', \'writeBuffer\', \'.\', \'clear\', \'(\', \')\', \';\', \'isRunning\', \'.\', \'set\', \'(\', \'false\', \')\', \';\', \'isConnected\', \'.\', \'set\', \'(\', \'false\', \')\', \';\', \'}\']', 'protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 . set ( false ) ; VAR_4 . set ( false ) ; }', '[\'METHOD_1: resetState\', \'METHOD_2: clear\', \'VAR_1: readBuffer\', \'VAR_3: isRunning\', \'VAR_4: isConnected\', \'VAR_2: writeBuffer\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/fanout/FanoutClient.java', 28, '291:9', '296:9', 30, 5 ), ( 5, 160, 21, 'private void closeChannel() {\n    try {\n    if (socketCh != null) {\n    socketCh.close();\n    socketCh = null;\n    selector.close();\n    selector = null;\n    isConnected.set(false);\n    }\n    } catch (IOException x) {\n    }\n    }', '[\'private\', \'void\', \'closeChannel\', \'(\', \')\', \'{\', \'try\', \'{\', \'if\', \'(\', \'socketCh\', \'!=\', \'null\', \')\', \'{\', \'socketCh\', \'.\', \'close\', \'(\', \')\', \';\', \'socketCh\', \'=\', \'null\', \';\', \'selector\', \'.\', \'close\', \'(\', \')\', \';\', \'selector\', \'=\', \'null\', \';\', \'isConnected\', \'.\', \'set\', \'(\', \'false\', \')\', \';\', \'}\', \'}\', \'catch\', \'(\', \'IOException\', \'x\', \')\', \'{\', \'}\', \'}\']', 'private void METHOD_1 ( ) { try { if ( VAR_1 != null ) { VAR_1 . close ( ) ; VAR_1 = null ; VAR_2 . close ( ) ; VAR_2 = null ; VAR_3 . set ( false ) ; } } catch ( IOException x ) { } }', '[\'METHOD_1: closeChannel\', \'VAR_1: socketCh\', \'VAR_3: isConnected\', \'VAR_2: selector\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/fanout/FanoutClient.java', 28, '298:9', '309:9', 49, 9 ), ( 5, 160, 23, 'protected void firePong(Date timestamp) {\n    logger.info(MessageFormat.format("fanout client {0} < pong {1,date,yyyy-MM-dd HH:mm:ss}", id, timestamp));\n    for (FanoutListener listener : listeners) {\n    try {\n    listener.pong(timestamp);\n    } catch (Throwable t) {\n    logger.error("FanoutListener threw an exception!", t);\n    }\n    }\n    }', '[\'protected\', \'void\', \'firePong\', \'(\', \'Date\', \'timestamp\', \')\', \'{\', \'logger\', \'.\', \'info\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'"fanout client {0} < pong {1\', \',\', \'id\', \',\', \'timestamp\', \')\', \')\', \';\', \'for\', \'(\', \'FanoutListener\', \'listener\', \':\', \'listeners\', \')\', \'{\', \'try\', \'{\', \'listener\', \'.\', \'pong\', \'(\', \'timestamp\', \')\', \';\', \'}\', \'catch\', \'(\', \'Throwable\', \'t\', \')\', \'{\', \'logger\', \'.\', \'error\', \'(\', \'"FanoutListener threw an exception!"\', \',\', \'t\', \')\', \';\', \'}\', \'}\', \'}\']', 'protected void METHOD_1 ( TYPE_1 VAR_1 ) { logger . info ( TYPE_2 . format ( STRING_1 , id , VAR_1 ) ) ; for ( TYPE_3 listener : VAR_2 ) { try { listener . METHOD_2 ( VAR_1 ) ; } catch ( Throwable t ) { logger . error ( STRING_2 , t ) ; } } }', '[\'TYPE_2: MessageFormat\', \'TYPE_3: FanoutListener\', \'TYPE_1: Date\', \'METHOD_2: pong\', \'METHOD_1: firePong\', \'VAR_2: listeners\', \'VAR_1: timestamp\', \'STRING_2: "FanoutListener threw an exception!"\', \'STRING_1: "fanout client {0} < pong {1\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/fanout/FanoutClient.java', 28, '349:9', '358:9', 60, 7 ), ( 5, 160, 24, 'protected void fireAnnouncement(String channel, String message) {\n    logger.info(MessageFormat.format("fanout client {0} < announcement {1} {2}", id, channel, message));\n    for (FanoutListener listener : listeners) {\n    try {\n    listener.announcement(channel, message);\n    } catch (Throwable t) {\n    logger.error("FanoutListener threw an exception!", t);\n    }\n    }\n    }', '[\'protected\', \'void\', \'fireAnnouncement\', \'(\', \'String\', \'channel\', \',\', \'String\', \'message\', \')\', \'{\', \'logger\', \'.\', \'info\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'"fanout client {0} < announcement {1} {2}"\', \',\', \'id\', \',\', \'channel\', \',\', \'message\', \')\', \')\', \';\', \'for\', \'(\', \'FanoutListener\', \'listener\', \':\', \'listeners\', \')\', \'{\', \'try\', \'{\', \'listener\', \'.\', \'announcement\', \'(\', \'channel\', \',\', \'message\', \')\', \';\', \'}\', \'catch\', \'(\', \'Throwable\', \'t\', \')\', \'{\', \'logger\', \'.\', \'error\', \'(\', \'"FanoutListener threw an exception!"\', \',\', \'t\', \')\', \';\', \'}\', \'}\', \'}\']', 'protected void METHOD_1 ( String VAR_1 , String message ) { logger . info ( TYPE_1 . format ( STRING_1 , id , VAR_1 , message ) ) ; for ( TYPE_2 listener : VAR_2 ) { try { listener . METHOD_2 ( VAR_1 , message ) ; } catch ( Throwable t ) { logger . error ( STRING_2 , t ) ; } } }', '[\'TYPE_1: MessageFormat\', \'TYPE_2: FanoutListener\', \'METHOD_1: fireAnnouncement\', \'METHOD_2: announcement\', \'VAR_2: listeners\', \'VAR_1: channel\', \'STRING_2: "FanoutListener threw an exception!"\', \'STRING_1: "fanout client {0} < announcement {1} {2}"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/fanout/FanoutClient.java', 28, '359:9', '368:9', 67, 7 ), ( 5, 160, 25, 'protected synchronized String read() throws IOException {\n    readBuffer.clear();\n    long len = socketCh.read(readBuffer);\n    if (len == -1) {\n    logger.error(MessageFormat.format("fanout client {0} lost connection to {1}:{2,number,0}, end of stream", id, host, port));\n    socketCh.close();\n    return null;\n    } else {\n    readBuffer.flip();\n    String content = decoder.decode(readBuffer).toString();\n    readBuffer.clear();\n    return content;\n    }\n    }', '[\'protected\', \'synchronized\', \'String\', \'read\', \'(\', \')\', \'throws\', \'IOException\', \'{\', \'readBuffer\', \'.\', \'clear\', \'(\', \')\', \';\', \'long\', \'len\', \'=\', \'socketCh\', \'.\', \'read\', \'(\', \'readBuffer\', \')\', \';\', \'if\', \'(\', \'len\', \'==\', \'-\', \'1\', \')\', \'{\', \'logger\', \'.\', \'error\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'"fanout client {0} lost connection to {1}:{2\', \',\', \'id\', \',\', \'host\', \',\', \'port\', \')\', \')\', \';\', \'socketCh\', \'.\', \'close\', \'(\', \')\', \';\', \'return\', \'null\', \';\', \'}\', \'else\', \'{\', \'readBuffer\', \'.\', \'flip\', \'(\', \')\', \';\', \'String\', \'content\', \'=\', \'decoder\', \'.\', \'decode\', \'(\', \'readBuffer\', \')\', \'.\', \'toString\', \'(\', \')\', \';\', \'readBuffer\', \'.\', \'clear\', \'(\', \')\', \';\', \'return\', \'content\', \';\', \'}\', \'}\']', 'protected synchronized String read ( ) throws IOException { VAR_1 . METHOD_1 ( ) ; long len = VAR_2 . read ( VAR_1 ) ; if ( len == - 1 ) { logger . error ( TYPE_1 . format ( STRING_1 , id , VAR_3 , VAR_4 ) ) ; VAR_2 . close ( ) ; return null ; } else { VAR_1 . METHOD_2 ( ) ; String content = VAR_5 . METHOD_3 ( VAR_1 ) . toString ( ) ; VAR_1 . METHOD_1 ( ) ; return content ; } }', '[\'TYPE_1: MessageFormat\', \'METHOD_1: clear\', \'METHOD_3: decode\', \'METHOD_2: flip\', \'VAR_1: readBuffer\', \'VAR_4: port\', \'VAR_2: socketCh\', \'VAR_3: host\', \'VAR_5: decoder\', \'STRING_1: "fanout client {0} lost connection to {1}:{2\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/fanout/FanoutClient.java', 28, '370:9', '384:9', 88, 12 ), ( 5, 162, 4, 'private boolean setGCStatus(String repositoryName, GCStatus status) {\n    String key = repositoryName.toLowerCase();\n    if (gcCache.containsKey(key)) {\n    if (gcCache.get(key).exceeds(GCStatus.READY)) {\n    // already collecting or blocked\n    return false;\n    }\n    }\n    gcCache.put(key, status);\n    return true;\n    }', '[\'private\', \'boolean\', \'setGCStatus\', \'(\', \'String\', \'repositoryName\', \',\', \'GCStatus\', \'status\', \')\', \'{\', \'String\', \'key\', \'=\', \'repositoryName\', \'.\', \'toLowerCase\', \'(\', \')\', \';\', \'if\', \'(\', \'gcCache\', \'.\', \'containsKey\', \'(\', \'key\', \')\', \')\', \'{\', \'if\', \'(\', \'gcCache\', \'.\', \'get\', \'(\', \'key\', \')\', \'.\', \'exceeds\', \'(\', \'GCStatus.READY\', \')\', \')\', \'{\', \'return\', \'false\', \';\', \'}\', \'}\', \'gcCache\', \'.\', \'put\', \'(\', \'key\', \',\', \'status\', \')\', \';\', \'return\', \'true\', \';\', \'}\']', 'private boolean METHOD_1 ( String VAR_1 , TYPE_1 status ) { String key = VAR_1 . METHOD_2 ( ) ; if ( VAR_2 . containsKey ( key ) ) { if ( VAR_2 . get ( key ) . METHOD_3 ( VAR_3 ) ) { return false ; } } VAR_2 . put ( key , status ) ; return true ; }', '[\'TYPE_1: GCStatus\', \'METHOD_3: exceeds\', \'METHOD_2: toLowerCase\', \'METHOD_1: setGCStatus\', \'VAR_3: GCStatus.READY\', \'VAR_2: gcCache\', \'VAR_1: repositoryName\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GCExecutor.java', 11, '89:9', '99:9', 65, 7 ), ( 5, 162, 9, 'private boolean isRepositoryIdle(Repository repository) {\n    try {\n    // Read the use count.\n    // An idle use count is 2:\n    // +1 for being in the cache\n    // +1 for the repository parameter in this method\n    Field useCnt = Repository.class.getDeclaredField("useCnt");\n    useCnt.setAccessible(true);\n    int useCount = ((AtomicInteger) useCnt.get(repository)).get();\n    return useCount == 2;\n    } catch (Exception e) {\n    logger.warn(MessageFormat\n    .format("Failed to reflectively determine use count for repository {0}",\n    							repository.getDirectory().getPath()), e);\n    }\n    return false;\n    }', '[\'private\', \'boolean\', \'isRepositoryIdle\', \'(\', \'Repository\', \'repository\', \')\', \'{\', \'try\', \'{\', \'Field\', \'useCnt\', \'=\', \'Repository.\', \'class\', \'.\', \'getDeclaredField\', \'(\', \'"useCnt"\', \')\', \';\', \'useCnt\', \'.\', \'setAccessible\', \'(\', \'true\', \')\', \';\', \'int\', \'useCount\', \'=\', \'(\', \'(\', \'AtomicInteger\', \')\', \'useCnt\', \'.\', \'get\', \'(\', \'repository\', \')\', \')\', \'.\', \'get\', \'(\', \')\', \';\', \'return\', \'useCount\', \'==\', \'2\', \';\', \'}\', \'catch\', \'(\', \'Exception\', \'e\', \')\', \'{\', \'logger\', \'.\', \'warn\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'"Failed to reflectively determine use count for repository {0}"\', \',\', \'repository\', \'.\', \'getDirectory\', \'(\', \')\', \'.\', \'getPath\', \'(\', \')\', \')\', \',\', \'e\', \')\', \';\', \'}\', \'return\', \'false\', \';\', \'}\']', 'private boolean METHOD_1 ( TYPE_1 VAR_1 ) { try { Field VAR_2 = VAR_3 class . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( true ) ; int VAR_4 = ( ( TYPE_2 ) VAR_2 . get ( VAR_1 ) ) . get ( ) ; return VAR_4 == 2 ; } catch ( Exception e ) { logger . warn ( TYPE_3 . format ( STRING_2 , VAR_1 . METHOD_4 ( ) . METHOD_5 ( ) ) , e ) ; } return false ; }', '[\'TYPE_1: Repository\', \'TYPE_3: MessageFormat\', \'TYPE_2: AtomicInteger\', \'METHOD_2: getDeclaredField\', \'METHOD_3: setAccessible\', \'METHOD_5: getPath\', \'METHOD_1: isRepositoryIdle\', \'METHOD_4: getDirectory\', \'VAR_2: useCnt\', \'VAR_3: Repository.\', \'VAR_4: useCount\', \'VAR_1: repository\', \'STRING_1: "useCnt"\', \'STRING_2: "Failed to reflectively determine use count for repository {0}"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GCExecutor.java', 11, '222:9', '238:9', 90, 11 ), ( 5, 163, 0, 'public static void setAuthorization(URLConnection conn, String username, char[] password) {\n    if (!StringUtils.isEmpty(username) && (password != null && password.length > 0)) {\n    conn.setRequestProperty(\n    					"Authorization",\n    					"Basic "\n    + Base64.encodeBytes((username + ":" + new String(password)).getBytes()));\n    }\n    }', '[\'public\', \'static\', \'void\', \'setAuthorization\', \'(\', \'URLConnection\', \'conn\', \',\', \'String\', \'username\', \',\', \'char\', \'[\', \']\', \'password\', \')\', \'{\', \'if\', \'(\', \'!\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'username\', \')\', \'&&\', \'(\', \'password\', \'!=\', \'null\', \'&&\', \'password\', \'.\', \'length\', \'>\', \'0\', \')\', \')\', \'{\', \'conn\', \'.\', \'setRequestProperty\', \'(\', \'"Authorization"\', \',\', \'"Basic "\', \'+\', \'Base64\', \'.\', \'encodeBytes\', \'(\', \'(\', \'username\', \'+\', \'":"\', \'+\', \'new\', \'String\', \'(\', \'password\', \')\', \')\', \'.\', \'getBytes\', \'(\', \')\', \')\', \')\', \';\', \'}\', \'}\']', 'public static void METHOD_1 ( TYPE_1 VAR_1 , String VAR_2 , char [ ] VAR_3 ) { if ( ! StringUtils . isEmpty ( VAR_2 ) && ( VAR_3 != null && VAR_3 . length > 0 ) ) { VAR_1 . METHOD_2 ( STRING_1 , STRING_2 + TYPE_2 . METHOD_3 ( ( VAR_2 + STRING_3 + new String ( VAR_3 ) ) . METHOD_4 ( ) ) ) ; } }', '[\'TYPE_2: Base64\', \'TYPE_1: URLConnection\', \'METHOD_3: encodeBytes\', \'METHOD_2: setRequestProperty\', \'METHOD_1: setAuthorization\', \'METHOD_4: getBytes\', \'VAR_1: conn\', \'VAR_3: password\', \'VAR_2: username\', \'STRING_2: "Basic "\', \'STRING_1: "Authorization"\', \'STRING_3: ":"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/ConnectionUtils.java', 17, '70:9', '77:9', 70, 6 ), ( 5, 163, 1, 'public static URLConnection openReadConnection(String url, String username, char[] password)\n    throws IOException {\n    URLConnection conn = openConnection(url, username, password);\n    conn.setRequestProperty("Accept-Charset", ConnectionUtils.CHARSET);\n    return conn;\n    }', '[\'public\', \'static\', \'URLConnection\', \'openReadConnection\', \'(\', \'String\', \'url\', \',\', \'String\', \'username\', \',\', \'char\', \'[\', \']\', \'password\', \')\', \'throws\', \'IOException\', \'{\', \'URLConnection\', \'conn\', \'=\', \'openConnection\', \'(\', \'url\', \',\', \'username\', \',\', \'password\', \')\', \';\', \'conn\', \'.\', \'setRequestProperty\', \'(\', \'"Accept-Charset"\', \',\', \'ConnectionUtils.CHARSET\', \')\', \';\', \'return\', \'conn\', \';\', \'}\']', 'public static TYPE_1 METHOD_1 ( String url , String VAR_1 , char [ ] VAR_2 ) throws IOException { TYPE_1 VAR_3 = METHOD_2 ( url , VAR_1 , VAR_2 ) ; VAR_3 . METHOD_3 ( STRING_1 , VAR_4 ) ; return VAR_3 ; }', '[\'TYPE_1: URLConnection\', \'METHOD_1: openReadConnection\', \'METHOD_3: setRequestProperty\', \'METHOD_2: openConnection\', \'VAR_2: password\', \'VAR_3: conn\', \'VAR_4: ConnectionUtils.CHARSET\', \'VAR_1: username\', \'STRING_1: "Accept-Charset"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/ConnectionUtils.java', 17, '79:9', '84:9', 45, 5 ), ( 5, 163, 2, 'public static URLConnection openConnection(String url, String username, char[] password)\n    throws IOException {\n    URL urlObject = new URL(url);\n    URLConnection conn = urlObject.openConnection();\n    setAuthorization(conn, username, password);\n    conn.setUseCaches(false);\n    conn.setDoOutput(true);\n    if (conn instanceof HttpsURLConnection) {\n    HttpsURLConnection secureConn = (HttpsURLConnection) conn;\n    secureConn.setSSLSocketFactory(SSL_CONTEXT.getSocketFactory());\n    secureConn.setHostnameVerifier(HOSTNAME_VERIFIER);\n    }\n    return conn;\n    }', '[\'public\', \'static\', \'URLConnection\', \'openConnection\', \'(\', \'String\', \'url\', \',\', \'String\', \'username\', \',\', \'char\', \'[\', \']\', \'password\', \')\', \'throws\', \'IOException\', \'{\', \'URL\', \'urlObject\', \'=\', \'new\', \'URL\', \'(\', \'url\', \')\', \';\', \'URLConnection\', \'conn\', \'=\', \'urlObject\', \'.\', \'openConnection\', \'(\', \')\', \';\', \'setAuthorization\', \'(\', \'conn\', \',\', \'username\', \',\', \'password\', \')\', \';\', \'conn\', \'.\', \'setUseCaches\', \'(\', \'false\', \')\', \';\', \'conn\', \'.\', \'setDoOutput\', \'(\', \'true\', \')\', \';\', \'if\', \'(\', \'conn\', \'instanceof\', \'HttpsURLConnection\', \')\', \'{\', \'HttpsURLConnection\', \'secureConn\', \'=\', \'(\', \'HttpsURLConnection\', \')\', \'conn\', \';\', \'secureConn\', \'.\', \'setSSLSocketFactory\', \'(\', \'SSL_CONTEXT\', \'.\', \'getSocketFactory\', \'(\', \')\', \')\', \';\', \'secureConn\', \'.\', \'setHostnameVerifier\', \'(\', \'HOSTNAME_VERIFIER\', \')\', \';\', \'}\', \'return\', \'conn\', \';\', \'}\']', 'public static TYPE_1 METHOD_1 ( String url , String VAR_1 , char [ ] VAR_2 ) throws IOException { TYPE_2 VAR_3 = new TYPE_2 ( url ) ; TYPE_1 VAR_4 = VAR_3 . METHOD_1 ( ) ; METHOD_2 ( VAR_4 , VAR_1 , VAR_2 ) ; VAR_4 . METHOD_3 ( false ) ; VAR_4 . METHOD_4 ( true ) ; if ( VAR_4 instanceof TYPE_3 ) { TYPE_3 VAR_5 = ( TYPE_3 ) VAR_4 ; VAR_5 . METHOD_5 ( TYPE_4 . METHOD_6 ( ) ) ; VAR_5 . METHOD_7 ( VAR_6 ) ; } return VAR_4 ; }', '[\'TYPE_4: SSL_CONTEXT\', \'TYPE_1: URLConnection\', \'TYPE_2: URL\', \'TYPE_3: HttpsURLConnection\', \'METHOD_6: getSocketFactory\', \'METHOD_5: setSSLSocketFactory\', \'METHOD_1: openConnection\', \'METHOD_2: setAuthorization\', \'METHOD_3: setUseCaches\', \'METHOD_7: setHostnameVerifier\', \'METHOD_4: setDoOutput\', \'VAR_5: secureConn\', \'VAR_2: password\', \'VAR_4: conn\', \'VAR_6: HOSTNAME_VERIFIER\', \'VAR_3: urlObject\', \'VAR_1: username\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/ConnectionUtils.java', 17, '86:9', '99:9', 95, 12 ) ;

INSERT INTO method (id_repo, id_file, id_method, code, code_tokens, abstract_code, abstract_representation, repo_name, repo_url,repo_commit, file_name, num_methods, start_method, end_method, num_tokens, num_lines) VALUES ( 5, 164, 0, 'public static DiffOutputType forName(String name) {\n    for (DiffOutputType type : values()) {\n    if (type.name().equalsIgnoreCase(name)) {\n    return type;\n    }\n    }\n    return null;\n    }', '[\'public\', \'static\', \'DiffOutputType\', \'forName\', \'(\', \'String\', \'name\', \')\', \'{\', \'for\', \'(\', \'DiffOutputType\', \'type\', \':\', \'values\', \'(\', \')\', \')\', \'{\', \'if\', \'(\', \'type\', \'.\', \'name\', \'(\', \')\', \'.\', \'equalsIgnoreCase\', \'(\', \'name\', \')\', \')\', \'{\', \'return\', \'type\', \';\', \'}\', \'}\', \'return\', \'null\', \';\', \'}\']', 'public static TYPE_1 METHOD_1 ( String name ) { for ( TYPE_1 type : values ( ) ) { if ( type . name ( ) . METHOD_2 ( name ) ) { return type ; } } return null ; }', '[\'TYPE_1: DiffOutputType\', \'METHOD_1: forName\', \'METHOD_2: equalsIgnoreCase\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/DiffUtils.java', 7, '58:17', '65:17', 40, 5 ), ( 5, 165, 4, 'public static String encodeURL(String inStr) {\n    StringBuilder retStr = new StringBuilder();\n    int i = 0;\n    while (i < inStr.length()) {\n    if (inStr.charAt(i) == \'/\') {\n    retStr.append("%2F");\n    } else if (inStr.charAt(i) == \' \') {\n    retStr.append("%20");\n    } else {\n    retStr.append(inStr.charAt(i));\n    }\n    i++;\n    }\n    return retStr.toString();\n    }', '[\'public\', \'static\', \'String\', \'encodeURL\', \'(\', \'String\', \'inStr\', \')\', \'{\', \'StringBuilder\', \'retStr\', \'=\', \'new\', \'StringBuilder\', \'(\', \')\', \';\', \'int\', \'i\', \'=\', \'0\', \';\', \'while\', \'(\', \'i\', \'<\', \'inStr\', \'.\', \'length\', \'(\', \')\', \')\', \'{\', \'if\', \'(\', \'inStr\', \'.\', \'charAt\', \'(\', \'i\', \')\', \'==\', "\'/\'", \')\', \'{\', \'retStr\', \'.\', \'append\', \'(\', \'"%2F"\', \')\', \';\', \'}\', \'else\', \'if\', \'(\', \'inStr\', \'.\', \'charAt\', \'(\', \'i\', \')\', \'==\', "\' \'", \')\', \'{\', \'retStr\', \'.\', \'append\', \'(\', \'"%20"\', \')\', \';\', \'}\', \'else\', \'{\', \'retStr\', \'.\', \'append\', \'(\', \'inStr\', \'.\', \'charAt\', \'(\', \'i\', \')\', \')\', \';\', \'}\', \'i\', \'++\', \';\', \'}\', \'return\', \'retStr\', \'.\', \'toString\', \'(\', \')\', \';\', \'}\']', 'public static String METHOD_1 ( String VAR_1 ) { StringBuilder VAR_2 = new StringBuilder ( ) ; int i = 0 ; while ( i < VAR_1 . length ( ) ) { if ( VAR_1 . METHOD_2 ( i ) == CHAR_1 ) { VAR_2 . append ( STRING_1 ) ; } else if ( VAR_1 . METHOD_2 ( i ) == CHAR_2 ) { VAR_2 . append ( STRING_2 ) ; } else { VAR_2 . append ( VAR_1 . METHOD_2 ( i ) ) ; } i ++ ; } return VAR_2 . toString ( ) ; }', '[\'METHOD_1: encodeURL\', \'METHOD_2: charAt\', \'VAR_1: inStr\', \'VAR_2: retStr\', "CHAR_2: \' \'", "CHAR_1: \'/\'", \'STRING_2: "%20"\', \'STRING_1: "%2F"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/StringUtils.java', 38, '122:9', '136:9', 97, 12 ), ( 5, 165, 6, 'public static String flattenStrings(Collection<String> values, String separator) {\n    StringBuilder sb = new StringBuilder();\n    for (String value : values) {\n    sb.append(value).append(separator);\n    }\n    if (sb.length() > 0) {\n    // truncate trailing separator\n    sb.setLength(sb.length() - separator.length());\n    }\n    return sb.toString().trim();\n    }', '[\'public\', \'static\', \'String\', \'flattenStrings\', \'(\', \'Collection\', \'<\', \'String\', \'>\', \'values\', \',\', \'String\', \'separator\', \')\', \'{\', \'StringBuilder\', \'sb\', \'=\', \'new\', \'StringBuilder\', \'(\', \')\', \';\', \'for\', \'(\', \'String\', \'value\', \':\', \'values\', \')\', \'{\', \'sb\', \'.\', \'append\', \'(\', \'value\', \')\', \'.\', \'append\', \'(\', \'separator\', \')\', \';\', \'}\', \'if\', \'(\', \'sb\', \'.\', \'length\', \'(\', \')\', \'>\', \'0\', \')\', \'{\', \'sb\', \'.\', \'setLength\', \'(\', \'sb\', \'.\', \'length\', \'(\', \')\', \'-\', \'separator\', \'.\', \'length\', \'(\', \')\', \')\', \';\', \'}\', \'return\', \'sb\', \'.\', \'toString\', \'(\', \')\', \'.\', \'trim\', \'(\', \')\', \';\', \'}\']', 'public static String METHOD_1 ( Collection < String > values , String VAR_1 ) { StringBuilder sb = new StringBuilder ( ) ; for ( String value : values ) { sb . append ( value ) . append ( VAR_1 ) ; } if ( sb . length ( ) > 0 ) { sb . METHOD_2 ( sb . length ( ) - VAR_1 . length ( ) ) ; } return sb . toString ( ) . METHOD_3 ( ) ; }', '[\'METHOD_2: setLength\', \'METHOD_1: flattenStrings\', \'METHOD_3: trim\', \'VAR_1: separator\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/StringUtils.java', 38, '156:9', '166:9', 80, 7 ), ( 5, 165, 8, 'public static String leftPad(String input, int length, char pad) {\n    if (input.length() < length) {\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0, len = length - input.length(); i < len; i++) {\n    sb.append(pad);\n    }\n    sb.append(input);\n    return sb.toString();\n    }\n    return input;\n    }', '[\'public\', \'static\', \'String\', \'leftPad\', \'(\', \'String\', \'input\', \',\', \'int\', \'length\', \',\', \'char\', \'pad\', \')\', \'{\', \'if\', \'(\', \'input\', \'.\', \'length\', \'(\', \')\', \'<\', \'length\', \')\', \'{\', \'StringBuilder\', \'sb\', \'=\', \'new\', \'StringBuilder\', \'(\', \')\', \';\', \'for\', \'(\', \'int\', \'i\', \'=\', \'0\', \',\', \'len\', \'=\', \'length\', \'-\', \'input\', \'.\', \'length\', \'(\', \')\', \';\', \'i\', \'<\', \'len\', \';\', \'i\', \'++\', \')\', \'{\', \'sb\', \'.\', \'append\', \'(\', \'pad\', \')\', \';\', \'}\', \'sb\', \'.\', \'append\', \'(\', \'input\', \')\', \';\', \'return\', \'sb\', \'.\', \'toString\', \'(\', \')\', \';\', \'}\', \'return\', \'input\', \';\', \'}\']', 'public static String METHOD_1 ( String input , int length , char VAR_1 ) { if ( input . length ( ) < length ) { StringBuilder sb = new StringBuilder ( ) ; for ( int i = 0 , len = length - input . length ( ) ; i < len ; i ++ ) { sb . append ( VAR_1 ) ; } sb . append ( input ) ; return sb . toString ( ) ; } return input ; }', '[\'METHOD_1: leftPad\', \'VAR_1: pad\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/StringUtils.java', 38, '193:9', '203:9', 82, 8 ), ( 5, 165, 9, 'public static String rightPad(String input, int length, char pad) {\n    if (input.length() < length) {\n    StringBuilder sb = new StringBuilder();\n    sb.append(input);\n    for (int i = 0, len = length - input.length(); i < len; i++) {\n    sb.append(pad);\n    }\n    return sb.toString();\n    }\n    return input;\n    }', '[\'public\', \'static\', \'String\', \'rightPad\', \'(\', \'String\', \'input\', \',\', \'int\', \'length\', \',\', \'char\', \'pad\', \')\', \'{\', \'if\', \'(\', \'input\', \'.\', \'length\', \'(\', \')\', \'<\', \'length\', \')\', \'{\', \'StringBuilder\', \'sb\', \'=\', \'new\', \'StringBuilder\', \'(\', \')\', \';\', \'sb\', \'.\', \'append\', \'(\', \'input\', \')\', \';\', \'for\', \'(\', \'int\', \'i\', \'=\', \'0\', \',\', \'len\', \'=\', \'length\', \'-\', \'input\', \'.\', \'length\', \'(\', \')\', \';\', \'i\', \'<\', \'len\', \';\', \'i\', \'++\', \')\', \'{\', \'sb\', \'.\', \'append\', \'(\', \'pad\', \')\', \';\', \'}\', \'return\', \'sb\', \'.\', \'toString\', \'(\', \')\', \';\', \'}\', \'return\', \'input\', \';\', \'}\']', 'public static String METHOD_1 ( String input , int length , char VAR_1 ) { if ( input . length ( ) < length ) { StringBuilder sb = new StringBuilder ( ) ; sb . append ( input ) ; for ( int i = 0 , len = length - input . length ( ) ; i < len ; i ++ ) { sb . append ( VAR_1 ) ; } return sb . toString ( ) ; } return input ; }', '[\'METHOD_1: rightPad\', \'VAR_1: pad\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/StringUtils.java', 38, '214:9', '224:9', 82, 8 ), ( 5, 165, 10, 'public static String getSHA1(String text) {\n    try {\n    byte[] bytes = text.getBytes("iso-8859-1");\n    return getSHA1(bytes);\n    } catch (UnsupportedEncodingException u) {\n    throw new RuntimeException(u);\n    }\n    }', '[\'public\', \'static\', \'String\', \'getSHA1\', \'(\', \'String\', \'text\', \')\', \'{\', \'try\', \'{\', \'byte\', \'[\', \']\', \'bytes\', \'=\', \'text\', \'.\', \'getBytes\', \'(\', \'"iso-8859-1"\', \')\', \';\', \'return\', \'getSHA1\', \'(\', \'bytes\', \')\', \';\', \'}\', \'catch\', \'(\', \'UnsupportedEncodingException\', \'u\', \')\', \'{\', \'throw\', \'new\', \'RuntimeException\', \'(\', \'u\', \')\', \';\', \'}\', \'}\']', 'public static String METHOD_1 ( String text ) { try { byte [ ] bytes = text . METHOD_2 ( STRING_1 ) ; return METHOD_1 ( bytes ) ; } catch ( TYPE_1 VAR_1 ) { throw new RuntimeException ( VAR_1 ) ; } }', '[\'TYPE_1: UnsupportedEncodingException\', \'METHOD_2: getBytes\', \'METHOD_1: getSHA1\', \'VAR_1: u\', \'STRING_1: "iso-8859-1"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/StringUtils.java', 38, '232:9', '239:9', 44, 6 ), ( 5, 165, 11, 'public static String getSHA1(byte[] bytes) {\n    try {\n    MessageDigest md = MessageDigest.getInstance("SHA-1");\n    md.update(bytes, 0, bytes.length);\n    byte[] digest = md.digest();\n    return toHex(digest);\n    } catch (NoSuchAlgorithmException t) {\n    throw new RuntimeException(t);\n    }\n    }', '[\'public\', \'static\', \'String\', \'getSHA1\', \'(\', \'byte\', \'[\', \']\', \'bytes\', \')\', \'{\', \'try\', \'{\', \'MessageDigest\', \'md\', \'=\', \'MessageDigest\', \'.\', \'getInstance\', \'(\', \'"SHA-1"\', \')\', \';\', \'md\', \'.\', \'update\', \'(\', \'bytes\', \',\', \'0\', \',\', \'bytes\', \'.\', \'length\', \')\', \';\', \'byte\', \'[\', \']\', \'digest\', \'=\', \'md\', \'.\', \'digest\', \'(\', \')\', \';\', \'return\', \'toHex\', \'(\', \'digest\', \')\', \';\', \'}\', \'catch\', \'(\', \'NoSuchAlgorithmException\', \'t\', \')\', \'{\', \'throw\', \'new\', \'RuntimeException\', \'(\', \'t\', \')\', \';\', \'}\', \'}\']', 'public static String METHOD_1 ( byte [ ] bytes ) { try { TYPE_1 VAR_1 = TYPE_1 . getInstance ( STRING_1 ) ; VAR_1 . METHOD_2 ( bytes , 0 , bytes . length ) ; byte [ ] VAR_2 = VAR_1 . METHOD_3 ( ) ; return METHOD_4 ( VAR_2 ) ; } catch ( TYPE_2 t ) { throw new RuntimeException ( t ) ; } }', '[\'TYPE_2: NoSuchAlgorithmException\', \'TYPE_1: MessageDigest\', \'METHOD_4: toHex\', \'METHOD_3: digest\', \'METHOD_2: update\', \'METHOD_1: getSHA1\', \'VAR_1: md\', \'VAR_2: digest\', \'STRING_1: "SHA-1"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/StringUtils.java', 38, '247:9', '256:9', 66, 8 ), ( 5, 165, 12, 'public static String getMD5(String string) {\n    try {\n    return getMD5(string.getBytes("iso-8859-1"));\n    } catch (UnsupportedEncodingException u) {\n    throw new RuntimeException(u);\n    }\n    }', '[\'public\', \'static\', \'String\', \'getMD5\', \'(\', \'String\', \'string\', \')\', \'{\', \'try\', \'{\', \'return\', \'getMD5\', \'(\', \'string\', \'.\', \'getBytes\', \'(\', \'"iso-8859-1"\', \')\', \')\', \';\', \'}\', \'catch\', \'(\', \'UnsupportedEncodingException\', \'u\', \')\', \'{\', \'throw\', \'new\', \'RuntimeException\', \'(\', \'u\', \')\', \';\', \'}\', \'}\']', 'public static String METHOD_1 ( String VAR_1 ) { try { return METHOD_1 ( VAR_1 . METHOD_2 ( STRING_1 ) ) ; } catch ( TYPE_1 VAR_2 ) { throw new RuntimeException ( VAR_2 ) ; } }', '[\'TYPE_1: UnsupportedEncodingException\', \'METHOD_1: getMD5\', \'METHOD_2: getBytes\', \'VAR_1: string\', \'VAR_2: u\', \'STRING_1: "iso-8859-1"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/StringUtils.java', 38, '264:9', '270:9', 38, 5 ), ( 5, 165, 13, 'public static String getMD5(byte [] bytes) {\n    try {\n    MessageDigest md = MessageDigest.getInstance("MD5");\n    md.reset();\n    md.update(bytes);\n    byte[] digest = md.digest();\n    return toHex(digest);\n    } catch (NoSuchAlgorithmException t) {\n    throw new RuntimeException(t);\n    }\n    }', '[\'public\', \'static\', \'String\', \'getMD5\', \'(\', \'byte\', \'[\', \']\', \'bytes\', \')\', \'{\', \'try\', \'{\', \'MessageDigest\', \'md\', \'=\', \'MessageDigest\', \'.\', \'getInstance\', \'(\', \'"MD5"\', \')\', \';\', \'md\', \'.\', \'reset\', \'(\', \')\', \';\', \'md\', \'.\', \'update\', \'(\', \'bytes\', \')\', \';\', \'byte\', \'[\', \']\', \'digest\', \'=\', \'md\', \'.\', \'digest\', \'(\', \')\', \';\', \'return\', \'toHex\', \'(\', \'digest\', \')\', \';\', \'}\', \'catch\', \'(\', \'NoSuchAlgorithmException\', \'t\', \')\', \'{\', \'throw\', \'new\', \'RuntimeException\', \'(\', \'t\', \')\', \';\', \'}\', \'}\']', 'public static String METHOD_1 ( byte [ ] bytes ) { try { TYPE_1 VAR_1 = TYPE_1 . getInstance ( STRING_1 ) ; VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( bytes ) ; byte [ ] VAR_2 = VAR_1 . METHOD_4 ( ) ; return METHOD_5 ( VAR_2 ) ; } catch ( TYPE_2 t ) { throw new RuntimeException ( t ) ; } }', '[\'TYPE_2: NoSuchAlgorithmException\', \'TYPE_1: MessageDigest\', \'METHOD_1: getMD5\', \'METHOD_5: toHex\', \'METHOD_4: digest\', \'METHOD_2: reset\', \'METHOD_3: update\', \'VAR_1: md\', \'VAR_2: digest\', \'STRING_1: "MD5"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/StringUtils.java', 38, '278:9', '288:9', 65, 9 ), ( 5, 165, 14, 'private static String toHex(byte[] bytes) {\n    StringBuilder sb = new StringBuilder(bytes.length * 2);\n    for (int i = 0; i < bytes.length; i++) {\n    if (((int) bytes[i] & 0xff) < 0x10) {\n    sb.append(\'0\');\n    }\n    sb.append(Long.toString((int) bytes[i] & 0xff, 16));\n    }\n    return sb.toString();\n    }', '[\'private\', \'static\', \'String\', \'toHex\', \'(\', \'byte\', \'[\', \']\', \'bytes\', \')\', \'{\', \'StringBuilder\', \'sb\', \'=\', \'new\', \'StringBuilder\', \'(\', \'bytes\', \'.\', \'length\', \'*\', \'2\', \')\', \';\', \'for\', \'(\', \'int\', \'i\', \'=\', \'0\', \';\', \'i\', \'<\', \'bytes\', \'.\', \'length\', \';\', \'i\', \'++\', \')\', \'{\', \'if\', \'(\', \'(\', \'(\', \'int\', \')\', \'bytes\', \'[\', \'i\', \']\', \'&\', \'0xff\', \')\', \'<\', \'0x10\', \')\', \'{\', \'sb\', \'.\', \'append\', \'(\', "\'0\'", \')\', \';\', \'}\', \'sb\', \'.\', \'append\', \'(\', \'Long\', \'.\', \'toString\', \'(\', \'(\', \'int\', \')\', \'bytes\', \'[\', \'i\', \']\', \'&\', \'0xff\', \',\', \'16\', \')\', \')\', \';\', \'}\', \'return\', \'sb\', \'.\', \'toString\', \'(\', \')\', \';\', \'}\']', 'private static String METHOD_1 ( byte [ ] bytes ) { StringBuilder sb = new StringBuilder ( bytes . length * 2 ) ; for ( int i = 0 ; i < bytes . length ; i ++ ) { if ( ( ( int ) bytes [ i ] & INT_1 ) < INT_2 ) { sb . append ( CHAR_1 ) ; } sb . append ( Long . toString ( ( int ) bytes [ i ] & INT_1 , INT_3 ) ) ; } return sb . toString ( ) ; }', '[\'METHOD_1: toHex\', "CHAR_1: \'0\'", \'INT_2: 0x10\', \'INT_3: 16\', \'INT_1: 0xff\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/StringUtils.java', 38, '296:9', '305:9', 95, 7 ), ( 5, 165, 19, 'public static Character findInvalidCharacter(String name) {\n    char[] validChars = { \'/\', \'.\', \'_\', \'-\', \'~\' };\n    for (char c : name.toCharArray()) {\n    if (!Character.isLetterOrDigit(c)) {\n    boolean ok = false;\n    for (char vc : validChars) {\n    ok |= c == vc;\n    }\n    if (!ok) {\n    return c;\n    }\n    }\n    }\n    return null;\n    }', '[\'public\', \'static\', \'Character\', \'findInvalidCharacter\', \'(\', \'String\', \'name\', \')\', \'{\', \'char\', \'[\', \']\', \'validChars\', \'=\', \'{\', "\'/\'", \',\', "\'.\'", \',\', "\'_\'", \',\', "\'-\'", \',\', "\'~\'", \'}\', \';\', \'for\', \'(\', \'char\', \'c\', \':\', \'name\', \'.\', \'toCharArray\', \'(\', \')\', \')\', \'{\', \'if\', \'(\', \'!\', \'Character\', \'.\', \'isLetterOrDigit\', \'(\', \'c\', \')\', \')\', \'{\', \'boolean\', \'ok\', \'=\', \'false\', \';\', \'for\', \'(\', \'char\', \'vc\', \':\', \'validChars\', \')\', \'{\', \'ok\', \'|=\', \'c\', \'==\', \'vc\', \';\', \'}\', \'if\', \'(\', \'!\', \'ok\', \')\', \'{\', \'return\', \'c\', \';\', \'}\', \'}\', \'}\', \'return\', \'null\', \';\', \'}\']', 'public static TYPE_1 METHOD_1 ( String name ) { char [ ] VAR_1 = { CHAR_1 , CHAR_2 , CHAR_3 , CHAR_4 , CHAR_5 } ; for ( char c : name . METHOD_2 ( ) ) { if ( ! TYPE_1 . METHOD_3 ( c ) ) { boolean VAR_2 = false ; for ( char VAR_3 : VAR_1 ) { VAR_2 |= c == VAR_3 ; } if ( ! VAR_2 ) { return c ; } } } return null ; }', '[\'TYPE_1: Character\', \'METHOD_2: toCharArray\', \'METHOD_3: isLetterOrDigit\', \'METHOD_1: findInvalidCharacter\', \'VAR_1: validChars\', \'VAR_2: ok\', \'VAR_3: vc\', "CHAR_2: \'.\'", "CHAR_5: \'~\'", "CHAR_4: \'-\'", "CHAR_1: \'/\'", "CHAR_3: \'_\'"]', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/StringUtils.java', 38, '386:9', '400:9', 83, 10 ), ( 5, 165, 24, 'public static String getColor(String value) {\n    int cs = 0;\n    for (char c : getMD5(value.toLowerCase()).toCharArray()) {\n    cs += c;\n    }\n    int n = (cs % 360);\n    float hue = ((float) n) / 360;\n    return hsvToRgb(hue, 0.90f, 0.65f);\n    }', '[\'public\', \'static\', \'String\', \'getColor\', \'(\', \'String\', \'value\', \')\', \'{\', \'int\', \'cs\', \'=\', \'0\', \';\', \'for\', \'(\', \'char\', \'c\', \':\', \'getMD5\', \'(\', \'value\', \'.\', \'toLowerCase\', \'(\', \')\', \')\', \'.\', \'toCharArray\', \'(\', \')\', \')\', \'{\', \'cs\', \'+=\', \'c\', \';\', \'}\', \'int\', \'n\', \'=\', \'(\', \'cs\', \'%\', \'360\', \')\', \';\', \'float\', \'hue\', \'=\', \'(\', \'(\', \'float\', \')\', \'n\', \')\', \'/\', \'360\', \';\', \'return\', \'hsvToRgb\', \'(\', \'hue\', \',\', \'0.90f\', \',\', \'0.65f\', \')\', \';\', \'}\']', 'public static String METHOD_1 ( String value ) { int VAR_1 = 0 ; for ( char c : METHOD_2 ( value . METHOD_3 ( ) ) . METHOD_4 ( ) ) { VAR_1 += c ; } int n = ( VAR_1 % INT_1 ) ; float VAR_2 = ( ( float ) n ) / INT_1 ; return METHOD_5 ( VAR_2 , FLOAT_1 , FLOAT_2 ) ; }', '[\'METHOD_2: getMD5\', \'METHOD_5: hsvToRgb\', \'METHOD_4: toCharArray\', \'METHOD_3: toLowerCase\', \'METHOD_1: getColor\', \'VAR_1: cs\', \'VAR_2: hue\', \'FLOAT_2: 0.65f\', \'FLOAT_1: 0.90f\', \'INT_1: 360\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/StringUtils.java', 38, '474:9', '482:9', 68, 7 ), ( 5, 165, 26, 'public static String rgbToString(float r, float g, float b) {\n    String rs = Integer.toHexString((int) (r * 256));\n    String gs = Integer.toHexString((int) (g * 256));\n    String bs = Integer.toHexString((int) (b * 256));\n    return "#" + rs + gs + bs;\n    }', '[\'public\', \'static\', \'String\', \'rgbToString\', \'(\', \'float\', \'r\', \',\', \'float\', \'g\', \',\', \'float\', \'b\', \')\', \'{\', \'String\', \'rs\', \'=\', \'Integer\', \'.\', \'toHexString\', \'(\', \'(\', \'int\', \')\', \'(\', \'r\', \'*\', \'256\', \')\', \')\', \';\', \'String\', \'gs\', \'=\', \'Integer\', \'.\', \'toHexString\', \'(\', \'(\', \'int\', \')\', \'(\', \'g\', \'*\', \'256\', \')\', \')\', \';\', \'String\', \'bs\', \'=\', \'Integer\', \'.\', \'toHexString\', \'(\', \'(\', \'int\', \')\', \'(\', \'b\', \'*\', \'256\', \')\', \')\', \';\', \'return\', \'"#"\', \'+\', \'rs\', \'+\', \'gs\', \'+\', \'bs\', \';\', \'}\']', 'public static String METHOD_1 ( float r , float VAR_1 , float b ) { String VAR_2 = Integer . METHOD_2 ( ( int ) ( r * INT_1 ) ) ; String VAR_3 = Integer . METHOD_2 ( ( int ) ( VAR_1 * INT_1 ) ) ; String VAR_4 = Integer . METHOD_2 ( ( int ) ( b * INT_1 ) ) ; return STRING_1 + VAR_2 + VAR_3 + VAR_4 ; }', '[\'METHOD_2: toHexString\', \'METHOD_1: rgbToString\', \'VAR_2: rs\', \'VAR_4: bs\', \'VAR_1: g\', \'VAR_3: gs\', \'INT_1: 256\', \'STRING_1: "#"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/StringUtils.java', 38, '511:9', '516:9', 76, 5 ), ( 5, 165, 29, 'public static String getFileExtension(String path) {\n    int lastDot = path.lastIndexOf(\'.\');\n    if (lastDot > -1) {\n    return path.substring(lastDot + 1);\n    }\n    return "";\n    }', '[\'public\', \'static\', \'String\', \'getFileExtension\', \'(\', \'String\', \'path\', \')\', \'{\', \'int\', \'lastDot\', \'=\', \'path\', \'.\', \'lastIndexOf\', \'(\', "\'.\'", \')\', \';\', \'if\', \'(\', \'lastDot\', \'>\', \'-\', \'1\', \')\', \'{\', \'return\', \'path\', \'.\', \'substring\', \'(\', \'lastDot\', \'+\', \'1\', \')\', \';\', \'}\', \'return\', \'""\', \';\', \'}\']', 'public static String METHOD_1 ( String path ) { int VAR_1 = path . METHOD_2 ( CHAR_1 ) ; if ( VAR_1 > - 1 ) { return path . substring ( VAR_1 + 1 ) ; } return STRING_1 ; }', '[\'METHOD_2: lastIndexOf\', \'METHOD_1: getFileExtension\', \'VAR_1: lastDot\', "CHAR_1: \'.\'", \'STRING_1: ""\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/StringUtils.java', 38, '550:9', '556:9', 42, 5 ), ( 5, 165, 32, 'public static String extractRepositoryPath(String url, String... urlpatterns) {\n    for (String urlPattern : urlpatterns) {\n    Pattern p = Pattern.compile(urlPattern);\n    Matcher m = p.matcher(url);\n    while (m.find()) {\n    String repositoryPath = m.group(1);\n    return repositoryPath;\n    }\n    }\n    // last resort\n    if (url.lastIndexOf(\'/\') > -1) {\n    return url.substring(url.lastIndexOf(\'/\') + 1);\n    }\n    return url;\n    }', '[\'public\', \'static\', \'String\', \'extractRepositoryPath\', \'(\', \'String\', \'url\', \',\', \'String\', \'...\', \'urlpatterns\', \')\', \'{\', \'for\', \'(\', \'String\', \'urlPattern\', \':\', \'urlpatterns\', \')\', \'{\', \'Pattern\', \'p\', \'=\', \'Pattern\', \'.\', \'compile\', \'(\', \'urlPattern\', \')\', \';\', \'Matcher\', \'m\', \'=\', \'p\', \'.\', \'matcher\', \'(\', \'url\', \')\', \';\', \'while\', \'(\', \'m\', \'.\', \'find\', \'(\', \')\', \')\', \'{\', \'String\', \'repositoryPath\', \'=\', \'m\', \'.\', \'group\', \'(\', \'1\', \')\', \';\', \'return\', \'repositoryPath\', \';\', \'}\', \'}\', \'if\', \'(\', \'url\', \'.\', \'lastIndexOf\', \'(\', "\'/\'", \')\', \'>\', \'-\', \'1\', \')\', \'{\', \'return\', \'url\', \'.\', \'substring\', \'(\', \'url\', \'.\', \'lastIndexOf\', \'(\', "\'/\'", \')\', \'+\', \'1\', \')\', \';\', \'}\', \'return\', \'url\', \';\', \'}\']', 'public static String METHOD_1 ( String url , String ... VAR_1 ) { for ( String VAR_2 : VAR_1 ) { TYPE_1 p = TYPE_1 . METHOD_2 ( VAR_2 ) ; TYPE_2 m = p . matcher ( url ) ; while ( m . METHOD_3 ( ) ) { String VAR_3 = m . METHOD_4 ( 1 ) ; return VAR_3 ; } } if ( url . METHOD_5 ( CHAR_1 ) > - 1 ) { return url . substring ( url . METHOD_5 ( CHAR_1 ) + 1 ) ; } return url ; }', '[\'TYPE_1: Pattern\', \'TYPE_2: Matcher\', \'METHOD_5: lastIndexOf\', \'METHOD_1: extractRepositoryPath\', \'METHOD_2: compile\', \'METHOD_3: find\', \'METHOD_4: group\', \'VAR_3: repositoryPath\', \'VAR_2: urlPattern\', \'VAR_1: urlpatterns\', "CHAR_1: \'/\'"]', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/StringUtils.java', 38, '632:9', '646:9', 98, 10 ), ( 5, 166, 5, 'public static byte[] decode(String s) {\n    byte[] bytes;\n    try {\n    bytes = s.getBytes(UTF_8);\n    } catch (UnsupportedEncodingException uee) {\n    bytes = s.getBytes();\n    }\n    return decode(bytes, 0, bytes.length);\n    }', '[\'public\', \'static\', \'byte\', \'[\', \']\', \'decode\', \'(\', \'String\', \'s\', \')\', \'{\', \'byte\', \'[\', \']\', \'bytes\', \';\', \'try\', \'{\', \'bytes\', \'=\', \'s\', \'.\', \'getBytes\', \'(\', \'UTF_8\', \')\', \';\', \'}\', \'catch\', \'(\', \'UnsupportedEncodingException\', \'uee\', \')\', \'{\', \'bytes\', \'=\', \'s\', \'.\', \'getBytes\', \'(\', \')\', \';\', \'}\', \'return\', \'decode\', \'(\', \'bytes\', \',\', \'0\', \',\', \'bytes\', \'.\', \'length\', \')\', \';\', \'}\']', 'public static byte [ ] METHOD_1 ( String s ) { byte [ ] bytes ; try { bytes = s . METHOD_2 ( VAR_1 ) ; } catch ( TYPE_1 VAR_2 ) { bytes = s . METHOD_2 ( ) ; } return METHOD_1 ( bytes , 0 , bytes . length ) ; }', '[\'TYPE_1: UnsupportedEncodingException\', \'METHOD_1: decode\', \'METHOD_2: getBytes\', \'VAR_2: uee\', \'VAR_1: UTF_8\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/Base64.java', 7, '302:9', '310:9', 53, 7 ), ( 5, 167, 0, 'public static String transformMarkdown(String markdown) throws java.text.ParseException {\n    try {\n    StringReader reader = new StringReader(markdown);\n    String html = transformMarkdown(reader);\n    reader.close();\n    return html;\n    } catch (IllegalArgumentException e) {\n    throw new java.text.ParseException(e.getMessage(), 0);\n    } catch (NullPointerException p) {\n    throw new java.text.ParseException("Markdown string is null!", 0);\n    }\n    }', '[\'public\', \'static\', \'String\', \'transformMarkdown\', \'(\', \'String\', \'markdown\', \')\', \'throws\', \'java.text.ParseException\', \'{\', \'try\', \'{\', \'StringReader\', \'reader\', \'=\', \'new\', \'StringReader\', \'(\', \'markdown\', \')\', \';\', \'String\', \'html\', \'=\', \'transformMarkdown\', \'(\', \'reader\', \')\', \';\', \'reader\', \'.\', \'close\', \'(\', \')\', \';\', \'return\', \'html\', \';\', \'}\', \'catch\', \'(\', \'IllegalArgumentException\', \'e\', \')\', \'{\', \'throw\', \'new\', \'java.text.ParseException\', \'(\', \'e\', \'.\', \'getMessage\', \'(\', \')\', \',\', \'0\', \')\', \';\', \'}\', \'catch\', \'(\', \'NullPointerException\', \'p\', \')\', \'{\', \'throw\', \'new\', \'java.text.ParseException\', \'(\', \'"Markdown string is null!"\', \',\', \'0\', \')\', \';\', \'}\', \'}\']', 'public static String METHOD_1 ( String VAR_1 ) throws TYPE_1 { try { TYPE_2 reader = new TYPE_2 ( VAR_1 ) ; String VAR_2 = METHOD_1 ( reader ) ; reader . close ( ) ; return VAR_2 ; } catch ( IllegalArgumentException e ) { throw new TYPE_1 ( e . getMessage ( ) , 0 ) ; } catch ( TYPE_3 p ) { throw new TYPE_1 ( STRING_1 , 0 ) ; } }', '[\'TYPE_3: NullPointerException\', \'TYPE_2: StringReader\', \'TYPE_1: java.text.ParseException\', \'METHOD_1: transformMarkdown\', \'VAR_1: markdown\', \'VAR_2: html\', \'STRING_1: "Markdown string is null!"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/MarkdownUtils.java', 2, '42:9', '53:9', 87, 10 ), ( 5, 168, 2, 'public static int getProtocolVersion(String serverUrl, String account, char[] password)\n    throws IOException {\n    String url = asLink(serverUrl, RpcRequest.GET_PROTOCOL);\n    int protocol = 1;\n    try {\n    protocol = JsonUtils.retrieveJson(url, Integer.class, account, password);\n    } catch (UnknownRequestException e) {\n    // v0.7.0 (protocol 1) did not have this request type \n    }\n    return protocol;\n    }', '[\'public\', \'static\', \'int\', \'getProtocolVersion\', \'(\', \'String\', \'serverUrl\', \',\', \'String\', \'account\', \',\', \'char\', \'[\', \']\', \'password\', \')\', \'throws\', \'IOException\', \'{\', \'String\', \'url\', \'=\', \'asLink\', \'(\', \'serverUrl\', \',\', \'RpcRequest.GET_PROTOCOL\', \')\', \';\', \'int\', \'protocol\', \'=\', \'1\', \';\', \'try\', \'{\', \'protocol\', \'=\', \'JsonUtils\', \'.\', \'retrieveJson\', \'(\', \'url\', \',\', \'Integer.\', \'class\', \',\', \'account\', \',\', \'password\', \')\', \';\', \'}\', \'catch\', \'(\', \'UnknownRequestException\', \'e\', \')\', \'{\', \'}\', \'return\', \'protocol\', \';\', \'}\']', 'public static int METHOD_1 ( String VAR_1 , String VAR_2 , char [ ] VAR_3 ) throws IOException { String url = METHOD_2 ( VAR_1 , VAR_4 ) ; int VAR_5 = 1 ; try { VAR_5 = TYPE_1 . METHOD_3 ( url , VAR_6 class , VAR_2 , VAR_3 ) ; } catch ( TYPE_2 e ) { } return VAR_5 ; }', '[\'TYPE_1: JsonUtils\', \'TYPE_2: UnknownRequestException\', \'METHOD_1: getProtocolVersion\', \'METHOD_2: asLink\', \'METHOD_3: retrieveJson\', \'VAR_3: password\', \'VAR_5: protocol\', \'VAR_4: RpcRequest.GET_PROTOCOL\', \'VAR_6: Integer.\', \'VAR_1: serverUrl\', \'VAR_2: account\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/RpcUtils.java', 32, '120:9', '130:9', 67, 8 ), ( 5, 168, 3, 'public static Map<String, RepositoryModel> getRepositories(String serverUrl, String account,\n    			char[] password) throws IOException {\n    String url = asLink(serverUrl, RpcRequest.LIST_REPOSITORIES);\n    Map<String, RepositoryModel> models = JsonUtils.retrieveJson(url, REPOSITORIES_TYPE,\n    				account, password);\n    return models;\n    }', '[\'public\', \'static\', \'Map\', \'<\', \'String\', \',\', \'RepositoryModel\', \'>\', \'getRepositories\', \'(\', \'String\', \'serverUrl\', \',\', \'String\', \'account\', \',\', \'char\', \'[\', \']\', \'password\', \')\', \'throws\', \'IOException\', \'{\', \'String\', \'url\', \'=\', \'asLink\', \'(\', \'serverUrl\', \',\', \'RpcRequest.LIST_REPOSITORIES\', \')\', \';\', \'Map\', \'<\', \'String\', \',\', \'RepositoryModel\', \'>\', \'models\', \'=\', \'JsonUtils\', \'.\', \'retrieveJson\', \'(\', \'url\', \',\', \'REPOSITORIES_TYPE\', \',\', \'account\', \',\', \'password\', \')\', \';\', \'return\', \'models\', \';\', \'}\']', 'public static Map < String , TYPE_1 > METHOD_1 ( String VAR_1 , String VAR_2 , char [ ] VAR_3 ) throws IOException { String url = METHOD_2 ( VAR_1 , VAR_4 ) ; Map < String , TYPE_1 > VAR_5 = TYPE_2 . METHOD_3 ( url , VAR_6 , VAR_2 , VAR_3 ) ; return VAR_5 ; }', '[\'TYPE_2: JsonUtils\', \'TYPE_1: RepositoryModel\', \'METHOD_1: getRepositories\', \'METHOD_2: asLink\', \'METHOD_3: retrieveJson\', \'VAR_5: models\', \'VAR_3: password\', \'VAR_4: RpcRequest.LIST_REPOSITORIES\', \'VAR_6: REPOSITORIES_TYPE\', \'VAR_1: serverUrl\', \'VAR_2: account\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/RpcUtils.java', 32, '142:9', '148:9', 60, 6 ), ( 5, 168, 4, 'public static List<UserModel> getUsers(String serverUrl, String account, char[] password)\n    throws IOException {\n    String url = asLink(serverUrl, RpcRequest.LIST_USERS);\n    Collection<UserModel> models = JsonUtils.retrieveJson(url, USERS_TYPE, account, password);\n    List<UserModel> list = new ArrayList<UserModel>(models);\n    return list;\n    }', '[\'public\', \'static\', \'List\', \'<\', \'UserModel\', \'>\', \'getUsers\', \'(\', \'String\', \'serverUrl\', \',\', \'String\', \'account\', \',\', \'char\', \'[\', \']\', \'password\', \')\', \'throws\', \'IOException\', \'{\', \'String\', \'url\', \'=\', \'asLink\', \'(\', \'serverUrl\', \',\', \'RpcRequest.LIST_USERS\', \')\', \';\', \'Collection\', \'<\', \'UserModel\', \'>\', \'models\', \'=\', \'JsonUtils\', \'.\', \'retrieveJson\', \'(\', \'url\', \',\', \'USERS_TYPE\', \',\', \'account\', \',\', \'password\', \')\', \';\', \'List\', \'<\', \'UserModel\', \'>\', \'list\', \'=\', \'new\', \'ArrayList\', \'<\', \'UserModel\', \'>\', \'(\', \'models\', \')\', \';\', \'return\', \'list\', \';\', \'}\']', 'public static List < TYPE_1 > METHOD_1 ( String VAR_1 , String VAR_2 , char [ ] VAR_3 ) throws IOException { String url = METHOD_2 ( VAR_1 , VAR_4 ) ; Collection < TYPE_1 > VAR_5 = TYPE_2 . METHOD_3 ( url , VAR_6 , VAR_2 , VAR_3 ) ; List < TYPE_1 > list = new ArrayList < TYPE_1 > ( VAR_5 ) ; return list ; }', '[\'TYPE_1: UserModel\', \'TYPE_2: JsonUtils\', \'METHOD_2: asLink\', \'METHOD_3: retrieveJson\', \'METHOD_1: getUsers\', \'VAR_5: models\', \'VAR_3: password\', \'VAR_6: USERS_TYPE\', \'VAR_1: serverUrl\', \'VAR_4: RpcRequest.LIST_USERS\', \'VAR_2: account\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/RpcUtils.java', 32, '159:9', '165:9', 71, 6 ), ( 5, 168, 5, 'public static List<TeamModel> getTeams(String serverUrl, String account, char[] password)\n    throws IOException {\n    String url = asLink(serverUrl, RpcRequest.LIST_TEAMS);\n    Collection<TeamModel> models = JsonUtils.retrieveJson(url, TEAMS_TYPE, account, password);\n    List<TeamModel> list = new ArrayList<TeamModel>(models);\n    return list;\n    }', '[\'public\', \'static\', \'List\', \'<\', \'TeamModel\', \'>\', \'getTeams\', \'(\', \'String\', \'serverUrl\', \',\', \'String\', \'account\', \',\', \'char\', \'[\', \']\', \'password\', \')\', \'throws\', \'IOException\', \'{\', \'String\', \'url\', \'=\', \'asLink\', \'(\', \'serverUrl\', \',\', \'RpcRequest.LIST_TEAMS\', \')\', \';\', \'Collection\', \'<\', \'TeamModel\', \'>\', \'models\', \'=\', \'JsonUtils\', \'.\', \'retrieveJson\', \'(\', \'url\', \',\', \'TEAMS_TYPE\', \',\', \'account\', \',\', \'password\', \')\', \';\', \'List\', \'<\', \'TeamModel\', \'>\', \'list\', \'=\', \'new\', \'ArrayList\', \'<\', \'TeamModel\', \'>\', \'(\', \'models\', \')\', \';\', \'return\', \'list\', \';\', \'}\']', 'public static List < TYPE_1 > METHOD_1 ( String VAR_1 , String VAR_2 , char [ ] VAR_3 ) throws IOException { String url = METHOD_2 ( VAR_1 , VAR_4 ) ; Collection < TYPE_1 > VAR_5 = TYPE_2 . METHOD_3 ( url , VAR_6 , VAR_2 , VAR_3 ) ; List < TYPE_1 > list = new ArrayList < TYPE_1 > ( VAR_5 ) ; return list ; }', '[\'TYPE_1: TeamModel\', \'TYPE_2: JsonUtils\', \'METHOD_2: asLink\', \'METHOD_3: retrieveJson\', \'METHOD_1: getTeams\', \'VAR_5: models\', \'VAR_3: password\', \'VAR_1: serverUrl\', \'VAR_6: TEAMS_TYPE\', \'VAR_2: account\', \'VAR_4: RpcRequest.LIST_TEAMS\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/RpcUtils.java', 32, '177:9', '183:9', 71, 6 ), ( 5, 168, 6, 'public static boolean createRepository(RepositoryModel repository, String serverUrl,\n    			String account, char[] password) throws IOException {\n    // ensure repository name ends with .git\n    if (!repository.name.endsWith(".git")) {\n    repository.name += ".git";\n    }\n    return doAction(RpcRequest.CREATE_REPOSITORY, null, repository, serverUrl, account,\n    				password);\n    }', '[\'public\', \'static\', \'boolean\', \'createRepository\', \'(\', \'RepositoryModel\', \'repository\', \',\', \'String\', \'serverUrl\', \',\', \'String\', \'account\', \',\', \'char\', \'[\', \']\', \'password\', \')\', \'throws\', \'IOException\', \'{\', \'if\', \'(\', \'!\', \'repository.name\', \'.\', \'endsWith\', \'(\', \'".git"\', \')\', \')\', \'{\', \'repository\', \'.\', \'name\', \'+=\', \'".git"\', \';\', \'}\', \'return\', \'doAction\', \'(\', \'RpcRequest.CREATE_REPOSITORY\', \',\', \'null\', \',\', \'repository\', \',\', \'serverUrl\', \',\', \'account\', \',\', \'password\', \')\', \';\', \'}\']', 'public static boolean METHOD_1 ( TYPE_1 VAR_1 , String VAR_2 , String VAR_3 , char [ ] VAR_4 ) throws IOException { if ( ! VAR_5 . METHOD_2 ( STRING_1 ) ) { VAR_1 . name += STRING_1 ; } return METHOD_3 ( VAR_6 , null , VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; }', '[\'TYPE_1: RepositoryModel\', \'METHOD_1: createRepository\', \'METHOD_2: endsWith\', \'METHOD_3: doAction\', \'VAR_4: password\', \'VAR_5: repository.name\', \'VAR_2: serverUrl\', \'VAR_1: repository\', \'VAR_3: account\', \'VAR_6: RpcRequest.CREATE_REPOSITORY\', \'STRING_1: ".git"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/RpcUtils.java', 32, '195:9', '204:9', 61, 6 ), ( 5, 168, 16, 'public static List<String> getRepositoryMembers(RepositoryModel repository, String serverUrl,\n    			String account, char[] password) throws IOException {\n    String url = asLink(serverUrl, RpcRequest.LIST_REPOSITORY_MEMBERS, repository.name);\n    Collection<String> list = JsonUtils.retrieveJson(url, NAMES_TYPE, account, password);\n    return new ArrayList<String>(list);\n    }', '[\'public\', \'static\', \'List\', \'<\', \'String\', \'>\', \'getRepositoryMembers\', \'(\', \'RepositoryModel\', \'repository\', \',\', \'String\', \'serverUrl\', \',\', \'String\', \'account\', \',\', \'char\', \'[\', \']\', \'password\', \')\', \'throws\', \'IOException\', \'{\', \'String\', \'url\', \'=\', \'asLink\', \'(\', \'serverUrl\', \',\', \'RpcRequest.LIST_REPOSITORY_MEMBERS\', \',\', \'repository\', \'.\', \'name\', \')\', \';\', \'Collection\', \'<\', \'String\', \'>\', \'list\', \'=\', \'JsonUtils\', \'.\', \'retrieveJson\', \'(\', \'url\', \',\', \'NAMES_TYPE\', \',\', \'account\', \',\', \'password\', \')\', \';\', \'return\', \'new\', \'ArrayList\', \'<\', \'String\', \'>\', \'(\', \'list\', \')\', \';\', \'}\']', 'public static List < String > METHOD_1 ( TYPE_1 VAR_1 , String VAR_2 , String VAR_3 , char [ ] VAR_4 ) throws IOException { String url = METHOD_2 ( VAR_2 , VAR_5 , VAR_1 . name ) ; Collection < String > list = TYPE_2 . METHOD_3 ( url , VAR_6 , VAR_3 , VAR_4 ) ; return new ArrayList < String > ( list ) ; }', '[\'TYPE_2: JsonUtils\', \'TYPE_1: RepositoryModel\', \'METHOD_2: asLink\', \'METHOD_3: retrieveJson\', \'METHOD_1: getRepositoryMembers\', \'VAR_4: password\', \'VAR_2: serverUrl\', \'VAR_1: repository\', \'VAR_6: NAMES_TYPE\', \'VAR_3: account\', \'VAR_5: RpcRequest.LIST_REPOSITORY_MEMBERS\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/RpcUtils.java', 32, '358:9', '363:9', 70, 5 ), ( 5, 168, 17, 'public static List<RegistrantAccessPermission> getRepositoryMemberPermissions(RepositoryModel repository, \n    			String serverUrl, String account, char [] password) throws IOException {\n    String url = asLink(serverUrl, RpcRequest.LIST_REPOSITORY_MEMBER_PERMISSIONS, repository.name);\n    Collection<RegistrantAccessPermission> list = JsonUtils.retrieveJson(url, REGISTRANT_PERMISSIONS_TYPE, account, password);\n    return new ArrayList<RegistrantAccessPermission>(list);\n    }', '[\'public\', \'static\', \'List\', \'<\', \'RegistrantAccessPermission\', \'>\', \'getRepositoryMemberPermissions\', \'(\', \'RepositoryModel\', \'repository\', \',\', \'String\', \'serverUrl\', \',\', \'String\', \'account\', \',\', \'char\', \'[\', \']\', \'password\', \')\', \'throws\', \'IOException\', \'{\', \'String\', \'url\', \'=\', \'asLink\', \'(\', \'serverUrl\', \',\', \'RpcRequest.LIST_REPOSITORY_MEMBER_PERMISSIONS\', \',\', \'repository\', \'.\', \'name\', \')\', \';\', \'Collection\', \'<\', \'RegistrantAccessPermission\', \'>\', \'list\', \'=\', \'JsonUtils\', \'.\', \'retrieveJson\', \'(\', \'url\', \',\', \'REGISTRANT_PERMISSIONS_TYPE\', \',\', \'account\', \',\', \'password\', \')\', \';\', \'return\', \'new\', \'ArrayList\', \'<\', \'RegistrantAccessPermission\', \'>\', \'(\', \'list\', \')\', \';\', \'}\']', 'public static List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 , String VAR_2 , String VAR_3 , char [ ] VAR_4 ) throws IOException { String url = METHOD_2 ( VAR_2 , VAR_5 , VAR_1 . name ) ; Collection < TYPE_1 > list = TYPE_3 . METHOD_3 ( url , VAR_6 , VAR_3 , VAR_4 ) ; return new ArrayList < TYPE_1 > ( list ) ; }', '[\'TYPE_3: JsonUtils\', \'TYPE_1: RegistrantAccessPermission\', \'TYPE_2: RepositoryModel\', \'METHOD_1: getRepositoryMemberPermissions\', \'METHOD_2: asLink\', \'METHOD_3: retrieveJson\', \'VAR_4: password\', \'VAR_5: RpcRequest.LIST_REPOSITORY_MEMBER_PERMISSIONS\', \'VAR_2: serverUrl\', \'VAR_1: repository\', \'VAR_6: REGISTRANT_PERMISSIONS_TYPE\', \'VAR_3: account\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/RpcUtils.java', 32, '375:9', '380:9', 70, 5 ), ( 5, 168, 18, 'public static boolean setRepositoryMemberPermissions(RepositoryModel repository,\n    			List<RegistrantAccessPermission> permissions, String serverUrl, String account, char[] password)\n    throws IOException {\n    return doAction(RpcRequest.SET_REPOSITORY_MEMBER_PERMISSIONS, repository.name, permissions, serverUrl,\n    				account, password);\n    }', '[\'public\', \'static\', \'boolean\', \'setRepositoryMemberPermissions\', \'(\', \'RepositoryModel\', \'repository\', \',\', \'List\', \'<\', \'RegistrantAccessPermission\', \'>\', \'permissions\', \',\', \'String\', \'serverUrl\', \',\', \'String\', \'account\', \',\', \'char\', \'[\', \']\', \'password\', \')\', \'throws\', \'IOException\', \'{\', \'return\', \'doAction\', \'(\', \'RpcRequest.SET_REPOSITORY_MEMBER_PERMISSIONS\', \',\', \'repository\', \'.\', \'name\', \',\', \'permissions\', \',\', \'serverUrl\', \',\', \'account\', \',\', \'password\', \')\', \';\', \'}\']', 'public static boolean METHOD_1 ( TYPE_1 VAR_1 , List < TYPE_2 > VAR_2 , String VAR_3 , String VAR_4 , char [ ] VAR_5 ) throws IOException { return METHOD_2 ( VAR_6 , VAR_1 . name , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; }', '[\'TYPE_2: RegistrantAccessPermission\', \'TYPE_1: RepositoryModel\', \'METHOD_1: setRepositoryMemberPermissions\', \'METHOD_2: doAction\', \'VAR_5: password\', \'VAR_2: permissions\', \'VAR_3: serverUrl\', \'VAR_1: repository\', \'VAR_6: RpcRequest.SET_REPOSITORY_MEMBER_PERMISSIONS\', \'VAR_4: account\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/RpcUtils.java', 32, '393:9', '398:9', 48, 5 ), ( 5, 168, 19, 'public static List<String> getRepositoryTeams(RepositoryModel repository, String serverUrl,\n    			String account, char[] password) throws IOException {\n    String url = asLink(serverUrl, RpcRequest.LIST_REPOSITORY_TEAMS, repository.name);\n    Collection<String> list = JsonUtils.retrieveJson(url, NAMES_TYPE, account, password);\n    return new ArrayList<String>(list);\n    }', '[\'public\', \'static\', \'List\', \'<\', \'String\', \'>\', \'getRepositoryTeams\', \'(\', \'RepositoryModel\', \'repository\', \',\', \'String\', \'serverUrl\', \',\', \'String\', \'account\', \',\', \'char\', \'[\', \']\', \'password\', \')\', \'throws\', \'IOException\', \'{\', \'String\', \'url\', \'=\', \'asLink\', \'(\', \'serverUrl\', \',\', \'RpcRequest.LIST_REPOSITORY_TEAMS\', \',\', \'repository\', \'.\', \'name\', \')\', \';\', \'Collection\', \'<\', \'String\', \'>\', \'list\', \'=\', \'JsonUtils\', \'.\', \'retrieveJson\', \'(\', \'url\', \',\', \'NAMES_TYPE\', \',\', \'account\', \',\', \'password\', \')\', \';\', \'return\', \'new\', \'ArrayList\', \'<\', \'String\', \'>\', \'(\', \'list\', \')\', \';\', \'}\']', 'public static List < String > METHOD_1 ( TYPE_1 VAR_1 , String VAR_2 , String VAR_3 , char [ ] VAR_4 ) throws IOException { String url = METHOD_2 ( VAR_2 , VAR_5 , VAR_1 . name ) ; Collection < String > list = TYPE_2 . METHOD_3 ( url , VAR_6 , VAR_3 , VAR_4 ) ; return new ArrayList < String > ( list ) ; }', '[\'TYPE_2: JsonUtils\', \'TYPE_1: RepositoryModel\', \'METHOD_2: asLink\', \'METHOD_3: retrieveJson\', \'METHOD_1: getRepositoryTeams\', \'VAR_4: password\', \'VAR_5: RpcRequest.LIST_REPOSITORY_TEAMS\', \'VAR_2: serverUrl\', \'VAR_1: repository\', \'VAR_6: NAMES_TYPE\', \'VAR_3: account\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/RpcUtils.java', 32, '410:9', '415:9', 70, 5 ), ( 5, 168, 20, 'public static List<RegistrantAccessPermission> getRepositoryTeamPermissions(RepositoryModel repository, \n    			String serverUrl, String account, char [] password) throws IOException {\n    String url = asLink(serverUrl, RpcRequest.LIST_REPOSITORY_TEAM_PERMISSIONS, repository.name);\n    Collection<RegistrantAccessPermission> list = JsonUtils.retrieveJson(url, REGISTRANT_PERMISSIONS_TYPE, account, password);\n    return new ArrayList<RegistrantAccessPermission>(list);\n    }', '[\'public\', \'static\', \'List\', \'<\', \'RegistrantAccessPermission\', \'>\', \'getRepositoryTeamPermissions\', \'(\', \'RepositoryModel\', \'repository\', \',\', \'String\', \'serverUrl\', \',\', \'String\', \'account\', \',\', \'char\', \'[\', \']\', \'password\', \')\', \'throws\', \'IOException\', \'{\', \'String\', \'url\', \'=\', \'asLink\', \'(\', \'serverUrl\', \',\', \'RpcRequest.LIST_REPOSITORY_TEAM_PERMISSIONS\', \',\', \'repository\', \'.\', \'name\', \')\', \';\', \'Collection\', \'<\', \'RegistrantAccessPermission\', \'>\', \'list\', \'=\', \'JsonUtils\', \'.\', \'retrieveJson\', \'(\', \'url\', \',\', \'REGISTRANT_PERMISSIONS_TYPE\', \',\', \'account\', \',\', \'password\', \')\', \';\', \'return\', \'new\', \'ArrayList\', \'<\', \'RegistrantAccessPermission\', \'>\', \'(\', \'list\', \')\', \';\', \'}\']', 'public static List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 , String VAR_2 , String VAR_3 , char [ ] VAR_4 ) throws IOException { String url = METHOD_2 ( VAR_2 , VAR_5 , VAR_1 . name ) ; Collection < TYPE_1 > list = TYPE_3 . METHOD_3 ( url , VAR_6 , VAR_3 , VAR_4 ) ; return new ArrayList < TYPE_1 > ( list ) ; }', '[\'TYPE_3: JsonUtils\', \'TYPE_1: RegistrantAccessPermission\', \'TYPE_2: RepositoryModel\', \'METHOD_2: asLink\', \'METHOD_3: retrieveJson\', \'METHOD_1: getRepositoryTeamPermissions\', \'VAR_4: password\', \'VAR_5: RpcRequest.LIST_REPOSITORY_TEAM_PERMISSIONS\', \'VAR_2: serverUrl\', \'VAR_1: repository\', \'VAR_6: REGISTRANT_PERMISSIONS_TYPE\', \'VAR_3: account\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/RpcUtils.java', 32, '427:9', '432:9', 70, 5 ), ( 5, 168, 21, 'public static boolean setRepositoryTeamPermissions(RepositoryModel repository,\n    			List<RegistrantAccessPermission> permissions, String serverUrl, String account, char[] password)\n    throws IOException {\n    return doAction(RpcRequest.SET_REPOSITORY_TEAM_PERMISSIONS, repository.name, permissions, serverUrl,\n    				account, password);\n    }', '[\'public\', \'static\', \'boolean\', \'setRepositoryTeamPermissions\', \'(\', \'RepositoryModel\', \'repository\', \',\', \'List\', \'<\', \'RegistrantAccessPermission\', \'>\', \'permissions\', \',\', \'String\', \'serverUrl\', \',\', \'String\', \'account\', \',\', \'char\', \'[\', \']\', \'password\', \')\', \'throws\', \'IOException\', \'{\', \'return\', \'doAction\', \'(\', \'RpcRequest.SET_REPOSITORY_TEAM_PERMISSIONS\', \',\', \'repository\', \'.\', \'name\', \',\', \'permissions\', \',\', \'serverUrl\', \',\', \'account\', \',\', \'password\', \')\', \';\', \'}\']', 'public static boolean METHOD_1 ( TYPE_1 VAR_1 , List < TYPE_2 > VAR_2 , String VAR_3 , String VAR_4 , char [ ] VAR_5 ) throws IOException { return METHOD_2 ( VAR_6 , VAR_1 . name , VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; }', '[\'TYPE_2: RegistrantAccessPermission\', \'TYPE_1: RepositoryModel\', \'METHOD_1: setRepositoryTeamPermissions\', \'METHOD_2: doAction\', \'VAR_5: password\', \'VAR_2: permissions\', \'VAR_3: serverUrl\', \'VAR_1: repository\', \'VAR_6: RpcRequest.SET_REPOSITORY_TEAM_PERMISSIONS\', \'VAR_4: account\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/RpcUtils.java', 32, '445:9', '450:9', 48, 5 ), ( 5, 168, 22, 'public static List<FederationModel> getFederationRegistrations(String serverUrl,\n    			String account, char[] password) throws IOException {\n    String url = asLink(serverUrl, RpcRequest.LIST_FEDERATION_REGISTRATIONS);\n    Collection<FederationModel> registrations = JsonUtils.retrieveJson(url, REGISTRATIONS_TYPE,\n    				account, password);\n    List<FederationModel> list = new ArrayList<FederationModel>(registrations);\n    return list;\n    }', '[\'public\', \'static\', \'List\', \'<\', \'FederationModel\', \'>\', \'getFederationRegistrations\', \'(\', \'String\', \'serverUrl\', \',\', \'String\', \'account\', \',\', \'char\', \'[\', \']\', \'password\', \')\', \'throws\', \'IOException\', \'{\', \'String\', \'url\', \'=\', \'asLink\', \'(\', \'serverUrl\', \',\', \'RpcRequest.LIST_FEDERATION_REGISTRATIONS\', \')\', \';\', \'Collection\', \'<\', \'FederationModel\', \'>\', \'registrations\', \'=\', \'JsonUtils\', \'.\', \'retrieveJson\', \'(\', \'url\', \',\', \'REGISTRATIONS_TYPE\', \',\', \'account\', \',\', \'password\', \')\', \';\', \'List\', \'<\', \'FederationModel\', \'>\', \'list\', \'=\', \'new\', \'ArrayList\', \'<\', \'FederationModel\', \'>\', \'(\', \'registrations\', \')\', \';\', \'return\', \'list\', \';\', \'}\']', 'public static List < TYPE_1 > METHOD_1 ( String VAR_1 , String VAR_2 , char [ ] VAR_3 ) throws IOException { String url = METHOD_2 ( VAR_1 , VAR_4 ) ; Collection < TYPE_1 > VAR_5 = TYPE_2 . METHOD_3 ( url , VAR_6 , VAR_2 , VAR_3 ) ; List < TYPE_1 > list = new ArrayList < TYPE_1 > ( VAR_5 ) ; return list ; }', '[\'TYPE_1: FederationModel\', \'TYPE_2: JsonUtils\', \'METHOD_2: asLink\', \'METHOD_3: retrieveJson\', \'METHOD_1: getFederationRegistrations\', \'VAR_3: password\', \'VAR_5: registrations\', \'VAR_6: REGISTRATIONS_TYPE\', \'VAR_1: serverUrl\', \'VAR_4: RpcRequest.LIST_FEDERATION_REGISTRATIONS\', \'VAR_2: account\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/RpcUtils.java', 32, '462:9', '469:9', 71, 7 ), ( 5, 168, 23, 'public static List<FederationModel> getFederationResultRegistrations(String serverUrl,\n    			String account, char[] password) throws IOException {\n    String url = asLink(serverUrl, RpcRequest.LIST_FEDERATION_RESULTS);\n    Collection<FederationModel> registrations = JsonUtils.retrieveJson(url, REGISTRATIONS_TYPE,\n    				account, password);\n    List<FederationModel> list = new ArrayList<FederationModel>(registrations);\n    return list;\n    }', '[\'public\', \'static\', \'List\', \'<\', \'FederationModel\', \'>\', \'getFederationResultRegistrations\', \'(\', \'String\', \'serverUrl\', \',\', \'String\', \'account\', \',\', \'char\', \'[\', \']\', \'password\', \')\', \'throws\', \'IOException\', \'{\', \'String\', \'url\', \'=\', \'asLink\', \'(\', \'serverUrl\', \',\', \'RpcRequest.LIST_FEDERATION_RESULTS\', \')\', \';\', \'Collection\', \'<\', \'FederationModel\', \'>\', \'registrations\', \'=\', \'JsonUtils\', \'.\', \'retrieveJson\', \'(\', \'url\', \',\', \'REGISTRATIONS_TYPE\', \',\', \'account\', \',\', \'password\', \')\', \';\', \'List\', \'<\', \'FederationModel\', \'>\', \'list\', \'=\', \'new\', \'ArrayList\', \'<\', \'FederationModel\', \'>\', \'(\', \'registrations\', \')\', \';\', \'return\', \'list\', \';\', \'}\']', 'public static List < TYPE_1 > METHOD_1 ( String VAR_1 , String VAR_2 , char [ ] VAR_3 ) throws IOException { String url = METHOD_2 ( VAR_1 , VAR_4 ) ; Collection < TYPE_1 > VAR_5 = TYPE_2 . METHOD_3 ( url , VAR_6 , VAR_2 , VAR_3 ) ; List < TYPE_1 > list = new ArrayList < TYPE_1 > ( VAR_5 ) ; return list ; }', '[\'TYPE_1: FederationModel\', \'TYPE_2: JsonUtils\', \'METHOD_2: asLink\', \'METHOD_3: retrieveJson\', \'METHOD_1: getFederationResultRegistrations\', \'VAR_3: password\', \'VAR_5: registrations\', \'VAR_6: REGISTRATIONS_TYPE\', \'VAR_1: serverUrl\', \'VAR_4: RpcRequest.LIST_FEDERATION_RESULTS\', \'VAR_2: account\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/RpcUtils.java', 32, '481:9', '488:9', 71, 7 ), ( 5, 168, 24, 'public static List<FederationProposal> getFederationProposals(String serverUrl, String account,\n    			char[] password) throws IOException {\n    String url = asLink(serverUrl, RpcRequest.LIST_FEDERATION_PROPOSALS);\n    Collection<FederationProposal> proposals = JsonUtils.retrieveJson(url, PROPOSALS_TYPE,\n    				account, password);\n    List<FederationProposal> list = new ArrayList<FederationProposal>(proposals);\n    return list;\n    }', '[\'public\', \'static\', \'List\', \'<\', \'FederationProposal\', \'>\', \'getFederationProposals\', \'(\', \'String\', \'serverUrl\', \',\', \'String\', \'account\', \',\', \'char\', \'[\', \']\', \'password\', \')\', \'throws\', \'IOException\', \'{\', \'String\', \'url\', \'=\', \'asLink\', \'(\', \'serverUrl\', \',\', \'RpcRequest.LIST_FEDERATION_PROPOSALS\', \')\', \';\', \'Collection\', \'<\', \'FederationProposal\', \'>\', \'proposals\', \'=\', \'JsonUtils\', \'.\', \'retrieveJson\', \'(\', \'url\', \',\', \'PROPOSALS_TYPE\', \',\', \'account\', \',\', \'password\', \')\', \';\', \'List\', \'<\', \'FederationProposal\', \'>\', \'list\', \'=\', \'new\', \'ArrayList\', \'<\', \'FederationProposal\', \'>\', \'(\', \'proposals\', \')\', \';\', \'return\', \'list\', \';\', \'}\']', 'public static List < TYPE_1 > METHOD_1 ( String VAR_1 , String VAR_2 , char [ ] VAR_3 ) throws IOException { String url = METHOD_2 ( VAR_1 , VAR_4 ) ; Collection < TYPE_1 > VAR_5 = TYPE_2 . METHOD_3 ( url , VAR_6 , VAR_2 , VAR_3 ) ; List < TYPE_1 > list = new ArrayList < TYPE_1 > ( VAR_5 ) ; return list ; }', '[\'TYPE_1: FederationProposal\', \'TYPE_2: JsonUtils\', \'METHOD_2: asLink\', \'METHOD_3: retrieveJson\', \'METHOD_1: getFederationProposals\', \'VAR_3: password\', \'VAR_1: serverUrl\', \'VAR_5: proposals\', \'VAR_6: PROPOSALS_TYPE\', \'VAR_2: account\', \'VAR_4: RpcRequest.LIST_FEDERATION_PROPOSALS\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/RpcUtils.java', 32, '499:9', '506:9', 71, 7 ), ( 5, 168, 25, 'public static List<FederationSet> getFederationSets(String serverUrl, String account,\n    			char[] password) throws IOException {\n    String url = asLink(serverUrl, RpcRequest.LIST_FEDERATION_SETS);\n    Collection<FederationSet> sets = JsonUtils.retrieveJson(url, SETS_TYPE, account, password);\n    List<FederationSet> list = new ArrayList<FederationSet>(sets);\n    return list;\n    }', '[\'public\', \'static\', \'List\', \'<\', \'FederationSet\', \'>\', \'getFederationSets\', \'(\', \'String\', \'serverUrl\', \',\', \'String\', \'account\', \',\', \'char\', \'[\', \']\', \'password\', \')\', \'throws\', \'IOException\', \'{\', \'String\', \'url\', \'=\', \'asLink\', \'(\', \'serverUrl\', \',\', \'RpcRequest.LIST_FEDERATION_SETS\', \')\', \';\', \'Collection\', \'<\', \'FederationSet\', \'>\', \'sets\', \'=\', \'JsonUtils\', \'.\', \'retrieveJson\', \'(\', \'url\', \',\', \'SETS_TYPE\', \',\', \'account\', \',\', \'password\', \')\', \';\', \'List\', \'<\', \'FederationSet\', \'>\', \'list\', \'=\', \'new\', \'ArrayList\', \'<\', \'FederationSet\', \'>\', \'(\', \'sets\', \')\', \';\', \'return\', \'list\', \';\', \'}\']', 'public static List < TYPE_1 > METHOD_1 ( String VAR_1 , String VAR_2 , char [ ] VAR_3 ) throws IOException { String url = METHOD_2 ( VAR_1 , VAR_4 ) ; Collection < TYPE_1 > VAR_5 = TYPE_2 . METHOD_3 ( url , VAR_6 , VAR_2 , VAR_3 ) ; List < TYPE_1 > list = new ArrayList < TYPE_1 > ( VAR_5 ) ; return list ; }', '[\'TYPE_2: JsonUtils\', \'TYPE_1: FederationSet\', \'METHOD_2: asLink\', \'METHOD_3: retrieveJson\', \'METHOD_1: getFederationSets\', \'VAR_3: password\', \'VAR_5: sets\', \'VAR_4: RpcRequest.LIST_FEDERATION_SETS\', \'VAR_1: serverUrl\', \'VAR_6: SETS_TYPE\', \'VAR_2: account\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/RpcUtils.java', 32, '517:9', '523:9', 71, 6 ), ( 5, 168, 26, 'public static ServerSettings getSettings(String serverUrl, String account, char[] password)\n    throws IOException {\n    String url = asLink(serverUrl, RpcRequest.LIST_SETTINGS);\n    ServerSettings settings = JsonUtils.retrieveJson(url, ServerSettings.class, account,\n    				password);\n    return settings;\n    }', '[\'public\', \'static\', \'ServerSettings\', \'getSettings\', \'(\', \'String\', \'serverUrl\', \',\', \'String\', \'account\', \',\', \'char\', \'[\', \']\', \'password\', \')\', \'throws\', \'IOException\', \'{\', \'String\', \'url\', \'=\', \'asLink\', \'(\', \'serverUrl\', \',\', \'RpcRequest.LIST_SETTINGS\', \')\', \';\', \'ServerSettings\', \'settings\', \'=\', \'JsonUtils\', \'.\', \'retrieveJson\', \'(\', \'url\', \',\', \'ServerSettings.\', \'class\', \',\', \'account\', \',\', \'password\', \')\', \';\', \'return\', \'settings\', \';\', \'}\']', 'public static TYPE_1 METHOD_1 ( String VAR_1 , String VAR_2 , char [ ] VAR_3 ) throws IOException { String url = METHOD_2 ( VAR_1 , VAR_4 ) ; TYPE_1 VAR_5 = TYPE_2 . METHOD_3 ( url , VAR_6 class , VAR_2 , VAR_3 ) ; return VAR_5 ; }', '[\'TYPE_2: JsonUtils\', \'TYPE_1: ServerSettings\', \'METHOD_2: asLink\', \'METHOD_3: retrieveJson\', \'METHOD_1: getSettings\', \'VAR_4: RpcRequest.LIST_SETTINGS\', \'VAR_5: settings\', \'VAR_3: password\', \'VAR_1: serverUrl\', \'VAR_6: ServerSettings.\', \'VAR_2: account\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/RpcUtils.java', 32, '534:9', '540:9', 52, 6 ), ( 5, 168, 28, 'public static ServerStatus getStatus(String serverUrl, String account, char[] password)\n    throws IOException {\n    String url = asLink(serverUrl, RpcRequest.LIST_STATUS);\n    ServerStatus status = JsonUtils.retrieveJson(url, ServerStatus.class, account, password);\n    return status;\n    }', '[\'public\', \'static\', \'ServerStatus\', \'getStatus\', \'(\', \'String\', \'serverUrl\', \',\', \'String\', \'account\', \',\', \'char\', \'[\', \']\', \'password\', \')\', \'throws\', \'IOException\', \'{\', \'String\', \'url\', \'=\', \'asLink\', \'(\', \'serverUrl\', \',\', \'RpcRequest.LIST_STATUS\', \')\', \';\', \'ServerStatus\', \'status\', \'=\', \'JsonUtils\', \'.\', \'retrieveJson\', \'(\', \'url\', \',\', \'ServerStatus.\', \'class\', \',\', \'account\', \',\', \'password\', \')\', \';\', \'return\', \'status\', \';\', \'}\']', 'public static TYPE_1 METHOD_1 ( String VAR_1 , String VAR_2 , char [ ] VAR_3 ) throws IOException { String url = METHOD_2 ( VAR_1 , VAR_4 ) ; TYPE_1 status = TYPE_2 . METHOD_3 ( url , VAR_5 class , VAR_2 , VAR_3 ) ; return status ; }', '[\'TYPE_2: JsonUtils\', \'TYPE_1: ServerStatus\', \'METHOD_2: asLink\', \'METHOD_3: retrieveJson\', \'METHOD_1: getStatus\', \'VAR_3: password\', \'VAR_5: ServerStatus.\', \'VAR_1: serverUrl\', \'VAR_4: RpcRequest.LIST_STATUS\', \'VAR_2: account\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/RpcUtils.java', 32, '568:9', '573:9', 52, 5 ), ( 5, 168, 29, 'public static Map<String, Collection<String>> getBranches(String serverUrl, String account,\n    			char[] password) throws IOException {\n    String url = asLink(serverUrl, RpcRequest.LIST_BRANCHES);\n    Map<String, Collection<String>> branches = JsonUtils.retrieveJson(url, BRANCHES_TYPE,\n    				account, password);\n    return branches;\n    }', '[\'public\', \'static\', \'Map\', \'<\', \'String\', \',\', \'Collection\', \'<\', \'String\', \'>\', \'>\', \'getBranches\', \'(\', \'String\', \'serverUrl\', \',\', \'String\', \'account\', \',\', \'char\', \'[\', \']\', \'password\', \')\', \'throws\', \'IOException\', \'{\', \'String\', \'url\', \'=\', \'asLink\', \'(\', \'serverUrl\', \',\', \'RpcRequest.LIST_BRANCHES\', \')\', \';\', \'Map\', \'<\', \'String\', \',\', \'Collection\', \'<\', \'String\', \'>\', \'>\', \'branches\', \'=\', \'JsonUtils\', \'.\', \'retrieveJson\', \'(\', \'url\', \',\', \'BRANCHES_TYPE\', \',\', \'account\', \',\', \'password\', \')\', \';\', \'return\', \'branches\', \';\', \'}\']', 'public static Map < String , Collection < String > > METHOD_1 ( String VAR_1 , String VAR_2 , char [ ] VAR_3 ) throws IOException { String url = METHOD_2 ( VAR_1 , VAR_4 ) ; Map < String , Collection < String > > VAR_5 = TYPE_1 . METHOD_3 ( url , VAR_6 , VAR_2 , VAR_3 ) ; return VAR_5 ; }', '[\'TYPE_1: JsonUtils\', \'METHOD_1: getBranches\', \'METHOD_2: asLink\', \'METHOD_3: retrieveJson\', \'VAR_3: password\', \'VAR_4: RpcRequest.LIST_BRANCHES\', \'VAR_1: serverUrl\', \'VAR_6: BRANCHES_TYPE\', \'VAR_5: branches\', \'VAR_2: account\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/RpcUtils.java', 32, '585:9', '591:9', 66, 6 ), ( 5, 168, 31, 'protected static boolean doAction(RpcRequest request, String name, Object object,\n    			String serverUrl, String account, char[] password) throws IOException {\n    String url = asLink(serverUrl, request, name);\n    String json = JsonUtils.toJsonString(object);\n    int resultCode = JsonUtils.sendJsonString(url, json, account, password);\n    return resultCode == 200;\n    }', '[\'protected\', \'static\', \'boolean\', \'doAction\', \'(\', \'RpcRequest\', \'request\', \',\', \'String\', \'name\', \',\', \'Object\', \'object\', \',\', \'String\', \'serverUrl\', \',\', \'String\', \'account\', \',\', \'char\', \'[\', \']\', \'password\', \')\', \'throws\', \'IOException\', \'{\', \'String\', \'url\', \'=\', \'asLink\', \'(\', \'serverUrl\', \',\', \'request\', \',\', \'name\', \')\', \';\', \'String\', \'json\', \'=\', \'JsonUtils\', \'.\', \'toJsonString\', \'(\', \'object\', \')\', \';\', \'int\', \'resultCode\', \'=\', \'JsonUtils\', \'.\', \'sendJsonString\', \'(\', \'url\', \',\', \'json\', \',\', \'account\', \',\', \'password\', \')\', \';\', \'return\', \'resultCode\', \'==\', \'200\', \';\', \'}\']', 'protected static boolean METHOD_1 ( TYPE_1 request , String name , Object object , String VAR_1 , String VAR_2 , char [ ] VAR_3 ) throws IOException { String url = METHOD_2 ( VAR_1 , request , name ) ; String json = TYPE_2 . METHOD_3 ( object ) ; int VAR_4 = TYPE_2 . METHOD_4 ( url , json , VAR_2 , VAR_3 ) ; return VAR_4 == INT_1 ; }', '[\'TYPE_2: JsonUtils\', \'TYPE_1: RpcRequest\', \'METHOD_4: sendJsonString\', \'METHOD_2: asLink\', \'METHOD_1: doAction\', \'METHOD_3: toJsonString\', \'VAR_3: password\', \'VAR_1: serverUrl\', \'VAR_4: resultCode\', \'VAR_2: account\', \'INT_1: 200\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/RpcUtils.java', 32, '630:9', '636:9', 71, 6 ), ( 5, 169, 2, 'public static byte [] readContent(File file) {\n    byte [] buffer = new byte[(int) file.length()];\n    try {\n    BufferedInputStream is = new BufferedInputStream(new FileInputStream(file));\n    is.read(buffer,  0,  buffer.length);\n    is.close();\n    } catch (Throwable t) {\n    System.err.println("Failed to read byte content of " + file.getAbsolutePath());\n    t.printStackTrace();\n    }\n    return buffer;\n    }', '[\'public\', \'static\', \'byte\', \'[\', \']\', \'readContent\', \'(\', \'File\', \'file\', \')\', \'{\', \'byte\', \'[\', \']\', \'buffer\', \'=\', \'new\', \'byte\', \'[\', \'(\', \'int\', \')\', \'file\', \'.\', \'length\', \'(\', \')\', \']\', \';\', \'try\', \'{\', \'BufferedInputStream\', \'is\', \'=\', \'new\', \'BufferedInputStream\', \'(\', \'new\', \'FileInputStream\', \'(\', \'file\', \')\', \')\', \';\', \'is\', \'.\', \'read\', \'(\', \'buffer\', \',\', \'0\', \',\', \'buffer\', \'.\', \'length\', \')\', \';\', \'is\', \'.\', \'close\', \'(\', \')\', \';\', \'}\', \'catch\', \'(\', \'Throwable\', \'t\', \')\', \'{\', \'System.err\', \'.\', \'println\', \'(\', \'"Failed to read byte content of "\', \'+\', \'file\', \'.\', \'getAbsolutePath\', \'(\', \')\', \')\', \';\', \'t\', \'.\', \'printStackTrace\', \'(\', \')\', \';\', \'}\', \'return\', \'buffer\', \';\', \'}\']', 'public static byte [ ] METHOD_1 ( File file ) { byte [ ] buffer = new byte [ ( int ) file . length ( ) ] ; try { TYPE_1 VAR_1 = new TYPE_1 ( new TYPE_2 ( file ) ) ; VAR_1 . read ( buffer , 0 , buffer . length ) ; VAR_1 . close ( ) ; } catch ( Throwable t ) { VAR_2 . println ( STRING_1 + file . METHOD_2 ( ) ) ; t . METHOD_3 ( ) ; } return buffer ; }', '[\'TYPE_1: BufferedInputStream\', \'TYPE_2: FileInputStream\', \'METHOD_3: printStackTrace\', \'METHOD_2: getAbsolutePath\', \'METHOD_1: readContent\', \'VAR_2: System.err\', \'VAR_1: is\', \'STRING_1: "Failed to read byte content of "\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/FileUtils.java', 10, '109:9', '120:9', 90, 10 ), ( 5, 169, 4, 'public static void writeContent(File file, String content) {\n    try {\n    OutputStreamWriter os = new OutputStreamWriter(new FileOutputStream(file),\n    					Charset.forName("UTF-8"));\n    BufferedWriter writer = new BufferedWriter(os);\n    writer.append(content);\n    writer.close();\n    } catch (Throwable t) {\n    System.err.println("Failed to write content of " + file.getAbsolutePath());\n    t.printStackTrace();\n    }\n    }', '[\'public\', \'static\', \'void\', \'writeContent\', \'(\', \'File\', \'file\', \',\', \'String\', \'content\', \')\', \'{\', \'try\', \'{\', \'OutputStreamWriter\', \'os\', \'=\', \'new\', \'OutputStreamWriter\', \'(\', \'new\', \'FileOutputStream\', \'(\', \'file\', \')\', \',\', \'Charset\', \'.\', \'forName\', \'(\', \'"UTF-8"\', \')\', \')\', \';\', \'BufferedWriter\', \'writer\', \'=\', \'new\', \'BufferedWriter\', \'(\', \'os\', \')\', \';\', \'writer\', \'.\', \'append\', \'(\', \'content\', \')\', \';\', \'writer\', \'.\', \'close\', \'(\', \')\', \';\', \'}\', \'catch\', \'(\', \'Throwable\', \'t\', \')\', \'{\', \'System.err\', \'.\', \'println\', \'(\', \'"Failed to write content of "\', \'+\', \'file\', \'.\', \'getAbsolutePath\', \'(\', \')\', \')\', \';\', \'t\', \'.\', \'printStackTrace\', \'(\', \')\', \';\', \'}\', \'}\']', 'public static void METHOD_1 ( File file , String content ) { try { TYPE_1 VAR_1 = new TYPE_1 ( new TYPE_2 ( file ) , TYPE_3 . METHOD_2 ( STRING_1 ) ) ; TYPE_4 writer = new TYPE_4 ( VAR_1 ) ; writer . append ( content ) ; writer . close ( ) ; } catch ( Throwable t ) { VAR_2 . println ( STRING_2 + file . METHOD_3 ( ) ) ; t . METHOD_4 ( ) ; } }', '[\'TYPE_2: FileOutputStream\', \'TYPE_3: Charset\', \'TYPE_1: OutputStreamWriter\', \'TYPE_4: BufferedWriter\', \'METHOD_2: forName\', \'METHOD_4: printStackTrace\', \'METHOD_3: getAbsolutePath\', \'METHOD_1: writeContent\', \'VAR_1: os\', \'VAR_2: System.err\', \'STRING_1: "UTF-8"\', \'STRING_2: "Failed to write content of "\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/FileUtils.java', 10, '156:9', '167:9', 83, 10 ), ( 5, 169, 5, 'public static long folderSize(File directory) {\n    if (directory == null || !directory.exists()) {\n    return -1;\n    }\n    if (directory.isDirectory()) {\n    long length = 0;\n    for (File file : directory.listFiles()) {\n    length += folderSize(file);\n    }\n    return length;\n    } else if (directory.isFile()) {\n    return directory.length();\n    }\n    return 0;\n    }', '[\'public\', \'static\', \'long\', \'folderSize\', \'(\', \'File\', \'directory\', \')\', \'{\', \'if\', \'(\', \'directory\', \'==\', \'null\', \'||\', \'!\', \'directory\', \'.\', \'exists\', \'(\', \')\', \')\', \'{\', \'return\', \'-\', \'1\', \';\', \'}\', \'if\', \'(\', \'directory\', \'.\', \'isDirectory\', \'(\', \')\', \')\', \'{\', \'long\', \'length\', \'=\', \'0\', \';\', \'for\', \'(\', \'File\', \'file\', \':\', \'directory\', \'.\', \'listFiles\', \'(\', \')\', \')\', \'{\', \'length\', \'+=\', \'folderSize\', \'(\', \'file\', \')\', \';\', \'}\', \'return\', \'length\', \';\', \'}\', \'else\', \'if\', \'(\', \'directory\', \'.\', \'isFile\', \'(\', \')\', \')\', \'{\', \'return\', \'directory\', \'.\', \'length\', \'(\', \')\', \';\', \'}\', \'return\', \'0\', \';\', \'}\']', 'public static long METHOD_1 ( File VAR_1 ) { if ( VAR_1 == null || ! VAR_1 . METHOD_2 ( ) ) { return - 1 ; } if ( VAR_1 . METHOD_3 ( ) ) { long length = 0 ; for ( File file : VAR_1 . METHOD_4 ( ) ) { length += METHOD_1 ( file ) ; } return length ; } else if ( VAR_1 . METHOD_5 ( ) ) { return VAR_1 . length ( ) ; } return 0 ; }', '[\'METHOD_5: isFile\', \'METHOD_2: exists\', \'METHOD_1: folderSize\', \'METHOD_4: listFiles\', \'METHOD_3: isDirectory\', \'VAR_1: directory\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/FileUtils.java', 10, '176:9', '190:9', 82, 11 ), ( 5, 169, 8, 'public static File getExactFile(File path) {\n    try {\n    return path.getCanonicalFile();\n    } catch (IOException e) {\n    return path.getAbsoluteFile();\n    }\n    }', '[\'public\', \'static\', \'File\', \'getExactFile\', \'(\', \'File\', \'path\', \')\', \'{\', \'try\', \'{\', \'return\', \'path\', \'.\', \'getCanonicalFile\', \'(\', \')\', \';\', \'}\', \'catch\', \'(\', \'IOException\', \'e\', \')\', \'{\', \'return\', \'path\', \'.\', \'getAbsoluteFile\', \'(\', \')\', \';\', \'}\', \'}\']', 'public static File METHOD_1 ( File path ) { try { return path . METHOD_2 ( ) ; } catch ( IOException e ) { return path . METHOD_3 ( ) ; } }', '[\'METHOD_2: getCanonicalFile\', \'METHOD_3: getAbsoluteFile\', \'METHOD_1: getExactFile\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/FileUtils.java', 10, '270:9', '276:9', 32, 5 ), ( 5, 170, 4, 'public static String toString(Collection<?> collection) {\n    if (isEmpty(collection)) {\n    return "";\n    }\n    StringBuilder sb = new StringBuilder();\n    for (Object o : collection) {\n    sb.append(o.toString()).append(", ");\n    }\n    // trim trailing comma-space\n    sb.setLength(sb.length() - 2);\n    return sb.toString();\n    }', '[\'public\', \'static\', \'String\', \'toString\', \'(\', \'Collection\', \'<\', \'?\', \'>\', \'collection\', \')\', \'{\', \'if\', \'(\', \'isEmpty\', \'(\', \'collection\', \')\', \')\', \'{\', \'return\', \'""\', \';\', \'}\', \'StringBuilder\', \'sb\', \'=\', \'new\', \'StringBuilder\', \'(\', \')\', \';\', \'for\', \'(\', \'Object\', \'o\', \':\', \'collection\', \')\', \'{\', \'sb\', \'.\', \'append\', \'(\', \'o\', \'.\', \'toString\', \'(\', \')\', \')\', \'.\', \'append\', \'(\', \'"\', \')\', \';\', \'}\', \'sb\', \'.\', \'setLength\', \'(\', \'sb\', \'.\', \'length\', \'(\', \')\', \'-\', \'2\', \')\', \';\', \'return\', \'sb\', \'.\', \'toString\', \'(\', \')\', \';\', \'}\']', 'public static String toString ( Collection < ? > VAR_1 ) { if ( isEmpty ( VAR_1 ) ) { return STRING_1 ; } StringBuilder sb = new StringBuilder ( ) ; for ( Object o : VAR_1 ) { sb . append ( o . toString ( ) ) . append ( STRING_2 ) ; } sb . METHOD_1 ( sb . length ( ) - 2 ) ; return sb . toString ( ) ; }', '[\'METHOD_1: setLength\', \'VAR_1: collection\', \'STRING_1: ""\', \'STRING_2: "\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/ArrayUtils.java', 6, '47:9', '58:9', 75, 8 ), ( 5, 170, 5, 'public static Collection<String> fromString(String value) {\n    if (StringUtils.isEmpty(value)) {\n    value = "";\n    }\n    List<String> list = new ArrayList<String>();\n    String [] values = value.split(",|;");\n    for (String v : values) {\n    String string = v.trim();\n    if (!StringUtils.isEmpty(string)) {\n    list.add(string);\n    }\n    }\n    return list;\n    }', '[\'public\', \'static\', \'Collection\', \'<\', \'String\', \'>\', \'fromString\', \'(\', \'String\', \'value\', \')\', \'{\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'value\', \')\', \')\', \'{\', \'value\', \'=\', \'""\', \';\', \'}\', \'List\', \'<\', \'String\', \'>\', \'list\', \'=\', \'new\', \'ArrayList\', \'<\', \'String\', \'>\', \'(\', \')\', \';\', \'String\', \'[\', \']\', \'values\', \'=\', \'value\', \'.\', \'split\', \'(\', \'"\', \')\', \';\', \'for\', \'(\', \'String\', \'v\', \':\', \'values\', \')\', \'{\', \'String\', \'string\', \'=\', \'v\', \'.\', \'trim\', \'(\', \')\', \';\', \'if\', \'(\', \'!\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'string\', \')\', \')\', \'{\', \'list\', \'.\', \'add\', \'(\', \'string\', \')\', \';\', \'}\', \'}\', \'return\', \'list\', \';\', \'}\']', 'public static Collection < String > METHOD_1 ( String value ) { if ( StringUtils . isEmpty ( value ) ) { value = STRING_1 ; } List < String > list = new ArrayList < String > ( ) ; String [ ] values = value . METHOD_2 ( STRING_2 ) ; for ( String v : values ) { String VAR_1 = v . METHOD_3 ( ) ; if ( ! StringUtils . isEmpty ( VAR_1 ) ) { list . add ( VAR_1 ) ; } } return list ; }', '[\'METHOD_2: split\', \'METHOD_3: trim\', \'METHOD_1: fromString\', \'VAR_1: string\', \'STRING_1: ""\', \'STRING_2: "\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/ArrayUtils.java', 6, '60:9', '73:9', 91, 10 ), ( 5, 172, 3, 'public static boolean poke(String remoteUrl) throws Exception {\n    String url = asLink(remoteUrl, null, FederationRequest.POKE);\n    String json = JsonUtils.toJsonString("POKE");\n    int status = JsonUtils.sendJsonString(url, json);\n    return status == HttpServletResponse.SC_OK;\n    }', '[\'public\', \'static\', \'boolean\', \'poke\', \'(\', \'String\', \'remoteUrl\', \')\', \'throws\', \'Exception\', \'{\', \'String\', \'url\', \'=\', \'asLink\', \'(\', \'remoteUrl\', \',\', \'null\', \',\', \'FederationRequest.POKE\', \')\', \';\', \'String\', \'json\', \'=\', \'JsonUtils\', \'.\', \'toJsonString\', \'(\', \'"POKE"\', \')\', \';\', \'int\', \'status\', \'=\', \'JsonUtils\', \'.\', \'sendJsonString\', \'(\', \'url\', \',\', \'json\', \')\', \';\', \'return\', \'status\', \'==\', \'HttpServletResponse.SC_OK\', \';\', \'}\']', 'public static boolean METHOD_1 ( String VAR_1 ) throws Exception { String url = METHOD_2 ( VAR_1 , null , VAR_2 ) ; String json = TYPE_1 . METHOD_3 ( STRING_1 ) ; int status = TYPE_1 . METHOD_4 ( url , json ) ; return status == VAR_3 ; }', '[\'TYPE_1: JsonUtils\', \'METHOD_4: sendJsonString\', \'METHOD_2: asLink\', \'METHOD_1: poke\', \'METHOD_3: toJsonString\', \'VAR_3: HttpServletResponse.SC_OK\', \'VAR_2: FederationRequest.POKE\', \'VAR_1: remoteUrl\', \'STRING_1: "POKE"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/FederationUtils.java', 11, '204:9', '209:9', 55, 5 ), ( 5, 172, 6, 'public static List<UserModel> getUsers(FederationModel registration) throws Exception {\n    String url = asLink(registration.url, registration.token, FederationRequest.PULL_USERS);\n    Collection<UserModel> models = JsonUtils.retrieveJson(url, USERS_TYPE);\n    List<UserModel> list = new ArrayList<UserModel>(models);\n    return list;\n    }', '[\'public\', \'static\', \'List\', \'<\', \'UserModel\', \'>\', \'getUsers\', \'(\', \'FederationModel\', \'registration\', \')\', \'throws\', \'Exception\', \'{\', \'String\', \'url\', \'=\', \'asLink\', \'(\', \'registration\', \'.\', \'url\', \',\', \'registration\', \'.\', \'token\', \',\', \'FederationRequest.PULL_USERS\', \')\', \';\', \'Collection\', \'<\', \'UserModel\', \'>\', \'models\', \'=\', \'JsonUtils\', \'.\', \'retrieveJson\', \'(\', \'url\', \',\', \'USERS_TYPE\', \')\', \';\', \'List\', \'<\', \'UserModel\', \'>\', \'list\', \'=\', \'new\', \'ArrayList\', \'<\', \'UserModel\', \'>\', \'(\', \'models\', \')\', \';\', \'return\', \'list\', \';\', \'}\']', 'public static List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 ) throws Exception { String url = METHOD_2 ( VAR_1 . url , VAR_1 . token , VAR_2 ) ; Collection < TYPE_1 > VAR_3 = TYPE_3 . METHOD_3 ( url , VAR_4 ) ; List < TYPE_1 > list = new ArrayList < TYPE_1 > ( VAR_3 ) ; return list ; }', '[\'TYPE_1: UserModel\', \'TYPE_2: FederationModel\', \'TYPE_3: JsonUtils\', \'METHOD_2: asLink\', \'METHOD_3: retrieveJson\', \'METHOD_1: getUsers\', \'VAR_3: models\', \'VAR_4: USERS_TYPE\', \'VAR_2: FederationRequest.PULL_USERS\', \'VAR_1: registration\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/FederationUtils.java', 11, '280:9', '285:9', 66, 5 ), ( 5, 172, 7, 'public static List<TeamModel> getTeams(FederationModel registration) throws Exception {\n    String url = asLink(registration.url, registration.token, FederationRequest.PULL_TEAMS);\n    Collection<TeamModel> models = JsonUtils.retrieveJson(url, TEAMS_TYPE);\n    List<TeamModel> list = new ArrayList<TeamModel>(models);\n    return list;\n    }', '[\'public\', \'static\', \'List\', \'<\', \'TeamModel\', \'>\', \'getTeams\', \'(\', \'FederationModel\', \'registration\', \')\', \'throws\', \'Exception\', \'{\', \'String\', \'url\', \'=\', \'asLink\', \'(\', \'registration\', \'.\', \'url\', \',\', \'registration\', \'.\', \'token\', \',\', \'FederationRequest.PULL_TEAMS\', \')\', \';\', \'Collection\', \'<\', \'TeamModel\', \'>\', \'models\', \'=\', \'JsonUtils\', \'.\', \'retrieveJson\', \'(\', \'url\', \',\', \'TEAMS_TYPE\', \')\', \';\', \'List\', \'<\', \'TeamModel\', \'>\', \'list\', \'=\', \'new\', \'ArrayList\', \'<\', \'TeamModel\', \'>\', \'(\', \'models\', \')\', \';\', \'return\', \'list\', \';\', \'}\']', 'public static List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 ) throws Exception { String url = METHOD_2 ( VAR_1 . url , VAR_1 . token , VAR_2 ) ; Collection < TYPE_1 > VAR_3 = TYPE_3 . METHOD_3 ( url , VAR_4 ) ; List < TYPE_1 > list = new ArrayList < TYPE_1 > ( VAR_3 ) ; return list ; }', '[\'TYPE_2: FederationModel\', \'TYPE_1: TeamModel\', \'TYPE_3: JsonUtils\', \'METHOD_2: asLink\', \'METHOD_3: retrieveJson\', \'METHOD_1: getTeams\', \'VAR_3: models\', \'VAR_4: TEAMS_TYPE\', \'VAR_1: registration\', \'VAR_2: FederationRequest.PULL_TEAMS\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/FederationUtils.java', 11, '295:9', '300:9', 66, 5 ), ( 5, 172, 10, 'public static boolean acknowledgeStatus(String identification, FederationModel registration)\n    throws Exception {\n    String url = asLink(registration.url, null, registration.token, FederationRequest.STATUS,\n    				identification);\n    String json = JsonUtils.toJsonString(registration);\n    int status = JsonUtils.sendJsonString(url, json);\n    return status == HttpServletResponse.SC_OK;\n    }', '[\'public\', \'static\', \'boolean\', \'acknowledgeStatus\', \'(\', \'String\', \'identification\', \',\', \'FederationModel\', \'registration\', \')\', \'throws\', \'Exception\', \'{\', \'String\', \'url\', \'=\', \'asLink\', \'(\', \'registration\', \'.\', \'url\', \',\', \'null\', \',\', \'registration\', \'.\', \'token\', \',\', \'FederationRequest.STATUS\', \',\', \'identification\', \')\', \';\', \'String\', \'json\', \'=\', \'JsonUtils\', \'.\', \'toJsonString\', \'(\', \'registration\', \')\', \';\', \'int\', \'status\', \'=\', \'JsonUtils\', \'.\', \'sendJsonString\', \'(\', \'url\', \',\', \'json\', \')\', \';\', \'return\', \'status\', \'==\', \'HttpServletResponse.SC_OK\', \';\', \'}\']', 'public static boolean METHOD_1 ( String VAR_1 , TYPE_1 VAR_2 ) throws Exception { String url = METHOD_2 ( VAR_2 . url , null , VAR_2 . token , VAR_3 , VAR_1 ) ; String json = TYPE_2 . METHOD_3 ( VAR_2 ) ; int status = TYPE_2 . METHOD_4 ( url , json ) ; return status == VAR_4 ; }', '[\'TYPE_1: FederationModel\', \'TYPE_2: JsonUtils\', \'METHOD_4: sendJsonString\', \'METHOD_2: asLink\', \'METHOD_1: acknowledgeStatus\', \'METHOD_3: toJsonString\', \'VAR_4: HttpServletResponse.SC_OK\', \'VAR_1: identification\', \'VAR_3: FederationRequest.STATUS\', \'VAR_2: registration\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/FederationUtils.java', 11, '341:9', '348:9', 66, 7 ), ( 5, 173, 1, '@Override\n    protected void writeLine(final char prefix, final RawText text, final int cur)\n    throws IOException {\n    switch (prefix) {\n    case \'+\':\n    currentTouple.insertions++;\n    break;\n    case \'-\':\n    currentTouple.deletions++;\n    break;\n    }\n    super.writeLine(prefix, text, cur);\n    }', '[\'protected\', \'void\', \'writeLine\', \'(\', \'final\', \'char\', \'prefix\', \',\', \'final\', \'RawText\', \'text\', \',\', \'final\', \'int\', \'cur\', \')\', \'throws\', \'IOException\', \'{\', \'switch\', \'(\', \'prefix\', \')\', \'{\', \'case\', "\'+\'", \':\', \'currentTouple.insertions\', \'++\', \';\', \'break\', \';\', \'case\', "\'-\'", \':\', \'currentTouple.deletions\', \'++\', \';\', \'break\', \';\', \'}\', \'super\', \'.\', \'writeLine\', \'(\', \'prefix\', \',\', \'text\', \',\', \'cur\', \')\', \';\', \'}\']', 'protected void METHOD_1 ( final char VAR_1 , final TYPE_1 text , final int VAR_2 ) throws IOException { switch ( VAR_1 ) { case CHAR_1 : VAR_3 ++ ; break ; case CHAR_2 : VAR_4 ++ ; break ; } super . METHOD_1 ( VAR_1 , text , VAR_2 ) ; }', '[\'TYPE_1: RawText\', \'METHOD_1: writeLine\', \'VAR_3: currentTouple.insertions\', \'VAR_2: cur\', \'VAR_4: currentTouple.deletions\', \'VAR_1: prefix\', "CHAR_2: \'-\'", "CHAR_1: \'+\'"]', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/PatchFormatter.java', 6, '58:9', '70:9', 57, 11 ), ( 5, 173, 4, 'String relativeScale(int unit) {\n    int plus = insertions / unit;\n    int minus = deletions / unit;\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < plus; i++) {\n    sb.append(\'+\');\n    }\n    for (int i = 0; i < minus; i++) {\n    sb.append(\'-\');\n    }\n    return sb.toString();\n    }', '[\'String\', \'relativeScale\', \'(\', \'int\', \'unit\', \')\', \'{\', \'int\', \'plus\', \'=\', \'insertions\', \'/\', \'unit\', \';\', \'int\', \'minus\', \'=\', \'deletions\', \'/\', \'unit\', \';\', \'StringBuilder\', \'sb\', \'=\', \'new\', \'StringBuilder\', \'(\', \')\', \';\', \'for\', \'(\', \'int\', \'i\', \'=\', \'0\', \';\', \'i\', \'<\', \'plus\', \';\', \'i\', \'++\', \')\', \'{\', \'sb\', \'.\', \'append\', \'(\', "\'+\'", \')\', \';\', \'}\', \'for\', \'(\', \'int\', \'i\', \'=\', \'0\', \';\', \'i\', \'<\', \'minus\', \';\', \'i\', \'++\', \')\', \'{\', \'sb\', \'.\', \'append\', \'(\', "\'-\'", \')\', \';\', \'}\', \'return\', \'sb\', \'.\', \'toString\', \'(\', \')\', \';\', \'}\']', 'String METHOD_1 ( int VAR_1 ) { int VAR_2 = VAR_3 / VAR_1 ; int VAR_4 = VAR_5 / VAR_1 ; StringBuilder sb = new StringBuilder ( ) ; for ( int i = 0 ; i < VAR_2 ; i ++ ) { sb . append ( CHAR_1 ) ; } for ( int i = 0 ; i < VAR_4 ; i ++ ) { sb . append ( CHAR_2 ) ; } return sb . toString ( ) ; }', '[\'METHOD_1: relativeScale\', \'VAR_4: minus\', \'VAR_1: unit\', \'VAR_3: insertions\', \'VAR_5: deletions\', \'VAR_2: plus\', "CHAR_2: \'-\'", "CHAR_1: \'+\'"]', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/PatchFormatter.java', 6, '130:17', '141:17', 81, 9 ), ( 5, 175, 1, 'public static String getDisplayName(PersonIdent person) {\n    if (StringUtils.isEmpty(person.getEmailAddress())) {\n    return person.getName();\n    }\n    final StringBuilder r = new StringBuilder();\n    r.append(person.getName());\n    r.append(" <");\n    r.append(person.getEmailAddress());\n    r.append(\'>\');\n    return r.toString().trim();\n    }', '[\'public\', \'static\', \'String\', \'getDisplayName\', \'(\', \'PersonIdent\', \'person\', \')\', \'{\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'person\', \'.\', \'getEmailAddress\', \'(\', \')\', \')\', \')\', \'{\', \'return\', \'person\', \'.\', \'getName\', \'(\', \')\', \';\', \'}\', \'final\', \'StringBuilder\', \'r\', \'=\', \'new\', \'StringBuilder\', \'(\', \')\', \';\', \'r\', \'.\', \'append\', \'(\', \'person\', \'.\', \'getName\', \'(\', \')\', \')\', \';\', \'r\', \'.\', \'append\', \'(\', \'" <"\', \')\', \';\', \'r\', \'.\', \'append\', \'(\', \'person\', \'.\', \'getEmailAddress\', \'(\', \')\', \')\', \';\', \'r\', \'.\', \'append\', \'(\', "\'>\'", \')\', \';\', \'return\', \'r\', \'.\', \'toString\', \'(\', \')\', \'.\', \'trim\', \'(\', \')\', \';\', \'}\']', 'public static String METHOD_1 ( TYPE_1 VAR_1 ) { if ( StringUtils . isEmpty ( VAR_1 . METHOD_2 ( ) ) ) { return VAR_1 . getName ( ) ; } final StringBuilder r = new StringBuilder ( ) ; r . append ( VAR_1 . getName ( ) ) ; r . append ( STRING_1 ) ; r . append ( VAR_1 . METHOD_2 ( ) ) ; r . append ( CHAR_1 ) ; return r . toString ( ) . METHOD_3 ( ) ; }', '[\'TYPE_1: PersonIdent\', \'METHOD_2: getEmailAddress\', \'METHOD_3: trim\', \'METHOD_1: getDisplayName\', \'VAR_1: person\', "CHAR_1: \'>\'", \'STRING_1: " <"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/JGitUtils.java', 59, '132:9', '142:9', 81, 9 ), ( 5, 175, 5, 'public static Repository createRepository(File repositoriesFolder, String name) {\n    try {\n    Git git = Git.init().setDirectory(new File(repositoriesFolder, name)).setBare(true).call();\n    return git.getRepository();\n    } catch (GitAPIException e) {\n    throw new RuntimeException(e);\n    }\n    }', '[\'public\', \'static\', \'Repository\', \'createRepository\', \'(\', \'File\', \'repositoriesFolder\', \',\', \'String\', \'name\', \')\', \'{\', \'try\', \'{\', \'Git\', \'git\', \'=\', \'Git\', \'.\', \'init\', \'(\', \')\', \'.\', \'setDirectory\', \'(\', \'new\', \'File\', \'(\', \'repositoriesFolder\', \',\', \'name\', \')\', \')\', \'.\', \'setBare\', \'(\', \'true\', \')\', \'.\', \'call\', \'(\', \')\', \';\', \'return\', \'git\', \'.\', \'getRepository\', \'(\', \')\', \';\', \'}\', \'catch\', \'(\', \'GitAPIException\', \'e\', \')\', \'{\', \'throw\', \'new\', \'RuntimeException\', \'(\', \'e\', \')\', \';\', \'}\', \'}\']', 'public static TYPE_1 METHOD_1 ( File VAR_1 , String name ) { try { TYPE_2 VAR_2 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( new File ( VAR_1 , name ) ) . METHOD_4 ( true ) . call ( ) ; return VAR_2 . METHOD_5 ( ) ; } catch ( TYPE_3 e ) { throw new RuntimeException ( e ) ; } }', '[\'TYPE_3: GitAPIException\', \'TYPE_1: Repository\', \'TYPE_2: Git\', \'METHOD_1: createRepository\', \'METHOD_2: init\', \'METHOD_5: getRepository\', \'METHOD_3: setDirectory\', \'METHOD_4: setBare\', \'VAR_2: git\', \'VAR_1: repositoriesFolder\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/JGitUtils.java', 59, '261:9', '268:9', 63, 6 ), ( 5, 175, 9, 'public static Date getFirstChange(Repository repository, String branch) {\n    RevCommit commit = getFirstCommit(repository, branch);\n    if (commit == null) {\n    if (repository == null || !repository.getDirectory().exists()) {\n    return new Date(0);\n    }\n    // fresh repository\n    return new Date(repository.getDirectory().lastModified());\n    }\n    return getCommitDate(commit);\n    }', '[\'public\', \'static\', \'Date\', \'getFirstChange\', \'(\', \'Repository\', \'repository\', \',\', \'String\', \'branch\', \')\', \'{\', \'RevCommit\', \'commit\', \'=\', \'getFirstCommit\', \'(\', \'repository\', \',\', \'branch\', \')\', \';\', \'if\', \'(\', \'commit\', \'==\', \'null\', \')\', \'{\', \'if\', \'(\', \'repository\', \'==\', \'null\', \'||\', \'!\', \'repository\', \'.\', \'getDirectory\', \'(\', \')\', \'.\', \'exists\', \'(\', \')\', \')\', \'{\', \'return\', \'new\', \'Date\', \'(\', \'0\', \')\', \';\', \'}\', \'return\', \'new\', \'Date\', \'(\', \'repository\', \'.\', \'getDirectory\', \'(\', \')\', \'.\', \'lastModified\', \'(\', \')\', \')\', \';\', \'}\', \'return\', \'getCommitDate\', \'(\', \'commit\', \')\', \';\', \'}\']', 'public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , String VAR_2 ) { TYPE_3 VAR_3 = METHOD_2 ( VAR_1 , VAR_2 ) ; if ( VAR_3 == null ) { if ( VAR_1 == null || ! VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ) { return new TYPE_1 ( 0 ) ; } return new TYPE_1 ( VAR_1 . METHOD_3 ( ) . METHOD_5 ( ) ) ; } return METHOD_6 ( VAR_3 ) ; }', '[\'TYPE_2: Repository\', \'TYPE_1: Date\', \'TYPE_3: RevCommit\', \'METHOD_6: getCommitDate\', \'METHOD_4: exists\', \'METHOD_3: getDirectory\', \'METHOD_5: lastModified\', \'METHOD_2: getFirstCommit\', \'METHOD_1: getFirstChange\', \'VAR_3: commit\', \'VAR_1: repository\', \'VAR_2: branch\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/JGitUtils.java', 59, '415:9', '425:9', 75, 7 ), ( 5, 175, 10, 'public static boolean hasCommits(Repository repository) {\n    if (repository != null && repository.getDirectory().exists()) {\n    return (new File(repository.getDirectory(), "objects").list().length > 2)\n    || (new File(repository.getDirectory(), "objects/pack").list().length > 0);\n    }\n    return false;\n    }', '[\'public\', \'static\', \'boolean\', \'hasCommits\', \'(\', \'Repository\', \'repository\', \')\', \'{\', \'if\', \'(\', \'repository\', \'!=\', \'null\', \'&&\', \'repository\', \'.\', \'getDirectory\', \'(\', \')\', \'.\', \'exists\', \'(\', \')\', \')\', \'{\', \'return\', \'(\', \'new\', \'File\', \'(\', \'repository\', \'.\', \'getDirectory\', \'(\', \')\', \',\', \'"objects"\', \')\', \'.\', \'list\', \'(\', \')\', \'.\', \'length\', \'>\', \'2\', \')\', \'||\', \'(\', \'new\', \'File\', \'(\', \'repository\', \'.\', \'getDirectory\', \'(\', \')\', \',\', \'"objects/pack"\', \')\', \'.\', \'list\', \'(\', \')\', \'.\', \'length\', \'>\', \'0\', \')\', \';\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public static boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null && VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) { return ( new File ( VAR_1 . METHOD_2 ( ) , STRING_1 ) . list ( ) . length > 2 ) || ( new File ( VAR_1 . METHOD_2 ( ) , STRING_2 ) . list ( ) . length > 0 ) ; } return false ; }', '[\'TYPE_1: Repository\', \'METHOD_3: exists\', \'METHOD_2: getDirectory\', \'METHOD_1: hasCommits\', \'VAR_1: repository\', \'STRING_2: "objects/pack"\', \'STRING_1: "objects"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/JGitUtils.java', 59, '434:9', '440:9', 70, 5 ), ( 5, 175, 16, 'public static String getStringContent(Repository repository, RevTree tree, String blobPath, String... charsets) {\n    byte[] content = getByteContent(repository, tree, blobPath, true);\n    if (content == null) {\n    return null;\n    }\n    return StringUtils.decodeString(content, charsets);\n    }', '[\'public\', \'static\', \'String\', \'getStringContent\', \'(\', \'Repository\', \'repository\', \',\', \'RevTree\', \'tree\', \',\', \'String\', \'blobPath\', \',\', \'String\', \'...\', \'charsets\', \')\', \'{\', \'byte\', \'[\', \']\', \'content\', \'=\', \'getByteContent\', \'(\', \'repository\', \',\', \'tree\', \',\', \'blobPath\', \',\', \'true\', \')\', \';\', \'if\', \'(\', \'content\', \'==\', \'null\', \')\', \'{\', \'return\', \'null\', \';\', \'}\', \'return\', \'StringUtils\', \'.\', \'decodeString\', \'(\', \'content\', \',\', \'charsets\', \')\', \';\', \'}\']', 'public static String METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , String VAR_3 , String ... VAR_4 ) { byte [ ] content = METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , true ) ; if ( content == null ) { return null ; } return StringUtils . METHOD_3 ( content , VAR_4 ) ; }', '[\'TYPE_1: Repository\', \'TYPE_2: RevTree\', \'METHOD_1: getStringContent\', \'METHOD_3: decodeString\', \'METHOD_2: getByteContent\', \'VAR_2: tree\', \'VAR_4: charsets\', \'VAR_3: blobPath\', \'VAR_1: repository\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/JGitUtils.java', 59, '598:9', '604:9', 56, 5 ), ( 5, 175, 18, 'public static String getStringContent(Repository repository, String objectId, String... charsets) {\n    byte[] content = getByteContent(repository, objectId);\n    if (content == null) {\n    return null;\n    }\n    return StringUtils.decodeString(content, charsets);\n    }', '[\'public\', \'static\', \'String\', \'getStringContent\', \'(\', \'Repository\', \'repository\', \',\', \'String\', \'objectId\', \',\', \'String\', \'...\', \'charsets\', \')\', \'{\', \'byte\', \'[\', \']\', \'content\', \'=\', \'getByteContent\', \'(\', \'repository\', \',\', \'objectId\', \')\', \';\', \'if\', \'(\', \'content\', \'==\', \'null\', \')\', \'{\', \'return\', \'null\', \';\', \'}\', \'return\', \'StringUtils\', \'.\', \'decodeString\', \'(\', \'content\', \',\', \'charsets\', \')\', \';\', \'}\']', 'public static String METHOD_1 ( TYPE_1 VAR_1 , String VAR_2 , String ... VAR_3 ) { byte [ ] content = METHOD_2 ( VAR_1 , VAR_2 ) ; if ( content == null ) { return null ; } return StringUtils . METHOD_3 ( content , VAR_3 ) ; }', '[\'TYPE_1: Repository\', \'METHOD_1: getStringContent\', \'METHOD_3: decodeString\', \'METHOD_2: getByteContent\', \'VAR_3: charsets\', \'VAR_1: repository\', \'VAR_2: objectId\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/JGitUtils.java', 59, '645:9', '651:9', 49, 5 ), ( 5, 175, 25, 'public static String getPermissionsFromMode(int mode) {\n    if (FileMode.TREE.equals(mode)) {\n    return "drwxr-xr-x";\n    } else if (FileMode.REGULAR_FILE.equals(mode)) {\n    return "-rw-r--r--";\n    } else if (FileMode.EXECUTABLE_FILE.equals(mode)) {\n    return "-rwxr-xr-x";\n    } else if (FileMode.SYMLINK.equals(mode)) {\n    return "symlink";\n    } else if (FileMode.GITLINK.equals(mode)) {\n    return "submodule";\n    }\n    return "missing";\n    }', '[\'public\', \'static\', \'String\', \'getPermissionsFromMode\', \'(\', \'int\', \'mode\', \')\', \'{\', \'if\', \'(\', \'FileMode.TREE\', \'.\', \'equals\', \'(\', \'mode\', \')\', \')\', \'{\', \'return\', \'"drwxr-xr-x"\', \';\', \'}\', \'else\', \'if\', \'(\', \'FileMode.REGULAR_FILE\', \'.\', \'equals\', \'(\', \'mode\', \')\', \')\', \'{\', \'return\', \'"-rw-r--r--"\', \';\', \'}\', \'else\', \'if\', \'(\', \'FileMode.EXECUTABLE_FILE\', \'.\', \'equals\', \'(\', \'mode\', \')\', \')\', \'{\', \'return\', \'"-rwxr-xr-x"\', \';\', \'}\', \'else\', \'if\', \'(\', \'FileMode.SYMLINK\', \'.\', \'equals\', \'(\', \'mode\', \')\', \')\', \'{\', \'return\', \'"symlink"\', \';\', \'}\', \'else\', \'if\', \'(\', \'FileMode.GITLINK\', \'.\', \'equals\', \'(\', \'mode\', \')\', \')\', \'{\', \'return\', \'"submodule"\', \';\', \'}\', \'return\', \'"missing"\', \';\', \'}\']', 'public static String METHOD_1 ( int VAR_1 ) { if ( TYPE_1 . equals ( VAR_1 ) ) { return STRING_1 ; } else if ( TYPE_2 . equals ( VAR_1 ) ) { return STRING_2 ; } else if ( TYPE_3 . equals ( VAR_1 ) ) { return STRING_3 ; } else if ( TYPE_4 . equals ( VAR_1 ) ) { return STRING_4 ; } else if ( TYPE_5 . equals ( VAR_1 ) ) { return STRING_5 ; } return STRING_6 ; }', '[\'TYPE_3: FileMode.EXECUTABLE_FILE\', \'TYPE_4: FileMode.SYMLINK\', \'TYPE_1: FileMode.TREE\', \'TYPE_2: FileMode.REGULAR_FILE\', \'TYPE_5: FileMode.GITLINK\', \'METHOD_1: getPermissionsFromMode\', \'VAR_1: mode\', \'STRING_4: "symlink"\', \'STRING_2: "-rw-r--r--"\', \'STRING_3: "-rwxr-xr-x"\', \'STRING_6: "missing"\', \'STRING_5: "submodule"\', \'STRING_1: "drwxr-xr-x"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/JGitUtils.java', 59, '916:9', '929:9', 93, 12 ), ( 5, 175, 39, 'public static List<String> getAvailableHeadTargets(Repository repository) {\n    List<String> targets = new ArrayList<String>();\n    for (RefModel branchModel : JGitUtils.getLocalBranches(repository, true, -1)) {\n    targets.add(branchModel.getName());\n    }\n    for (RefModel tagModel : JGitUtils.getTags(repository, true, -1)) {\n    targets.add(tagModel.getName());\n    }\n    return targets;\n    }', '[\'public\', \'static\', \'List\', \'<\', \'String\', \'>\', \'getAvailableHeadTargets\', \'(\', \'Repository\', \'repository\', \')\', \'{\', \'List\', \'<\', \'String\', \'>\', \'targets\', \'=\', \'new\', \'ArrayList\', \'<\', \'String\', \'>\', \'(\', \')\', \';\', \'for\', \'(\', \'RefModel\', \'branchModel\', \':\', \'JGitUtils\', \'.\', \'getLocalBranches\', \'(\', \'repository\', \',\', \'true\', \',\', \'-\', \'1\', \')\', \')\', \'{\', \'targets\', \'.\', \'add\', \'(\', \'branchModel\', \'.\', \'getName\', \'(\', \')\', \')\', \';\', \'}\', \'for\', \'(\', \'RefModel\', \'tagModel\', \':\', \'JGitUtils\', \'.\', \'getTags\', \'(\', \'repository\', \',\', \'true\', \',\', \'-\', \'1\', \')\', \')\', \'{\', \'targets\', \'.\', \'add\', \'(\', \'tagModel\', \'.\', \'getName\', \'(\', \')\', \')\', \';\', \'}\', \'return\', \'targets\', \';\', \'}\']', 'public static List < String > METHOD_1 ( TYPE_1 VAR_1 ) { List < String > VAR_2 = new ArrayList < String > ( ) ; for ( TYPE_2 VAR_3 : TYPE_3 . METHOD_2 ( VAR_1 , true , - 1 ) ) { VAR_2 . add ( VAR_3 . getName ( ) ) ; } for ( TYPE_2 VAR_4 : TYPE_3 . METHOD_3 ( VAR_1 , true , - 1 ) ) { VAR_2 . add ( VAR_4 . getName ( ) ) ; } return VAR_2 ; }', '[\'TYPE_1: Repository\', \'TYPE_2: RefModel\', \'TYPE_3: JGitUtils\', \'METHOD_2: getLocalBranches\', \'METHOD_3: getTags\', \'METHOD_1: getAvailableHeadTargets\', \'VAR_3: branchModel\', \'VAR_4: tagModel\', \'VAR_1: repository\', \'VAR_2: targets\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/JGitUtils.java', 59, '1407:9', '1417:9', 87, 7 ), ( 5, 175, 52, 'public static SubmoduleModel getSubmoduleModel(Repository repository, String commitId, String path) {\n    for (SubmoduleModel model : getSubmodules(repository, commitId)) {\n    if (model.path.equals(path)) {\n    return model;\n    }\n    }\n    return null;\n    }', '[\'public\', \'static\', \'SubmoduleModel\', \'getSubmoduleModel\', \'(\', \'Repository\', \'repository\', \',\', \'String\', \'commitId\', \',\', \'String\', \'path\', \')\', \'{\', \'for\', \'(\', \'SubmoduleModel\', \'model\', \':\', \'getSubmodules\', \'(\', \'repository\', \',\', \'commitId\', \')\', \')\', \'{\', \'if\', \'(\', \'model.path\', \'.\', \'equals\', \'(\', \'path\', \')\', \')\', \'{\', \'return\', \'model\', \';\', \'}\', \'}\', \'return\', \'null\', \';\', \'}\']', 'public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , String VAR_2 , String path ) { for ( TYPE_1 model : METHOD_2 ( VAR_1 , VAR_2 ) ) { if ( VAR_3 . equals ( path ) ) { return model ; } } return null ; }', '[\'TYPE_2: Repository\', \'TYPE_1: SubmoduleModel\', \'METHOD_1: getSubmoduleModel\', \'METHOD_2: getSubmodules\', \'VAR_2: commitId\', \'VAR_1: repository\', \'VAR_3: model.path\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/JGitUtils.java', 59, '1671:9', '1678:9', 49, 5 ), ( 5, 175, 58, 'public static String getSparkleshareId(Repository repository) {\n    byte[] content = getByteContent(repository, null, ".sparkleshare", false);\n    if (content == null) {\n    return null;\n    }\n    return StringUtils.decodeString(content);\n    }', '[\'public\', \'static\', \'String\', \'getSparkleshareId\', \'(\', \'Repository\', \'repository\', \')\', \'{\', \'byte\', \'[\', \']\', \'content\', \'=\', \'getByteContent\', \'(\', \'repository\', \',\', \'null\', \',\', \'".sparkleshare"\', \',\', \'false\', \')\', \';\', \'if\', \'(\', \'content\', \'==\', \'null\', \')\', \'{\', \'return\', \'null\', \';\', \'}\', \'return\', \'StringUtils\', \'.\', \'decodeString\', \'(\', \'content\', \')\', \';\', \'}\']', 'public static String METHOD_1 ( TYPE_1 VAR_1 ) { byte [ ] content = METHOD_2 ( VAR_1 , null , STRING_1 , false ) ; if ( content == null ) { return null ; } return StringUtils . METHOD_3 ( content ) ; }', '[\'TYPE_1: Repository\', \'METHOD_1: getSparkleshareId\', \'METHOD_3: decodeString\', \'METHOD_2: getByteContent\', \'VAR_1: repository\', \'STRING_1: ".sparkleshare"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/JGitUtils.java', 59, '1892:9', '1898:9', 44, 5 ), ( 5, 177, 1, 'public static boolean isYesterday(Date date) {\n    Calendar cal = Calendar.getInstance();\n    cal.setTime(new Date());\n    cal.add(Calendar.DATE, -1);\n    SimpleDateFormat df = new SimpleDateFormat("yyyyMMdd");\n    return df.format(cal.getTime()).equals(df.format(date));\n    }', '[\'public\', \'static\', \'boolean\', \'isYesterday\', \'(\', \'Date\', \'date\', \')\', \'{\', \'Calendar\', \'cal\', \'=\', \'Calendar\', \'.\', \'getInstance\', \'(\', \')\', \';\', \'cal\', \'.\', \'setTime\', \'(\', \'new\', \'Date\', \'(\', \')\', \')\', \';\', \'cal\', \'.\', \'add\', \'(\', \'Calendar.DATE\', \',\', \'-\', \'1\', \')\', \';\', \'SimpleDateFormat\', \'df\', \'=\', \'new\', \'SimpleDateFormat\', \'(\', \'"yyyyMMdd"\', \')\', \';\', \'return\', \'df\', \'.\', \'format\', \'(\', \'cal\', \'.\', \'getTime\', \'(\', \')\', \')\', \'.\', \'equals\', \'(\', \'df\', \'.\', \'format\', \'(\', \'date\', \')\', \')\', \';\', \'}\']', 'public static boolean METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = TYPE_2 . getInstance ( ) ; VAR_2 . METHOD_2 ( new TYPE_1 ( ) ) ; VAR_2 . add ( VAR_3 , - 1 ) ; TYPE_3 VAR_4 = new TYPE_3 ( STRING_1 ) ; return VAR_4 . format ( VAR_2 . METHOD_3 ( ) ) . equals ( VAR_4 . format ( VAR_1 ) ) ; }', '[\'TYPE_2: Calendar\', \'TYPE_3: SimpleDateFormat\', \'TYPE_1: Date\', \'METHOD_3: getTime\', \'METHOD_1: isYesterday\', \'METHOD_2: setTime\', \'VAR_1: date\', \'VAR_4: df\', \'VAR_3: Calendar.DATE\', \'VAR_2: cal\', \'STRING_1: "yyyyMMdd"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/TimeUtils.java', 18, '67:9', '73:9', 69, 6 ), ( 5, 177, 3, 'public static int minutesAgo(Date date, long endTime, boolean roundup) {\n    long diff = endTime - date.getTime();\n    int mins = (int) (diff / MIN);\n    if (roundup && (diff % MIN) >= 30) {\n    mins++;\n    }\n    return mins;\n    }', '[\'public\', \'static\', \'int\', \'minutesAgo\', \'(\', \'Date\', \'date\', \',\', \'long\', \'endTime\', \',\', \'boolean\', \'roundup\', \')\', \'{\', \'long\', \'diff\', \'=\', \'endTime\', \'-\', \'date\', \'.\', \'getTime\', \'(\', \')\', \';\', \'int\', \'mins\', \'=\', \'(\', \'int\', \')\', \'(\', \'diff\', \'/\', \'MIN\', \')\', \';\', \'if\', \'(\', \'roundup\', \'&&\', \'(\', \'diff\', \'%\', \'MIN\', \')\', \'>=\', \'30\', \')\', \'{\', \'mins\', \'++\', \';\', \'}\', \'return\', \'mins\', \';\', \'}\']', 'public static int METHOD_1 ( TYPE_1 VAR_1 , long VAR_2 , boolean VAR_3 ) { long VAR_4 = VAR_2 - VAR_1 . METHOD_2 ( ) ; int VAR_5 = ( int ) ( VAR_4 / VAR_6 ) ; if ( VAR_3 && ( VAR_4 % VAR_6 ) >= INT_1 ) { VAR_5 ++ ; } return VAR_5 ; }', '[\'TYPE_1: Date\', \'METHOD_2: getTime\', \'METHOD_1: minutesAgo\', \'VAR_1: date\', \'VAR_5: mins\', \'VAR_6: MIN\', \'VAR_4: diff\', \'VAR_2: endTime\', \'VAR_3: roundup\', \'INT_1: 30\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/TimeUtils.java', 18, '120:9', '127:9', 58, 6 ), ( 5, 177, 5, 'public static int hoursAgo(Date date, boolean roundup) {\n    long diff = System.currentTimeMillis() - date.getTime();\n    int hours = (int) (diff / ONEHOUR);\n    if (roundup && (diff % ONEHOUR) >= HALFHOUR) {\n    hours++;\n    }\n    return hours;\n    }', '[\'public\', \'static\', \'int\', \'hoursAgo\', \'(\', \'Date\', \'date\', \',\', \'boolean\', \'roundup\', \')\', \'{\', \'long\', \'diff\', \'=\', \'System\', \'.\', \'currentTimeMillis\', \'(\', \')\', \'-\', \'date\', \'.\', \'getTime\', \'(\', \')\', \';\', \'int\', \'hours\', \'=\', \'(\', \'int\', \')\', \'(\', \'diff\', \'/\', \'ONEHOUR\', \')\', \';\', \'if\', \'(\', \'roundup\', \'&&\', \'(\', \'diff\', \'%\', \'ONEHOUR\', \')\', \'>=\', \'HALFHOUR\', \')\', \'{\', \'hours\', \'++\', \';\', \'}\', \'return\', \'hours\', \';\', \'}\']', 'public static int METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { long VAR_3 = System . METHOD_2 ( ) - VAR_1 . METHOD_3 ( ) ; int VAR_4 = ( int ) ( VAR_3 / VAR_5 ) ; if ( VAR_2 && ( VAR_3 % VAR_5 ) >= VAR_6 ) { VAR_4 ++ ; } return VAR_4 ; }', '[\'TYPE_1: Date\', \'METHOD_3: getTime\', \'METHOD_2: currentTimeMillis\', \'METHOD_1: hoursAgo\', \'VAR_1: date\', \'VAR_6: HALFHOUR\', \'VAR_4: hours\', \'VAR_3: diff\', \'VAR_2: roundup\', \'VAR_5: ONEHOUR\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/TimeUtils.java', 18, '147:9', '154:9', 58, 6 ), ( 5, 177, 6, 'public static int daysAgo(Date date) {\n    long today = ONEDAY * (System.currentTimeMillis()/ONEDAY);\n    long day = ONEDAY * (date.getTime()/ONEDAY);\n    long diff = today - day;\n    int days = (int) (diff / ONEDAY);\n    return days;\n    }', '[\'public\', \'static\', \'int\', \'daysAgo\', \'(\', \'Date\', \'date\', \')\', \'{\', \'long\', \'today\', \'=\', \'ONEDAY\', \'*\', \'(\', \'System\', \'.\', \'currentTimeMillis\', \'(\', \')\', \'/\', \'ONEDAY\', \')\', \';\', \'long\', \'day\', \'=\', \'ONEDAY\', \'*\', \'(\', \'date\', \'.\', \'getTime\', \'(\', \')\', \'/\', \'ONEDAY\', \')\', \';\', \'long\', \'diff\', \'=\', \'today\', \'-\', \'day\', \';\', \'int\', \'days\', \'=\', \'(\', \'int\', \')\', \'(\', \'diff\', \'/\', \'ONEDAY\', \')\', \';\', \'return\', \'days\', \';\', \'}\']', 'public static int METHOD_1 ( TYPE_1 VAR_1 ) { long VAR_2 = VAR_3 * ( System . METHOD_2 ( ) / VAR_3 ) ; long VAR_4 = VAR_3 * ( VAR_1 . METHOD_3 ( ) / VAR_3 ) ; long VAR_5 = VAR_2 - VAR_4 ; int VAR_6 = ( int ) ( VAR_5 / VAR_3 ) ; return VAR_6 ; }', '[\'TYPE_1: Date\', \'METHOD_1: daysAgo\', \'METHOD_3: getTime\', \'METHOD_2: currentTimeMillis\', \'VAR_1: date\', \'VAR_2: today\', \'VAR_6: days\', \'VAR_5: diff\', \'VAR_3: ONEDAY\', \'VAR_4: day\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/TimeUtils.java', 18, '162:9', '168:9', 60, 6 ), ( 5, 177, 13, 'private String translate(String key, String defaultValue) {\n    String value = defaultValue;\n    if (translation != null && translation.containsKey(key)) {\n    String aValue = translation.getString(key);\n    if (!StringUtils.isEmpty(aValue)) {\n    value = aValue;\n    }\n    }\n    return value;\n    }', '[\'private\', \'String\', \'translate\', \'(\', \'String\', \'key\', \',\', \'String\', \'defaultValue\', \')\', \'{\', \'String\', \'value\', \'=\', \'defaultValue\', \';\', \'if\', \'(\', \'translation\', \'!=\', \'null\', \'&&\', \'translation\', \'.\', \'containsKey\', \'(\', \'key\', \')\', \')\', \'{\', \'String\', \'aValue\', \'=\', \'translation\', \'.\', \'getString\', \'(\', \'key\', \')\', \';\', \'if\', \'(\', \'!\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'aValue\', \')\', \')\', \'{\', \'value\', \'=\', \'aValue\', \';\', \'}\', \'}\', \'return\', \'value\', \';\', \'}\']', 'private String METHOD_1 ( String key , String VAR_1 ) { String value = VAR_1 ; if ( VAR_2 != null && VAR_2 . containsKey ( key ) ) { String VAR_3 = VAR_2 . getString ( key ) ; if ( ! StringUtils . isEmpty ( VAR_3 ) ) { value = VAR_3 ; } } return value ; }', '[\'METHOD_1: translate\', \'VAR_1: defaultValue\', \'VAR_2: translation\', \'VAR_3: aValue\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/TimeUtils.java', 18, '287:9', '296:9', 61, 7 ), ( 5, 177, 14, 'private String translate(int val, String key, String defaultPattern) {\n    String pattern = defaultPattern;\n    if (translation != null && translation.containsKey(key)) {\n    String aValue = translation.getString(key);\n    if (!StringUtils.isEmpty(aValue)) {\n    pattern = aValue;\n    }\n    }\n    return MessageFormat.format(pattern, val);\n    }', '[\'private\', \'String\', \'translate\', \'(\', \'int\', \'val\', \',\', \'String\', \'key\', \',\', \'String\', \'defaultPattern\', \')\', \'{\', \'String\', \'pattern\', \'=\', \'defaultPattern\', \';\', \'if\', \'(\', \'translation\', \'!=\', \'null\', \'&&\', \'translation\', \'.\', \'containsKey\', \'(\', \'key\', \')\', \')\', \'{\', \'String\', \'aValue\', \'=\', \'translation\', \'.\', \'getString\', \'(\', \'key\', \')\', \';\', \'if\', \'(\', \'!\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'aValue\', \')\', \')\', \'{\', \'pattern\', \'=\', \'aValue\', \';\', \'}\', \'}\', \'return\', \'MessageFormat\', \'.\', \'format\', \'(\', \'pattern\', \',\', \'val\', \')\', \';\', \'}\']', 'private String METHOD_1 ( int val , String key , String VAR_1 ) { String VAR_2 = VAR_1 ; if ( VAR_3 != null && VAR_3 . containsKey ( key ) ) { String VAR_4 = VAR_3 . getString ( key ) ; if ( ! StringUtils . isEmpty ( VAR_4 ) ) { VAR_2 = VAR_4 ; } } return TYPE_1 . format ( VAR_2 , val ) ; }', '[\'TYPE_1: MessageFormat\', \'METHOD_1: translate\', \'VAR_1: defaultPattern\', \'VAR_2: pattern\', \'VAR_3: translation\', \'VAR_4: aValue\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/TimeUtils.java', 18, '298:9', '307:9', 71, 7 ), ( 5, 178, 2, 'public static TicketModel getTicket(Repository repository, String ticketFolder) {\n    RefModel ticketsBranch = getTicketsBranch(repository);\n    if (ticketsBranch != null) {\n    try {\n    TicketModel ticket = new TicketModel(ticketFolder);\n    loadTicketContents(repository, ticketsBranch, ticket);\n    return ticket;\n    } catch (Throwable t) {\n    LOGGER.error("Failed to get ticket " + ticketFolder, t);\n    }\n    }\n    return null;\n    }', '[\'public\', \'static\', \'TicketModel\', \'getTicket\', \'(\', \'Repository\', \'repository\', \',\', \'String\', \'ticketFolder\', \')\', \'{\', \'RefModel\', \'ticketsBranch\', \'=\', \'getTicketsBranch\', \'(\', \'repository\', \')\', \';\', \'if\', \'(\', \'ticketsBranch\', \'!=\', \'null\', \')\', \'{\', \'try\', \'{\', \'TicketModel\', \'ticket\', \'=\', \'new\', \'TicketModel\', \'(\', \'ticketFolder\', \')\', \';\', \'loadTicketContents\', \'(\', \'repository\', \',\', \'ticketsBranch\', \',\', \'ticket\', \')\', \';\', \'return\', \'ticket\', \';\', \'}\', \'catch\', \'(\', \'Throwable\', \'t\', \')\', \'{\', \'LOGGER\', \'.\', \'error\', \'(\', \'"Failed to get ticket "\', \'+\', \'ticketFolder\', \',\', \'t\', \')\', \';\', \'}\', \'}\', \'return\', \'null\', \';\', \'}\']', 'public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , String VAR_2 ) { TYPE_3 VAR_3 = METHOD_2 ( VAR_1 ) ; if ( VAR_3 != null ) { try { TYPE_1 VAR_4 = new TYPE_1 ( VAR_2 ) ; METHOD_3 ( VAR_1 , VAR_3 , VAR_4 ) ; return VAR_4 ; } catch ( Throwable t ) { LOGGER . error ( STRING_1 + VAR_2 , t ) ; } } return null ; }', '[\'TYPE_2: Repository\', \'TYPE_3: RefModel\', \'TYPE_1: TicketModel\', \'METHOD_2: getTicketsBranch\', \'METHOD_3: loadTicketContents\', \'METHOD_1: getTicket\', \'VAR_2: ticketFolder\', \'VAR_4: ticket\', \'VAR_1: repository\', \'VAR_3: ticketsBranch\', \'STRING_1: "Failed to get ticket "\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/TicgitUtils.java', 4, '92:9', '104:9', 74, 10 ), ( 5, 179, 1, 'public X509Metadata clone(String commonName, String password) {\n    X509Metadata clone = new X509Metadata(commonName, password);\n    clone.emailAddress = emailAddress;\n    clone.notBefore = notBefore;\n    clone.notAfter = notAfter;\n    clone.oids.putAll(oids);\n    clone.passwordHint = passwordHint;\n    clone.serverHostname = serverHostname;\n    clone.userDisplayname = userDisplayname;\n    return clone;\n    }', '[\'public\', \'X509Metadata\', \'clone\', \'(\', \'String\', \'commonName\', \',\', \'String\', \'password\', \')\', \'{\', \'X509Metadata\', \'clone\', \'=\', \'new\', \'X509Metadata\', \'(\', \'commonName\', \',\', \'password\', \')\', \';\', \'clone.emailAddress\', \'=\', \'emailAddress\', \';\', \'clone.notBefore\', \'=\', \'notBefore\', \';\', \'clone.notAfter\', \'=\', \'notAfter\', \';\', \'clone.oids\', \'.\', \'putAll\', \'(\', \'oids\', \')\', \';\', \'clone.passwordHint\', \'=\', \'passwordHint\', \';\', \'clone.serverHostname\', \'=\', \'serverHostname\', \';\', \'clone.userDisplayname\', \'=\', \'userDisplayname\', \';\', \'return\', \'clone\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( String VAR_1 , String VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( VAR_1 , VAR_2 ) ; VAR_4 = VAR_5 ; VAR_6 = VAR_7 ; VAR_8 = VAR_9 ; VAR_10 . METHOD_2 ( VAR_11 ) ; VAR_12 = VAR_13 ; VAR_14 = VAR_15 ; VAR_16 = VAR_17 ; return VAR_3 ; }', '[\'TYPE_1: X509Metadata\', \'METHOD_2: putAll\', \'METHOD_1: clone\', \'VAR_16: clone.userDisplayname\', \'VAR_1: commonName\', \'VAR_9: notAfter\', \'VAR_13: passwordHint\', \'VAR_7: notBefore\', \'VAR_14: clone.serverHostname\', \'VAR_10: clone.oids\', \'VAR_15: serverHostname\', \'VAR_2: password\', \'VAR_5: emailAddress\', \'VAR_8: clone.notAfter\', \'VAR_3: clone\', \'VAR_4: clone.emailAddress\', \'VAR_6: clone.notBefore\', \'VAR_17: userDisplayname\', \'VAR_11: oids\', \'VAR_12: clone.passwordHint\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/X509Utils.java', 27, '217:17', '227:17', 71, 10 ), ( 5, 179, 3, 'public void setOID(String oid, String value) {\n    if (StringUtils.isEmpty(value)) {\n    oids.remove(oid);\n    } else {\n    oids.put(oid, value);\n    }\n    }', '[\'public\', \'void\', \'setOID\', \'(\', \'String\', \'oid\', \',\', \'String\', \'value\', \')\', \'{\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'value\', \')\', \')\', \'{\', \'oids\', \'.\', \'remove\', \'(\', \'oid\', \')\', \';\', \'}\', \'else\', \'{\', \'oids\', \'.\', \'put\', \'(\', \'oid\', \',\', \'value\', \')\', \';\', \'}\', \'}\']', 'public void METHOD_1 ( String VAR_1 , String value ) { if ( StringUtils . isEmpty ( value ) ) { VAR_2 . remove ( VAR_1 ) ; } else { VAR_2 . put ( VAR_1 , value ) ; } }', '[\'METHOD_1: setOID\', \'VAR_1: oid\', \'VAR_2: oids\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/X509Utils.java', 27, '236:17', '242:17', 42, 5 ), ( 5, 179, 7, 'public static X509Certificate getCertificate(String alias, File storeFile, String storePassword) {\n    try {\n    KeyStore store = openKeyStore(storeFile, storePassword);\n    X509Certificate caCert = (X509Certificate) store.getCertificate(alias);\n    return caCert;\n    } catch (Exception e) {\n    throw new RuntimeException(e);\n    }\n    }', '[\'public\', \'static\', \'X509Certificate\', \'getCertificate\', \'(\', \'String\', \'alias\', \',\', \'File\', \'storeFile\', \',\', \'String\', \'storePassword\', \')\', \'{\', \'try\', \'{\', \'KeyStore\', \'store\', \'=\', \'openKeyStore\', \'(\', \'storeFile\', \',\', \'storePassword\', \')\', \';\', \'X509Certificate\', \'caCert\', \'=\', \'(\', \'X509Certificate\', \')\', \'store\', \'.\', \'getCertificate\', \'(\', \'alias\', \')\', \';\', \'return\', \'caCert\', \';\', \'}\', \'catch\', \'(\', \'Exception\', \'e\', \')\', \'{\', \'throw\', \'new\', \'RuntimeException\', \'(\', \'e\', \')\', \';\', \'}\', \'}\']', 'public static TYPE_1 METHOD_1 ( String VAR_1 , File VAR_2 , String VAR_3 ) { try { TYPE_2 VAR_4 = METHOD_2 ( VAR_2 , VAR_3 ) ; TYPE_1 VAR_5 = ( TYPE_1 ) VAR_4 . METHOD_1 ( VAR_1 ) ; return VAR_5 ; } catch ( Exception e ) { throw new RuntimeException ( e ) ; } }', '[\'TYPE_2: KeyStore\', \'TYPE_1: X509Certificate\', \'METHOD_1: getCertificate\', \'METHOD_2: openKeyStore\', \'VAR_3: storePassword\', \'VAR_5: caCert\', \'VAR_1: alias\', \'VAR_4: store\', \'VAR_2: storeFile\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/X509Utils.java', 27, '395:9', '403:9', 59, 7 ), ( 5, 179, 8, 'public static PrivateKey getPrivateKey(String alias, File storeFile, String storePassword) {\n    try {\n    KeyStore store = openKeyStore(storeFile, storePassword);\n    PrivateKey key = (PrivateKey) store.getKey(alias, storePassword.toCharArray());\n    return key;\n    } catch (Exception e) {\n    throw new RuntimeException(e);\n    }\n    }', '[\'public\', \'static\', \'PrivateKey\', \'getPrivateKey\', \'(\', \'String\', \'alias\', \',\', \'File\', \'storeFile\', \',\', \'String\', \'storePassword\', \')\', \'{\', \'try\', \'{\', \'KeyStore\', \'store\', \'=\', \'openKeyStore\', \'(\', \'storeFile\', \',\', \'storePassword\', \')\', \';\', \'PrivateKey\', \'key\', \'=\', \'(\', \'PrivateKey\', \')\', \'store\', \'.\', \'getKey\', \'(\', \'alias\', \',\', \'storePassword\', \'.\', \'toCharArray\', \'(\', \')\', \')\', \';\', \'return\', \'key\', \';\', \'}\', \'catch\', \'(\', \'Exception\', \'e\', \')\', \'{\', \'throw\', \'new\', \'RuntimeException\', \'(\', \'e\', \')\', \';\', \'}\', \'}\']', 'public static TYPE_1 METHOD_1 ( String VAR_1 , File VAR_2 , String VAR_3 ) { try { TYPE_2 VAR_4 = METHOD_2 ( VAR_2 , VAR_3 ) ; TYPE_1 key = ( TYPE_1 ) VAR_4 . getKey ( VAR_1 , VAR_3 . METHOD_3 ( ) ) ; return key ; } catch ( Exception e ) { throw new RuntimeException ( e ) ; } }', '[\'TYPE_1: PrivateKey\', \'TYPE_2: KeyStore\', \'METHOD_3: toCharArray\', \'METHOD_2: openKeyStore\', \'METHOD_1: getPrivateKey\', \'VAR_3: storePassword\', \'VAR_1: alias\', \'VAR_4: store\', \'VAR_2: storeFile\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/X509Utils.java', 27, '414:9', '422:9', 64, 7 ), ( 5, 179, 16, 'public static void addTrustedCertificate(String alias, X509Certificate cert, File storeFile, String storePassword) {\n    try {\n    KeyStore store = openKeyStore(storeFile, storePassword);\n    store.setCertificateEntry(alias, cert);\n    saveKeyStore(storeFile, store, storePassword);\n    } catch (Exception e) {\n    throw new RuntimeException("Failed to import certificate into trust store " + storeFile, e);\n    }\n    }', '[\'public\', \'static\', \'void\', \'addTrustedCertificate\', \'(\', \'String\', \'alias\', \',\', \'X509Certificate\', \'cert\', \',\', \'File\', \'storeFile\', \',\', \'String\', \'storePassword\', \')\', \'{\', \'try\', \'{\', \'KeyStore\', \'store\', \'=\', \'openKeyStore\', \'(\', \'storeFile\', \',\', \'storePassword\', \')\', \';\', \'store\', \'.\', \'setCertificateEntry\', \'(\', \'alias\', \',\', \'cert\', \')\', \';\', \'saveKeyStore\', \'(\', \'storeFile\', \',\', \'store\', \',\', \'storePassword\', \')\', \';\', \'}\', \'catch\', \'(\', \'Exception\', \'e\', \')\', \'{\', \'throw\', \'new\', \'RuntimeException\', \'(\', \'"Failed to import certificate into trust store "\', \'+\', \'storeFile\', \',\', \'e\', \')\', \';\', \'}\', \'}\']', 'public static void METHOD_1 ( String VAR_1 , TYPE_1 VAR_2 , File VAR_3 , String VAR_4 ) { try { TYPE_2 VAR_5 = METHOD_2 ( VAR_3 , VAR_4 ) ; VAR_5 . METHOD_3 ( VAR_1 , VAR_2 ) ; METHOD_4 ( VAR_3 , VAR_5 , VAR_4 ) ; } catch ( Exception e ) { throw new RuntimeException ( STRING_1 + VAR_3 , e ) ; } }', '[\'TYPE_2: KeyStore\', \'TYPE_1: X509Certificate\', \'METHOD_4: saveKeyStore\', \'METHOD_1: addTrustedCertificate\', \'METHOD_2: openKeyStore\', \'METHOD_3: setCertificateEntry\', \'VAR_4: storePassword\', \'VAR_1: alias\', \'VAR_2: cert\', \'VAR_5: store\', \'VAR_3: storeFile\', \'STRING_1: "Failed to import certificate into trust store "\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/X509Utils.java', 27, '715:9', '723:9', 68, 7 ), ( 5, 179, 20, 'public static boolean isSelfSigned(X509Certificate cert) {\n    try {\n    cert.verify(cert.getPublicKey());\n    return true;\n    } catch (SignatureException e) {\n    return false;\n    } catch (InvalidKeyException e) {\n    return false;\n    } catch (Exception e) {\n    throw new RuntimeException(e);\n    }\n    }', '[\'public\', \'static\', \'boolean\', \'isSelfSigned\', \'(\', \'X509Certificate\', \'cert\', \')\', \'{\', \'try\', \'{\', \'cert\', \'.\', \'verify\', \'(\', \'cert\', \'.\', \'getPublicKey\', \'(\', \')\', \')\', \';\', \'return\', \'true\', \';\', \'}\', \'catch\', \'(\', \'SignatureException\', \'e\', \')\', \'{\', \'return\', \'false\', \';\', \'}\', \'catch\', \'(\', \'InvalidKeyException\', \'e\', \')\', \'{\', \'return\', \'false\', \';\', \'}\', \'catch\', \'(\', \'Exception\', \'e\', \')\', \'{\', \'throw\', \'new\', \'RuntimeException\', \'(\', \'e\', \')\', \';\', \'}\', \'}\']', 'public static boolean METHOD_1 ( TYPE_1 VAR_1 ) { try { VAR_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; return true ; } catch ( TYPE_2 e ) { return false ; } catch ( TYPE_3 e ) { return false ; } catch ( Exception e ) { throw new RuntimeException ( e ) ; } }', '[\'TYPE_2: SignatureException\', \'TYPE_3: InvalidKeyException\', \'TYPE_1: X509Certificate\', \'METHOD_2: verify\', \'METHOD_3: getPublicKey\', \'METHOD_1: isSelfSigned\', \'VAR_1: cert\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/X509Utils.java', 27, '961:9', '972:9', 60, 10 ), ( 5, 181, 1, 'public static RefModel getIssuesBranch(Repository repository) {\n    List<RefModel> refs = JGitUtils.getRefs(repository, com.gitblit.Constants.R_GITBLIT);\n    for (RefModel ref : refs) {\n    if (ref.reference.getName().equals(GB_ISSUES)) {\n    return ref;\n    }\n    }\n    return null;\n    }', '[\'public\', \'static\', \'RefModel\', \'getIssuesBranch\', \'(\', \'Repository\', \'repository\', \')\', \'{\', \'List\', \'<\', \'RefModel\', \'>\', \'refs\', \'=\', \'JGitUtils\', \'.\', \'getRefs\', \'(\', \'repository\', \',\', \'com.gitblit.Constants.R_GITBLIT\', \')\', \';\', \'for\', \'(\', \'RefModel\', \'ref\', \':\', \'refs\', \')\', \'{\', \'if\', \'(\', \'ref.reference\', \'.\', \'getName\', \'(\', \')\', \'.\', \'equals\', \'(\', \'GB_ISSUES\', \')\', \')\', \'{\', \'return\', \'ref\', \';\', \'}\', \'}\', \'return\', \'null\', \';\', \'}\']', 'public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { List < TYPE_1 > VAR_2 = TYPE_3 . METHOD_2 ( VAR_1 , VAR_3 ) ; for ( TYPE_1 VAR_4 : VAR_2 ) { if ( VAR_5 . getName ( ) . equals ( VAR_6 ) ) { return VAR_4 ; } } return null ; }', '[\'TYPE_2: Repository\', \'TYPE_1: RefModel\', \'TYPE_3: JGitUtils\', \'METHOD_2: getRefs\', \'METHOD_1: getIssuesBranch\', \'VAR_4: ref\', \'VAR_2: refs\', \'VAR_3: com.gitblit.Constants.R_GITBLIT\', \'VAR_5: ref.reference\', \'VAR_1: repository\', \'VAR_6: GB_ISSUES\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/IssueUtils.java', 15, '113:9', '121:9', 62, 6 ), ( 5, 181, 10, 'public static boolean changeComment(Repository repository, IssueModel issue, Change change,\n    			String author, String comment) {\n    Change revision = new Change(author);\n    revision.comment(comment);\n    revision.comment.id = change.comment.id;\n    return updateIssue(repository, issue.id, revision);\n    }', '[\'public\', \'static\', \'boolean\', \'changeComment\', \'(\', \'Repository\', \'repository\', \',\', \'IssueModel\', \'issue\', \',\', \'Change\', \'change\', \',\', \'String\', \'author\', \',\', \'String\', \'comment\', \')\', \'{\', \'Change\', \'revision\', \'=\', \'new\', \'Change\', \'(\', \'author\', \')\', \';\', \'revision\', \'.\', \'comment\', \'(\', \'comment\', \')\', \';\', \'revision.comment\', \'.\', \'id\', \'=\', \'change.comment\', \'.\', \'id\', \';\', \'return\', \'updateIssue\', \'(\', \'repository\', \',\', \'issue\', \'.\', \'id\', \',\', \'revision\', \')\', \';\', \'}\']', 'public static boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 , String VAR_4 , String VAR_5 ) { TYPE_3 VAR_6 = new TYPE_3 ( VAR_4 ) ; VAR_6 . METHOD_2 ( VAR_5 ) ; VAR_7 . id = VAR_8 . id ; return METHOD_3 ( VAR_1 , VAR_2 . id , VAR_6 ) ; }', '[\'TYPE_1: Repository\', \'TYPE_2: IssueModel\', \'TYPE_3: Change\', \'METHOD_1: changeComment\', \'METHOD_2: comment\', \'METHOD_3: updateIssue\', \'VAR_2: issue\', \'VAR_4: author\', \'VAR_3: change\', \'VAR_7: revision.comment\', \'VAR_5: comment\', \'VAR_1: repository\', \'VAR_8: change.comment\', \'VAR_6: revision\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/IssueUtils.java', 15, '593:9', '599:9', 62, 6 ), ( 5, 181, 11, 'public static boolean deleteComment(Repository repository, IssueModel issue, Change change,\n    			String author) {\n    Change deletion = new Change(author);\n    deletion.comment(change.comment.text);\n    deletion.comment.id = change.comment.id;\n    deletion.comment.deleted = true;\n    return updateIssue(repository, issue.id, deletion);\n    }', '[\'public\', \'static\', \'boolean\', \'deleteComment\', \'(\', \'Repository\', \'repository\', \',\', \'IssueModel\', \'issue\', \',\', \'Change\', \'change\', \',\', \'String\', \'author\', \')\', \'{\', \'Change\', \'deletion\', \'=\', \'new\', \'Change\', \'(\', \'author\', \')\', \';\', \'deletion\', \'.\', \'comment\', \'(\', \'change.comment\', \'.\', \'text\', \')\', \';\', \'deletion.comment\', \'.\', \'id\', \'=\', \'change.comment\', \'.\', \'id\', \';\', \'deletion.comment.deleted\', \'=\', \'true\', \';\', \'return\', \'updateIssue\', \'(\', \'repository\', \',\', \'issue\', \'.\', \'id\', \',\', \'deletion\', \')\', \';\', \'}\']', 'public static boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 , String VAR_4 ) { TYPE_3 VAR_5 = new TYPE_3 ( VAR_4 ) ; VAR_5 . METHOD_2 ( VAR_6 . text ) ; VAR_7 . id = VAR_6 . id ; VAR_8 = true ; return METHOD_3 ( VAR_1 , VAR_2 . id , VAR_5 ) ; }', '[\'TYPE_1: Repository\', \'TYPE_2: IssueModel\', \'TYPE_3: Change\', \'METHOD_1: deleteComment\', \'METHOD_2: comment\', \'METHOD_3: updateIssue\', \'VAR_8: deletion.comment.deleted\', \'VAR_2: issue\', \'VAR_5: deletion\', \'VAR_4: author\', \'VAR_3: change\', \'VAR_7: deletion.comment\', \'VAR_1: repository\', \'VAR_6: change.comment\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/IssueUtils.java', 15, '611:9', '618:9', 71, 7 ), ( 5, 182, 2, 'public static String getGravatarIdenticonUrl(String email, int width) {\n    if (width <= 0) {\n    width = 50;\n    }\n    String emailHash = StringUtils.getMD5(email);\n    String url = MessageFormat.format(\n    				"https://www.gravatar.com/avatar/{0}?s={1,number,0}&d=identicon", emailHash, width);\n    return url;\n    }', '[\'public\', \'static\', \'String\', \'getGravatarIdenticonUrl\', \'(\', \'String\', \'email\', \',\', \'int\', \'width\', \')\', \'{\', \'if\', \'(\', \'width\', \'<=\', \'0\', \')\', \'{\', \'width\', \'=\', \'50\', \';\', \'}\', \'String\', \'emailHash\', \'=\', \'StringUtils\', \'.\', \'getMD5\', \'(\', \'email\', \')\', \';\', \'String\', \'url\', \'=\', \'MessageFormat\', \'.\', \'format\', \'(\', \'"https:<DOUBLE_SLASH>www.gravatar.com/avatar/{0}?s={1\', \',\', \'emailHash\', \',\', \'width\', \')\', \';\', \'return\', \'url\', \';\', \'}\']', 'public static String METHOD_1 ( String VAR_1 , int VAR_2 ) { if ( VAR_2 <= 0 ) { VAR_2 = INT_1 ; } String VAR_3 = StringUtils . METHOD_2 ( VAR_1 ) ; String url = TYPE_1 . format ( STRING_1 , VAR_3 , VAR_2 ) ; return url ; }', '[\'TYPE_1: MessageFormat\', \'METHOD_2: getMD5\', \'METHOD_1: getGravatarIdenticonUrl\', \'VAR_3: emailHash\', \'VAR_2: width\', \'VAR_1: email\', \'INT_1: 50\', \'STRING_1: "https:<DOUBLE_SLASH>www.gravatar.com/avatar/{0}?s={1\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/ActivityUtils.java', 5, '168:9', '176:9', 52, 7 ), ( 5, 182, 3, 'public static String getGravatarThumbnailUrl(String email, int width) {\n    if (width <= 0) {\n    width = 50;\n    }\n    String emailHash = StringUtils.getMD5(email);\n    String url = MessageFormat.format(\n    				"https://www.gravatar.com/avatar/{0}?s={1,number,0}&d=mm", emailHash, width);\n    return url;\n    }', '[\'public\', \'static\', \'String\', \'getGravatarThumbnailUrl\', \'(\', \'String\', \'email\', \',\', \'int\', \'width\', \')\', \'{\', \'if\', \'(\', \'width\', \'<=\', \'0\', \')\', \'{\', \'width\', \'=\', \'50\', \';\', \'}\', \'String\', \'emailHash\', \'=\', \'StringUtils\', \'.\', \'getMD5\', \'(\', \'email\', \')\', \';\', \'String\', \'url\', \'=\', \'MessageFormat\', \'.\', \'format\', \'(\', \'"https:<DOUBLE_SLASH>www.gravatar.com/avatar/{0}?s={1\', \',\', \'emailHash\', \',\', \'width\', \')\', \';\', \'return\', \'url\', \';\', \'}\']', 'public static String METHOD_1 ( String VAR_1 , int VAR_2 ) { if ( VAR_2 <= 0 ) { VAR_2 = INT_1 ; } String VAR_3 = StringUtils . METHOD_2 ( VAR_1 ) ; String url = TYPE_1 . format ( STRING_1 , VAR_3 , VAR_2 ) ; return url ; }', '[\'TYPE_1: MessageFormat\', \'METHOD_2: getMD5\', \'METHOD_1: getGravatarThumbnailUrl\', \'VAR_3: emailHash\', \'VAR_2: width\', \'VAR_1: email\', \'INT_1: 50\', \'STRING_1: "https:<DOUBLE_SLASH>www.gravatar.com/avatar/{0}?s={1\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/ActivityUtils.java', 5, '187:9', '195:9', 52, 7 ), ( 5, 184, 5, 'public void updateObject(String name, Date date, X object) {\n    CachedObject<X> obj;\n    if (cache.containsKey(name)) {\n    obj = cache.get(name);\n    } else {\n    obj = new CachedObject<X>(name);\n    cache.put(name, obj);\n    }\n    obj.date = date;\n    obj.object = object;\n    }', '[\'public\', \'void\', \'updateObject\', \'(\', \'String\', \'name\', \',\', \'Date\', \'date\', \',\', \'X\', \'object\', \')\', \'{\', \'CachedObject\', \'<\', \'X\', \'>\', \'obj\', \';\', \'if\', \'(\', \'cache\', \'.\', \'containsKey\', \'(\', \'name\', \')\', \')\', \'{\', \'obj\', \'=\', \'cache\', \'.\', \'get\', \'(\', \'name\', \')\', \';\', \'}\', \'else\', \'{\', \'obj\', \'=\', \'new\', \'CachedObject\', \'<\', \'X\', \'>\', \'(\', \'name\', \')\', \';\', \'cache\', \'.\', \'put\', \'(\', \'name\', \',\', \'obj\', \')\', \';\', \'}\', \'obj.date\', \'=\', \'date\', \';\', \'obj\', \'.\', \'object\', \'=\', \'object\', \';\', \'}\']', 'public void METHOD_1 ( String name , TYPE_1 VAR_1 , TYPE_2 object ) { TYPE_3 < TYPE_2 > obj ; if ( VAR_2 . containsKey ( name ) ) { obj = VAR_2 . get ( name ) ; } else { obj = new TYPE_3 < TYPE_2 > ( name ) ; VAR_2 . put ( name , obj ) ; } VAR_3 = VAR_1 ; obj . object = object ; }', '[\'TYPE_3: CachedObject\', \'TYPE_2: X\', \'TYPE_1: Date\', \'METHOD_1: updateObject\', \'VAR_1: date\', \'VAR_2: cache\', \'VAR_3: obj.date\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/ObjectCache.java', 9, '76:9', '86:9', 76, 9 ), ( 5, 186, 2, 'public void error(String message, Throwable t) {\n    PrintWriter writer = new PrintWriter(new StringWriter());\n    if (!StringUtils.isEmpty(message)) {\n    writer.append(message);\n    writer.append(\'\\n\');\n    }\n    t.printStackTrace(writer);\n    rp.sendError(writer.toString());\n    }', '[\'public\', \'void\', \'error\', \'(\', \'String\', \'message\', \',\', \'Throwable\', \'t\', \')\', \'{\', \'PrintWriter\', \'writer\', \'=\', \'new\', \'PrintWriter\', \'(\', \'new\', \'StringWriter\', \'(\', \')\', \')\', \';\', \'if\', \'(\', \'!\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'message\', \')\', \')\', \'{\', \'writer\', \'.\', \'append\', \'(\', \'message\', \')\', \';\', \'writer\', \'.\', \'append\', \'(\', "\'\\\\n\'", \')\', \';\', \'}\', \'t\', \'.\', \'printStackTrace\', \'(\', \'writer\', \')\', \';\', \'rp\', \'.\', \'sendError\', \'(\', \'writer\', \'.\', \'toString\', \'(\', \')\', \')\', \';\', \'}\']', 'public void error ( String message , Throwable t ) { TYPE_1 writer = new TYPE_1 ( new TYPE_2 ( ) ) ; if ( ! StringUtils . isEmpty ( message ) ) { writer . append ( message ) ; writer . append ( CHAR_1 ) ; } t . METHOD_1 ( writer ) ; VAR_1 . METHOD_2 ( writer . toString ( ) ) ; }', '[\'TYPE_2: StringWriter\', \'TYPE_1: PrintWriter\', \'METHOD_1: printStackTrace\', \'METHOD_2: sendError\', \'VAR_1: rp\', "CHAR_1: \'\\\\n\'"]', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/ClientLogger.java', 4, '67:9', '75:9', 66, 7 ), ( 5, 187, 1, 'public static <T> T copyParallel(T original) {\n    try {\n    PipedOutputStream outputStream = new PipedOutputStream();\n    PipedInputStream inputStream = new PipedInputStream(outputStream);\n    ObjectOutputStream ois = new ObjectOutputStream(outputStream);\n    Receiver<T> receiver = new Receiver<T>(inputStream);\n    try {\n    ois.writeObject(original);\n    } finally {\n    ois.close();\n    }\n    return receiver.getResult();\n    } catch (IOException iox) {\n    // doesn\'t seem likely to happen as these streams are in memory\n    throw new RuntimeException(iox);\n    }\n    }', '[\'public\', \'static\', \'<\', \'T\', \'>\', \'T\', \'copyParallel\', \'(\', \'T\', \'original\', \')\', \'{\', \'try\', \'{\', \'PipedOutputStream\', \'outputStream\', \'=\', \'new\', \'PipedOutputStream\', \'(\', \')\', \';\', \'PipedInputStream\', \'inputStream\', \'=\', \'new\', \'PipedInputStream\', \'(\', \'outputStream\', \')\', \';\', \'ObjectOutputStream\', \'ois\', \'=\', \'new\', \'ObjectOutputStream\', \'(\', \'outputStream\', \')\', \';\', \'Receiver\', \'<\', \'T\', \'>\', \'receiver\', \'=\', \'new\', \'Receiver\', \'<\', \'T\', \'>\', \'(\', \'inputStream\', \')\', \';\', \'try\', \'{\', \'ois\', \'.\', \'writeObject\', \'(\', \'original\', \')\', \';\', \'}\', \'finally\', \'{\', \'ois\', \'.\', \'close\', \'(\', \')\', \';\', \'}\', \'return\', \'receiver\', \'.\', \'getResult\', \'(\', \')\', \';\', \'}\', \'catch\', \'(\', \'IOException\', \'iox\', \')\', \'{\', \'throw\', \'new\', \'RuntimeException\', \'(\', \'iox\', \')\', \';\', \'}\', \'}\']', 'public static < T > T METHOD_1 ( T VAR_1 ) { try { TYPE_1 VAR_2 = new TYPE_1 ( ) ; TYPE_2 VAR_3 = new TYPE_2 ( VAR_2 ) ; TYPE_3 VAR_4 = new TYPE_3 ( VAR_2 ) ; TYPE_4 < T > VAR_5 = new TYPE_4 < T > ( VAR_3 ) ; try { VAR_4 . METHOD_2 ( VAR_1 ) ; } finally { VAR_4 . close ( ) ; } return VAR_5 . METHOD_3 ( ) ; } catch ( IOException VAR_6 ) { throw new RuntimeException ( VAR_6 ) ; } }', '[\'TYPE_4: Receiver\', \'TYPE_1: PipedOutputStream\', \'TYPE_2: PipedInputStream\', \'TYPE_3: ObjectOutputStream\', \'METHOD_2: writeObject\', \'METHOD_3: getResult\', \'METHOD_1: copyParallel\', \'VAR_1: original\', \'VAR_6: iox\', \'VAR_5: receiver\', \'VAR_4: ois\', \'VAR_3: inputStream\', \'VAR_2: outputStream\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/DeepCopier.java', 5, '62:9', '78:9', 95, 13 ), ( 5, 187, 2, '@SuppressWarnings("unchecked")\n    public void run() {\n    try {\n    ObjectInputStream ois = new ObjectInputStream(inputStream);\n    try {\n    result = (T) ois.readObject();\n    try {\n    // Some serializers may write more than they actually\n    // need to deserialize the object, but if we don\'t\n    // read it all the PipedOutputStream will choke.\n    while (inputStream.read() != -1) {\n    }\n    } catch (IOException e) {\n    // The object has been successfully deserialized, so\n    // ignore problems at this point (for example, the\n    // serializer may have explicitly closed the inputStream\n    // itself, causing this read to fail).\n    }\n    } finally {\n    ois.close();\n    }\n    } catch (Throwable t) {\n    throwable = t;\n    }\n    }', '[\'public\', \'void\', \'run\', \'(\', \')\', \'{\', \'try\', \'{\', \'ObjectInputStream\', \'ois\', \'=\', \'new\', \'ObjectInputStream\', \'(\', \'inputStream\', \')\', \';\', \'try\', \'{\', \'result\', \'=\', \'(\', \'T\', \')\', \'ois\', \'.\', \'readObject\', \'(\', \')\', \';\', \'try\', \'{\', \'while\', \'(\', \'inputStream\', \'.\', \'read\', \'(\', \')\', \'!=\', \'-\', \'1\', \')\', \'{\', \'}\', \'}\', \'catch\', \'(\', \'IOException\', \'e\', \')\', \'{\', \'}\', \'}\', \'finally\', \'{\', \'ois\', \'.\', \'close\', \'(\', \')\', \';\', \'}\', \'}\', \'catch\', \'(\', \'Throwable\', \'t\', \')\', \'{\', \'throwable\', \'=\', \'t\', \';\', \'}\', \'}\']', 'public void METHOD_1 ( ) { try { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 ) ; try { result = ( T ) VAR_1 . METHOD_2 ( ) ; try { while ( VAR_2 . read ( ) != - 1 ) { } } catch ( IOException e ) { } } finally { VAR_1 . close ( ) ; } } catch ( Throwable t ) { VAR_3 = t ; } }', '[\'TYPE_1: ObjectInputStream\', \'METHOD_1: run\', \'METHOD_2: readObject\', \'VAR_3: throwable\', \'VAR_1: ois\', \'VAR_2: inputStream\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/DeepCopier.java', 5, '91:17', '116:17', 84, 13 ), ( 5, 187, 3, 'public T getResult() throws IOException {\n    try {\n    join();\n    } catch (InterruptedException e) {\n    throw new RuntimeException("Unexpected InterruptedException", e);\n    }\n    // join() guarantees that all shared memory is synchronized between\n    // the two threads\n    if (throwable != null) {\n    if (throwable instanceof ClassNotFoundException) {\n    // actually can not happen in this instance\n    }\n    throw new RuntimeException(throwable);\n    }\n    return result;\n    }', '[\'public\', \'T\', \'getResult\', \'(\', \')\', \'throws\', \'IOException\', \'{\', \'try\', \'{\', \'join\', \'(\', \')\', \';\', \'}\', \'catch\', \'(\', \'InterruptedException\', \'e\', \')\', \'{\', \'throw\', \'new\', \'RuntimeException\', \'(\', \'"Unexpected InterruptedException"\', \',\', \'e\', \')\', \';\', \'}\', \'if\', \'(\', \'throwable\', \'!=\', \'null\', \')\', \'{\', \'if\', \'(\', \'throwable\', \'instanceof\', \'ClassNotFoundException\', \')\', \'{\', \'}\', \'throw\', \'new\', \'RuntimeException\', \'(\', \'throwable\', \')\', \';\', \'}\', \'return\', \'result\', \';\', \'}\']', 'public T METHOD_1 ( ) throws IOException { try { METHOD_2 ( ) ; } catch ( TYPE_1 e ) { throw new RuntimeException ( STRING_1 , e ) ; } if ( VAR_1 != null ) { if ( VAR_1 instanceof TYPE_2 ) { } throw new RuntimeException ( VAR_1 ) ; } return result ; }', '[\'TYPE_1: InterruptedException\', \'TYPE_2: ClassNotFoundException\', \'METHOD_1: getResult\', \'METHOD_2: join\', \'VAR_1: throwable\', \'STRING_1: "Unexpected InterruptedException"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/DeepCopier.java', 5, '118:17', '133:17', 59, 9 ), ( 5, 188, 5, 'public static <X> X retrieveJson(String url, Type type, String username, char[] password)\n    throws IOException {\n    String json = retrieveJsonString(url, username, password);\n    if (StringUtils.isEmpty(json)) {\n    return null;\n    }\n    return gson().fromJson(json, type);\n    }', '[\'public\', \'static\', \'<\', \'X\', \'>\', \'X\', \'retrieveJson\', \'(\', \'String\', \'url\', \',\', \'Type\', \'type\', \',\', \'String\', \'username\', \',\', \'char\', \'[\', \']\', \'password\', \')\', \'throws\', \'IOException\', \'{\', \'String\', \'json\', \'=\', \'retrieveJsonString\', \'(\', \'url\', \',\', \'username\', \',\', \'password\', \')\', \';\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'json\', \')\', \')\', \'{\', \'return\', \'null\', \';\', \'}\', \'return\', \'gson\', \'(\', \')\', \'.\', \'fromJson\', \'(\', \'json\', \',\', \'type\', \')\', \';\', \'}\']', 'public static < TYPE_1 > TYPE_1 METHOD_1 ( String url , Type type , String VAR_1 , char [ ] VAR_2 ) throws IOException { String json = METHOD_2 ( url , VAR_1 , VAR_2 ) ; if ( StringUtils . isEmpty ( json ) ) { return null ; } return METHOD_3 ( ) . METHOD_4 ( json , type ) ; }', '[\'TYPE_1: X\', \'METHOD_1: retrieveJson\', \'METHOD_2: retrieveJsonString\', \'METHOD_4: fromJson\', \'METHOD_3: gson\', \'VAR_2: password\', \'VAR_1: username\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/JsonUtils.java', 20, '138:9', '145:9', 62, 6 ), ( 5, 188, 6, 'public static <X> X retrieveJson(String url, Class<X> clazz, String username, char[] password)\n    throws IOException {\n    String json = retrieveJsonString(url, username, password);\n    if (StringUtils.isEmpty(json)) {\n    return null;\n    }\n    return gson().fromJson(json, clazz);\n    }', '[\'public\', \'static\', \'<\', \'X\', \'>\', \'X\', \'retrieveJson\', \'(\', \'String\', \'url\', \',\', \'Class\', \'<\', \'X\', \'>\', \'clazz\', \',\', \'String\', \'username\', \',\', \'char\', \'[\', \']\', \'password\', \')\', \'throws\', \'IOException\', \'{\', \'String\', \'json\', \'=\', \'retrieveJsonString\', \'(\', \'url\', \',\', \'username\', \',\', \'password\', \')\', \';\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'json\', \')\', \')\', \'{\', \'return\', \'null\', \';\', \'}\', \'return\', \'gson\', \'(\', \')\', \'.\', \'fromJson\', \'(\', \'json\', \',\', \'clazz\', \')\', \';\', \'}\']', 'public static < TYPE_1 > TYPE_1 METHOD_1 ( String url , Class < TYPE_1 > clazz , String VAR_1 , char [ ] VAR_2 ) throws IOException { String json = METHOD_2 ( url , VAR_1 , VAR_2 ) ; if ( StringUtils . isEmpty ( json ) ) { return null ; } return METHOD_3 ( ) . METHOD_4 ( json , clazz ) ; }', '[\'TYPE_1: X\', \'METHOD_1: retrieveJson\', \'METHOD_2: retrieveJsonString\', \'METHOD_4: fromJson\', \'METHOD_3: gson\', \'VAR_2: password\', \'VAR_1: username\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/JsonUtils.java', 20, '157:9', '164:9', 65, 6 ), ( 5, 188, 10, 'public static Gson gson(ExclusionStrategy... strategies) {\n    GsonBuilder builder = new GsonBuilder();\n    builder.registerTypeAdapter(Date.class, new GmtDateTypeAdapter());\n    builder.registerTypeAdapter(AccessPermission.class, new AccessPermissionTypeAdapter());\n    if (!ArrayUtils.isEmpty(strategies)) {\n    builder.setExclusionStrategies(strategies);\n    }\n    return builder.create();\n    }', '[\'public\', \'static\', \'Gson\', \'gson\', \'(\', \'ExclusionStrategy\', \'...\', \'strategies\', \')\', \'{\', \'GsonBuilder\', \'builder\', \'=\', \'new\', \'GsonBuilder\', \'(\', \')\', \';\', \'builder\', \'.\', \'registerTypeAdapter\', \'(\', \'Date.\', \'class\', \',\', \'new\', \'GmtDateTypeAdapter\', \'(\', \')\', \')\', \';\', \'builder\', \'.\', \'registerTypeAdapter\', \'(\', \'AccessPermission.\', \'class\', \',\', \'new\', \'AccessPermissionTypeAdapter\', \'(\', \')\', \')\', \';\', \'if\', \'(\', \'!\', \'ArrayUtils\', \'.\', \'isEmpty\', \'(\', \'strategies\', \')\', \')\', \'{\', \'builder\', \'.\', \'setExclusionStrategies\', \'(\', \'strategies\', \')\', \';\', \'}\', \'return\', \'builder\', \'.\', \'create\', \'(\', \')\', \';\', \'}\']', 'public static TYPE_1 METHOD_1 ( TYPE_2 ... VAR_1 ) { TYPE_3 builder = new TYPE_3 ( ) ; builder . METHOD_2 ( VAR_2 class , new TYPE_4 ( ) ) ; builder . METHOD_2 ( VAR_3 class , new TYPE_5 ( ) ) ; if ( ! TYPE_6 . isEmpty ( VAR_1 ) ) { builder . METHOD_3 ( VAR_1 ) ; } return builder . create ( ) ; }', '[\'TYPE_5: AccessPermissionTypeAdapter\', \'TYPE_3: GsonBuilder\', \'TYPE_6: ArrayUtils\', \'TYPE_1: Gson\', \'TYPE_2: ExclusionStrategy\', \'TYPE_4: GmtDateTypeAdapter\', \'METHOD_2: registerTypeAdapter\', \'METHOD_1: gson\', \'METHOD_3: setExclusionStrategies\', \'VAR_3: AccessPermission.\', \'VAR_1: strategies\', \'VAR_2: Date.\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/JsonUtils.java', 20, '267:9', '275:9', 69, 7 ), ( 5, 188, 11, '@Override\n    public synchronized JsonElement serialize(Date date, Type type,\n    				JsonSerializationContext jsonSerializationContext) {\n    synchronized (dateFormat) {\n    String dateFormatAsString = dateFormat.format(date);\n    return new JsonPrimitive(dateFormatAsString);\n    }\n    }', '[\'public\', \'synchronized\', \'JsonElement\', \'serialize\', \'(\', \'Date\', \'date\', \',\', \'Type\', \'type\', \',\', \'JsonSerializationContext\', \'jsonSerializationContext\', \')\', \'{\', \'synchronized\', \'(\', \'dateFormat\', \')\', \'{\', \'String\', \'dateFormatAsString\', \'=\', \'dateFormat\', \'.\', \'format\', \'(\', \'date\', \')\', \';\', \'return\', \'new\', \'JsonPrimitive\', \'(\', \'dateFormatAsString\', \')\', \';\', \'}\', \'}\']', 'public synchronized TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , Type type , TYPE_3 VAR_2 ) { synchronized ( VAR_3 ) { String VAR_4 = VAR_3 . format ( VAR_1 ) ; return new TYPE_4 ( VAR_4 ) ; } }', '[\'TYPE_4: JsonPrimitive\', \'TYPE_1: JsonElement\', \'TYPE_3: JsonSerializationContext\', \'TYPE_2: Date\', \'METHOD_1: serialize\', \'VAR_1: date\', \'VAR_2: jsonSerializationContext\', \'VAR_3: dateFormat\', \'VAR_4: dateFormatAsString\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/JsonUtils.java', 20, '285:17', '292:17', 41, 6 ), ( 5, 188, 12, '@Override\n    public synchronized Date deserialize(JsonElement jsonElement, Type type,\n    				JsonDeserializationContext jsonDeserializationContext) {\n    try {\n    synchronized (dateFormat) {\n    Date date = dateFormat.parse(jsonElement.getAsString());\n    return new Date((date.getTime() / 1000) * 1000);\n    }\n    } catch (ParseException e) {\n    throw new JsonSyntaxException(jsonElement.getAsString(), e);\n    }\n    }', '[\'public\', \'synchronized\', \'Date\', \'deserialize\', \'(\', \'JsonElement\', \'jsonElement\', \',\', \'Type\', \'type\', \',\', \'JsonDeserializationContext\', \'jsonDeserializationContext\', \')\', \'{\', \'try\', \'{\', \'synchronized\', \'(\', \'dateFormat\', \')\', \'{\', \'Date\', \'date\', \'=\', \'dateFormat\', \'.\', \'parse\', \'(\', \'jsonElement\', \'.\', \'getAsString\', \'(\', \')\', \')\', \';\', \'return\', \'new\', \'Date\', \'(\', \'(\', \'date\', \'.\', \'getTime\', \'(\', \')\', \'/\', \'1000\', \')\', \'*\', \'1000\', \')\', \';\', \'}\', \'}\', \'catch\', \'(\', \'ParseException\', \'e\', \')\', \'{\', \'throw\', \'new\', \'JsonSyntaxException\', \'(\', \'jsonElement\', \'.\', \'getAsString\', \'(\', \')\', \',\', \'e\', \')\', \';\', \'}\', \'}\']', 'public synchronized TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , Type type , TYPE_3 VAR_2 ) { try { synchronized ( VAR_3 ) { TYPE_1 VAR_4 = VAR_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; return new TYPE_1 ( ( VAR_4 . METHOD_4 ( ) / INT_1 ) * INT_1 ) ; } } catch ( TYPE_4 e ) { throw new TYPE_5 ( VAR_1 . METHOD_3 ( ) , e ) ; } }', '[\'TYPE_3: JsonDeserializationContext\', \'TYPE_5: JsonSyntaxException\', \'TYPE_2: JsonElement\', \'TYPE_4: ParseException\', \'TYPE_1: Date\', \'METHOD_4: getTime\', \'METHOD_3: getAsString\', \'METHOD_2: parse\', \'METHOD_1: deserialize\', \'VAR_4: date\', \'VAR_3: dateFormat\', \'VAR_1: jsonElement\', \'VAR_2: jsonDeserializationContext\', \'INT_1: 1000\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/JsonUtils.java', 20, '294:17', '305:17', 75, 9 ), ( 5, 189, 3, 'public static X509Metadata getCertificateMetadata(HttpServletRequest httpRequest) {\n    if (httpRequest.getAttribute("javax.servlet.request.X509Certificate") != null) {\n    X509Certificate[] certChain = (X509Certificate[]) httpRequest\n    .getAttribute("javax.servlet.request.X509Certificate");\n    if (certChain != null) {\n    X509Certificate cert = certChain[0];\n    return X509Utils.getMetadata(cert);\n    }\n    }\n    return null;\n    }', '[\'public\', \'static\', \'X509Metadata\', \'getCertificateMetadata\', \'(\', \'HttpServletRequest\', \'httpRequest\', \')\', \'{\', \'if\', \'(\', \'httpRequest\', \'.\', \'getAttribute\', \'(\', \'"javax.servlet.request.X509Certificate"\', \')\', \'!=\', \'null\', \')\', \'{\', \'X509Certificate\', \'[\', \']\', \'certChain\', \'=\', \'(\', \'X509Certificate\', \'[\', \']\', \')\', \'httpRequest\', \'.\', \'getAttribute\', \'(\', \'"javax.servlet.request.X509Certificate"\', \')\', \';\', \'if\', \'(\', \'certChain\', \'!=\', \'null\', \')\', \'{\', \'X509Certificate\', \'cert\', \'=\', \'certChain\', \'[\', \'0\', \']\', \';\', \'return\', \'X509Utils\', \'.\', \'getMetadata\', \'(\', \'cert\', \')\', \';\', \'}\', \'}\', \'return\', \'null\', \';\', \'}\']', 'public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( VAR_1 . METHOD_2 ( STRING_1 ) != null ) { TYPE_3 [ ] VAR_2 = ( TYPE_3 [ ] ) VAR_1 . METHOD_2 ( STRING_1 ) ; if ( VAR_2 != null ) { TYPE_3 VAR_3 = VAR_2 [ 0 ] ; return TYPE_4 . METHOD_3 ( VAR_3 ) ; } } return null ; }', '[\'TYPE_2: HttpServletRequest\', \'TYPE_1: X509Metadata\', \'TYPE_4: X509Utils\', \'TYPE_3: X509Certificate\', \'METHOD_3: getMetadata\', \'METHOD_1: getCertificateMetadata\', \'METHOD_2: getAttribute\', \'VAR_1: httpRequest\', \'VAR_2: certChain\', \'VAR_3: cert\', \'STRING_1: "javax.servlet.request.X509Certificate"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/HttpUtils.java', 5, '170:9', '180:9', 65, 8 ), ( 5, 189, 4, 'public static boolean isIpAddress(String address) {\n    if (StringUtils.isEmpty(address)) {\n    return false;\n    }\n    String [] fields = address.split("\\\\.");\n    if (fields.length == 4) {\n    // IPV4\n    for (String field : fields) {\n    try {\n    int value = Integer.parseInt(field);\n    if (value < 0 || value > 255) {\n    return false;\n    }\n    } catch (Exception e) {\n    return false;\n    }\n    }\n    return true;\n    }\n    // TODO IPV6?\n    return false;\n    }', '[\'public\', \'static\', \'boolean\', \'isIpAddress\', \'(\', \'String\', \'address\', \')\', \'{\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'address\', \')\', \')\', \'{\', \'return\', \'false\', \';\', \'}\', \'String\', \'[\', \']\', \'fields\', \'=\', \'address\', \'.\', \'split\', \'(\', \'"\\\\\\\\."\', \')\', \';\', \'if\', \'(\', \'fields\', \'.\', \'length\', \'==\', \'4\', \')\', \'{\', \'for\', \'(\', \'String\', \'field\', \':\', \'fields\', \')\', \'{\', \'try\', \'{\', \'int\', \'value\', \'=\', \'Integer\', \'.\', \'parseInt\', \'(\', \'field\', \')\', \';\', \'if\', \'(\', \'value\', \'<\', \'0\', \'||\', \'value\', \'>\', \'255\', \')\', \'{\', \'return\', \'false\', \';\', \'}\', \'}\', \'catch\', \'(\', \'Exception\', \'e\', \')\', \'{\', \'return\', \'false\', \';\', \'}\', \'}\', \'return\', \'true\', \';\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public static boolean METHOD_1 ( String VAR_1 ) { if ( StringUtils . isEmpty ( VAR_1 ) ) { return false ; } String [ ] VAR_2 = VAR_1 . METHOD_2 ( STRING_1 ) ; if ( VAR_2 . length == 4 ) { for ( String field : VAR_2 ) { try { int value = Integer . METHOD_3 ( field ) ; if ( value < 0 || value > INT_1 ) { return false ; } } catch ( Exception e ) { return false ; } } return true ; } return false ; }', '[\'METHOD_3: parseInt\', \'METHOD_1: isIpAddress\', \'METHOD_2: split\', \'VAR_1: address\', \'VAR_2: fields\', \'INT_1: 255\', \'STRING_1: "\\\\\\\\."\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/HttpUtils.java', 5, '182:9', '203:9', 100, 14 ), ( 5, 191, 1, 'public static RefModel getPushLogBranch(Repository repository) {\n    List<RefModel> refs = JGitUtils.getRefs(repository, com.gitblit.Constants.R_GITBLIT);\n    for (RefModel ref : refs) {\n    if (ref.reference.getName().equals(GB_PUSHES)) {\n    return ref;\n    }\n    }\n    return null;\n    }', '[\'public\', \'static\', \'RefModel\', \'getPushLogBranch\', \'(\', \'Repository\', \'repository\', \')\', \'{\', \'List\', \'<\', \'RefModel\', \'>\', \'refs\', \'=\', \'JGitUtils\', \'.\', \'getRefs\', \'(\', \'repository\', \',\', \'com.gitblit.Constants.R_GITBLIT\', \')\', \';\', \'for\', \'(\', \'RefModel\', \'ref\', \':\', \'refs\', \')\', \'{\', \'if\', \'(\', \'ref.reference\', \'.\', \'getName\', \'(\', \')\', \'.\', \'equals\', \'(\', \'GB_PUSHES\', \')\', \')\', \'{\', \'return\', \'ref\', \';\', \'}\', \'}\', \'return\', \'null\', \';\', \'}\']', 'public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { List < TYPE_1 > VAR_2 = TYPE_3 . METHOD_2 ( VAR_1 , VAR_3 ) ; for ( TYPE_1 VAR_4 : VAR_2 ) { if ( VAR_5 . getName ( ) . equals ( VAR_6 ) ) { return VAR_4 ; } } return null ; }', '[\'TYPE_2: Repository\', \'TYPE_1: RefModel\', \'TYPE_3: JGitUtils\', \'METHOD_2: getRefs\', \'METHOD_1: getPushLogBranch\', \'VAR_4: ref\', \'VAR_2: refs\', \'VAR_3: com.gitblit.Constants.R_GITBLIT\', \'VAR_5: ref.reference\', \'VAR_1: repository\', \'VAR_6: GB_PUSHES\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/utils/PushLogUtils.java', 12, '102:9', '110:9', 62, 6 ), ( 5, 192, 4, '@Override\n    public boolean equals(Object o) {\n    if (o instanceof PathModel) {\n    PathModel other = (PathModel) o;\n    return this.path.equals(other.path);\n    }\n    return super.equals(o);\n    }', '[\'public\', \'boolean\', \'equals\', \'(\', \'Object\', \'o\', \')\', \'{\', \'if\', \'(\', \'o\', \'instanceof\', \'PathModel\', \')\', \'{\', \'PathModel\', \'other\', \'=\', \'(\', \'PathModel\', \')\', \'o\', \';\', \'return\', \'this\', \'.\', \'path\', \'.\', \'equals\', \'(\', \'other\', \'.\', \'path\', \')\', \';\', \'}\', \'return\', \'super\', \'.\', \'equals\', \'(\', \'o\', \')\', \';\', \'}\']', 'public boolean equals ( Object o ) { if ( o instanceof TYPE_1 ) { TYPE_1 VAR_1 = ( TYPE_1 ) o ; return this . path . equals ( VAR_1 . path ) ; } return super . equals ( o ) ; }', '[\'TYPE_1: PathModel\', \'VAR_1: other\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/PathModel.java', 10, '68:9', '75:9', 47, 6 ), ( 5, 192, 8, 'public PathModel(String name, String path, long size, int mode, String objectId, String commitId) {\n    this.name = name;\n    this.path = path;\n    this.size = size;\n    this.mode = mode;\n    this.objectId = objectId;\n    this.commitId = commitId;\n    }', '[\'public\', \'PathModel\', \'(\', \'String\', \'name\', \',\', \'String\', \'path\', \',\', \'long\', \'size\', \',\', \'int\', \'mode\', \',\', \'String\', \'objectId\', \',\', \'String\', \'commitId\', \')\', \'{\', \'this\', \'.\', \'name\', \'=\', \'name\', \';\', \'this\', \'.\', \'path\', \'=\', \'path\', \';\', \'this\', \'.\', \'size\', \'=\', \'size\', \';\', \'this\', \'.\', \'mode\', \'=\', \'mode\', \';\', \'this\', \'.\', \'objectId\', \'=\', \'objectId\', \';\', \'this\', \'.\', \'commitId\', \'=\', \'commitId\', \';\', \'}\']', 'public VAR_1 ( String name , String path , long size , int VAR_2 , String VAR_3 , String VAR_4 ) { this . name = name ; this . path = path ; this . size = size ; this . VAR_2 = VAR_2 ; this . VAR_3 = VAR_3 ; this . VAR_4 = VAR_4 ; }', '[\'VAR_2: mode\', \'VAR_1: PathModel\', \'VAR_4: commitId\', \'VAR_3: objectId\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/PathModel.java', 10, '42:9', '49:9', 59, 7 ), ( 5, 194, 7, 'public Activity(Date date, long duration) {\n    startDate = date;\n    endDate = new Date(date.getTime() + duration);\n    commits = new LinkedHashSet<RepositoryCommit>();\n    authorMetrics = new HashMap<String, Metric>();\n    repositoryMetrics = new HashMap<String, Metric>();\n    }', '[\'public\', \'Activity\', \'(\', \'Date\', \'date\', \',\', \'long\', \'duration\', \')\', \'{\', \'startDate\', \'=\', \'date\', \';\', \'endDate\', \'=\', \'new\', \'Date\', \'(\', \'date\', \'.\', \'getTime\', \'(\', \')\', \'+\', \'duration\', \')\', \';\', \'commits\', \'=\', \'new\', \'LinkedHashSet\', \'<\', \'RepositoryCommit\', \'>\', \'(\', \')\', \';\', \'authorMetrics\', \'=\', \'new\', \'HashMap\', \'<\', \'String\', \',\', \'Metric\', \'>\', \'(\', \')\', \';\', \'repositoryMetrics\', \'=\', \'new\', \'HashMap\', \'<\', \'String\', \',\', \'Metric\', \'>\', \'(\', \')\', \';\', \'}\']', 'public VAR_1 ( TYPE_1 VAR_2 , long VAR_3 ) { VAR_4 = VAR_2 ; VAR_5 = new TYPE_1 ( VAR_2 . METHOD_1 ( ) + VAR_3 ) ; VAR_6 = new TYPE_2 < TYPE_3 > ( ) ; VAR_7 = new HashMap < String , TYPE_4 > ( ) ; VAR_8 = new HashMap < String , TYPE_4 > ( ) ; }', '[\'TYPE_2: LinkedHashSet\', \'TYPE_4: Metric\', \'TYPE_3: RepositoryCommit\', \'TYPE_1: Date\', \'METHOD_1: getTime\', \'VAR_2: date\', \'VAR_3: duration\', \'VAR_5: endDate\', \'VAR_7: authorMetrics\', \'VAR_1: Activity\', \'VAR_6: commits\', \'VAR_8: repositoryMetrics\', \'VAR_4: startDate\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/Activity.java', 8, '70:9', '76:9', 59, 6 ), ( 5, 196, 2, 'public int getInteger(int defaultValue) {\n    try {\n    if (!StringUtils.isEmpty(currentValue)) {\n    return Integer.parseInt(currentValue.trim());\n    }\n    } catch (NumberFormatException e) {\n    }\n    return defaultValue;\n    }', '[\'public\', \'int\', \'getInteger\', \'(\', \'int\', \'defaultValue\', \')\', \'{\', \'try\', \'{\', \'if\', \'(\', \'!\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'currentValue\', \')\', \')\', \'{\', \'return\', \'Integer\', \'.\', \'parseInt\', \'(\', \'currentValue\', \'.\', \'trim\', \'(\', \')\', \')\', \';\', \'}\', \'}\', \'catch\', \'(\', \'NumberFormatException\', \'e\', \')\', \'{\', \'}\', \'return\', \'defaultValue\', \';\', \'}\']', 'public int METHOD_1 ( int VAR_1 ) { try { if ( ! StringUtils . isEmpty ( VAR_2 ) ) { return Integer . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; } } catch ( TYPE_1 e ) { } return VAR_1 ; }', '[\'TYPE_1: NumberFormatException\', \'METHOD_2: parseInt\', \'METHOD_3: trim\', \'METHOD_1: getInteger\', \'VAR_1: defaultValue\', \'VAR_2: currentValue\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/SettingModel.java', 9, '87:9', '95:9', 45, 6 ), ( 5, 196, 7, 'public Map<String, String> getMap() {\n    Map<String, String> map = new LinkedHashMap<String, String>();\n    for (String string : getStrings()) {\n    String[] kvp = string.split("=", 2);\n    String key = kvp[0];\n    String value = kvp[1];\n    map.put(key,  value);\n    }\n    return map;\n    }', '[\'public\', \'Map\', \'<\', \'String\', \',\', \'String\', \'>\', \'getMap\', \'(\', \')\', \'{\', \'Map\', \'<\', \'String\', \',\', \'String\', \'>\', \'map\', \'=\', \'new\', \'LinkedHashMap\', \'<\', \'String\', \',\', \'String\', \'>\', \'(\', \')\', \';\', \'for\', \'(\', \'String\', \'string\', \':\', \'getStrings\', \'(\', \')\', \')\', \'{\', \'String\', \'[\', \']\', \'kvp\', \'=\', \'string\', \'.\', \'split\', \'(\', \'"="\', \',\', \'2\', \')\', \';\', \'String\', \'key\', \'=\', \'kvp\', \'[\', \'0\', \']\', \';\', \'String\', \'value\', \'=\', \'kvp\', \'[\', \'1\', \']\', \';\', \'map\', \'.\', \'put\', \'(\', \'key\', \',\', \'value\', \')\', \';\', \'}\', \'return\', \'map\', \';\', \'}\']', 'public Map < String , String > METHOD_1 ( ) { Map < String , String > map = new TYPE_1 < String , String > ( ) ; for ( String VAR_1 : METHOD_2 ( ) ) { String [ ] VAR_2 = VAR_1 . METHOD_3 ( STRING_1 , 2 ) ; String key = VAR_2 [ 0 ] ; String value = VAR_2 [ 1 ] ; map . put ( key , value ) ; } return map ; }', '[\'TYPE_1: LinkedHashMap\', \'METHOD_3: split\', \'METHOD_1: getMap\', \'METHOD_2: getStrings\', \'VAR_1: string\', \'VAR_2: kvp\', \'STRING_1: "="\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/SettingModel.java', 9, '152:9', '161:9', 79, 8 ), ( 5, 197, 0, '@Override\n    public String toString() {\n    if (StringUtils.isEmpty(branch)) {\n    return repository;\n    }\n    return repository + ":" + branch;\n    }', '[\'public\', \'String\', \'toString\', \'(\', \')\', \'{\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'branch\', \')\', \')\', \'{\', \'return\', \'repository\', \';\', \'}\', \'return\', \'repository\', \'+\', \'":"\', \'+\', \'branch\', \';\', \'}\']', 'public String toString ( ) { if ( StringUtils . isEmpty ( VAR_1 ) ) { return VAR_2 ; } return VAR_2 + STRING_1 + VAR_1 ; }', '[\'VAR_2: repository\', \'VAR_1: branch\', \'STRING_1: ":"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/FeedModel.java', 6, '56:9', '62:9', 29, 5 ), ( 5, 197, 1, '@Override\n    public int compareTo(FeedModel o) {\n    int repositoryCompare = StringUtils.compareRepositoryNames(repository, o.repository);\n    if (repositoryCompare == 0) {\n    // same repository\n    if (StringUtils.isEmpty(branch)) {\n    return 1;\n    } else if (StringUtils.isEmpty(o.branch)) {\n    return -1;\n    }\n    return branch.compareTo(o.branch);\n    }\n    return repositoryCompare;\n    }', '[\'public\', \'int\', \'compareTo\', \'(\', \'FeedModel\', \'o\', \')\', \'{\', \'int\', \'repositoryCompare\', \'=\', \'StringUtils\', \'.\', \'compareRepositoryNames\', \'(\', \'repository\', \',\', \'o.repository\', \')\', \';\', \'if\', \'(\', \'repositoryCompare\', \'==\', \'0\', \')\', \'{\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'branch\', \')\', \')\', \'{\', \'return\', \'1\', \';\', \'}\', \'else\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'o.branch\', \')\', \')\', \'{\', \'return\', \'-\', \'1\', \';\', \'}\', \'return\', \'branch\', \'.\', \'compareTo\', \'(\', \'o.branch\', \')\', \';\', \'}\', \'return\', \'repositoryCompare\', \';\', \'}\']', 'public int METHOD_1 ( TYPE_1 o ) { int VAR_1 = StringUtils . METHOD_2 ( VAR_2 , VAR_3 ) ; if ( VAR_1 == 0 ) { if ( StringUtils . isEmpty ( VAR_4 ) ) { return 1 ; } else if ( StringUtils . isEmpty ( VAR_5 ) ) { return - 1 ; } return VAR_4 . METHOD_1 ( VAR_5 ) ; } return VAR_1 ; }', '[\'TYPE_1: FeedModel\', \'METHOD_2: compareRepositoryNames\', \'METHOD_1: compareTo\', \'VAR_5: o.branch\', \'VAR_1: repositoryCompare\', \'VAR_2: repository\', \'VAR_3: o.repository\', \'VAR_4: branch\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/FeedModel.java', 6, '64:9', '77:9', 78, 10 ), ( 5, 197, 3, '@Override\n    public boolean equals(Object o) {\n    if (o instanceof FeedModel) {\n    return hashCode() == o.hashCode();\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'equals\', \'(\', \'Object\', \'o\', \')\', \'{\', \'if\', \'(\', \'o\', \'instanceof\', \'FeedModel\', \')\', \'{\', \'return\', \'hashCode\', \'(\', \')\', \'==\', \'o\', \'.\', \'hashCode\', \'(\', \')\', \';\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean equals ( Object o ) { if ( o instanceof TYPE_1 ) { return METHOD_1 ( ) == o . METHOD_1 ( ) ; } return false ; }', '[\'TYPE_1: FeedModel\', \'METHOD_1: hashCode\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/FeedModel.java', 6, '84:9', '90:9', 31, 5 ), ( 5, 197, 5, 'public FeedModel(String definition) {\n    subscribed = true;\n    lastRefreshDate = new Date(0);\n    currentRefreshDate = new Date(0);\n    String[] fields = definition.split(":");\n    repository = fields[0];\n    if (fields.length > 1) {\n    branch = fields[1];\n    }\n    }', '[\'public\', \'FeedModel\', \'(\', \'String\', \'definition\', \')\', \'{\', \'subscribed\', \'=\', \'true\', \';\', \'lastRefreshDate\', \'=\', \'new\', \'Date\', \'(\', \'0\', \')\', \';\', \'currentRefreshDate\', \'=\', \'new\', \'Date\', \'(\', \'0\', \')\', \';\', \'String\', \'[\', \']\', \'fields\', \'=\', \'definition\', \'.\', \'split\', \'(\', \'":"\', \')\', \';\', \'repository\', \'=\', \'fields\', \'[\', \'0\', \']\', \';\', \'if\', \'(\', \'fields\', \'.\', \'length\', \'>\', \'1\', \')\', \'{\', \'branch\', \'=\', \'fields\', \'[\', \'1\', \']\', \';\', \'}\', \'}\']', 'public VAR_1 ( String VAR_2 ) { VAR_3 = true ; VAR_4 = new TYPE_1 ( 0 ) ; VAR_5 = new TYPE_1 ( 0 ) ; String [ ] VAR_6 = VAR_2 . METHOD_1 ( STRING_1 ) ; VAR_7 = VAR_6 [ 0 ] ; if ( VAR_6 . length > 1 ) { VAR_8 = VAR_6 [ 1 ] ; } }', '[\'TYPE_1: Date\', \'METHOD_1: split\', \'VAR_3: subscribed\', \'VAR_1: FeedModel\', \'VAR_4: lastRefreshDate\', \'VAR_5: currentRefreshDate\', \'VAR_2: definition\', \'VAR_6: fields\', \'VAR_7: repository\', \'VAR_8: branch\', \'STRING_1: ":"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/FeedModel.java', 6, '44:9', '54:9', 63, 8 ), ( 5, 198, 0, 'public String getStatus() {\n    String s = status.toString();\n    if (!StringUtils.isEmpty(owner))\n    s += " (" + owner + ")";\n    return s;\n    }', '[\'public\', \'String\', \'getStatus\', \'(\', \')\', \'{\', \'String\', \'s\', \'=\', \'status\', \'.\', \'toString\', \'(\', \')\', \';\', \'if\', \'(\', \'!\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'owner\', \')\', \')\', \'s\', \'+=\', \'" ("\', \'+\', \'owner\', \'+\', \'")"\', \';\', \'return\', \'s\', \';\', \'}\']', 'public String METHOD_1 ( ) { String s = status . toString ( ) ; if ( ! StringUtils . isEmpty ( VAR_1 ) ) s += STRING_1 + VAR_1 + STRING_2 ; return s ; }', '[\'METHOD_1: getStatus\', \'VAR_1: owner\', \'STRING_1: " ("\', \'STRING_2: ")"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/IssueModel.java', 43, '72:9', '77:9', 35, 5 ), ( 5, 198, 2, 'public List<String> getLabels() {\n    List<String> list = new ArrayList<String>();\n    String labels = null;\n    for (Change change : changes) {\n    if (change.hasField(Field.Labels)) {\n    labels = change.getString(Field.Labels);\n    }\n    }\n    if (!StringUtils.isEmpty(labels)) {\n    list.addAll(StringUtils.getStringsFromValue(labels, " "));\n    }\n    return list;\n    }', '[\'public\', \'List\', \'<\', \'String\', \'>\', \'getLabels\', \'(\', \')\', \'{\', \'List\', \'<\', \'String\', \'>\', \'list\', \'=\', \'new\', \'ArrayList\', \'<\', \'String\', \'>\', \'(\', \')\', \';\', \'String\', \'labels\', \'=\', \'null\', \';\', \'for\', \'(\', \'Change\', \'change\', \':\', \'changes\', \')\', \'{\', \'if\', \'(\', \'change\', \'.\', \'hasField\', \'(\', \'Field.Labels\', \')\', \')\', \'{\', \'labels\', \'=\', \'change\', \'.\', \'getString\', \'(\', \'Field.Labels\', \')\', \';\', \'}\', \'}\', \'if\', \'(\', \'!\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'labels\', \')\', \')\', \'{\', \'list\', \'.\', \'addAll\', \'(\', \'StringUtils\', \'.\', \'getStringsFromValue\', \'(\', \'labels\', \',\', \'" "\', \')\', \')\', \';\', \'}\', \'return\', \'list\', \';\', \'}\']', 'public List < String > METHOD_1 ( ) { List < String > list = new ArrayList < String > ( ) ; String VAR_1 = null ; for ( TYPE_1 VAR_2 : VAR_3 ) { if ( VAR_2 . METHOD_2 ( VAR_4 ) ) { VAR_1 = VAR_2 . getString ( VAR_4 ) ; } } if ( ! StringUtils . isEmpty ( VAR_1 ) ) { list . addAll ( StringUtils . METHOD_3 ( VAR_1 , STRING_1 ) ) ; } return list ; }', '[\'TYPE_1: Change\', \'METHOD_1: getLabels\', \'METHOD_3: getStringsFromValue\', \'METHOD_2: hasField\', \'VAR_4: Field.Labels\', \'VAR_2: change\', \'VAR_3: changes\', \'VAR_1: labels\', \'STRING_1: " "\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/IssueModel.java', 43, '83:9', '95:9', 89, 9 ) ;

INSERT INTO method (id_repo, id_file, id_method, code, code_tokens, abstract_code, abstract_representation, repo_name, repo_url,repo_commit, file_name, num_methods, start_method, end_method, num_tokens, num_lines) VALUES ( 5, 198, 3, 'public Attachment getAttachment(String name) {\n    Attachment attachment = null;\n    for (Change change : changes) {\n    if (change.hasAttachments()) {\n    Attachment a = change.getAttachment(name);\n    if (a != null) {\n    attachment = a;\n    }\n    }\n    }\n    return attachment;\n    }', '[\'public\', \'Attachment\', \'getAttachment\', \'(\', \'String\', \'name\', \')\', \'{\', \'Attachment\', \'attachment\', \'=\', \'null\', \';\', \'for\', \'(\', \'Change\', \'change\', \':\', \'changes\', \')\', \'{\', \'if\', \'(\', \'change\', \'.\', \'hasAttachments\', \'(\', \')\', \')\', \'{\', \'Attachment\', \'a\', \'=\', \'change\', \'.\', \'getAttachment\', \'(\', \'name\', \')\', \';\', \'if\', \'(\', \'a\', \'!=\', \'null\', \')\', \'{\', \'attachment\', \'=\', \'a\', \';\', \'}\', \'}\', \'}\', \'return\', \'attachment\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( String name ) { TYPE_1 VAR_1 = null ; for ( TYPE_2 VAR_2 : VAR_3 ) { if ( VAR_2 . METHOD_2 ( ) ) { TYPE_1 a = VAR_2 . METHOD_1 ( name ) ; if ( a != null ) { VAR_1 = a ; } } } return VAR_1 ; }', '[\'TYPE_1: Attachment\', \'TYPE_2: Change\', \'METHOD_1: getAttachment\', \'METHOD_2: hasAttachments\', \'VAR_1: attachment\', \'VAR_2: change\', \'VAR_3: changes\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/IssueModel.java', 43, '97:9', '108:9', 57, 8 ), ( 5, 198, 4, 'public List<Attachment> getAttachments() {\n    List<Attachment> list = new ArrayList<Attachment>();\n    for (Change change : changes) {\n    if (change.hasAttachments()) {\n    list.addAll(change.attachments);\n    }\n    }\n    return list;\n    }', '[\'public\', \'List\', \'<\', \'Attachment\', \'>\', \'getAttachments\', \'(\', \')\', \'{\', \'List\', \'<\', \'Attachment\', \'>\', \'list\', \'=\', \'new\', \'ArrayList\', \'<\', \'Attachment\', \'>\', \'(\', \')\', \';\', \'for\', \'(\', \'Change\', \'change\', \':\', \'changes\', \')\', \'{\', \'if\', \'(\', \'change\', \'.\', \'hasAttachments\', \'(\', \')\', \')\', \'{\', \'list\', \'.\', \'addAll\', \'(\', \'change.attachments\', \')\', \';\', \'}\', \'}\', \'return\', \'list\', \';\', \'}\']', 'public List < TYPE_1 > METHOD_1 ( ) { List < TYPE_1 > list = new ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 VAR_1 : VAR_2 ) { if ( VAR_1 . METHOD_2 ( ) ) { list . addAll ( VAR_3 ) ; } } return list ; }', '[\'TYPE_1: Attachment\', \'TYPE_2: Change\', \'METHOD_1: getAttachments\', \'METHOD_2: hasAttachments\', \'VAR_3: change.attachments\', \'VAR_1: change\', \'VAR_2: changes\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/IssueModel.java', 43, '110:9', '118:9', 52, 6 ), ( 5, 198, 6, '@Override\n    public String toString() {\n    StringBuilder sb = new StringBuilder();\n    sb.append("issue ");\n    sb.append(id.substring(0, 8));\n    sb.append(" (" + summary + ")\\n");\n    for (Change change : changes) {\n    sb.append(change);\n    sb.append(\'\\n\');\n    }\n    return sb.toString();\n    }', '[\'public\', \'String\', \'toString\', \'(\', \')\', \'{\', \'StringBuilder\', \'sb\', \'=\', \'new\', \'StringBuilder\', \'(\', \')\', \';\', \'sb\', \'.\', \'append\', \'(\', \'"issue "\', \')\', \';\', \'sb\', \'.\', \'append\', \'(\', \'id\', \'.\', \'substring\', \'(\', \'0\', \',\', \'8\', \')\', \')\', \';\', \'sb\', \'.\', \'append\', \'(\', \'" ("\', \'+\', \'summary\', \'+\', \'")\\\\n"\', \')\', \';\', \'for\', \'(\', \'Change\', \'change\', \':\', \'changes\', \')\', \'{\', \'sb\', \'.\', \'append\', \'(\', \'change\', \')\', \';\', \'sb\', \'.\', \'append\', \'(\', "\'\\\\n\'", \')\', \';\', \'}\', \'return\', \'sb\', \'.\', \'toString\', \'(\', \')\', \';\', \'}\']', 'public String toString ( ) { StringBuilder sb = new StringBuilder ( ) ; sb . append ( STRING_1 ) ; sb . append ( id . substring ( 0 , 8 ) ) ; sb . append ( STRING_2 + VAR_1 + STRING_3 ) ; for ( TYPE_1 VAR_2 : VAR_3 ) { sb . append ( VAR_2 ) ; sb . append ( CHAR_1 ) ; } return sb . toString ( ) ; }', '[\'TYPE_1: Change\', \'VAR_1: summary\', \'VAR_2: change\', \'VAR_3: changes\', "CHAR_1: \'\\\\n\'", \'STRING_1: "issue "\', \'STRING_2: " ("\', \'STRING_3: ")\\\\n"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/IssueModel.java', 43, '162:9', '173:9', 76, 10 ), ( 5, 198, 8, '@Override\n    public boolean equals(Object o) {\n    if (o instanceof IssueModel)\n    return id.equals(((IssueModel) o).id);\n    return super.equals(o);\n    }', '[\'public\', \'boolean\', \'equals\', \'(\', \'Object\', \'o\', \')\', \'{\', \'if\', \'(\', \'o\', \'instanceof\', \'IssueModel\', \')\', \'return\', \'id\', \'.\', \'equals\', \'(\', \'(\', \'(\', \'IssueModel\', \')\', \'o\', \')\', \'.\', \'id\', \')\', \';\', \'return\', \'super\', \'.\', \'equals\', \'(\', \'o\', \')\', \';\', \'}\']', 'public boolean equals ( Object o ) { if ( o instanceof TYPE_1 ) return id . equals ( ( ( TYPE_1 ) o ) . id ) ; return super . equals ( o ) ; }', '[\'TYPE_1: IssueModel\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/IssueModel.java', 43, '180:9', '185:9', 40, 5 ), ( 5, 198, 14, 'public Attachment getAttachment(String name) {\n    for (Attachment attachment : attachments) {\n    if (attachment.name.equalsIgnoreCase(name)) {\n    return attachment;\n    }\n    }\n    return null;\n    }', '[\'public\', \'Attachment\', \'getAttachment\', \'(\', \'String\', \'name\', \')\', \'{\', \'for\', \'(\', \'Attachment\', \'attachment\', \':\', \'attachments\', \')\', \'{\', \'if\', \'(\', \'attachment.name\', \'.\', \'equalsIgnoreCase\', \'(\', \'name\', \')\', \')\', \'{\', \'return\', \'attachment\', \';\', \'}\', \'}\', \'return\', \'null\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( String name ) { for ( TYPE_1 VAR_1 : VAR_2 ) { if ( VAR_3 . METHOD_2 ( name ) ) { return VAR_1 ; } } return null ; }', '[\'TYPE_1: Attachment\', \'METHOD_1: getAttachment\', \'METHOD_2: equalsIgnoreCase\', \'VAR_2: attachments\', \'VAR_1: attachment\', \'VAR_3: attachment.name\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/IssueModel.java', 43, '236:17', '243:17', 37, 5 ), ( 5, 198, 17, 'public Object getField(Field field) {\n    if (fieldChanges != null) {\n    for (FieldChange fieldChange : fieldChanges) {\n    if (fieldChange.field == field) {\n    return fieldChange.value;\n    }\n    }\n    }\n    return null;\n    }', '[\'public\', \'Object\', \'getField\', \'(\', \'Field\', \'field\', \')\', \'{\', \'if\', \'(\', \'fieldChanges\', \'!=\', \'null\', \')\', \'{\', \'for\', \'(\', \'FieldChange\', \'fieldChange\', \':\', \'fieldChanges\', \')\', \'{\', \'if\', \'(\', \'fieldChange\', \'.\', \'field\', \'==\', \'field\', \')\', \'{\', \'return\', \'fieldChange\', \'.\', \'value\', \';\', \'}\', \'}\', \'}\', \'return\', \'null\', \';\', \'}\']', 'public Object METHOD_1 ( Field field ) { if ( VAR_1 != null ) { for ( TYPE_1 VAR_2 : VAR_1 ) { if ( VAR_2 . field == field ) { return VAR_2 . value ; } } } return null ; }', '[\'TYPE_1: FieldChange\', \'METHOD_1: getField\', \'VAR_2: fieldChange\', \'VAR_1: fieldChanges\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/IssueModel.java', 43, '253:17', '262:17', 44, 6 ), ( 5, 198, 18, 'public void setField(Field field, Object value) {\n    FieldChange fieldChange = new FieldChange(field, value);\n    if (fieldChanges == null) {\n    fieldChanges = new LinkedHashSet<FieldChange>();\n    }\n    fieldChanges.add(fieldChange);\n    }', '[\'public\', \'void\', \'setField\', \'(\', \'Field\', \'field\', \',\', \'Object\', \'value\', \')\', \'{\', \'FieldChange\', \'fieldChange\', \'=\', \'new\', \'FieldChange\', \'(\', \'field\', \',\', \'value\', \')\', \';\', \'if\', \'(\', \'fieldChanges\', \'==\', \'null\', \')\', \'{\', \'fieldChanges\', \'=\', \'new\', \'LinkedHashSet\', \'<\', \'FieldChange\', \'>\', \'(\', \')\', \';\', \'}\', \'fieldChanges\', \'.\', \'add\', \'(\', \'fieldChange\', \')\', \';\', \'}\']', 'public void METHOD_1 ( Field field , Object value ) { TYPE_1 VAR_1 = new TYPE_1 ( field , value ) ; if ( VAR_2 == null ) { VAR_2 = new TYPE_2 < TYPE_1 > ( ) ; } VAR_2 . add ( VAR_1 ) ; }', '[\'TYPE_2: LinkedHashSet\', \'TYPE_1: FieldChange\', \'METHOD_1: setField\', \'VAR_1: fieldChange\', \'VAR_2: fieldChanges\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/IssueModel.java', 43, '264:17', '270:17', 47, 5 ), ( 5, 198, 19, 'public String getString(Field field) {\n    Object value = getField(field);\n    if (value == null) {\n    return null;\n    }\n    return value.toString();\n    }', '[\'public\', \'String\', \'getString\', \'(\', \'Field\', \'field\', \')\', \'{\', \'Object\', \'value\', \'=\', \'getField\', \'(\', \'field\', \')\', \';\', \'if\', \'(\', \'value\', \'==\', \'null\', \')\', \'{\', \'return\', \'null\', \';\', \'}\', \'return\', \'value\', \'.\', \'toString\', \'(\', \')\', \';\', \'}\']', 'public String getString ( Field field ) { Object value = METHOD_1 ( field ) ; if ( value == null ) { return null ; } return value . toString ( ) ; }', '[\'METHOD_1: getField\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/IssueModel.java', 43, '272:17', '278:17', 34, 5 ), ( 5, 198, 22, '@Override\n    public boolean equals(Object o) {\n    if (o instanceof Change) {\n    return id.equals(((Change) o).id);\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'equals\', \'(\', \'Object\', \'o\', \')\', \'{\', \'if\', \'(\', \'o\', \'instanceof\', \'Change\', \')\', \'{\', \'return\', \'id\', \'.\', \'equals\', \'(\', \'(\', \'(\', \'Change\', \')\', \'o\', \')\', \'.\', \'id\', \')\', \';\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean equals ( Object o ) { if ( o instanceof TYPE_1 ) { return id . equals ( ( ( TYPE_1 ) o ) . id ) ; } return false ; }', '[\'TYPE_1: Change\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/IssueModel.java', 43, '290:17', '296:17', 37, 5 ), ( 5, 198, 26, '@Override\n    public boolean equals(Object o) {\n    if (o instanceof FieldChange) {\n    return field.equals(((FieldChange) o).field);\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'equals\', \'(\', \'Object\', \'o\', \')\', \'{\', \'if\', \'(\', \'o\', \'instanceof\', \'FieldChange\', \')\', \'{\', \'return\', \'field\', \'.\', \'equals\', \'(\', \'(\', \'(\', \'FieldChange\', \')\', \'o\', \')\', \'.\', \'field\', \')\', \';\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean equals ( Object o ) { if ( o instanceof TYPE_1 ) { return field . equals ( ( ( TYPE_1 ) o ) . field ) ; } return false ; }', '[\'TYPE_1: FieldChange\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/IssueModel.java', 43, '374:17', '380:17', 37, 5 ), ( 5, 198, 29, '@Override\n    public boolean equals(Object o) {\n    if (o instanceof Attachment) {\n    return name.equalsIgnoreCase(((Attachment) o).name);\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'equals\', \'(\', \'Object\', \'o\', \')\', \'{\', \'if\', \'(\', \'o\', \'instanceof\', \'Attachment\', \')\', \'{\', \'return\', \'name\', \'.\', \'equalsIgnoreCase\', \'(\', \'(\', \'(\', \'Attachment\', \')\', \'o\', \')\', \'.\', \'name\', \')\', \';\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean equals ( Object o ) { if ( o instanceof TYPE_1 ) { return name . METHOD_1 ( ( ( TYPE_1 ) o ) . name ) ; } return false ; }', '[\'TYPE_1: Attachment\', \'METHOD_1: equalsIgnoreCase\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/IssueModel.java', 43, '407:17', '413:17', 37, 5 ), ( 5, 198, 37, 'public Status next() {\n    switch (this) {\n    case New:\n    return Started;\n    case Accepted:\n    return Started;\n    case Started:\n    return Testing;\n    case Review:\n    return Testing;\n    case Queued:\n    return Testing;\n    case Testing:\n    return Done;\n    }\n    return Accepted;\n    }', '[\'public\', \'Status\', \'next\', \'(\', \')\', \'{\', \'switch\', \'(\', \'this\', \')\', \'{\', \'case\', \'New\', \':\', \'return\', \'Started\', \';\', \'case\', \'Accepted\', \':\', \'return\', \'Started\', \';\', \'case\', \'Started\', \':\', \'return\', \'Testing\', \';\', \'case\', \'Review\', \':\', \'return\', \'Testing\', \';\', \'case\', \'Queued\', \':\', \'return\', \'Testing\', \';\', \'case\', \'Testing\', \':\', \'return\', \'Done\', \';\', \'}\', \'return\', \'Accepted\', \';\', \'}\']', 'public TYPE_1 next ( ) { switch ( this ) { case VAR_1 : return VAR_2 ; case VAR_3 : return VAR_2 ; case VAR_2 : return VAR_4 ; case VAR_5 : return VAR_4 ; case VAR_6 : return VAR_4 ; case VAR_4 : return VAR_7 ; } return VAR_3 ; }', '[\'TYPE_1: Status\', \'VAR_1: New\', \'VAR_2: Started\', \'VAR_7: Done\', \'VAR_5: Review\', \'VAR_6: Queued\', \'VAR_3: Accepted\', \'VAR_4: Testing\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/IssueModel.java', 43, '514:17', '530:17', 51, 15 ), ( 5, 198, 38, 'public IssueModel() {\n    // the first applied change set the date appropriately\n    created = new Date(0);\n    type = Type.Defect;\n    status = Status.New;\n    priority = Priority.Medium;\n    changes = new ArrayList<Change>();\n    }', '[\'public\', \'IssueModel\', \'(\', \')\', \'{\', \'created\', \'=\', \'new\', \'Date\', \'(\', \'0\', \')\', \';\', \'type\', \'=\', \'Type.Defect\', \';\', \'status\', \'=\', \'Status.New\', \';\', \'priority\', \'=\', \'Priority.Medium\', \';\', \'changes\', \'=\', \'new\', \'ArrayList\', \'<\', \'Change\', \'>\', \'(\', \')\', \';\', \'}\']', 'public VAR_1 ( ) { VAR_2 = new TYPE_1 ( 0 ) ; type = VAR_3 ; status = VAR_4 ; VAR_5 = VAR_6 ; VAR_7 = new ArrayList < TYPE_2 > ( ) ; }', '[\'TYPE_2: Change\', \'TYPE_1: Date\', \'VAR_2: created\', \'VAR_7: changes\', \'VAR_1: IssueModel\', \'VAR_3: Type.Defect\', \'VAR_4: Status.New\', \'VAR_5: priority\', \'VAR_6: Priority.Medium\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/IssueModel.java', 43, '61:9', '70:9', 41, 6 ), ( 5, 199, 8, '@Override\n    public boolean equals(Object o) {\n    if (o instanceof RepositoryCommit) {\n    RepositoryCommit commit = (RepositoryCommit) o;\n    return repository.equals(commit.repository) && getName().equals(commit.getName());\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'equals\', \'(\', \'Object\', \'o\', \')\', \'{\', \'if\', \'(\', \'o\', \'instanceof\', \'RepositoryCommit\', \')\', \'{\', \'RepositoryCommit\', \'commit\', \'=\', \'(\', \'RepositoryCommit\', \')\', \'o\', \';\', \'return\', \'repository\', \'.\', \'equals\', \'(\', \'commit.repository\', \')\', \'&&\', \'getName\', \'(\', \')\', \'.\', \'equals\', \'(\', \'commit\', \'.\', \'getName\', \'(\', \')\', \')\', \';\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean equals ( Object o ) { if ( o instanceof TYPE_1 ) { TYPE_1 VAR_1 = ( TYPE_1 ) o ; return VAR_2 . equals ( VAR_3 ) && getName ( ) . equals ( VAR_1 . getName ( ) ) ; } return false ; }', '[\'TYPE_1: RepositoryCommit\', \'VAR_3: commit.repository\', \'VAR_1: commit\', \'VAR_2: repository\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/RepositoryCommit.java', 13, '81:9', '88:9', 51, 6 ), ( 5, 199, 10, '@Override\n    public int compareTo(RepositoryCommit o) {\n    // reverse-chronological order\n    if (commit.getCommitTime() > o.commit.getCommitTime()) {\n    return -1;\n    } else if (commit.getCommitTime() < o.commit.getCommitTime()) {\n    return 1;\n    }\n    return 0;\n    }', '[\'public\', \'int\', \'compareTo\', \'(\', \'RepositoryCommit\', \'o\', \')\', \'{\', \'if\', \'(\', \'commit\', \'.\', \'getCommitTime\', \'(\', \')\', \'>\', \'o.commit\', \'.\', \'getCommitTime\', \'(\', \')\', \')\', \'{\', \'return\', \'-\', \'1\', \';\', \'}\', \'else\', \'if\', \'(\', \'commit\', \'.\', \'getCommitTime\', \'(\', \')\', \'<\', \'o.commit\', \'.\', \'getCommitTime\', \'(\', \')\', \')\', \'{\', \'return\', \'1\', \';\', \'}\', \'return\', \'0\', \';\', \'}\']', 'public int METHOD_1 ( TYPE_1 o ) { if ( VAR_1 . METHOD_2 ( ) > VAR_2 . METHOD_2 ( ) ) { return - 1 ; } else if ( VAR_1 . METHOD_2 ( ) < VAR_2 . METHOD_2 ( ) ) { return 1 ; } return 0 ; }', '[\'TYPE_1: RepositoryCommit\', \'METHOD_2: getCommitTime\', \'METHOD_1: compareTo\', \'VAR_2: o.commit\', \'VAR_1: commit\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/RepositoryCommit.java', 13, '95:9', '104:9', 54, 7 ), ( 5, 199, 11, '@Override\n    public String toString() {\n    return MessageFormat.format("{0} {1} {2,date,yyyy-MM-dd HH:mm} {3} {4}", \n    				getShortName(), branch, getCommitterIdent().getWhen(), getAuthorIdent().getName(),\n    				getShortMessage());\n    }', '[\'public\', \'String\', \'toString\', \'(\', \')\', \'{\', \'return\', \'MessageFormat\', \'.\', \'format\', \'(\', \'"{0} {1} {2\', \',\', \'getShortName\', \'(\', \')\', \',\', \'branch\', \',\', \'getCommitterIdent\', \'(\', \')\', \'.\', \'getWhen\', \'(\', \')\', \',\', \'getAuthorIdent\', \'(\', \')\', \'.\', \'getName\', \'(\', \')\', \',\', \'getShortMessage\', \'(\', \')\', \')\', \';\', \'}\']', 'public String toString ( ) { return TYPE_1 . format ( STRING_1 , METHOD_1 ( ) , VAR_1 , METHOD_2 ( ) . METHOD_3 ( ) , METHOD_4 ( ) . getName ( ) , METHOD_5 ( ) ) ; }', '[\'TYPE_1: MessageFormat\', \'METHOD_4: getAuthorIdent\', \'METHOD_5: getShortMessage\', \'METHOD_2: getCommitterIdent\', \'METHOD_3: getWhen\', \'METHOD_1: getShortName\', \'VAR_1: branch\', \'STRING_1: "{0} {1} {2\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/RepositoryCommit.java', 13, '106:9', '111:9', 36, 5 ), ( 5, 200, 10, 'public ProjectModel(String name, boolean isRoot) {\n    this.name = name;\n    this.isRoot = isRoot;\n    this.lastChange = new Date(0);\n    this.title = "";\n    this.description = "";\n    }', '[\'public\', \'ProjectModel\', \'(\', \'String\', \'name\', \',\', \'boolean\', \'isRoot\', \')\', \'{\', \'this\', \'.\', \'name\', \'=\', \'name\', \';\', \'this\', \'.\', \'isRoot\', \'=\', \'isRoot\', \';\', \'this\', \'.\', \'lastChange\', \'=\', \'new\', \'Date\', \'(\', \'0\', \')\', \';\', \'this\', \'.\', \'title\', \'=\', \'""\', \';\', \'this\', \'.\', \'description\', \'=\', \'""\', \';\', \'}\']', 'public VAR_1 ( String name , boolean VAR_2 ) { this . name = name ; this . VAR_2 = VAR_2 ; this . VAR_3 = new TYPE_1 ( 0 ) ; this . VAR_4 = STRING_1 ; this . VAR_5 = STRING_1 ; }', '[\'TYPE_1: Date\', \'VAR_2: isRoot\', \'VAR_3: lastChange\', \'VAR_5: description\', \'VAR_1: ProjectModel\', \'VAR_4: title\', \'STRING_1: ""\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/ProjectModel.java', 11, '51:9', '57:9', 45, 6 ), ( 5, 202, 0, 'public AnnotatedLine(RevCommit commit, int lineNumber, String data) {\n    this.commitId = commit.getName();\n    this.author = commit.getAuthorIdent().getName();\n    this.when = commit.getAuthorIdent().getWhen();\n    this.lineNumber = lineNumber;\n    this.data = data;\n    }', '[\'public\', \'AnnotatedLine\', \'(\', \'RevCommit\', \'commit\', \',\', \'int\', \'lineNumber\', \',\', \'String\', \'data\', \')\', \'{\', \'this\', \'.\', \'commitId\', \'=\', \'commit\', \'.\', \'getName\', \'(\', \')\', \';\', \'this\', \'.\', \'author\', \'=\', \'commit\', \'.\', \'getAuthorIdent\', \'(\', \')\', \'.\', \'getName\', \'(\', \')\', \';\', \'this\', \'.\', \'when\', \'=\', \'commit\', \'.\', \'getAuthorIdent\', \'(\', \')\', \'.\', \'getWhen\', \'(\', \')\', \';\', \'this\', \'.\', \'lineNumber\', \'=\', \'lineNumber\', \';\', \'this\', \'.\', \'data\', \'=\', \'data\', \';\', \'}\']', 'public VAR_1 ( TYPE_1 VAR_2 , int VAR_3 , String data ) { this . VAR_4 = VAR_2 . getName ( ) ; this . VAR_5 = VAR_2 . METHOD_1 ( ) . getName ( ) ; this . VAR_6 = VAR_2 . METHOD_1 ( ) . METHOD_2 ( ) ; this . VAR_3 = VAR_3 ; this . data = data ; }', '[\'TYPE_1: RevCommit\', \'METHOD_1: getAuthorIdent\', \'METHOD_2: getWhen\', \'VAR_1: AnnotatedLine\', \'VAR_5: author\', \'VAR_2: commit\', \'VAR_4: commitId\', \'VAR_3: lineNumber\', \'VAR_6: when\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/AnnotatedLine.java', 1, '40:9', '46:9', 59, 6 ), ( 5, 203, 0, '@Override\n    public int compareTo(Metric o) {\n    if (count > o.count) {\n    return -1;\n    }\n    if (count < o.count) {\n    return 1;\n    }\n    return 0;\n    }', '[\'public\', \'int\', \'compareTo\', \'(\', \'Metric\', \'o\', \')\', \'{\', \'if\', \'(\', \'count\', \'>\', \'o\', \'.\', \'count\', \')\', \'{\', \'return\', \'-\', \'1\', \';\', \'}\', \'if\', \'(\', \'count\', \'<\', \'o\', \'.\', \'count\', \')\', \'{\', \'return\', \'1\', \';\', \'}\', \'return\', \'0\', \';\', \'}\']', 'public int METHOD_1 ( TYPE_1 o ) { if ( count > o . count ) { return - 1 ; } if ( count < o . count ) { return 1 ; } return 0 ; }', '[\'TYPE_1: Metric\', \'METHOD_1: compareTo\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/Metric.java', 2, '40:9', '49:9', 41, 7 ), ( 5, 204, 5, '@Override\n    public boolean equals(Object o) {\n    if (o instanceof ForkModel) {\n    return repository.equals(((ForkModel) o).repository);\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'equals\', \'(\', \'Object\', \'o\', \')\', \'{\', \'if\', \'(\', \'o\', \'instanceof\', \'ForkModel\', \')\', \'{\', \'return\', \'repository\', \'.\', \'equals\', \'(\', \'(\', \'(\', \'ForkModel\', \')\', \'o\', \')\', \'.\', \'repository\', \')\', \';\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean equals ( Object o ) { if ( o instanceof TYPE_1 ) { return VAR_1 . equals ( ( ( TYPE_1 ) o ) . VAR_1 ) ; } return false ; }', '[\'TYPE_1: ForkModel\', \'VAR_1: repository\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/ForkModel.java', 8, '65:9', '71:9', 37, 5 ), ( 5, 205, 2, 'public String getOldId(String ref) {\n    String change = refIdChanges.get(ref);\n    if (StringUtils.isEmpty(change)) {\n    return null;\n    }\n    return change.split("-")[0];\n    }', '[\'public\', \'String\', \'getOldId\', \'(\', \'String\', \'ref\', \')\', \'{\', \'String\', \'change\', \'=\', \'refIdChanges\', \'.\', \'get\', \'(\', \'ref\', \')\', \';\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'change\', \')\', \')\', \'{\', \'return\', \'null\', \';\', \'}\', \'return\', \'change\', \'.\', \'split\', \'(\', \'"-"\', \')\', \'[\', \'0\', \']\', \';\', \'}\']', 'public String METHOD_1 ( String VAR_1 ) { String VAR_2 = VAR_3 . get ( VAR_1 ) ; if ( StringUtils . isEmpty ( VAR_2 ) ) { return null ; } return VAR_2 . METHOD_2 ( STRING_1 ) [ 0 ] ; }', '[\'METHOD_1: getOldId\', \'METHOD_2: split\', \'VAR_1: ref\', \'VAR_3: refIdChanges\', \'VAR_2: change\', \'STRING_1: "-"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/PushLogEntry.java', 22, '110:9', '116:9', 44, 5 ), ( 5, 205, 3, 'public String getNewId(String ref) {\n    String change = refIdChanges.get(ref);\n    if (StringUtils.isEmpty(change)) {\n    return null;\n    }\n    return change.split("-")[1];\n    }', '[\'public\', \'String\', \'getNewId\', \'(\', \'String\', \'ref\', \')\', \'{\', \'String\', \'change\', \'=\', \'refIdChanges\', \'.\', \'get\', \'(\', \'ref\', \')\', \';\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'change\', \')\', \')\', \'{\', \'return\', \'null\', \';\', \'}\', \'return\', \'change\', \'.\', \'split\', \'(\', \'"-"\', \')\', \'[\', \'1\', \']\', \';\', \'}\']', 'public String METHOD_1 ( String VAR_1 ) { String VAR_2 = VAR_3 . get ( VAR_1 ) ; if ( StringUtils . isEmpty ( VAR_2 ) ) { return null ; } return VAR_2 . METHOD_2 ( STRING_1 ) [ 1 ] ; }', '[\'METHOD_2: split\', \'METHOD_1: getNewId\', \'VAR_1: ref\', \'VAR_3: refIdChanges\', \'VAR_2: change\', \'STRING_1: "-"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/PushLogEntry.java', 22, '124:9', '130:9', 44, 5 ), ( 5, 205, 5, 'public RepositoryCommit addCommit(String branch, RevCommit commit) {\n    RepositoryCommit commitModel = new RepositoryCommit(repository, branch, commit);\n    if (commits.add(commitModel)) {\n    return commitModel;\n    }\n    return null;\n    }', '[\'public\', \'RepositoryCommit\', \'addCommit\', \'(\', \'String\', \'branch\', \',\', \'RevCommit\', \'commit\', \')\', \'{\', \'RepositoryCommit\', \'commitModel\', \'=\', \'new\', \'RepositoryCommit\', \'(\', \'repository\', \',\', \'branch\', \',\', \'commit\', \')\', \';\', \'if\', \'(\', \'commits\', \'.\', \'add\', \'(\', \'commitModel\', \')\', \')\', \'{\', \'return\', \'commitModel\', \';\', \'}\', \'return\', \'null\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( String VAR_1 , TYPE_2 VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( VAR_4 , VAR_1 , VAR_2 ) ; if ( VAR_5 . add ( VAR_3 ) ) { return VAR_3 ; } return null ; }', '[\'TYPE_1: RepositoryCommit\', \'TYPE_2: RevCommit\', \'METHOD_1: addCommit\', \'VAR_2: commit\', \'VAR_5: commits\', \'VAR_3: commitModel\', \'VAR_4: repository\', \'VAR_1: branch\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/PushLogEntry.java', 22, '152:9', '158:9', 42, 5 ), ( 5, 205, 7, 'public boolean isNonFastForward() {\n    for (Map.Entry<String, ReceiveCommand.Type> entry : refUpdates.entrySet()) {\n    if (ReceiveCommand.Type.UPDATE_NONFASTFORWARD.equals(entry.getValue())) {\n    return true;\n    }\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'isNonFastForward\', \'(\', \')\', \'{\', \'for\', \'(\', \'Map\', \'.\', \'Entry\', \'<\', \'String\', \',\', \'ReceiveCommand\', \'.\', \'Type\', \'>\', \'entry\', \':\', \'refUpdates\', \'.\', \'entrySet\', \'(\', \')\', \')\', \'{\', \'if\', \'(\', \'ReceiveCommand.Type.UPDATE_NONFASTFORWARD\', \'.\', \'equals\', \'(\', \'entry\', \'.\', \'getValue\', \'(\', \')\', \')\', \')\', \'{\', \'return\', \'true\', \';\', \'}\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean METHOD_1 ( ) { for ( Map . Entry < String , TYPE_1 . Type > entry : VAR_1 . entrySet ( ) ) { if ( TYPE_2 . equals ( entry . getValue ( ) ) ) { return true ; } } return false ; }', '[\'TYPE_1: ReceiveCommand\', \'TYPE_2: ReceiveCommand.Type.UPDATE_NONFASTFORWARD\', \'METHOD_1: isNonFastForward\', \'VAR_1: refUpdates\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/PushLogEntry.java', 22, '175:9', '182:9', 51, 5 ), ( 5, 205, 8, 'public boolean isNonFastForward(String ref) {\n    ReceiveCommand.Type type = refUpdates.get(ref);\n    if (type == null) {\n    return false;\n    }\n    return ReceiveCommand.Type.UPDATE_NONFASTFORWARD.equals(type);\n    }', '[\'public\', \'boolean\', \'isNonFastForward\', \'(\', \'String\', \'ref\', \')\', \'{\', \'ReceiveCommand\', \'.\', \'Type\', \'type\', \'=\', \'refUpdates\', \'.\', \'get\', \'(\', \'ref\', \')\', \';\', \'if\', \'(\', \'type\', \'==\', \'null\', \')\', \'{\', \'return\', \'false\', \';\', \'}\', \'return\', \'ReceiveCommand.Type.UPDATE_NONFASTFORWARD\', \'.\', \'equals\', \'(\', \'type\', \')\', \';\', \'}\']', 'public boolean METHOD_1 ( String VAR_1 ) { TYPE_1 . Type type = VAR_2 . get ( VAR_1 ) ; if ( type == null ) { return false ; } return TYPE_2 . equals ( type ) ; }', '[\'TYPE_1: ReceiveCommand\', \'TYPE_2: ReceiveCommand.Type.UPDATE_NONFASTFORWARD\', \'METHOD_1: isNonFastForward\', \'VAR_1: ref\', \'VAR_2: refUpdates\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/PushLogEntry.java', 22, '190:9', '196:9', 44, 5 ), ( 5, 205, 9, 'public boolean isDelete(String ref) {\n    ReceiveCommand.Type type = refUpdates.get(ref);\n    if (type == null) {\n    return false;\n    }\n    return ReceiveCommand.Type.DELETE.equals(type);\n    }', '[\'public\', \'boolean\', \'isDelete\', \'(\', \'String\', \'ref\', \')\', \'{\', \'ReceiveCommand\', \'.\', \'Type\', \'type\', \'=\', \'refUpdates\', \'.\', \'get\', \'(\', \'ref\', \')\', \';\', \'if\', \'(\', \'type\', \'==\', \'null\', \')\', \'{\', \'return\', \'false\', \';\', \'}\', \'return\', \'ReceiveCommand.Type.DELETE\', \'.\', \'equals\', \'(\', \'type\', \')\', \';\', \'}\']', 'public boolean METHOD_1 ( String VAR_1 ) { TYPE_1 . Type type = VAR_2 . get ( VAR_1 ) ; if ( type == null ) { return false ; } return TYPE_2 . equals ( type ) ; }', '[\'TYPE_1: ReceiveCommand\', \'TYPE_2: ReceiveCommand.Type.DELETE\', \'METHOD_1: isDelete\', \'VAR_1: ref\', \'VAR_2: refUpdates\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/PushLogEntry.java', 22, '204:9', '210:9', 44, 5 ), ( 5, 205, 13, 'protected List<String> getChangedRefs(String baseRef) {\n    Set<String> refs = new HashSet<String>();\n    for (String ref : refUpdates.keySet()) {\n    if (baseRef == null || ref.startsWith(baseRef)) {\n    refs.add(ref);\n    }\n    }\n    List<String> list = new ArrayList<String>(refs);\n    Collections.sort(list);\n    return list;\n    }', '[\'protected\', \'List\', \'<\', \'String\', \'>\', \'getChangedRefs\', \'(\', \'String\', \'baseRef\', \')\', \'{\', \'Set\', \'<\', \'String\', \'>\', \'refs\', \'=\', \'new\', \'HashSet\', \'<\', \'String\', \'>\', \'(\', \')\', \';\', \'for\', \'(\', \'String\', \'ref\', \':\', \'refUpdates\', \'.\', \'keySet\', \'(\', \')\', \')\', \'{\', \'if\', \'(\', \'baseRef\', \'==\', \'null\', \'||\', \'ref\', \'.\', \'startsWith\', \'(\', \'baseRef\', \')\', \')\', \'{\', \'refs\', \'.\', \'add\', \'(\', \'ref\', \')\', \';\', \'}\', \'}\', \'List\', \'<\', \'String\', \'>\', \'list\', \'=\', \'new\', \'ArrayList\', \'<\', \'String\', \'>\', \'(\', \'refs\', \')\', \';\', \'Collections\', \'.\', \'sort\', \'(\', \'list\', \')\', \';\', \'return\', \'list\', \';\', \'}\']', 'protected List < String > METHOD_1 ( String VAR_1 ) { Set < String > VAR_2 = new TYPE_1 < String > ( ) ; for ( String VAR_3 : VAR_4 . METHOD_2 ( ) ) { if ( VAR_1 == null || VAR_3 . startsWith ( VAR_1 ) ) { VAR_2 . add ( VAR_3 ) ; } } List < String > list = new ArrayList < String > ( VAR_2 ) ; Collections . METHOD_3 ( list ) ; return list ; }', '[\'TYPE_1: HashSet\', \'METHOD_1: getChangedRefs\', \'METHOD_3: sort\', \'METHOD_2: keySet\', \'VAR_3: ref\', \'VAR_2: refs\', \'VAR_4: refUpdates\', \'VAR_1: baseRef\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/PushLogEntry.java', 22, '245:9', '255:9', 84, 8 ), ( 5, 205, 16, 'public List<RepositoryCommit> getCommits(String ref) {\n    List<RepositoryCommit> list = new ArrayList<RepositoryCommit>();\n    for (RepositoryCommit commit : commits) {\n    if (commit.branch.equals(ref)) {\n    list.add(commit);\n    }\n    }\n    Collections.sort(list);\n    return list;\n    }', '[\'public\', \'List\', \'<\', \'RepositoryCommit\', \'>\', \'getCommits\', \'(\', \'String\', \'ref\', \')\', \'{\', \'List\', \'<\', \'RepositoryCommit\', \'>\', \'list\', \'=\', \'new\', \'ArrayList\', \'<\', \'RepositoryCommit\', \'>\', \'(\', \')\', \';\', \'for\', \'(\', \'RepositoryCommit\', \'commit\', \':\', \'commits\', \')\', \'{\', \'if\', \'(\', \'commit.branch\', \'.\', \'equals\', \'(\', \'ref\', \')\', \')\', \'{\', \'list\', \'.\', \'add\', \'(\', \'commit\', \')\', \';\', \'}\', \'}\', \'Collections\', \'.\', \'sort\', \'(\', \'list\', \')\', \';\', \'return\', \'list\', \';\', \'}\']', 'public List < TYPE_1 > METHOD_1 ( String VAR_1 ) { List < TYPE_1 > list = new ArrayList < TYPE_1 > ( ) ; for ( TYPE_1 VAR_2 : VAR_3 ) { if ( VAR_4 . equals ( VAR_1 ) ) { list . add ( VAR_2 ) ; } } Collections . METHOD_2 ( list ) ; return list ; }', '[\'TYPE_1: RepositoryCommit\', \'METHOD_1: getCommits\', \'METHOD_2: sort\', \'VAR_1: ref\', \'VAR_4: commit.branch\', \'VAR_2: commit\', \'VAR_3: commits\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/PushLogEntry.java', 22, '283:9', '292:9', 64, 7 ), ( 5, 205, 21, 'public PushLogEntry(String repository, Date date, UserModel user) {\n    this.repository = repository;\n    this.date = date;\n    this.user = user;\n    this.commits = new LinkedHashSet<RepositoryCommit>();\n    this.refUpdates = new HashMap<String, ReceiveCommand.Type>();\n    this.refIdChanges = new HashMap<String, String>();\n    }', '[\'public\', \'PushLogEntry\', \'(\', \'String\', \'repository\', \',\', \'Date\', \'date\', \',\', \'UserModel\', \'user\', \')\', \'{\', \'this\', \'.\', \'repository\', \'=\', \'repository\', \';\', \'this\', \'.\', \'date\', \'=\', \'date\', \';\', \'this\', \'.\', \'user\', \'=\', \'user\', \';\', \'this\', \'.\', \'commits\', \'=\', \'new\', \'LinkedHashSet\', \'<\', \'RepositoryCommit\', \'>\', \'(\', \')\', \';\', \'this\', \'.\', \'refUpdates\', \'=\', \'new\', \'HashMap\', \'<\', \'String\', \',\', \'ReceiveCommand\', \'.\', \'Type\', \'>\', \'(\', \')\', \';\', \'this\', \'.\', \'refIdChanges\', \'=\', \'new\', \'HashMap\', \'<\', \'String\', \',\', \'String\', \'>\', \'(\', \')\', \';\', \'}\']', 'public VAR_1 ( String VAR_2 , TYPE_1 VAR_3 , TYPE_2 VAR_4 ) { this . VAR_2 = VAR_2 ; this . VAR_3 = VAR_3 ; this . VAR_4 = VAR_4 ; this . VAR_5 = new TYPE_3 < TYPE_4 > ( ) ; this . VAR_6 = new HashMap < String , TYPE_5 . Type > ( ) ; this . VAR_7 = new HashMap < String , String > ( ) ; }', '[\'TYPE_2: UserModel\', \'TYPE_3: LinkedHashSet\', \'TYPE_5: ReceiveCommand\', \'TYPE_4: RepositoryCommit\', \'TYPE_1: Date\', \'VAR_3: date\', \'VAR_7: refIdChanges\', \'VAR_5: commits\', \'VAR_1: PushLogEntry\', \'VAR_2: repository\', \'VAR_6: refUpdates\', \'VAR_4: user\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/PushLogEntry.java', 22, '68:9', '75:9', 71, 7 ), ( 5, 206, 5, 'public boolean hasRepositoryPermission(String name) {\n    String repository = AccessPermission.repositoryFromRole(name).toLowerCase();\n    if (permissions.containsKey(repository)) {\n    // exact repository permission specified\n    return true;\n    } else {\n    // search for regex permission match\n    for (String key : permissions.keySet()) {\n    if (name.matches(key)) {\n    AccessPermission p = permissions.get(key);\n    if (p != null) {\n    return true;\n    }\n    }\n    }\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'hasRepositoryPermission\', \'(\', \'String\', \'name\', \')\', \'{\', \'String\', \'repository\', \'=\', \'AccessPermission\', \'.\', \'repositoryFromRole\', \'(\', \'name\', \')\', \'.\', \'toLowerCase\', \'(\', \')\', \';\', \'if\', \'(\', \'permissions\', \'.\', \'containsKey\', \'(\', \'repository\', \')\', \')\', \'{\', \'return\', \'true\', \';\', \'}\', \'else\', \'{\', \'for\', \'(\', \'String\', \'key\', \':\', \'permissions\', \'.\', \'keySet\', \'(\', \')\', \')\', \'{\', \'if\', \'(\', \'name\', \'.\', \'matches\', \'(\', \'key\', \')\', \')\', \'{\', \'AccessPermission\', \'p\', \'=\', \'permissions\', \'.\', \'get\', \'(\', \'key\', \')\', \';\', \'if\', \'(\', \'p\', \'!=\', \'null\', \')\', \'{\', \'return\', \'true\', \';\', \'}\', \'}\', \'}\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean METHOD_1 ( String name ) { String VAR_1 = TYPE_1 . METHOD_2 ( name ) . METHOD_3 ( ) ; if ( VAR_2 . containsKey ( VAR_1 ) ) { return true ; } else { for ( String key : VAR_2 . METHOD_4 ( ) ) { if ( name . METHOD_5 ( key ) ) { TYPE_1 p = VAR_2 . get ( key ) ; if ( p != null ) { return true ; } } } } return false ; }', '[\'TYPE_1: AccessPermission\', \'METHOD_1: hasRepositoryPermission\', \'METHOD_2: repositoryFromRole\', \'METHOD_3: toLowerCase\', \'METHOD_4: keySet\', \'METHOD_5: matches\', \'VAR_2: permissions\', \'VAR_1: repository\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/TeamModel.java', 27, '128:9', '145:9', 88, 11 ), ( 5, 206, 7, 'public void addRepositoryPermission(String role) {\n    AccessPermission permission = AccessPermission.permissionFromRole(role);\n    String repository = AccessPermission.repositoryFromRole(role).toLowerCase();\n    repositories.add(repository);\n    permissions.put(repository, permission);\n    }', '[\'public\', \'void\', \'addRepositoryPermission\', \'(\', \'String\', \'role\', \')\', \'{\', \'AccessPermission\', \'permission\', \'=\', \'AccessPermission\', \'.\', \'permissionFromRole\', \'(\', \'role\', \')\', \';\', \'String\', \'repository\', \'=\', \'AccessPermission\', \'.\', \'repositoryFromRole\', \'(\', \'role\', \')\', \'.\', \'toLowerCase\', \'(\', \')\', \';\', \'repositories\', \'.\', \'add\', \'(\', \'repository\', \')\', \';\', \'permissions\', \'.\', \'put\', \'(\', \'repository\', \',\', \'permission\', \')\', \';\', \'}\']', 'public void METHOD_1 ( String VAR_1 ) { TYPE_1 VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 ) ; String VAR_3 = TYPE_1 . METHOD_3 ( VAR_1 ) . METHOD_4 ( ) ; VAR_4 . add ( VAR_3 ) ; VAR_5 . put ( VAR_3 , VAR_2 ) ; }', '[\'TYPE_1: AccessPermission\', \'METHOD_3: repositoryFromRole\', \'METHOD_4: toLowerCase\', \'METHOD_1: addRepositoryPermission\', \'METHOD_2: permissionFromRole\', \'VAR_1: role\', \'VAR_4: repositories\', \'VAR_5: permissions\', \'VAR_2: permission\', \'VAR_3: repository\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/TeamModel.java', 27, '169:9', '174:9', 48, 5 ), ( 5, 206, 12, 'protected boolean canAccess(RepositoryModel repository, AccessRestrictionType ifRestriction, AccessPermission requirePermission) {\n    if (repository.accessRestriction.atLeast(ifRestriction)) {\n    RegistrantAccessPermission ap = getRepositoryPermission(repository);\n    return ap.permission.atLeast(requirePermission);\n    }\n    return true;\n    }', '[\'protected\', \'boolean\', \'canAccess\', \'(\', \'RepositoryModel\', \'repository\', \',\', \'AccessRestrictionType\', \'ifRestriction\', \',\', \'AccessPermission\', \'requirePermission\', \')\', \'{\', \'if\', \'(\', \'repository.accessRestriction\', \'.\', \'atLeast\', \'(\', \'ifRestriction\', \')\', \')\', \'{\', \'RegistrantAccessPermission\', \'ap\', \'=\', \'getRepositoryPermission\', \'(\', \'repository\', \')\', \';\', \'return\', \'ap.permission\', \'.\', \'atLeast\', \'(\', \'requirePermission\', \')\', \';\', \'}\', \'return\', \'true\', \';\', \'}\']', 'protected boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { if ( VAR_4 . METHOD_2 ( VAR_2 ) ) { TYPE_4 VAR_5 = METHOD_3 ( VAR_1 ) ; return VAR_6 . METHOD_2 ( VAR_3 ) ; } return true ; }', '[\'TYPE_4: RegistrantAccessPermission\', \'TYPE_3: AccessPermission\', \'TYPE_2: AccessRestrictionType\', \'TYPE_1: RepositoryModel\', \'METHOD_1: canAccess\', \'METHOD_2: atLeast\', \'METHOD_3: getRepositoryPermission\', \'VAR_4: repository.accessRestriction\', \'VAR_6: ap.permission\', \'VAR_3: requirePermission\', \'VAR_1: repository\', \'VAR_2: ifRestriction\', \'VAR_5: ap\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/TeamModel.java', 27, '286:9', '292:9', 49, 5 ), ( 5, 207, 0, 'public String getId() {\n    switch (type) {\n    case blob:\n    return path;\n    case commit:\n    return commitId;\n    case issue:\n    return issueId;\n    }\n    return commitId;\n    }', '[\'public\', \'String\', \'getId\', \'(\', \')\', \'{\', \'switch\', \'(\', \'type\', \')\', \'{\', \'case\', \'blob\', \':\', \'return\', \'path\', \';\', \'case\', \'commit\', \':\', \'return\', \'commitId\', \';\', \'case\', \'issue\', \':\', \'return\', \'issueId\', \';\', \'}\', \'return\', \'commitId\', \';\', \'}\']', 'public String getId ( ) { switch ( type ) { case VAR_1 : return path ; case VAR_2 : return VAR_3 ; case VAR_4 : return VAR_5 ; } return VAR_3 ; }', '[\'VAR_5: issueId\', \'VAR_1: blob\', \'VAR_4: issue\', \'VAR_2: commit\', \'VAR_3: commitId\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/SearchResult.java', 3, '54:9', '64:9', 33, 9 ), ( 5, 211, 0, 'public List<String> getLocalBranches() {\n    if (ArrayUtils.isEmpty(availableRefs)) {\n    return new ArrayList<String>();\n    }\n    List<String> localBranches = new ArrayList<String>();\n    for (String ref : availableRefs) {\n    if (ref.startsWith("refs/heads")) {\n    localBranches.add(ref);\n    }\n    }\n    return localBranches;\n    }', '[\'public\', \'List\', \'<\', \'String\', \'>\', \'getLocalBranches\', \'(\', \')\', \'{\', \'if\', \'(\', \'ArrayUtils\', \'.\', \'isEmpty\', \'(\', \'availableRefs\', \')\', \')\', \'{\', \'return\', \'new\', \'ArrayList\', \'<\', \'String\', \'>\', \'(\', \')\', \';\', \'}\', \'List\', \'<\', \'String\', \'>\', \'localBranches\', \'=\', \'new\', \'ArrayList\', \'<\', \'String\', \'>\', \'(\', \')\', \';\', \'for\', \'(\', \'String\', \'ref\', \':\', \'availableRefs\', \')\', \'{\', \'if\', \'(\', \'ref\', \'.\', \'startsWith\', \'(\', \'"refs/heads"\', \')\', \')\', \'{\', \'localBranches\', \'.\', \'add\', \'(\', \'ref\', \')\', \';\', \'}\', \'}\', \'return\', \'localBranches\', \';\', \'}\']', 'public List < String > METHOD_1 ( ) { if ( TYPE_1 . isEmpty ( VAR_1 ) ) { return new ArrayList < String > ( ) ; } List < String > VAR_2 = new ArrayList < String > ( ) ; for ( String VAR_3 : VAR_1 ) { if ( VAR_3 . startsWith ( STRING_1 ) ) { VAR_2 . add ( VAR_3 ) ; } } return VAR_2 ; }', '[\'TYPE_1: ArrayUtils\', \'METHOD_1: getLocalBranches\', \'VAR_3: ref\', \'VAR_1: availableRefs\', \'VAR_2: localBranches\', \'STRING_1: "refs/heads"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/RepositoryModel.java', 21, '109:9', '120:9', 71, 8 ), ( 5, 211, 5, '@Override\n    public boolean equals(Object o) {\n    if (o instanceof RepositoryModel) {\n    return name.equals(((RepositoryModel) o).name);\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'equals\', \'(\', \'Object\', \'o\', \')\', \'{\', \'if\', \'(\', \'o\', \'instanceof\', \'RepositoryModel\', \')\', \'{\', \'return\', \'name\', \'.\', \'equals\', \'(\', \'(\', \'(\', \'RepositoryModel\', \')\', \'o\', \')\', \'.\', \'name\', \')\', \';\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean equals ( Object o ) { if ( o instanceof TYPE_1 ) { return name . equals ( ( ( TYPE_1 ) o ) . name ) ; } return false ; }', '[\'TYPE_1: RepositoryModel\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/RepositoryModel.java', 21, '145:9', '151:9', 37, 5 ), ( 5, 211, 6, '@Override\n    public String toString() {\n    if (displayName == null) {\n    displayName = StringUtils.stripDotGit(name);\n    }\n    return displayName;\n    }', '[\'public\', \'String\', \'toString\', \'(\', \')\', \'{\', \'if\', \'(\', \'displayName\', \'==\', \'null\', \')\', \'{\', \'displayName\', \'=\', \'StringUtils\', \'.\', \'stripDotGit\', \'(\', \'name\', \')\', \';\', \'}\', \'return\', \'displayName\', \';\', \'}\']', 'public String toString ( ) { if ( VAR_1 == null ) { VAR_1 = StringUtils . METHOD_1 ( name ) ; } return VAR_1 ; }', '[\'METHOD_1: stripDotGit\', \'VAR_1: displayName\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/RepositoryModel.java', 21, '153:9', '159:9', 28, 5 ), ( 5, 211, 15, 'public void addOwner(String username) {\n    if (!StringUtils.isEmpty(username)) {\n    String name = username.toLowerCase();\n    // a set would be more efficient, but this complicates JSON\n    // deserialization so we enforce uniqueness with an arraylist\n    if (!owners.contains(name)) {\n    owners.add(name);\n    }\n    }\n    }', '[\'public\', \'void\', \'addOwner\', \'(\', \'String\', \'username\', \')\', \'{\', \'if\', \'(\', \'!\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'username\', \')\', \')\', \'{\', \'String\', \'name\', \'=\', \'username\', \'.\', \'toLowerCase\', \'(\', \')\', \';\', \'if\', \'(\', \'!\', \'owners\', \'.\', \'contains\', \'(\', \'name\', \')\', \')\', \'{\', \'owners\', \'.\', \'add\', \'(\', \'name\', \')\', \';\', \'}\', \'}\', \'}\']', 'public void METHOD_1 ( String VAR_1 ) { if ( ! StringUtils . isEmpty ( VAR_1 ) ) { String name = VAR_1 . METHOD_2 ( ) ; if ( ! VAR_2 . contains ( name ) ) { VAR_2 . add ( name ) ; } } }', '[\'METHOD_1: addOwner\', \'METHOD_2: toLowerCase\', \'VAR_2: owners\', \'VAR_1: username\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/RepositoryModel.java', 21, '214:9', '223:9', 50, 5 ), ( 5, 212, 1, '@Override\n    public boolean equals(Object o) {\n    if (o instanceof TicketModel) {\n    TicketModel other = (TicketModel) o;\n    return id.equals(other.id);\n    }\n    return super.equals(o);\n    }', '[\'public\', \'boolean\', \'equals\', \'(\', \'Object\', \'o\', \')\', \'{\', \'if\', \'(\', \'o\', \'instanceof\', \'TicketModel\', \')\', \'{\', \'TicketModel\', \'other\', \'=\', \'(\', \'TicketModel\', \')\', \'o\', \';\', \'return\', \'id\', \'.\', \'equals\', \'(\', \'other\', \'.\', \'id\', \')\', \';\', \'}\', \'return\', \'super\', \'.\', \'equals\', \'(\', \'o\', \')\', \';\', \'}\']', 'public boolean equals ( Object o ) { if ( o instanceof TYPE_1 ) { TYPE_1 VAR_1 = ( TYPE_1 ) o ; return id . equals ( VAR_1 . id ) ; } return super . equals ( o ) ; }', '[\'TYPE_1: TicketModel\', \'VAR_1: other\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/TicketModel.java', 8, '64:9', '71:9', 45, 6 ), ( 5, 212, 4, '@Override\n    public boolean equals(Object o) {\n    if (o instanceof Comment) {\n    Comment other = (Comment) o;\n    return text.equals(other.text);\n    }\n    return super.equals(o);\n    }', '[\'public\', \'boolean\', \'equals\', \'(\', \'Object\', \'o\', \')\', \'{\', \'if\', \'(\', \'o\', \'instanceof\', \'Comment\', \')\', \'{\', \'Comment\', \'other\', \'=\', \'(\', \'Comment\', \')\', \'o\', \';\', \'return\', \'text\', \'.\', \'equals\', \'(\', \'other\', \'.\', \'text\', \')\', \';\', \'}\', \'return\', \'super\', \'.\', \'equals\', \'(\', \'o\', \')\', \';\', \'}\']', 'public boolean equals ( Object o ) { if ( o instanceof TYPE_1 ) { TYPE_1 VAR_1 = ( TYPE_1 ) o ; return text . equals ( VAR_1 . text ) ; } return super . equals ( o ) ; }', '[\'TYPE_1: Comment\', \'VAR_1: other\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/TicketModel.java', 8, '105:17', '112:17', 45, 6 ), ( 5, 212, 6, 'public TicketModel(String ticketName) throws ParseException {\n    state = "";\n    name = ticketName;\n    comments = new ArrayList<Comment>();\n    tags = new ArrayList<String>();\n    String[] chunks = name.split("_");\n    if (chunks.length == 3) {\n    date = new Date(Long.parseLong(chunks[0]) * 1000L);\n    title = chunks[1].replace(\'-\', \' \');\n    }\n    }', '[\'public\', \'TicketModel\', \'(\', \'String\', \'ticketName\', \')\', \'throws\', \'ParseException\', \'{\', \'state\', \'=\', \'""\', \';\', \'name\', \'=\', \'ticketName\', \';\', \'comments\', \'=\', \'new\', \'ArrayList\', \'<\', \'Comment\', \'>\', \'(\', \')\', \';\', \'tags\', \'=\', \'new\', \'ArrayList\', \'<\', \'String\', \'>\', \'(\', \')\', \';\', \'String\', \'[\', \']\', \'chunks\', \'=\', \'name\', \'.\', \'split\', \'(\', \'"_"\', \')\', \';\', \'if\', \'(\', \'chunks\', \'.\', \'length\', \'==\', \'3\', \')\', \'{\', \'date\', \'=\', \'new\', \'Date\', \'(\', \'Long\', \'.\', \'parseLong\', \'(\', \'chunks\', \'[\', \'0\', \']\', \')\', \'*\', \'1000L\', \')\', \';\', \'title\', \'=\', \'chunks\', \'[\', \'1\', \']\', \'.\', \'replace\', \'(\', "\'-\'", \',\', "\' \'", \')\', \';\', \'}\', \'}\']', 'public VAR_1 ( String VAR_2 ) throws TYPE_1 { state = STRING_1 ; name = VAR_2 ; VAR_3 = new ArrayList < TYPE_2 > ( ) ; VAR_4 = new ArrayList < String > ( ) ; String [ ] VAR_5 = name . METHOD_1 ( STRING_2 ) ; if ( VAR_5 . length == 3 ) { VAR_6 = new TYPE_3 ( Long . METHOD_2 ( VAR_5 [ 0 ] ) * INT_1 ) ; VAR_7 = VAR_5 [ 1 ] . METHOD_3 ( CHAR_1 , CHAR_2 ) ; } }', '[\'TYPE_2: Comment\', \'TYPE_1: ParseException\', \'TYPE_3: Date\', \'METHOD_1: split\', \'METHOD_2: parseLong\', \'METHOD_3: replace\', \'VAR_6: date\', \'VAR_3: comments\', \'VAR_5: chunks\', \'VAR_1: TicketModel\', \'VAR_7: title\', \'VAR_2: ticketName\', \'VAR_4: tags\', "CHAR_1: \'-\'", "CHAR_2: \' \'", \'INT_1: 1000L\', \'STRING_1: ""\', \'STRING_2: "_"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/TicketModel.java', 8, '46:9', '57:9', 89, 9 ), ( 5, 212, 7, 'public Comment(String filename, String content) throws ParseException {\n    String[] chunks = filename.split("_", -1);\n    this.date = new Date(Long.parseLong(chunks[1]) * 1000L);\n    this.author = chunks[2];\n    this.text = content;\n    }', '[\'public\', \'Comment\', \'(\', \'String\', \'filename\', \',\', \'String\', \'content\', \')\', \'throws\', \'ParseException\', \'{\', \'String\', \'[\', \']\', \'chunks\', \'=\', \'filename\', \'.\', \'split\', \'(\', \'"_"\', \',\', \'-\', \'1\', \')\', \';\', \'this\', \'.\', \'date\', \'=\', \'new\', \'Date\', \'(\', \'Long\', \'.\', \'parseLong\', \'(\', \'chunks\', \'[\', \'1\', \']\', \')\', \'*\', \'1000L\', \')\', \';\', \'this\', \'.\', \'author\', \'=\', \'chunks\', \'[\', \'2\', \']\', \';\', \'this\', \'.\', \'text\', \'=\', \'content\', \';\', \'}\']', 'public VAR_1 ( String VAR_2 , String content ) throws TYPE_1 { String [ ] VAR_3 = VAR_2 . METHOD_1 ( STRING_1 , - 1 ) ; this . VAR_4 = new TYPE_2 ( Long . METHOD_2 ( VAR_3 [ 1 ] ) * INT_1 ) ; this . VAR_5 = VAR_3 [ 2 ] ; this . text = content ; }', '[\'TYPE_1: ParseException\', \'TYPE_2: Date\', \'METHOD_1: split\', \'METHOD_2: parseLong\', \'VAR_4: date\', \'VAR_1: Comment\', \'VAR_2: filename\', \'VAR_3: chunks\', \'VAR_5: author\', \'INT_1: 1000L\', \'STRING_1: "_"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/TicketModel.java', 8, '93:17', '98:17', 62, 5 ), ( 5, 213, 2, '@Deprecated\n    @Unused\n    public boolean canAccessRepository(RepositoryModel repository) {\n    boolean isOwner = repository.isOwner(username);\n    boolean allowAuthenticated = isAuthenticated && AuthorizationControl.AUTHENTICATED.equals(repository.authorizationControl);\n    return canAdmin() || isOwner || repositories.contains(repository.name.toLowerCase())\n    || hasTeamAccess(repository.name) || allowAuthenticated;\n    }', '[\'public\', \'boolean\', \'canAccessRepository\', \'(\', \'RepositoryModel\', \'repository\', \')\', \'{\', \'boolean\', \'isOwner\', \'=\', \'repository\', \'.\', \'isOwner\', \'(\', \'username\', \')\', \';\', \'boolean\', \'allowAuthenticated\', \'=\', \'isAuthenticated\', \'&&\', \'AuthorizationControl.AUTHENTICATED\', \'.\', \'equals\', \'(\', \'repository.authorizationControl\', \')\', \';\', \'return\', \'canAdmin\', \'(\', \')\', \'||\', \'isOwner\', \'||\', \'repositories\', \'.\', \'contains\', \'(\', \'repository.name\', \'.\', \'toLowerCase\', \'(\', \')\', \')\', \'||\', \'hasTeamAccess\', \'(\', \'repository\', \'.\', \'name\', \')\', \'||\', \'allowAuthenticated\', \';\', \'}\']', 'public boolean METHOD_1 ( TYPE_1 VAR_1 ) { boolean VAR_2 = VAR_1 . METHOD_2 ( VAR_3 ) ; boolean VAR_4 = VAR_5 && TYPE_2 . equals ( VAR_6 ) ; return METHOD_3 ( ) || VAR_2 || VAR_7 . contains ( VAR_8 . METHOD_4 ( ) ) || METHOD_5 ( VAR_1 . name ) || VAR_4 ; }', '[\'TYPE_2: AuthorizationControl.AUTHENTICATED\', \'TYPE_1: RepositoryModel\', \'METHOD_2: isOwner\', \'METHOD_3: canAdmin\', \'METHOD_4: toLowerCase\', \'METHOD_1: canAccessRepository\', \'METHOD_5: hasTeamAccess\', \'VAR_8: repository.name\', \'VAR_6: repository.authorizationControl\', \'VAR_2: isOwner\', \'VAR_4: allowAuthenticated\', \'VAR_7: repositories\', \'VAR_5: isAuthenticated\', \'VAR_1: repository\', \'VAR_3: username\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/UserModel.java', 44, '108:9', '115:9', 66, 7 ), ( 5, 213, 3, '@Deprecated\n    @Unused\n    public boolean hasTeamAccess(String repositoryName) {\n    for (TeamModel team : teams) {\n    if (team.hasRepositoryPermission(repositoryName)) {\n    return true;\n    }\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'hasTeamAccess\', \'(\', \'String\', \'repositoryName\', \')\', \'{\', \'for\', \'(\', \'TeamModel\', \'team\', \':\', \'teams\', \')\', \'{\', \'if\', \'(\', \'team\', \'.\', \'hasRepositoryPermission\', \'(\', \'repositoryName\', \')\', \')\', \'{\', \'return\', \'true\', \';\', \'}\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean METHOD_1 ( String VAR_1 ) { for ( TYPE_1 VAR_2 : VAR_3 ) { if ( VAR_2 . METHOD_2 ( VAR_1 ) ) { return true ; } } return false ; }', '[\'TYPE_1: TeamModel\', \'METHOD_2: hasRepositoryPermission\', \'METHOD_1: hasTeamAccess\', \'VAR_3: teams\', \'VAR_2: team\', \'VAR_1: repositoryName\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/UserModel.java', 44, '117:9', '126:9', 39, 7 ), ( 5, 213, 8, 'public boolean hasRepositoryPermission(String name) {\n    String repository = AccessPermission.repositoryFromRole(name).toLowerCase();\n    if (permissions.containsKey(repository)) {\n    // exact repository permission specified\n    return true;\n    } else {\n    // search for regex permission match\n    for (String key : permissions.keySet()) {\n    if (name.matches(key)) {\n    AccessPermission p = permissions.get(key);\n    if (p != null) {\n    return true;\n    }\n    }\n    }\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'hasRepositoryPermission\', \'(\', \'String\', \'name\', \')\', \'{\', \'String\', \'repository\', \'=\', \'AccessPermission\', \'.\', \'repositoryFromRole\', \'(\', \'name\', \')\', \'.\', \'toLowerCase\', \'(\', \')\', \';\', \'if\', \'(\', \'permissions\', \'.\', \'containsKey\', \'(\', \'repository\', \')\', \')\', \'{\', \'return\', \'true\', \';\', \'}\', \'else\', \'{\', \'for\', \'(\', \'String\', \'key\', \':\', \'permissions\', \'.\', \'keySet\', \'(\', \')\', \')\', \'{\', \'if\', \'(\', \'name\', \'.\', \'matches\', \'(\', \'key\', \')\', \')\', \'{\', \'AccessPermission\', \'p\', \'=\', \'permissions\', \'.\', \'get\', \'(\', \'key\', \')\', \';\', \'if\', \'(\', \'p\', \'!=\', \'null\', \')\', \'{\', \'return\', \'true\', \';\', \'}\', \'}\', \'}\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean METHOD_1 ( String name ) { String VAR_1 = TYPE_1 . METHOD_2 ( name ) . METHOD_3 ( ) ; if ( VAR_2 . containsKey ( VAR_1 ) ) { return true ; } else { for ( String key : VAR_2 . METHOD_4 ( ) ) { if ( name . METHOD_5 ( key ) ) { TYPE_1 p = VAR_2 . get ( key ) ; if ( p != null ) { return true ; } } } } return false ; }', '[\'TYPE_1: AccessPermission\', \'METHOD_1: hasRepositoryPermission\', \'METHOD_2: repositoryFromRole\', \'METHOD_3: toLowerCase\', \'METHOD_4: keySet\', \'METHOD_5: matches\', \'VAR_2: permissions\', \'VAR_1: repository\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/UserModel.java', 44, '199:9', '216:9', 88, 11 ), ( 5, 213, 10, 'public boolean hasTeamRepositoryPermission(String name) {\n    if (teams != null) {\n    for (TeamModel team : teams) {\n    if (team.hasRepositoryPermission(name)) {\n    return true;\n    }\n    }\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'hasTeamRepositoryPermission\', \'(\', \'String\', \'name\', \')\', \'{\', \'if\', \'(\', \'teams\', \'!=\', \'null\', \')\', \'{\', \'for\', \'(\', \'TeamModel\', \'team\', \':\', \'teams\', \')\', \'{\', \'if\', \'(\', \'team\', \'.\', \'hasRepositoryPermission\', \'(\', \'name\', \')\', \')\', \'{\', \'return\', \'true\', \';\', \'}\', \'}\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean METHOD_1 ( String name ) { if ( VAR_1 != null ) { for ( TYPE_1 VAR_2 : VAR_1 ) { if ( VAR_2 . METHOD_2 ( name ) ) { return true ; } } } return false ; }', '[\'TYPE_1: TeamModel\', \'METHOD_2: hasRepositoryPermission\', \'METHOD_1: hasTeamRepositoryPermission\', \'VAR_1: teams\', \'VAR_2: team\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/UserModel.java', 44, '237:9', '246:9', 43, 6 ), ( 5, 213, 11, 'public void addRepositoryPermission(String role) {\n    AccessPermission permission = AccessPermission.permissionFromRole(role);\n    String repository = AccessPermission.repositoryFromRole(role).toLowerCase();\n    repositories.add(repository);\n    permissions.put(repository, permission);\n    }', '[\'public\', \'void\', \'addRepositoryPermission\', \'(\', \'String\', \'role\', \')\', \'{\', \'AccessPermission\', \'permission\', \'=\', \'AccessPermission\', \'.\', \'permissionFromRole\', \'(\', \'role\', \')\', \';\', \'String\', \'repository\', \'=\', \'AccessPermission\', \'.\', \'repositoryFromRole\', \'(\', \'role\', \')\', \'.\', \'toLowerCase\', \'(\', \')\', \';\', \'repositories\', \'.\', \'add\', \'(\', \'repository\', \')\', \';\', \'permissions\', \'.\', \'put\', \'(\', \'repository\', \',\', \'permission\', \')\', \';\', \'}\']', 'public void METHOD_1 ( String VAR_1 ) { TYPE_1 VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 ) ; String VAR_3 = TYPE_1 . METHOD_3 ( VAR_1 ) . METHOD_4 ( ) ; VAR_4 . add ( VAR_3 ) ; VAR_5 . put ( VAR_3 , VAR_2 ) ; }', '[\'TYPE_1: AccessPermission\', \'METHOD_3: repositoryFromRole\', \'METHOD_4: toLowerCase\', \'METHOD_1: addRepositoryPermission\', \'METHOD_2: permissionFromRole\', \'VAR_1: role\', \'VAR_4: repositories\', \'VAR_5: permissions\', \'VAR_2: permission\', \'VAR_3: repository\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/UserModel.java', 44, '258:9', '263:9', 48, 5 ), ( 5, 213, 15, 'protected boolean canAccess(RepositoryModel repository, AccessRestrictionType ifRestriction, AccessPermission requirePermission) {\n    if (repository.accessRestriction.atLeast(ifRestriction)) {\n    RegistrantAccessPermission ap = getRepositoryPermission(repository);\n    return ap.permission.atLeast(requirePermission);\n    }\n    return true;\n    }', '[\'protected\', \'boolean\', \'canAccess\', \'(\', \'RepositoryModel\', \'repository\', \',\', \'AccessRestrictionType\', \'ifRestriction\', \',\', \'AccessPermission\', \'requirePermission\', \')\', \'{\', \'if\', \'(\', \'repository.accessRestriction\', \'.\', \'atLeast\', \'(\', \'ifRestriction\', \')\', \')\', \'{\', \'RegistrantAccessPermission\', \'ap\', \'=\', \'getRepositoryPermission\', \'(\', \'repository\', \')\', \';\', \'return\', \'ap.permission\', \'.\', \'atLeast\', \'(\', \'requirePermission\', \')\', \';\', \'}\', \'return\', \'true\', \';\', \'}\']', 'protected boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { if ( VAR_4 . METHOD_2 ( VAR_2 ) ) { TYPE_4 VAR_5 = METHOD_3 ( VAR_1 ) ; return VAR_6 . METHOD_2 ( VAR_3 ) ; } return true ; }', '[\'TYPE_4: RegistrantAccessPermission\', \'TYPE_3: AccessPermission\', \'TYPE_2: AccessRestrictionType\', \'TYPE_1: RepositoryModel\', \'METHOD_1: canAccess\', \'METHOD_2: atLeast\', \'METHOD_3: getRepositoryPermission\', \'VAR_4: repository.accessRestriction\', \'VAR_6: ap.permission\', \'VAR_3: requirePermission\', \'VAR_1: repository\', \'VAR_2: ifRestriction\', \'VAR_5: ap\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/UserModel.java', 44, '412:9', '418:9', 49, 5 ), ( 5, 213, 23, 'public boolean canFork(RepositoryModel repository) {\n    if (repository.isUsersPersonalRepository(username)) {\n    // can not fork your own repository\n    return false;\n    }\n    if (canAdmin() || repository.isOwner(username)) {\n    return true;\n    }\n    if (!repository.allowForks) {\n    return false;\n    }\n    if (!isAuthenticated || !canFork()) {\n    return false;\n    }\n    return canClone(repository);\n    }', '[\'public\', \'boolean\', \'canFork\', \'(\', \'RepositoryModel\', \'repository\', \')\', \'{\', \'if\', \'(\', \'repository\', \'.\', \'isUsersPersonalRepository\', \'(\', \'username\', \')\', \')\', \'{\', \'return\', \'false\', \';\', \'}\', \'if\', \'(\', \'canAdmin\', \'(\', \')\', \'||\', \'repository\', \'.\', \'isOwner\', \'(\', \'username\', \')\', \')\', \'{\', \'return\', \'true\', \';\', \'}\', \'if\', \'(\', \'!\', \'repository.allowForks\', \')\', \'{\', \'return\', \'false\', \';\', \'}\', \'if\', \'(\', \'!\', \'isAuthenticated\', \'||\', \'!\', \'canFork\', \'(\', \')\', \')\', \'{\', \'return\', \'false\', \';\', \'}\', \'return\', \'canClone\', \'(\', \'repository\', \')\', \';\', \'}\']', 'public boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( VAR_2 ) ) { return false ; } if ( METHOD_3 ( ) || VAR_1 . METHOD_4 ( VAR_2 ) ) { return true ; } if ( ! VAR_3 ) { return false ; } if ( ! VAR_4 || ! METHOD_1 ( ) ) { return false ; } return METHOD_5 ( VAR_1 ) ; }', '[\'TYPE_1: RepositoryModel\', \'METHOD_2: isUsersPersonalRepository\', \'METHOD_4: isOwner\', \'METHOD_5: canClone\', \'METHOD_3: canAdmin\', \'METHOD_1: canFork\', \'VAR_3: repository.allowForks\', \'VAR_4: isAuthenticated\', \'VAR_1: repository\', \'VAR_2: username\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/UserModel.java', 44, '462:9', '477:9', 73, 10 ), ( 5, 213, 26, 'public boolean canFork() {\n    if (canFork) {\n    return true;\n    }\n    if (!ArrayUtils.isEmpty(teams)) {\n    for (TeamModel team : teams) {\n    if (team.canFork) {\n    return true;\n    }\n    }\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'canFork\', \'(\', \')\', \'{\', \'if\', \'(\', \'canFork\', \')\', \'{\', \'return\', \'true\', \';\', \'}\', \'if\', \'(\', \'!\', \'ArrayUtils\', \'.\', \'isEmpty\', \'(\', \'teams\', \')\', \')\', \'{\', \'for\', \'(\', \'TeamModel\', \'team\', \':\', \'teams\', \')\', \'{\', \'if\', \'(\', \'team.canFork\', \')\', \'{\', \'return\', \'true\', \';\', \'}\', \'}\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean METHOD_1 ( ) { if ( VAR_1 ) { return true ; } if ( ! TYPE_1 . isEmpty ( VAR_2 ) ) { for ( TYPE_2 VAR_3 : VAR_2 ) { if ( VAR_4 ) { return true ; } } } return false ; }', '[\'TYPE_2: TeamModel\', \'TYPE_1: ArrayUtils\', \'METHOD_1: canFork\', \'VAR_2: teams\', \'VAR_4: team.canFork\', \'VAR_3: team\', \'VAR_1: canFork\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/UserModel.java', 44, '493:9', '505:9', 50, 8 ), ( 5, 213, 27, 'public boolean canAdmin() {\n    if (canAdmin) {\n    return true;\n    }\n    if (!ArrayUtils.isEmpty(teams)) {\n    for (TeamModel team : teams) {\n    if (team.canAdmin) {\n    return true;\n    }\n    }\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'canAdmin\', \'(\', \')\', \'{\', \'if\', \'(\', \'canAdmin\', \')\', \'{\', \'return\', \'true\', \';\', \'}\', \'if\', \'(\', \'!\', \'ArrayUtils\', \'.\', \'isEmpty\', \'(\', \'teams\', \')\', \')\', \'{\', \'for\', \'(\', \'TeamModel\', \'team\', \':\', \'teams\', \')\', \'{\', \'if\', \'(\', \'team.canAdmin\', \')\', \'{\', \'return\', \'true\', \';\', \'}\', \'}\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean METHOD_1 ( ) { if ( VAR_1 ) { return true ; } if ( ! TYPE_1 . isEmpty ( VAR_2 ) ) { for ( TYPE_2 VAR_3 : VAR_2 ) { if ( VAR_4 ) { return true ; } } } return false ; }', '[\'TYPE_2: TeamModel\', \'TYPE_1: ArrayUtils\', \'METHOD_1: canAdmin\', \'VAR_2: teams\', \'VAR_4: team.canAdmin\', \'VAR_1: canAdmin\', \'VAR_3: team\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/UserModel.java', 44, '513:9', '525:9', 50, 8 ), ( 5, 213, 28, 'public boolean canCreate() {\n    if (canCreate) {\n    return true;\n    }\n    if (!ArrayUtils.isEmpty(teams)) {\n    for (TeamModel team : teams) {\n    if (team.canCreate) {\n    return true;\n    }\n    }\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'canCreate\', \'(\', \')\', \'{\', \'if\', \'(\', \'canCreate\', \')\', \'{\', \'return\', \'true\', \';\', \'}\', \'if\', \'(\', \'!\', \'ArrayUtils\', \'.\', \'isEmpty\', \'(\', \'teams\', \')\', \')\', \'{\', \'for\', \'(\', \'TeamModel\', \'team\', \':\', \'teams\', \')\', \'{\', \'if\', \'(\', \'team.canCreate\', \')\', \'{\', \'return\', \'true\', \';\', \'}\', \'}\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean METHOD_1 ( ) { if ( VAR_1 ) { return true ; } if ( ! TYPE_1 . isEmpty ( VAR_2 ) ) { for ( TYPE_2 VAR_3 : VAR_2 ) { if ( VAR_4 ) { return true ; } } } return false ; }', '[\'TYPE_2: TeamModel\', \'TYPE_1: ArrayUtils\', \'METHOD_1: canCreate\', \'VAR_2: teams\', \'VAR_4: team.canCreate\', \'VAR_3: team\', \'VAR_1: canCreate\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/UserModel.java', 44, '533:9', '545:9', 50, 8 ), ( 5, 213, 29, 'public boolean canCreate(String repository) {\n    if (canAdmin()) {\n    // admins can create any repository\n    return true;\n    }\n    if (canCreate) {\n    String projectPath = StringUtils.getFirstPathElement(repository);\n    if (!StringUtils.isEmpty(projectPath) && projectPath.equalsIgnoreCase("~" + username)) {\n    // personal repository\n    return true;\n    }\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'canCreate\', \'(\', \'String\', \'repository\', \')\', \'{\', \'if\', \'(\', \'canAdmin\', \'(\', \')\', \')\', \'{\', \'return\', \'true\', \';\', \'}\', \'if\', \'(\', \'canCreate\', \')\', \'{\', \'String\', \'projectPath\', \'=\', \'StringUtils\', \'.\', \'getFirstPathElement\', \'(\', \'repository\', \')\', \';\', \'if\', \'(\', \'!\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'projectPath\', \')\', \'&&\', \'projectPath\', \'.\', \'equalsIgnoreCase\', \'(\', \'"~"\', \'+\', \'username\', \')\', \')\', \'{\', \'return\', \'true\', \';\', \'}\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean METHOD_1 ( String VAR_1 ) { if ( METHOD_2 ( ) ) { return true ; } if ( VAR_2 ) { String VAR_3 = StringUtils . METHOD_3 ( VAR_1 ) ; if ( ! StringUtils . isEmpty ( VAR_3 ) && VAR_3 . METHOD_4 ( STRING_1 + VAR_4 ) ) { return true ; } } return false ; }', '[\'METHOD_2: canAdmin\', \'METHOD_3: getFirstPathElement\', \'METHOD_1: canCreate\', \'METHOD_4: equalsIgnoreCase\', \'VAR_3: projectPath\', \'VAR_1: repository\', \'VAR_2: canCreate\', \'VAR_4: username\', \'STRING_1: "~"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/UserModel.java', 44, '553:9', '566:9', 64, 8 ), ( 5, 213, 30, 'public boolean isTeamMember(String teamname) {\n    for (TeamModel team : teams) {\n    if (team.name.equalsIgnoreCase(teamname)) {\n    return true;\n    }\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'isTeamMember\', \'(\', \'String\', \'teamname\', \')\', \'{\', \'for\', \'(\', \'TeamModel\', \'team\', \':\', \'teams\', \')\', \'{\', \'if\', \'(\', \'team.name\', \'.\', \'equalsIgnoreCase\', \'(\', \'teamname\', \')\', \')\', \'{\', \'return\', \'true\', \';\', \'}\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean METHOD_1 ( String VAR_1 ) { for ( TYPE_1 VAR_2 : VAR_3 ) { if ( VAR_4 . METHOD_2 ( VAR_1 ) ) { return true ; } } return false ; }', '[\'TYPE_1: TeamModel\', \'METHOD_1: isTeamMember\', \'METHOD_2: equalsIgnoreCase\', \'VAR_3: teams\', \'VAR_2: team\', \'VAR_4: team.name\', \'VAR_1: teamname\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/UserModel.java', 44, '568:9', '575:9', 37, 5 ), ( 5, 213, 31, 'public TeamModel getTeam(String teamname) {\n    if (teams == null) {\n    return null;\n    }\n    for (TeamModel team : teams) {\n    if (team.name.equalsIgnoreCase(teamname)) {\n    return team;\n    }\n    }\n    return null;\n    }', '[\'public\', \'TeamModel\', \'getTeam\', \'(\', \'String\', \'teamname\', \')\', \'{\', \'if\', \'(\', \'teams\', \'==\', \'null\', \')\', \'{\', \'return\', \'null\', \';\', \'}\', \'for\', \'(\', \'TeamModel\', \'team\', \':\', \'teams\', \')\', \'{\', \'if\', \'(\', \'team.name\', \'.\', \'equalsIgnoreCase\', \'(\', \'teamname\', \')\', \')\', \'{\', \'return\', \'team\', \';\', \'}\', \'}\', \'return\', \'null\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( String VAR_1 ) { if ( VAR_2 == null ) { return null ; } for ( TYPE_1 VAR_3 : VAR_2 ) { if ( VAR_4 . METHOD_2 ( VAR_1 ) ) { return VAR_3 ; } } return null ; }', '[\'TYPE_1: TeamModel\', \'METHOD_1: getTeam\', \'METHOD_2: equalsIgnoreCase\', \'VAR_2: teams\', \'VAR_3: team\', \'VAR_4: team.name\', \'VAR_1: teamname\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/UserModel.java', 44, '577:9', '587:9', 48, 7 ), ( 5, 213, 36, '@Override\n    public boolean equals(Object o) {\n    if (o instanceof UserModel) {\n    return username.equals(((UserModel) o).username);\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'equals\', \'(\', \'Object\', \'o\', \')\', \'{\', \'if\', \'(\', \'o\', \'instanceof\', \'UserModel\', \')\', \'{\', \'return\', \'username\', \'.\', \'equals\', \'(\', \'(\', \'(\', \'UserModel\', \')\', \'o\', \')\', \'.\', \'username\', \')\', \';\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean equals ( Object o ) { if ( o instanceof TYPE_1 ) { return VAR_1 . equals ( ( ( TYPE_1 ) o ) . VAR_1 ) ; } return false ; }', '[\'TYPE_1: UserModel\', \'VAR_1: username\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/UserModel.java', 44, '610:9', '616:9', 37, 5 ), ( 5, 213, 39, 'public boolean is(String name, String email) {\n    // at a minimum a usename or display name must be supplied\n    if (StringUtils.isEmpty(name)) {\n    return false;\n    }\n    boolean nameVerified = name.equalsIgnoreCase(username) || name.equalsIgnoreCase(getDisplayName());\n    boolean emailVerified = false;\n    if (StringUtils.isEmpty(emailAddress)) {\n    // user account has not specified an email address\n    // rely on username/displayname verification\n    emailVerified = true;\n    } else {\n    // user account has specified an email address\n    // require email address verification\n    if (!StringUtils.isEmpty(email)) {\n    emailVerified = email.equalsIgnoreCase(emailAddress);\n    }\n    }\n    return nameVerified && emailVerified;\n    }', '[\'public\', \'boolean\', \'is\', \'(\', \'String\', \'name\', \',\', \'String\', \'email\', \')\', \'{\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'name\', \')\', \')\', \'{\', \'return\', \'false\', \';\', \'}\', \'boolean\', \'nameVerified\', \'=\', \'name\', \'.\', \'equalsIgnoreCase\', \'(\', \'username\', \')\', \'||\', \'name\', \'.\', \'equalsIgnoreCase\', \'(\', \'getDisplayName\', \'(\', \')\', \')\', \';\', \'boolean\', \'emailVerified\', \'=\', \'false\', \';\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'emailAddress\', \')\', \')\', \'{\', \'emailVerified\', \'=\', \'true\', \';\', \'}\', \'else\', \'{\', \'if\', \'(\', \'!\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'email\', \')\', \')\', \'{\', \'emailVerified\', \'=\', \'email\', \'.\', \'equalsIgnoreCase\', \'(\', \'emailAddress\', \')\', \';\', \'}\', \'}\', \'return\', \'nameVerified\', \'&&\', \'emailVerified\', \';\', \'}\']', 'public boolean METHOD_1 ( String name , String VAR_1 ) { if ( StringUtils . isEmpty ( name ) ) { return false ; } boolean VAR_2 = name . METHOD_2 ( VAR_3 ) || name . METHOD_2 ( METHOD_3 ( ) ) ; boolean VAR_4 = false ; if ( StringUtils . isEmpty ( VAR_5 ) ) { VAR_4 = true ; } else { if ( ! StringUtils . isEmpty ( VAR_1 ) ) { VAR_4 = VAR_1 . METHOD_2 ( VAR_5 ) ; } } return VAR_2 && VAR_4 ; }', '[\'METHOD_3: getDisplayName\', \'METHOD_1: is\', \'METHOD_2: equalsIgnoreCase\', \'VAR_4: emailVerified\', \'VAR_5: emailAddress\', \'VAR_1: email\', \'VAR_2: nameVerified\', \'VAR_3: username\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/UserModel.java', 44, '635:9', '654:9', 98, 11 ), ( 5, 214, 6, 'public int getScore() {\n    switch (registrantType) {\n    case REPOSITORY:\n    if (isAdmin()) {\n    return 0;\n    }\n    if (isOwner()) {\n    return 1;\n    }\n    if (isExplicit()) {\n    return 2;\n    }\n    if (isRegex()) {\n    return 3;\n    }\n    if (isTeam()) {\n    return 4;\n    }\n    default:\n    return 0;\n    }\n    }', '[\'public\', \'int\', \'getScore\', \'(\', \')\', \'{\', \'switch\', \'(\', \'registrantType\', \')\', \'{\', \'case\', \'REPOSITORY\', \':\', \'if\', \'(\', \'isAdmin\', \'(\', \')\', \')\', \'{\', \'return\', \'0\', \';\', \'}\', \'if\', \'(\', \'isOwner\', \'(\', \')\', \')\', \'{\', \'return\', \'1\', \';\', \'}\', \'if\', \'(\', \'isExplicit\', \'(\', \')\', \')\', \'{\', \'return\', \'2\', \';\', \'}\', \'if\', \'(\', \'isRegex\', \'(\', \')\', \')\', \'{\', \'return\', \'3\', \';\', \'}\', \'if\', \'(\', \'isTeam\', \'(\', \')\', \')\', \'{\', \'return\', \'4\', \';\', \'}\', \'default\', \':\', \'return\', \'0\', \';\', \'}\', \'}\']', 'public int METHOD_1 ( ) { switch ( VAR_1 ) { case VAR_2 : if ( METHOD_2 ( ) ) { return 0 ; } if ( METHOD_3 ( ) ) { return 1 ; } if ( METHOD_4 ( ) ) { return 2 ; } if ( METHOD_5 ( ) ) { return 3 ; } if ( METHOD_6 ( ) ) { return 4 ; } default : return 0 ; } }', '[\'METHOD_4: isExplicit\', \'METHOD_5: isRegex\', \'METHOD_3: isOwner\', \'METHOD_2: isAdmin\', \'METHOD_1: getScore\', \'METHOD_6: isTeam\', \'VAR_2: REPOSITORY\', \'VAR_1: registrantType\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/RegistrantAccessPermission.java', 14, '83:9', '104:9', 69, 15 ), ( 5, 214, 9, '@Override\n    public boolean equals(Object o) {\n    if (o instanceof RegistrantAccessPermission) {\n    RegistrantAccessPermission p = (RegistrantAccessPermission) o;\n    return registrant.equals(p.registrant);\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'equals\', \'(\', \'Object\', \'o\', \')\', \'{\', \'if\', \'(\', \'o\', \'instanceof\', \'RegistrantAccessPermission\', \')\', \'{\', \'RegistrantAccessPermission\', \'p\', \'=\', \'(\', \'RegistrantAccessPermission\', \')\', \'o\', \';\', \'return\', \'registrant\', \'.\', \'equals\', \'(\', \'p.registrant\', \')\', \';\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean equals ( Object o ) { if ( o instanceof TYPE_1 ) { TYPE_1 p = ( TYPE_1 ) o ; return VAR_1 . equals ( VAR_2 ) ; } return false ; }', '[\'TYPE_1: RegistrantAccessPermission\', \'VAR_2: p.registrant\', \'VAR_1: registrant\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/RegistrantAccessPermission.java', 14, '135:9', '143:9', 40, 6 ), ( 5, 214, 13, 'public RegistrantAccessPermission(String registrant, AccessPermission permission, PermissionType permissionType, RegistrantType registrantType, String source, boolean mutable) {\n    this.registrant = registrant;\n    this.permission = permission;\n    this.permissionType = permissionType;\n    this.registrantType = registrantType;\n    this.source = source;\n    this.mutable = mutable;\n    }', '[\'public\', \'RegistrantAccessPermission\', \'(\', \'String\', \'registrant\', \',\', \'AccessPermission\', \'permission\', \',\', \'PermissionType\', \'permissionType\', \',\', \'RegistrantType\', \'registrantType\', \',\', \'String\', \'source\', \',\', \'boolean\', \'mutable\', \')\', \'{\', \'this\', \'.\', \'registrant\', \'=\', \'registrant\', \';\', \'this\', \'.\', \'permission\', \'=\', \'permission\', \';\', \'this\', \'.\', \'permissionType\', \'=\', \'permissionType\', \';\', \'this\', \'.\', \'registrantType\', \'=\', \'registrantType\', \';\', \'this\', \'.\', \'source\', \'=\', \'source\', \';\', \'this\', \'.\', \'mutable\', \'=\', \'mutable\', \';\', \'}\']', 'public VAR_1 ( String VAR_2 , TYPE_1 VAR_3 , TYPE_2 VAR_4 , TYPE_3 VAR_5 , String source , boolean VAR_6 ) { this . VAR_2 = VAR_2 ; this . VAR_3 = VAR_3 ; this . VAR_4 = VAR_4 ; this . VAR_5 = VAR_5 ; this . source = source ; this . VAR_6 = VAR_6 ; }', '[\'TYPE_3: RegistrantType\', \'TYPE_2: PermissionType\', \'TYPE_1: AccessPermission\', \'VAR_4: permissionType\', \'VAR_1: RegistrantAccessPermission\', \'VAR_6: mutable\', \'VAR_3: permission\', \'VAR_2: registrant\', \'VAR_5: registrantType\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/RegistrantAccessPermission.java', 14, '50:9', '57:9', 59, 7 ), ( 5, 217, 0, 'public boolean allowsPlatform(String p) {\n    if (ArrayUtils.isEmpty(platforms)) {\n    // all platforms\n    return true;\n    }\n    if (StringUtils.isEmpty(p)) {\n    return false;\n    }\n    String plc = p.toLowerCase();\n    for (String platform : platforms) {\n    if (plc.contains(platform)) {\n    return true;\n    }\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'allowsPlatform\', \'(\', \'String\', \'p\', \')\', \'{\', \'if\', \'(\', \'ArrayUtils\', \'.\', \'isEmpty\', \'(\', \'platforms\', \')\', \')\', \'{\', \'return\', \'true\', \';\', \'}\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'p\', \')\', \')\', \'{\', \'return\', \'false\', \';\', \'}\', \'String\', \'plc\', \'=\', \'p\', \'.\', \'toLowerCase\', \'(\', \')\', \';\', \'for\', \'(\', \'String\', \'platform\', \':\', \'platforms\', \')\', \'{\', \'if\', \'(\', \'plc\', \'.\', \'contains\', \'(\', \'platform\', \')\', \')\', \'{\', \'return\', \'true\', \';\', \'}\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean METHOD_1 ( String p ) { if ( TYPE_1 . isEmpty ( VAR_1 ) ) { return true ; } if ( StringUtils . isEmpty ( p ) ) { return false ; } String VAR_2 = p . METHOD_2 ( ) ; for ( String VAR_3 : VAR_1 ) { if ( VAR_2 . contains ( VAR_3 ) ) { return true ; } } return false ; }', '[\'TYPE_1: ArrayUtils\', \'METHOD_2: toLowerCase\', \'METHOD_1: allowsPlatform\', \'VAR_2: plc\', \'VAR_3: platform\', \'VAR_1: platforms\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/GitClientApplication.java', 3, '47:9', '62:9', 72, 10 ), ( 5, 217, 1, 'public boolean supportsTransport(String transportOrUrl) {\n    if (ArrayUtils.isEmpty(transports)) {\n    return true;\n    }\n    String scheme = transportOrUrl;\n    if (transportOrUrl.indexOf(\':\') > -1) {\n    // strip scheme\n    scheme = transportOrUrl.substring(0, transportOrUrl.indexOf(\':\'));\n    }\n    for (String transport : transports) {\n    if (transport.equalsIgnoreCase(scheme)) {\n    return true;\n    }\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'supportsTransport\', \'(\', \'String\', \'transportOrUrl\', \')\', \'{\', \'if\', \'(\', \'ArrayUtils\', \'.\', \'isEmpty\', \'(\', \'transports\', \')\', \')\', \'{\', \'return\', \'true\', \';\', \'}\', \'String\', \'scheme\', \'=\', \'transportOrUrl\', \';\', \'if\', \'(\', \'transportOrUrl\', \'.\', \'indexOf\', \'(\', "\':\'", \')\', \'>\', \'-\', \'1\', \')\', \'{\', \'scheme\', \'=\', \'transportOrUrl\', \'.\', \'substring\', \'(\', \'0\', \',\', \'transportOrUrl\', \'.\', \'indexOf\', \'(\', "\':\'", \')\', \')\', \';\', \'}\', \'for\', \'(\', \'String\', \'transport\', \':\', \'transports\', \')\', \'{\', \'if\', \'(\', \'transport\', \'.\', \'equalsIgnoreCase\', \'(\', \'scheme\', \')\', \')\', \'{\', \'return\', \'true\', \';\', \'}\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean METHOD_1 ( String VAR_1 ) { if ( TYPE_1 . isEmpty ( VAR_2 ) ) { return true ; } String VAR_3 = VAR_1 ; if ( VAR_1 . METHOD_2 ( CHAR_1 ) > - 1 ) { VAR_3 = VAR_1 . substring ( 0 , VAR_1 . METHOD_2 ( CHAR_1 ) ) ; } for ( String VAR_4 : VAR_2 ) { if ( VAR_4 . METHOD_3 ( VAR_3 ) ) { return true ; } } return false ; }', '[\'TYPE_1: ArrayUtils\', \'METHOD_1: supportsTransport\', \'METHOD_3: equalsIgnoreCase\', \'METHOD_2: indexOf\', \'VAR_2: transports\', \'VAR_3: scheme\', \'VAR_1: transportOrUrl\', \'VAR_4: transport\', "CHAR_1: \':\'"]', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/GitClientApplication.java', 3, '64:9', '81:9', 85, 10 ), ( 5, 218, 1, 'public void updateStatus(RepositoryModel repository, FederationPullStatus status) {\n    if (!results.containsKey(repository.name)) {\n    results.put(repository.name, FederationPullStatus.PENDING);\n    }\n    if (status != null) {\n    results.put(repository.name, status);\n    }\n    }', '[\'public\', \'void\', \'updateStatus\', \'(\', \'RepositoryModel\', \'repository\', \',\', \'FederationPullStatus\', \'status\', \')\', \'{\', \'if\', \'(\', \'!\', \'results\', \'.\', \'containsKey\', \'(\', \'repository\', \'.\', \'name\', \')\', \')\', \'{\', \'results\', \'.\', \'put\', \'(\', \'repository\', \'.\', \'name\', \',\', \'FederationPullStatus.PENDING\', \')\', \';\', \'}\', \'if\', \'(\', \'status\', \'!=\', \'null\', \')\', \'{\', \'results\', \'.\', \'put\', \'(\', \'repository\', \'.\', \'name\', \',\', \'status\', \')\', \';\', \'}\', \'}\']', 'public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 status ) { if ( ! VAR_2 . containsKey ( VAR_1 . name ) ) { VAR_2 . put ( VAR_1 . name , VAR_3 ) ; } if ( status != null ) { VAR_2 . put ( VAR_1 . name , status ) ; } }', '[\'TYPE_1: RepositoryModel\', \'TYPE_2: FederationPullStatus\', \'METHOD_1: updateStatus\', \'VAR_3: FederationPullStatus.PENDING\', \'VAR_1: repository\', \'VAR_2: results\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/FederationModel.java', 10, '116:9', '123:9', 58, 5 ), ( 5, 218, 2, 'public List<RepositoryStatus> getStatusList() {\n    List<RepositoryStatus> list = new ArrayList<RepositoryStatus>();\n    for (Map.Entry<String, FederationPullStatus> entry : results.entrySet()) {\n    list.add(new RepositoryStatus(entry.getKey(), entry.getValue()));\n    }\n    return list;\n    }', '[\'public\', \'List\', \'<\', \'RepositoryStatus\', \'>\', \'getStatusList\', \'(\', \')\', \'{\', \'List\', \'<\', \'RepositoryStatus\', \'>\', \'list\', \'=\', \'new\', \'ArrayList\', \'<\', \'RepositoryStatus\', \'>\', \'(\', \')\', \';\', \'for\', \'(\', \'Map\', \'.\', \'Entry\', \'<\', \'String\', \',\', \'FederationPullStatus\', \'>\', \'entry\', \':\', \'results\', \'.\', \'entrySet\', \'(\', \')\', \')\', \'{\', \'list\', \'.\', \'add\', \'(\', \'new\', \'RepositoryStatus\', \'(\', \'entry\', \'.\', \'getKey\', \'(\', \')\', \',\', \'entry\', \'.\', \'getValue\', \'(\', \')\', \')\', \')\', \';\', \'}\', \'return\', \'list\', \';\', \'}\']', 'public List < TYPE_1 > METHOD_1 ( ) { List < TYPE_1 > list = new ArrayList < TYPE_1 > ( ) ; for ( Map . Entry < String , TYPE_2 > entry : VAR_1 . entrySet ( ) ) { list . add ( new TYPE_1 ( entry . getKey ( ) , entry . getValue ( ) ) ) ; } return list ; }', '[\'TYPE_1: RepositoryStatus\', \'TYPE_2: FederationPullStatus\', \'METHOD_1: getStatusList\', \'VAR_1: results\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/FederationModel.java', 10, '125:9', '131:9', 63, 5 ), ( 5, 218, 3, 'public FederationPullStatus getLowestStatus() {\n    if (results.size() == 0) {\n    return FederationPullStatus.PENDING;\n    }\n    FederationPullStatus status = FederationPullStatus.MIRRORED;\n    for (FederationPullStatus result : results.values()) {\n    if (result.ordinal() < status.ordinal()) {\n    status = result;\n    }\n    }\n    return status;\n    }', '[\'public\', \'FederationPullStatus\', \'getLowestStatus\', \'(\', \')\', \'{\', \'if\', \'(\', \'results\', \'.\', \'size\', \'(\', \')\', \'==\', \'0\', \')\', \'{\', \'return\', \'FederationPullStatus.PENDING\', \';\', \'}\', \'FederationPullStatus\', \'status\', \'=\', \'FederationPullStatus.MIRRORED\', \';\', \'for\', \'(\', \'FederationPullStatus\', \'result\', \':\', \'results\', \'.\', \'values\', \'(\', \')\', \')\', \'{\', \'if\', \'(\', \'result\', \'.\', \'ordinal\', \'(\', \')\', \'<\', \'status\', \'.\', \'ordinal\', \'(\', \')\', \')\', \'{\', \'status\', \'=\', \'result\', \';\', \'}\', \'}\', \'return\', \'status\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( ) { if ( VAR_1 . size ( ) == 0 ) { return VAR_2 ; } TYPE_1 status = VAR_3 ; for ( TYPE_1 result : VAR_1 . values ( ) ) { if ( result . METHOD_2 ( ) < status . METHOD_2 ( ) ) { status = result ; } } return status ; }', '[\'TYPE_1: FederationPullStatus\', \'METHOD_1: getLowestStatus\', \'METHOD_2: ordinal\', \'VAR_2: FederationPullStatus.PENDING\', \'VAR_1: results\', \'VAR_3: FederationPullStatus.MIRRORED\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/FederationModel.java', 10, '139:9', '150:9', 62, 8 ), ( 5, 218, 6, '@Override\n    public int compareTo(FederationModel o) {\n    boolean r1 = isResultData();\n    boolean r2 = o.isResultData();\n    if ((r1 && r2) || (!r1 && !r2)) {\n    // sort registrations and results by name\n    return name.compareTo(o.name);\n    }\n    // sort registrations first\n    if (r1) {\n    return 1;\n    }\n    return -1;\n    }', '[\'public\', \'int\', \'compareTo\', \'(\', \'FederationModel\', \'o\', \')\', \'{\', \'boolean\', \'r1\', \'=\', \'isResultData\', \'(\', \')\', \';\', \'boolean\', \'r2\', \'=\', \'o\', \'.\', \'isResultData\', \'(\', \')\', \';\', \'if\', \'(\', \'(\', \'r1\', \'&&\', \'r2\', \')\', \'||\', \'(\', \'!\', \'r1\', \'&&\', \'!\', \'r2\', \')\', \')\', \'{\', \'return\', \'name\', \'.\', \'compareTo\', \'(\', \'o\', \'.\', \'name\', \')\', \';\', \'}\', \'if\', \'(\', \'r1\', \')\', \'{\', \'return\', \'1\', \';\', \'}\', \'return\', \'-\', \'1\', \';\', \'}\']', 'public int METHOD_1 ( TYPE_1 o ) { boolean VAR_1 = METHOD_2 ( ) ; boolean VAR_2 = o . METHOD_2 ( ) ; if ( ( VAR_1 && VAR_2 ) || ( ! VAR_1 && ! VAR_2 ) ) { return name . METHOD_1 ( o . name ) ; } if ( VAR_1 ) { return 1 ; } return - 1 ; }', '[\'TYPE_1: FederationModel\', \'METHOD_1: compareTo\', \'METHOD_2: isResultData\', \'VAR_2: r2\', \'VAR_1: r1\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/FederationModel.java', 10, '167:9', '180:9', 68, 9 ), ( 5, 218, 7, '@Override\n    public int compareTo(RepositoryStatus o) {\n    if (status.equals(o.status)) {\n    return StringUtils.compareRepositoryNames(name, o.name);\n    }\n    return status.compareTo(o.status);\n    }', '[\'public\', \'int\', \'compareTo\', \'(\', \'RepositoryStatus\', \'o\', \')\', \'{\', \'if\', \'(\', \'status\', \'.\', \'equals\', \'(\', \'o\', \'.\', \'status\', \')\', \')\', \'{\', \'return\', \'StringUtils\', \'.\', \'compareRepositoryNames\', \'(\', \'name\', \',\', \'o\', \'.\', \'name\', \')\', \';\', \'}\', \'return\', \'status\', \'.\', \'compareTo\', \'(\', \'o\', \'.\', \'status\', \')\', \';\', \'}\']', 'public int METHOD_1 ( TYPE_1 o ) { if ( status . equals ( o . status ) ) { return StringUtils . METHOD_2 ( name , o . name ) ; } return status . METHOD_1 ( o . status ) ; }', '[\'TYPE_1: RepositoryStatus\', \'METHOD_2: compareRepositoryNames\', \'METHOD_1: compareTo\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/FederationModel.java', 10, '198:17', '204:17', 46, 5 ), ( 5, 218, 8, 'public FederationModel(String serverName) {\n    this.name = serverName;\n    bare = true;\n    mirror = true;\n    this.lastPull = new Date(0);\n    this.nextPull = new Date(0);\n    }', '[\'public\', \'FederationModel\', \'(\', \'String\', \'serverName\', \')\', \'{\', \'this\', \'.\', \'name\', \'=\', \'serverName\', \';\', \'bare\', \'=\', \'true\', \';\', \'mirror\', \'=\', \'true\', \';\', \'this\', \'.\', \'lastPull\', \'=\', \'new\', \'Date\', \'(\', \'0\', \')\', \';\', \'this\', \'.\', \'nextPull\', \'=\', \'new\', \'Date\', \'(\', \'0\', \')\', \';\', \'}\']', 'public VAR_1 ( String VAR_2 ) { this . name = VAR_2 ; VAR_3 = true ; VAR_4 = true ; this . VAR_5 = new TYPE_1 ( 0 ) ; this . VAR_6 = new TYPE_1 ( 0 ) ; }', '[\'TYPE_1: Date\', \'VAR_1: FederationModel\', \'VAR_4: mirror\', \'VAR_2: serverName\', \'VAR_5: lastPull\', \'VAR_3: bare\', \'VAR_6: nextPull\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/FederationModel.java', 10, '74:9', '80:9', 42, 6 ), ( 5, 219, 0, 'public Date getDate() {\n    Date date = new Date(0);\n    if (referencedObject != null) {\n    if (referencedObject instanceof RevTag) {\n    RevTag tag = (RevTag) referencedObject;\n    if (tag.getTaggerIdent() != null) {\n    date = tag.getTaggerIdent().getWhen();\n    }\n    } else if (referencedObject instanceof RevCommit) {\n    date = ((RevCommit) referencedObject).getCommitterIdent().getWhen();\n    }\n    }\n    return date;\n    }', '[\'public\', \'Date\', \'getDate\', \'(\', \')\', \'{\', \'Date\', \'date\', \'=\', \'new\', \'Date\', \'(\', \'0\', \')\', \';\', \'if\', \'(\', \'referencedObject\', \'!=\', \'null\', \')\', \'{\', \'if\', \'(\', \'referencedObject\', \'instanceof\', \'RevTag\', \')\', \'{\', \'RevTag\', \'tag\', \'=\', \'(\', \'RevTag\', \')\', \'referencedObject\', \';\', \'if\', \'(\', \'tag\', \'.\', \'getTaggerIdent\', \'(\', \')\', \'!=\', \'null\', \')\', \'{\', \'date\', \'=\', \'tag\', \'.\', \'getTaggerIdent\', \'(\', \')\', \'.\', \'getWhen\', \'(\', \')\', \';\', \'}\', \'}\', \'else\', \'if\', \'(\', \'referencedObject\', \'instanceof\', \'RevCommit\', \')\', \'{\', \'date\', \'=\', \'(\', \'(\', \'RevCommit\', \')\', \'referencedObject\', \')\', \'.\', \'getCommitterIdent\', \'(\', \')\', \'.\', \'getWhen\', \'(\', \')\', \';\', \'}\', \'}\', \'return\', \'date\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( 0 ) ; if ( VAR_2 != null ) { if ( VAR_2 instanceof TYPE_2 ) { TYPE_2 VAR_3 = ( TYPE_2 ) VAR_2 ; if ( VAR_3 . METHOD_2 ( ) != null ) { VAR_1 = VAR_3 . METHOD_2 ( ) . METHOD_3 ( ) ; } } else if ( VAR_2 instanceof TYPE_3 ) { VAR_1 = ( ( TYPE_3 ) VAR_2 ) . METHOD_4 ( ) . METHOD_3 ( ) ; } } return VAR_1 ; }', '[\'TYPE_2: RevTag\', \'TYPE_1: Date\', \'TYPE_3: RevCommit\', \'METHOD_3: getWhen\', \'METHOD_4: getCommitterIdent\', \'METHOD_1: getDate\', \'METHOD_2: getTaggerIdent\', \'VAR_1: date\', \'VAR_2: referencedObject\', \'VAR_3: tag\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/RefModel.java', 14, '48:9', '61:9', 86, 10 ), ( 5, 219, 2, 'public int getReferencedObjectType() {\n    int type = referencedObject.getType();\n    if (referencedObject instanceof RevTag) {\n    type = ((RevTag) referencedObject).getObject().getType();\n    }\n    return type;\n    }', '[\'public\', \'int\', \'getReferencedObjectType\', \'(\', \')\', \'{\', \'int\', \'type\', \'=\', \'referencedObject\', \'.\', \'getType\', \'(\', \')\', \';\', \'if\', \'(\', \'referencedObject\', \'instanceof\', \'RevTag\', \')\', \'{\', \'type\', \'=\', \'(\', \'(\', \'RevTag\', \')\', \'referencedObject\', \')\', \'.\', \'getObject\', \'(\', \')\', \'.\', \'getType\', \'(\', \')\', \';\', \'}\', \'return\', \'type\', \';\', \'}\']', 'public int METHOD_1 ( ) { int type = VAR_1 . getType ( ) ; if ( VAR_1 instanceof TYPE_1 ) { type = ( ( TYPE_1 ) VAR_1 ) . METHOD_2 ( ) . getType ( ) ; } return type ; }', '[\'TYPE_1: RevTag\', \'METHOD_2: getObject\', \'METHOD_1: getReferencedObjectType\', \'VAR_1: referencedObject\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/RefModel.java', 14, '70:9', '76:9', 40, 5 ), ( 5, 219, 4, 'public String getShortMessage() {\n    String message = "";\n    if (referencedObject instanceof RevTag) {\n    message = ((RevTag) referencedObject).getShortMessage();\n    } else if (referencedObject instanceof RevCommit) {\n    message = ((RevCommit) referencedObject).getShortMessage();\n    }\n    return message;\n    }', '[\'public\', \'String\', \'getShortMessage\', \'(\', \')\', \'{\', \'String\', \'message\', \'=\', \'""\', \';\', \'if\', \'(\', \'referencedObject\', \'instanceof\', \'RevTag\', \')\', \'{\', \'message\', \'=\', \'(\', \'(\', \'RevTag\', \')\', \'referencedObject\', \')\', \'.\', \'getShortMessage\', \'(\', \')\', \';\', \'}\', \'else\', \'if\', \'(\', \'referencedObject\', \'instanceof\', \'RevCommit\', \')\', \'{\', \'message\', \'=\', \'(\', \'(\', \'RevCommit\', \')\', \'referencedObject\', \')\', \'.\', \'getShortMessage\', \'(\', \')\', \';\', \'}\', \'return\', \'message\', \';\', \'}\']', 'public String METHOD_1 ( ) { String message = STRING_1 ; if ( VAR_1 instanceof TYPE_1 ) { message = ( ( TYPE_1 ) VAR_1 ) . METHOD_1 ( ) ; } else if ( VAR_1 instanceof TYPE_2 ) { message = ( ( TYPE_2 ) VAR_1 ) . METHOD_1 ( ) ; } return message ; }', '[\'TYPE_1: RevTag\', \'TYPE_2: RevCommit\', \'METHOD_1: getShortMessage\', \'VAR_1: referencedObject\', \'STRING_1: ""\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/RefModel.java', 14, '85:9', '93:9', 54, 7 ), ( 5, 219, 5, 'public String getFullMessage() {\n    String message = "";\n    if (referencedObject instanceof RevTag) {\n    message = ((RevTag) referencedObject).getFullMessage();\n    } else if (referencedObject instanceof RevCommit) {\n    message = ((RevCommit) referencedObject).getFullMessage();\n    }\n    return message;\n    }', '[\'public\', \'String\', \'getFullMessage\', \'(\', \')\', \'{\', \'String\', \'message\', \'=\', \'""\', \';\', \'if\', \'(\', \'referencedObject\', \'instanceof\', \'RevTag\', \')\', \'{\', \'message\', \'=\', \'(\', \'(\', \'RevTag\', \')\', \'referencedObject\', \')\', \'.\', \'getFullMessage\', \'(\', \')\', \';\', \'}\', \'else\', \'if\', \'(\', \'referencedObject\', \'instanceof\', \'RevCommit\', \')\', \'{\', \'message\', \'=\', \'(\', \'(\', \'RevCommit\', \')\', \'referencedObject\', \')\', \'.\', \'getFullMessage\', \'(\', \')\', \';\', \'}\', \'return\', \'message\', \';\', \'}\']', 'public String METHOD_1 ( ) { String message = STRING_1 ; if ( VAR_1 instanceof TYPE_1 ) { message = ( ( TYPE_1 ) VAR_1 ) . METHOD_1 ( ) ; } else if ( VAR_1 instanceof TYPE_2 ) { message = ( ( TYPE_2 ) VAR_1 ) . METHOD_1 ( ) ; } return message ; }', '[\'TYPE_1: RevTag\', \'TYPE_2: RevCommit\', \'METHOD_1: getFullMessage\', \'VAR_1: referencedObject\', \'STRING_1: ""\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/RefModel.java', 14, '95:9', '103:9', 54, 7 ), ( 5, 219, 6, 'public PersonIdent getAuthorIdent() {\n    if (referencedObject instanceof RevTag) {\n    return ((RevTag) referencedObject).getTaggerIdent();\n    } else if (referencedObject instanceof RevCommit) {\n    return ((RevCommit) referencedObject).getAuthorIdent();\n    }\n    return null;\n    }', '[\'public\', \'PersonIdent\', \'getAuthorIdent\', \'(\', \')\', \'{\', \'if\', \'(\', \'referencedObject\', \'instanceof\', \'RevTag\', \')\', \'{\', \'return\', \'(\', \'(\', \'RevTag\', \')\', \'referencedObject\', \')\', \'.\', \'getTaggerIdent\', \'(\', \')\', \';\', \'}\', \'else\', \'if\', \'(\', \'referencedObject\', \'instanceof\', \'RevCommit\', \')\', \'{\', \'return\', \'(\', \'(\', \'RevCommit\', \')\', \'referencedObject\', \')\', \'.\', \'getAuthorIdent\', \'(\', \')\', \';\', \'}\', \'return\', \'null\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( ) { if ( VAR_1 instanceof TYPE_2 ) { return ( ( TYPE_2 ) VAR_1 ) . METHOD_2 ( ) ; } else if ( VAR_1 instanceof TYPE_3 ) { return ( ( TYPE_3 ) VAR_1 ) . METHOD_1 ( ) ; } return null ; }', '[\'TYPE_2: RevTag\', \'TYPE_1: PersonIdent\', \'TYPE_3: RevCommit\', \'METHOD_1: getAuthorIdent\', \'METHOD_2: getTaggerIdent\', \'VAR_1: referencedObject\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/RefModel.java', 14, '105:9', '112:9', 47, 6 ), ( 5, 219, 10, '@Override\n    public boolean equals(Object o) {\n    if (o instanceof RefModel) {\n    RefModel other = (RefModel) o;\n    return getName().equals(other.getName());\n    }\n    return super.equals(o);\n    }', '[\'public\', \'boolean\', \'equals\', \'(\', \'Object\', \'o\', \')\', \'{\', \'if\', \'(\', \'o\', \'instanceof\', \'RefModel\', \')\', \'{\', \'RefModel\', \'other\', \'=\', \'(\', \'RefModel\', \')\', \'o\', \';\', \'return\', \'getName\', \'(\', \')\', \'.\', \'equals\', \'(\', \'other\', \'.\', \'getName\', \'(\', \')\', \')\', \';\', \'}\', \'return\', \'super\', \'.\', \'equals\', \'(\', \'o\', \')\', \';\', \'}\']', 'public boolean equals ( Object o ) { if ( o instanceof TYPE_1 ) { TYPE_1 VAR_1 = ( TYPE_1 ) o ; return getName ( ) . equals ( VAR_1 . getName ( ) ) ; } return super . equals ( o ) ; }', '[\'TYPE_1: RefModel\', \'VAR_1: other\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/RefModel.java', 14, '130:9', '137:9', 47, 6 ), ( 5, 220, 2, '@Override\n    public boolean equals(Object o) {\n    if (o instanceof FeedEntryModel) {\n    return hashCode() == o.hashCode();\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'equals\', \'(\', \'Object\', \'o\', \')\', \'{\', \'if\', \'(\', \'o\', \'instanceof\', \'FeedEntryModel\', \')\', \'{\', \'return\', \'hashCode\', \'(\', \')\', \'==\', \'o\', \'.\', \'hashCode\', \'(\', \')\', \';\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean equals ( Object o ) { if ( o instanceof TYPE_1 ) { return METHOD_1 ( ) == o . METHOD_1 ( ) ; } return false ; }', '[\'TYPE_1: FeedEntryModel\', \'METHOD_1: hashCode\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/models/FeedEntryModel.java', 4, '54:9', '60:9', 31, 5 ), ( 5, 221, 2, 'public static TimeZone getTimezone() {\n    if (self().timezone == null) {\n    String tzid = getString("web.timezone", null);\n    if (StringUtils.isEmpty(tzid)) {\n    self().timezone = TimeZone.getDefault();\n    return self().timezone;\n    }\n    self().timezone = TimeZone.getTimeZone(tzid);\n    }\n    return self().timezone;\n    }', '[\'public\', \'static\', \'TimeZone\', \'getTimezone\', \'(\', \')\', \'{\', \'if\', \'(\', \'self\', \'(\', \')\', \'.\', \'timezone\', \'==\', \'null\', \')\', \'{\', \'String\', \'tzid\', \'=\', \'getString\', \'(\', \'"web.timezone"\', \',\', \'null\', \')\', \';\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'tzid\', \')\', \')\', \'{\', \'self\', \'(\', \')\', \'.\', \'timezone\', \'=\', \'TimeZone\', \'.\', \'getDefault\', \'(\', \')\', \';\', \'return\', \'self\', \'(\', \')\', \'.\', \'timezone\', \';\', \'}\', \'self\', \'(\', \')\', \'.\', \'timezone\', \'=\', \'TimeZone\', \'.\', \'getTimeZone\', \'(\', \'tzid\', \')\', \';\', \'}\', \'return\', \'self\', \'(\', \')\', \'.\', \'timezone\', \';\', \'}\']', 'public static TYPE_1 METHOD_1 ( ) { if ( METHOD_2 ( ) . VAR_1 == null ) { String VAR_2 = getString ( STRING_1 , null ) ; if ( StringUtils . isEmpty ( VAR_2 ) ) { METHOD_2 ( ) . VAR_1 = TYPE_1 . METHOD_3 ( ) ; return METHOD_2 ( ) . VAR_1 ; } METHOD_2 ( ) . VAR_1 = TYPE_1 . METHOD_4 ( VAR_2 ) ; } return METHOD_2 ( ) . VAR_1 ; }', '[\'TYPE_1: TimeZone\', \'METHOD_4: getTimeZone\', \'METHOD_1: getTimezone\', \'METHOD_2: self\', \'METHOD_3: getDefault\', \'VAR_1: timezone\', \'VAR_2: tzid\', \'STRING_1: "web.timezone"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitBlit.java', 151, '246:9', '256:9', 73, 8 ), ( 5, 221, 22, 'protected String getRepositoryUrl(HttpServletRequest request, String username, RepositoryModel repository) {\n    StringBuilder sb = new StringBuilder();\n    sb.append(HttpUtils.getGitblitURL(request));\n    sb.append(Constants.GIT_PATH);\n    sb.append(repository.name);\n    // inject username into repository url if authentication is required\n    if (repository.accessRestriction.exceeds(AccessRestrictionType.NONE)\n    && !StringUtils.isEmpty(username)) {\n    sb.insert(sb.indexOf("://") + 3, username + "@");\n    }\n    return sb.toString();\n    }', '[\'protected\', \'String\', \'getRepositoryUrl\', \'(\', \'HttpServletRequest\', \'request\', \',\', \'String\', \'username\', \',\', \'RepositoryModel\', \'repository\', \')\', \'{\', \'StringBuilder\', \'sb\', \'=\', \'new\', \'StringBuilder\', \'(\', \')\', \';\', \'sb\', \'.\', \'append\', \'(\', \'HttpUtils\', \'.\', \'getGitblitURL\', \'(\', \'request\', \')\', \')\', \';\', \'sb\', \'.\', \'append\', \'(\', \'Constants.GIT_PATH\', \')\', \';\', \'sb\', \'.\', \'append\', \'(\', \'repository\', \'.\', \'name\', \')\', \';\', \'if\', \'(\', \'repository.accessRestriction\', \'.\', \'exceeds\', \'(\', \'AccessRestrictionType.NONE\', \')\', \'&&\', \'!\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'username\', \')\', \')\', \'{\', \'sb\', \'.\', \'insert\', \'(\', \'sb\', \'.\', \'indexOf\', \'(\', \'":<DOUBLE_SLASH>"\', \')\', \'+\', \'3\', \',\', \'username\', \'+\', \'"<AT>"\', \')\', \';\', \'}\', \'return\', \'sb\', \'.\', \'toString\', \'(\', \')\', \';\', \'}\']', 'protected String METHOD_1 ( TYPE_1 request , String VAR_1 , TYPE_2 VAR_2 ) { StringBuilder sb = new StringBuilder ( ) ; sb . append ( TYPE_3 . METHOD_2 ( request ) ) ; sb . append ( VAR_3 ) ; sb . append ( VAR_2 . name ) ; if ( VAR_4 . METHOD_3 ( VAR_5 ) && ! StringUtils . isEmpty ( VAR_1 ) ) { sb . METHOD_4 ( sb . METHOD_5 ( STRING_1 ) + 3 , VAR_1 + STRING_2 ) ; } return sb . toString ( ) ; }', '[\'TYPE_1: HttpServletRequest\', \'TYPE_3: HttpUtils\', \'TYPE_2: RepositoryModel\', \'METHOD_3: exceeds\', \'METHOD_1: getRepositoryUrl\', \'METHOD_4: insert\', \'METHOD_2: getGitblitURL\', \'METHOD_5: indexOf\', \'VAR_4: repository.accessRestriction\', \'VAR_5: AccessRestrictionType.NONE\', \'VAR_3: Constants.GIT_PATH\', \'VAR_2: repository\', \'VAR_1: username\', \'STRING_2: "<AT>"\', \'STRING_1: ":<DOUBLE_SLASH>"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitBlit.java', 151, '516:9', '528:9', 100, 9 ), ( 5, 221, 34, 'protected UserModel authenticate(Cookie[] cookies) {\n    if (userService == null) {\n    return null;\n    }\n    if (userService.supportsCookies()) {\n    if (cookies != null && cookies.length > 0) {\n    for (Cookie cookie : cookies) {\n    if (cookie.getName().equals(Constants.NAME)) {\n    String value = cookie.getValue();\n    return userService.authenticate(value.toCharArray());\n    }\n    }\n    }\n    }\n    return null;\n    }', '[\'protected\', \'UserModel\', \'authenticate\', \'(\', \'Cookie\', \'[\', \']\', \'cookies\', \')\', \'{\', \'if\', \'(\', \'userService\', \'==\', \'null\', \')\', \'{\', \'return\', \'null\', \';\', \'}\', \'if\', \'(\', \'userService\', \'.\', \'supportsCookies\', \'(\', \')\', \')\', \'{\', \'if\', \'(\', \'cookies\', \'!=\', \'null\', \'&&\', \'cookies\', \'.\', \'length\', \'>\', \'0\', \')\', \'{\', \'for\', \'(\', \'Cookie\', \'cookie\', \':\', \'cookies\', \')\', \'{\', \'if\', \'(\', \'cookie\', \'.\', \'getName\', \'(\', \')\', \'.\', \'equals\', \'(\', \'Constants.NAME\', \')\', \')\', \'{\', \'String\', \'value\', \'=\', \'cookie\', \'.\', \'getValue\', \'(\', \')\', \';\', \'return\', \'userService\', \'.\', \'authenticate\', \'(\', \'value\', \'.\', \'toCharArray\', \'(\', \')\', \')\', \';\', \'}\', \'}\', \'}\', \'}\', \'return\', \'null\', \';\', \'}\']', 'protected TYPE_1 METHOD_1 ( TYPE_2 [ ] VAR_1 ) { if ( VAR_2 == null ) { return null ; } if ( VAR_2 . METHOD_2 ( ) ) { if ( VAR_1 != null && VAR_1 . length > 0 ) { for ( TYPE_2 VAR_3 : VAR_1 ) { if ( VAR_3 . getName ( ) . equals ( VAR_4 ) ) { String value = VAR_3 . getValue ( ) ; return VAR_2 . METHOD_1 ( value . METHOD_3 ( ) ) ; } } } } return null ; }', '[\'TYPE_1: UserModel\', \'TYPE_2: Cookie\', \'METHOD_2: supportsCookies\', \'METHOD_3: toCharArray\', \'METHOD_1: authenticate\', \'VAR_3: cookie\', \'VAR_4: Constants.NAME\', \'VAR_1: cookies\', \'VAR_2: userService\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitBlit.java', 151, '729:9', '744:9', 91, 10 ), ( 5, 221, 37, 'protected void flagWicketSession(AuthenticationType authenticationType) {\n    RequestCycle requestCycle = RequestCycle.get();\n    if (requestCycle != null) {\n    // flag the Wicket session, if this is a Wicket request\n    GitBlitWebSession session = GitBlitWebSession.get();\n    session.authenticationType = authenticationType;\n    }\n    }', '[\'protected\', \'void\', \'flagWicketSession\', \'(\', \'AuthenticationType\', \'authenticationType\', \')\', \'{\', \'RequestCycle\', \'requestCycle\', \'=\', \'RequestCycle\', \'.\', \'get\', \'(\', \')\', \';\', \'if\', \'(\', \'requestCycle\', \'!=\', \'null\', \')\', \'{\', \'GitBlitWebSession\', \'session\', \'=\', \'GitBlitWebSession\', \'.\', \'get\', \'(\', \')\', \';\', \'session.authenticationType\', \'=\', \'authenticationType\', \';\', \'}\', \'}\']', 'protected void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = TYPE_2 . get ( ) ; if ( VAR_2 != null ) { TYPE_3 session = TYPE_3 . get ( ) ; VAR_3 = VAR_1 ; } }', '[\'TYPE_2: RequestCycle\', \'TYPE_3: GitBlitWebSession\', \'TYPE_1: AuthenticationType\', \'METHOD_1: flagWicketSession\', \'VAR_2: requestCycle\', \'VAR_1: authenticationType\', \'VAR_3: session.authenticationType\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitBlit.java', 151, '850:9', '857:9', 40, 5 ), ( 5, 221, 44, 'public UserModel getUserModel(String username) {\n    if (StringUtils.isEmpty(username)) {\n    return null;\n    }\n    UserModel user = userService.getUserModel(username);\n    return user;\n    }', '[\'public\', \'UserModel\', \'getUserModel\', \'(\', \'String\', \'username\', \')\', \'{\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'username\', \')\', \')\', \'{\', \'return\', \'null\', \';\', \'}\', \'UserModel\', \'user\', \'=\', \'userService\', \'.\', \'getUserModel\', \'(\', \'username\', \')\', \';\', \'return\', \'user\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( String VAR_1 ) { if ( StringUtils . isEmpty ( VAR_1 ) ) { return null ; } TYPE_1 VAR_2 = VAR_3 . METHOD_1 ( VAR_1 ) ; return VAR_2 ; }', '[\'TYPE_1: UserModel\', \'METHOD_1: getUserModel\', \'VAR_2: user\', \'VAR_1: username\', \'VAR_3: userService\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitBlit.java', 151, '957:9', '963:9', 36, 5 ), ( 5, 221, 47, 'public boolean setUserAccessPermissions(RepositoryModel repository, Collection<RegistrantAccessPermission> permissions) {\n    List<UserModel> users = new ArrayList<UserModel>();\n    for (RegistrantAccessPermission up : permissions) {\n    if (up.mutable) {\n    // only set editable defined permissions\n    UserModel user = userService.getUserModel(up.registrant);\n    user.setRepositoryPermission(repository.name, up.permission);\n    users.add(user);\n    }\n    }\n    return userService.updateUserModels(users);\n    }', '[\'public\', \'boolean\', \'setUserAccessPermissions\', \'(\', \'RepositoryModel\', \'repository\', \',\', \'Collection\', \'<\', \'RegistrantAccessPermission\', \'>\', \'permissions\', \')\', \'{\', \'List\', \'<\', \'UserModel\', \'>\', \'users\', \'=\', \'new\', \'ArrayList\', \'<\', \'UserModel\', \'>\', \'(\', \')\', \';\', \'for\', \'(\', \'RegistrantAccessPermission\', \'up\', \':\', \'permissions\', \')\', \'{\', \'if\', \'(\', \'up.mutable\', \')\', \'{\', \'UserModel\', \'user\', \'=\', \'userService\', \'.\', \'getUserModel\', \'(\', \'up.registrant\', \')\', \';\', \'user\', \'.\', \'setRepositoryPermission\', \'(\', \'repository\', \'.\', \'name\', \',\', \'up.permission\', \')\', \';\', \'users\', \'.\', \'add\', \'(\', \'user\', \')\', \';\', \'}\', \'}\', \'return\', \'userService\', \'.\', \'updateUserModels\', \'(\', \'users\', \')\', \';\', \'}\']', 'public boolean METHOD_1 ( TYPE_1 VAR_1 , Collection < TYPE_2 > VAR_2 ) { List < TYPE_3 > VAR_3 = new ArrayList < TYPE_3 > ( ) ; for ( TYPE_2 VAR_4 : VAR_2 ) { if ( VAR_5 ) { TYPE_3 VAR_6 = VAR_7 . METHOD_2 ( VAR_8 ) ; VAR_6 . METHOD_3 ( VAR_1 . name , VAR_9 ) ; VAR_3 . add ( VAR_6 ) ; } } return VAR_7 . METHOD_4 ( VAR_3 ) ; }', '[\'TYPE_3: UserModel\', \'TYPE_2: RegistrantAccessPermission\', \'TYPE_1: RepositoryModel\', \'METHOD_1: setUserAccessPermissions\', \'METHOD_2: getUserModel\', \'METHOD_4: updateUserModels\', \'METHOD_3: setRepositoryPermission\', \'VAR_2: permissions\', \'VAR_5: up.mutable\', \'VAR_9: up.permission\', \'VAR_4: up\', \'VAR_1: repository\', \'VAR_6: user\', \'VAR_8: up.registrant\', \'VAR_3: users\', \'VAR_7: userService\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitBlit.java', 151, '1044:9', '1055:9', 86, 8 ), ( 5, 221, 54, 'public List<RegistrantAccessPermission> getTeamAccessPermissions(RepositoryModel repository) {\n    List<RegistrantAccessPermission> list = new ArrayList<RegistrantAccessPermission>();\n    for (TeamModel team : userService.getAllTeams()) {\n    RegistrantAccessPermission ap = team.getRepositoryPermission(repository);\n    if (ap.permission.exceeds(AccessPermission.NONE)) {\n    list.add(ap);\n    }\n    }\n    Collections.sort(list);\n    return list;\n    }', '[\'public\', \'List\', \'<\', \'RegistrantAccessPermission\', \'>\', \'getTeamAccessPermissions\', \'(\', \'RepositoryModel\', \'repository\', \')\', \'{\', \'List\', \'<\', \'RegistrantAccessPermission\', \'>\', \'list\', \'=\', \'new\', \'ArrayList\', \'<\', \'RegistrantAccessPermission\', \'>\', \'(\', \')\', \';\', \'for\', \'(\', \'TeamModel\', \'team\', \':\', \'userService\', \'.\', \'getAllTeams\', \'(\', \')\', \')\', \'{\', \'RegistrantAccessPermission\', \'ap\', \'=\', \'team\', \'.\', \'getRepositoryPermission\', \'(\', \'repository\', \')\', \';\', \'if\', \'(\', \'ap.permission\', \'.\', \'exceeds\', \'(\', \'AccessPermission.NONE\', \')\', \')\', \'{\', \'list\', \'.\', \'add\', \'(\', \'ap\', \')\', \';\', \'}\', \'}\', \'Collections\', \'.\', \'sort\', \'(\', \'list\', \')\', \';\', \'return\', \'list\', \';\', \'}\']', 'public List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 ) { List < TYPE_1 > list = new ArrayList < TYPE_1 > ( ) ; for ( TYPE_3 VAR_2 : VAR_3 . METHOD_2 ( ) ) { TYPE_1 VAR_4 = VAR_2 . METHOD_3 ( VAR_1 ) ; if ( VAR_5 . METHOD_4 ( VAR_6 ) ) { list . add ( VAR_4 ) ; } } Collections . METHOD_5 ( list ) ; return list ; }', '[\'TYPE_3: TeamModel\', \'TYPE_1: RegistrantAccessPermission\', \'TYPE_2: RepositoryModel\', \'METHOD_4: exceeds\', \'METHOD_1: getTeamAccessPermissions\', \'METHOD_5: sort\', \'METHOD_2: getAllTeams\', \'METHOD_3: getRepositoryPermission\', \'VAR_5: ap.permission\', \'VAR_6: AccessPermission.NONE\', \'VAR_2: team\', \'VAR_1: repository\', \'VAR_3: userService\', \'VAR_4: ap\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitBlit.java', 151, '1165:9', '1175:9', 79, 8 ), ( 5, 221, 55, 'public boolean setTeamAccessPermissions(RepositoryModel repository, Collection<RegistrantAccessPermission> permissions) {\n    List<TeamModel> teams = new ArrayList<TeamModel>();\n    for (RegistrantAccessPermission tp : permissions) {\n    if (tp.mutable) {\n    // only set explicitly defined access permissions\n    TeamModel team = userService.getTeamModel(tp.registrant);\n    team.setRepositoryPermission(repository.name, tp.permission);\n    teams.add(team);\n    }\n    }\n    return userService.updateTeamModels(teams);\n    }', '[\'public\', \'boolean\', \'setTeamAccessPermissions\', \'(\', \'RepositoryModel\', \'repository\', \',\', \'Collection\', \'<\', \'RegistrantAccessPermission\', \'>\', \'permissions\', \')\', \'{\', \'List\', \'<\', \'TeamModel\', \'>\', \'teams\', \'=\', \'new\', \'ArrayList\', \'<\', \'TeamModel\', \'>\', \'(\', \')\', \';\', \'for\', \'(\', \'RegistrantAccessPermission\', \'tp\', \':\', \'permissions\', \')\', \'{\', \'if\', \'(\', \'tp.mutable\', \')\', \'{\', \'TeamModel\', \'team\', \'=\', \'userService\', \'.\', \'getTeamModel\', \'(\', \'tp.registrant\', \')\', \';\', \'team\', \'.\', \'setRepositoryPermission\', \'(\', \'repository\', \'.\', \'name\', \',\', \'tp.permission\', \')\', \';\', \'teams\', \'.\', \'add\', \'(\', \'team\', \')\', \';\', \'}\', \'}\', \'return\', \'userService\', \'.\', \'updateTeamModels\', \'(\', \'teams\', \')\', \';\', \'}\']', 'public boolean METHOD_1 ( TYPE_1 VAR_1 , Collection < TYPE_2 > VAR_2 ) { List < TYPE_3 > VAR_3 = new ArrayList < TYPE_3 > ( ) ; for ( TYPE_2 VAR_4 : VAR_2 ) { if ( VAR_5 ) { TYPE_3 VAR_6 = VAR_7 . METHOD_2 ( VAR_8 ) ; VAR_6 . METHOD_3 ( VAR_1 . name , VAR_9 ) ; VAR_3 . add ( VAR_6 ) ; } } return VAR_7 . METHOD_4 ( VAR_3 ) ; }', '[\'TYPE_3: TeamModel\', \'TYPE_2: RegistrantAccessPermission\', \'TYPE_1: RepositoryModel\', \'METHOD_2: getTeamModel\', \'METHOD_3: setRepositoryPermission\', \'METHOD_4: updateTeamModels\', \'METHOD_1: setTeamAccessPermissions\', \'VAR_3: teams\', \'VAR_9: tp.permission\', \'VAR_2: permissions\', \'VAR_5: tp.mutable\', \'VAR_6: team\', \'VAR_1: repository\', \'VAR_4: tp\', \'VAR_8: tp.registrant\', \'VAR_7: userService\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitBlit.java', 151, '1184:9', '1195:9', 86, 8 ), ( 5, 221, 58, 'public void updateTeamModel(String teamname, TeamModel team, boolean isCreate)\n    throws GitBlitException {\n    if (!teamname.equalsIgnoreCase(team.name)) {\n    if (userService.getTeamModel(team.name) != null) {\n    throw new GitBlitException(MessageFormat.format(\n    						"Failed to rename \'\'{0}\'\' because \'\'{1}\'\' already exists.", teamname,\n    						team.name));\n    }\n    }\n    if (!userService.updateTeamModel(teamname, team)) {\n    throw new GitBlitException(isCreate ? "Failed to add team!" : "Failed to update team!");\n    }\n    }', '[\'public\', \'void\', \'updateTeamModel\', \'(\', \'String\', \'teamname\', \',\', \'TeamModel\', \'team\', \',\', \'boolean\', \'isCreate\', \')\', \'throws\', \'GitBlitException\', \'{\', \'if\', \'(\', \'!\', \'teamname\', \'.\', \'equalsIgnoreCase\', \'(\', \'team\', \'.\', \'name\', \')\', \')\', \'{\', \'if\', \'(\', \'userService\', \'.\', \'getTeamModel\', \'(\', \'team\', \'.\', \'name\', \')\', \'!=\', \'null\', \')\', \'{\', \'throw\', \'new\', \'GitBlitException\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'"Failed to rename \\\'\\\'{0}\\\'\\\' because \\\'\\\'{1}\\\'\\\' already exists."\', \',\', \'teamname\', \',\', \'team\', \'.\', \'name\', \')\', \')\', \';\', \'}\', \'}\', \'if\', \'(\', \'!\', \'userService\', \'.\', \'updateTeamModel\', \'(\', \'teamname\', \',\', \'team\', \')\', \')\', \'{\', \'throw\', \'new\', \'GitBlitException\', \'(\', \'isCreate\', \'?\', \'"Failed to add team!"\', \':\', \'"Failed to update team!"\', \')\', \';\', \'}\', \'}\']', 'public void METHOD_1 ( String VAR_1 , TYPE_1 VAR_2 , boolean VAR_3 ) throws TYPE_2 { if ( ! VAR_1 . METHOD_2 ( VAR_2 . name ) ) { if ( VAR_4 . METHOD_3 ( VAR_2 . name ) != null ) { throw new TYPE_2 ( TYPE_3 . format ( STRING_1 , VAR_1 , VAR_2 . name ) ) ; } } if ( ! VAR_4 . METHOD_1 ( VAR_1 , VAR_2 ) ) { throw new TYPE_2 ( VAR_3 ? STRING_2 : STRING_3 ) ; } }', '[\'TYPE_1: TeamModel\', \'TYPE_3: MessageFormat\', \'TYPE_2: GitBlitException\', \'METHOD_1: updateTeamModel\', \'METHOD_3: getTeamModel\', \'METHOD_2: equalsIgnoreCase\', \'VAR_3: isCreate\', \'VAR_2: team\', \'VAR_1: teamname\', \'VAR_4: userService\', \'STRING_1: "Failed to rename \\\'\\\'{0}\\\'\\\' because \\\'\\\'{1}\\\'\\\' already exists."\', \'STRING_2: "Failed to add team!"\', \'STRING_3: "Failed to update team!"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitBlit.java', 151, '1232:9', '1244:9', 89, 9 ), ( 5, 221, 60, 'private void addToCachedRepositoryList(RepositoryModel model) {\n    if (settings.getBoolean(Keys.git.cacheRepositoryList, true)) {\n    repositoryListCache.put(model.name.toLowerCase(), model);\n    // update the fork origin repository with this repository clone\n    if (!StringUtils.isEmpty(model.originRepository)) {\n    if (repositoryListCache.containsKey(model.originRepository)) {\n    RepositoryModel origin = repositoryListCache.get(model.originRepository);\n    origin.addFork(model.name);\n    }\n    }\n    }\n    }', '[\'private\', \'void\', \'addToCachedRepositoryList\', \'(\', \'RepositoryModel\', \'model\', \')\', \'{\', \'if\', \'(\', \'settings\', \'.\', \'getBoolean\', \'(\', \'Keys.git.cacheRepositoryList\', \',\', \'true\', \')\', \')\', \'{\', \'repositoryListCache\', \'.\', \'put\', \'(\', \'model.name\', \'.\', \'toLowerCase\', \'(\', \')\', \',\', \'model\', \')\', \';\', \'if\', \'(\', \'!\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'model.originRepository\', \')\', \')\', \'{\', \'if\', \'(\', \'repositoryListCache\', \'.\', \'containsKey\', \'(\', \'model.originRepository\', \')\', \')\', \'{\', \'RepositoryModel\', \'origin\', \'=\', \'repositoryListCache\', \'.\', \'get\', \'(\', \'model.originRepository\', \')\', \';\', \'origin\', \'.\', \'addFork\', \'(\', \'model\', \'.\', \'name\', \')\', \';\', \'}\', \'}\', \'}\', \'}\']', 'private void METHOD_1 ( TYPE_1 model ) { if ( VAR_1 . METHOD_2 ( VAR_2 , true ) ) { VAR_3 . put ( VAR_4 . METHOD_3 ( ) , model ) ; if ( ! StringUtils . isEmpty ( VAR_5 ) ) { if ( VAR_3 . containsKey ( VAR_5 ) ) { TYPE_1 VAR_6 = VAR_3 . get ( VAR_5 ) ; VAR_6 . METHOD_4 ( model . name ) ; } } } }', '[\'TYPE_1: RepositoryModel\', \'METHOD_4: addFork\', \'METHOD_1: addToCachedRepositoryList\', \'METHOD_3: toLowerCase\', \'METHOD_2: getBoolean\', \'VAR_1: settings\', \'VAR_4: model.name\', \'VAR_5: model.originRepository\', \'VAR_6: origin\', \'VAR_3: repositoryListCache\', \'VAR_2: Keys.git.cacheRepositoryList\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitBlit.java', 151, '1263:9', '1275:9', 89, 7 ), ( 5, 221, 65, 'private boolean isValidRepositoryList() {\n    String newChecksum = getRepositoryListSettingsChecksum();\n    boolean valid = newChecksum.equals(repositoryListSettingsChecksum.get());\n    repositoryListSettingsChecksum.set(newChecksum);\n    if (!valid && settings.getBoolean(Keys.git.cacheRepositoryList,  true)) {\n    logger.info("Repository list settings have changed. Clearing repository list cache.");\n    repositoryListCache.clear();\n    }\n    return valid;\n    }', '[\'private\', \'boolean\', \'isValidRepositoryList\', \'(\', \')\', \'{\', \'String\', \'newChecksum\', \'=\', \'getRepositoryListSettingsChecksum\', \'(\', \')\', \';\', \'boolean\', \'valid\', \'=\', \'newChecksum\', \'.\', \'equals\', \'(\', \'repositoryListSettingsChecksum\', \'.\', \'get\', \'(\', \')\', \')\', \';\', \'repositoryListSettingsChecksum\', \'.\', \'set\', \'(\', \'newChecksum\', \')\', \';\', \'if\', \'(\', \'!\', \'valid\', \'&&\', \'settings\', \'.\', \'getBoolean\', \'(\', \'Keys.git.cacheRepositoryList\', \',\', \'true\', \')\', \')\', \'{\', \'logger\', \'.\', \'info\', \'(\', \'"Repository list settings have changed. Clearing repository list cache."\', \')\', \';\', \'repositoryListCache\', \'.\', \'clear\', \'(\', \')\', \';\', \'}\', \'return\', \'valid\', \';\', \'}\']', 'private boolean METHOD_1 ( ) { String VAR_1 = METHOD_2 ( ) ; boolean VAR_2 = VAR_1 . equals ( VAR_3 . get ( ) ) ; VAR_3 . set ( VAR_1 ) ; if ( ! VAR_2 && VAR_4 . METHOD_3 ( VAR_5 , true ) ) { logger . info ( STRING_1 ) ; VAR_6 . METHOD_4 ( ) ; } return VAR_2 ; }', '[\'METHOD_4: clear\', \'METHOD_3: getBoolean\', \'METHOD_2: getRepositoryListSettingsChecksum\', \'METHOD_1: isValidRepositoryList\', \'VAR_1: newChecksum\', \'VAR_2: valid\', \'VAR_4: settings\', \'VAR_3: repositoryListSettingsChecksum\', \'VAR_6: repositoryListCache\', \'VAR_5: Keys.git.cacheRepositoryList\', \'STRING_1: "Repository list settings have changed. Clearing repository list cache."\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitBlit.java', 151, '1330:9', '1339:9', 67, 8 ), ( 5, 221, 70, 'public RepositoryModel getRepositoryModel(UserModel user, String repositoryName) {\n    RepositoryModel model = getRepositoryModel(repositoryName);\n    if (model == null) {\n    return null;\n    }\n    if (user == null) {\n    user = UserModel.ANONYMOUS;\n    }\n    if (user.canView(model)) {\n    return model;\n    }\n    return null;\n    }', '[\'public\', \'RepositoryModel\', \'getRepositoryModel\', \'(\', \'UserModel\', \'user\', \',\', \'String\', \'repositoryName\', \')\', \'{\', \'RepositoryModel\', \'model\', \'=\', \'getRepositoryModel\', \'(\', \'repositoryName\', \')\', \';\', \'if\', \'(\', \'model\', \'==\', \'null\', \')\', \'{\', \'return\', \'null\', \';\', \'}\', \'if\', \'(\', \'user\', \'==\', \'null\', \')\', \'{\', \'user\', \'=\', \'UserModel.ANONYMOUS\', \';\', \'}\', \'if\', \'(\', \'user\', \'.\', \'canView\', \'(\', \'model\', \')\', \')\', \'{\', \'return\', \'model\', \';\', \'}\', \'return\', \'null\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , String VAR_2 ) { TYPE_1 model = METHOD_1 ( VAR_2 ) ; if ( model == null ) { return null ; } if ( VAR_1 == null ) { VAR_1 = VAR_3 ; } if ( VAR_1 . METHOD_2 ( model ) ) { return model ; } return null ; }', '[\'TYPE_2: UserModel\', \'TYPE_1: RepositoryModel\', \'METHOD_2: canView\', \'METHOD_1: getRepositoryModel\', \'VAR_3: UserModel.ANONYMOUS\', \'VAR_2: repositoryName\', \'VAR_1: user\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitBlit.java', 151, '1498:9', '1510:9', 62, 9 ), ( 5, 221, 74, 'public ProjectModel getProjectModel(String name, UserModel user) {\n    for (ProjectModel project : getProjectModels(user, true)) {\n    if (project.name.equalsIgnoreCase(name)) {\n    return project;\n    }\n    }\n    return null;\n    }', '[\'public\', \'ProjectModel\', \'getProjectModel\', \'(\', \'String\', \'name\', \',\', \'UserModel\', \'user\', \')\', \'{\', \'for\', \'(\', \'ProjectModel\', \'project\', \':\', \'getProjectModels\', \'(\', \'user\', \',\', \'true\', \')\', \')\', \'{\', \'if\', \'(\', \'project.name\', \'.\', \'equalsIgnoreCase\', \'(\', \'name\', \')\', \')\', \'{\', \'return\', \'project\', \';\', \'}\', \'}\', \'return\', \'null\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( String name , TYPE_2 VAR_1 ) { for ( TYPE_1 VAR_2 : METHOD_2 ( VAR_1 , true ) ) { if ( VAR_3 . METHOD_3 ( name ) ) { return VAR_2 ; } } return null ; }', '[\'TYPE_2: UserModel\', \'TYPE_1: ProjectModel\', \'METHOD_1: getProjectModel\', \'METHOD_2: getProjectModels\', \'METHOD_3: equalsIgnoreCase\', \'VAR_2: project\', \'VAR_3: project.name\', \'VAR_1: user\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitBlit.java', 151, '1699:9', '1706:9', 45, 5 ), ( 5, 221, 77, 'private StoredConfig getRepositoryConfig(Repository r) {\n    try {\n    Field f = r.getClass().getDeclaredField("repoConfig");\n    f.setAccessible(true);\n    StoredConfig config = (StoredConfig) f.get(r);\n    return config;\n    } catch (Exception e) {\n    logger.error("Failed to retrieve \\"repoConfig\\" via reflection", e);\n    }\n    return r.getConfig();\n    }', '[\'private\', \'StoredConfig\', \'getRepositoryConfig\', \'(\', \'Repository\', \'r\', \')\', \'{\', \'try\', \'{\', \'Field\', \'f\', \'=\', \'r\', \'.\', \'getClass\', \'(\', \')\', \'.\', \'getDeclaredField\', \'(\', \'"repoConfig"\', \')\', \';\', \'f\', \'.\', \'setAccessible\', \'(\', \'true\', \')\', \';\', \'StoredConfig\', \'config\', \'=\', \'(\', \'StoredConfig\', \')\', \'f\', \'.\', \'get\', \'(\', \'r\', \')\', \';\', \'return\', \'config\', \';\', \'}\', \'catch\', \'(\', \'Exception\', \'e\', \')\', \'{\', \'logger\', \'.\', \'error\', \'(\', \'"Failed to retrieve \\\\"repoConfig\\\\" via reflection"\', \',\', \'e\', \')\', \';\', \'}\', \'return\', \'r\', \'.\', \'getConfig\', \'(\', \')\', \';\', \'}\']', 'private TYPE_1 METHOD_1 ( TYPE_2 r ) { try { Field f = r . getClass ( ) . METHOD_2 ( STRING_1 ) ; f . METHOD_3 ( true ) ; TYPE_1 config = ( TYPE_1 ) f . get ( r ) ; return config ; } catch ( Exception e ) { logger . error ( STRING_2 , e ) ; } return r . METHOD_4 ( ) ; }', '[\'TYPE_1: StoredConfig\', \'TYPE_2: Repository\', \'METHOD_2: getDeclaredField\', \'METHOD_1: getRepositoryConfig\', \'METHOD_3: setAccessible\', \'METHOD_4: getConfig\', \'STRING_1: "repoConfig"\', \'STRING_2: "Failed to retrieve \\\\"repoConfig\\\\" via reflection"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitBlit.java', 151, '1807:9', '1817:9', 70, 9 ), ( 5, 221, 80, 'public boolean hasRepository(String repositoryName, boolean caseSensitiveCheck) {\n    if (!caseSensitiveCheck && settings.getBoolean(Keys.git.cacheRepositoryList, true)) {\n    // if we are caching use the cache to determine availability\n    // otherwise we end up adding a phantom repository to the cache\n    return repositoryListCache.containsKey(repositoryName.toLowerCase());\n    }\n    Repository r = getRepository(repositoryName, false);\n    if (r == null) {\n    return false;\n    }\n    r.close();\n    return true;\n    }', '[\'public\', \'boolean\', \'hasRepository\', \'(\', \'String\', \'repositoryName\', \',\', \'boolean\', \'caseSensitiveCheck\', \')\', \'{\', \'if\', \'(\', \'!\', \'caseSensitiveCheck\', \'&&\', \'settings\', \'.\', \'getBoolean\', \'(\', \'Keys.git.cacheRepositoryList\', \',\', \'true\', \')\', \')\', \'{\', \'return\', \'repositoryListCache\', \'.\', \'containsKey\', \'(\', \'repositoryName\', \'.\', \'toLowerCase\', \'(\', \')\', \')\', \';\', \'}\', \'Repository\', \'r\', \'=\', \'getRepository\', \'(\', \'repositoryName\', \',\', \'false\', \')\', \';\', \'if\', \'(\', \'r\', \'==\', \'null\', \')\', \'{\', \'return\', \'false\', \';\', \'}\', \'r\', \'.\', \'close\', \'(\', \')\', \';\', \'return\', \'true\', \';\', \'}\']', 'public boolean METHOD_1 ( String VAR_1 , boolean VAR_2 ) { if ( ! VAR_2 && VAR_3 . METHOD_2 ( VAR_4 , true ) ) { return VAR_5 . containsKey ( VAR_1 . METHOD_3 ( ) ) ; } TYPE_1 r = METHOD_4 ( VAR_1 , false ) ; if ( r == null ) { return false ; } r . close ( ) ; return true ; }', '[\'TYPE_1: Repository\', \'METHOD_3: toLowerCase\', \'METHOD_4: getRepository\', \'METHOD_2: getBoolean\', \'METHOD_1: hasRepository\', \'VAR_3: settings\', \'VAR_2: caseSensitiveCheck\', \'VAR_5: repositoryListCache\', \'VAR_1: repositoryName\', \'VAR_4: Keys.git.cacheRepositoryList\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitBlit.java', 151, '1941:9', '1953:9', 74, 8 ), ( 5, 221, 84, 'private ForkModel getForkModelFromCache(String repository) {\n    RepositoryModel model = repositoryListCache.get(repository.toLowerCase());\n    if (model == null) {\n    return null;\n    }\n    ForkModel fork = new ForkModel(model);\n    if (!ArrayUtils.isEmpty(model.forks)) {\n    for (String aFork : model.forks) {\n    ForkModel fm = getForkModelFromCache(aFork);\n    if (fm != null) {\n    fork.forks.add(fm);\n    }\n    }\n    }\n    return fork;\n    }', '[\'private\', \'ForkModel\', \'getForkModelFromCache\', \'(\', \'String\', \'repository\', \')\', \'{\', \'RepositoryModel\', \'model\', \'=\', \'repositoryListCache\', \'.\', \'get\', \'(\', \'repository\', \'.\', \'toLowerCase\', \'(\', \')\', \')\', \';\', \'if\', \'(\', \'model\', \'==\', \'null\', \')\', \'{\', \'return\', \'null\', \';\', \'}\', \'ForkModel\', \'fork\', \'=\', \'new\', \'ForkModel\', \'(\', \'model\', \')\', \';\', \'if\', \'(\', \'!\', \'ArrayUtils\', \'.\', \'isEmpty\', \'(\', \'model.forks\', \')\', \')\', \'{\', \'for\', \'(\', \'String\', \'aFork\', \':\', \'model.forks\', \')\', \'{\', \'ForkModel\', \'fm\', \'=\', \'getForkModelFromCache\', \'(\', \'aFork\', \')\', \';\', \'if\', \'(\', \'fm\', \'!=\', \'null\', \')\', \'{\', \'fork.forks\', \'.\', \'add\', \'(\', \'fm\', \')\', \';\', \'}\', \'}\', \'}\', \'return\', \'fork\', \';\', \'}\']', 'private TYPE_1 METHOD_1 ( String VAR_1 ) { TYPE_2 model = VAR_2 . get ( VAR_1 . METHOD_2 ( ) ) ; if ( model == null ) { return null ; } TYPE_1 VAR_3 = new TYPE_1 ( model ) ; if ( ! TYPE_3 . isEmpty ( VAR_4 ) ) { for ( String VAR_5 : VAR_4 ) { TYPE_1 VAR_6 = METHOD_1 ( VAR_5 ) ; if ( VAR_6 != null ) { VAR_7 . add ( VAR_6 ) ; } } } return VAR_3 ; }', '[\'TYPE_1: ForkModel\', \'TYPE_3: ArrayUtils\', \'TYPE_2: RepositoryModel\', \'METHOD_2: toLowerCase\', \'METHOD_1: getForkModelFromCache\', \'VAR_3: fork\', \'VAR_7: fork.forks\', \'VAR_4: model.forks\', \'VAR_6: fm\', \'VAR_2: repositoryListCache\', \'VAR_5: aFork\', \'VAR_1: repository\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitBlit.java', 151, '2060:9', '2075:9', 95, 11 ), ( 5, 221, 85, 'private ForkModel getForkModel(String repository) {\n    RepositoryModel model = getRepositoryModel(repository.toLowerCase());\n    if (model == null) {\n    return null;\n    }\n    ForkModel fork = new ForkModel(model);\n    if (!ArrayUtils.isEmpty(model.forks)) {\n    for (String aFork : model.forks) {\n    ForkModel fm = getForkModel(aFork);\n    if (fm != null) {\n    fork.forks.add(fm);\n    }\n    }\n    }\n    return fork;\n    }', '[\'private\', \'ForkModel\', \'getForkModel\', \'(\', \'String\', \'repository\', \')\', \'{\', \'RepositoryModel\', \'model\', \'=\', \'getRepositoryModel\', \'(\', \'repository\', \'.\', \'toLowerCase\', \'(\', \')\', \')\', \';\', \'if\', \'(\', \'model\', \'==\', \'null\', \')\', \'{\', \'return\', \'null\', \';\', \'}\', \'ForkModel\', \'fork\', \'=\', \'new\', \'ForkModel\', \'(\', \'model\', \')\', \';\', \'if\', \'(\', \'!\', \'ArrayUtils\', \'.\', \'isEmpty\', \'(\', \'model.forks\', \')\', \')\', \'{\', \'for\', \'(\', \'String\', \'aFork\', \':\', \'model.forks\', \')\', \'{\', \'ForkModel\', \'fm\', \'=\', \'getForkModel\', \'(\', \'aFork\', \')\', \';\', \'if\', \'(\', \'fm\', \'!=\', \'null\', \')\', \'{\', \'fork.forks\', \'.\', \'add\', \'(\', \'fm\', \')\', \';\', \'}\', \'}\', \'}\', \'return\', \'fork\', \';\', \'}\']', 'private TYPE_1 METHOD_1 ( String VAR_1 ) { TYPE_2 model = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; if ( model == null ) { return null ; } TYPE_1 VAR_2 = new TYPE_1 ( model ) ; if ( ! TYPE_3 . isEmpty ( VAR_3 ) ) { for ( String VAR_4 : VAR_3 ) { TYPE_1 VAR_5 = METHOD_1 ( VAR_4 ) ; if ( VAR_5 != null ) { VAR_6 . add ( VAR_5 ) ; } } } return VAR_2 ; }', '[\'TYPE_1: ForkModel\', \'TYPE_3: ArrayUtils\', \'TYPE_2: RepositoryModel\', \'METHOD_1: getForkModel\', \'METHOD_3: toLowerCase\', \'METHOD_2: getRepositoryModel\', \'VAR_2: fork\', \'VAR_6: fork.forks\', \'VAR_3: model.forks\', \'VAR_5: fm\', \'VAR_4: aFork\', \'VAR_1: repository\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitBlit.java', 151, '2077:9', '2092:9', 93, 11 ), ( 5, 221, 86, 'public long calculateSize(RepositoryModel model) {\n    if (repositorySizeCache.hasCurrent(model.name, model.lastChange)) {\n    return repositorySizeCache.getObject(model.name);\n    }\n    File gitDir = FileKey.resolve(new File(repositoriesFolder, model.name), FS.DETECTED);\n    long size = com.gitblit.utils.FileUtils.folderSize(gitDir);\n    repositorySizeCache.updateObject(model.name, model.lastChange, size);\n    return size;\n    }', '[\'public\', \'long\', \'calculateSize\', \'(\', \'RepositoryModel\', \'model\', \')\', \'{\', \'if\', \'(\', \'repositorySizeCache\', \'.\', \'hasCurrent\', \'(\', \'model\', \'.\', \'name\', \',\', \'model.lastChange\', \')\', \')\', \'{\', \'return\', \'repositorySizeCache\', \'.\', \'getObject\', \'(\', \'model\', \'.\', \'name\', \')\', \';\', \'}\', \'File\', \'gitDir\', \'=\', \'FileKey\', \'.\', \'resolve\', \'(\', \'new\', \'File\', \'(\', \'repositoriesFolder\', \',\', \'model\', \'.\', \'name\', \')\', \',\', \'FS.DETECTED\', \')\', \';\', \'long\', \'size\', \'=\', \'com.gitblit.utils.FileUtils\', \'.\', \'folderSize\', \'(\', \'gitDir\', \')\', \';\', \'repositorySizeCache\', \'.\', \'updateObject\', \'(\', \'model\', \'.\', \'name\', \',\', \'model.lastChange\', \',\', \'size\', \')\', \';\', \'return\', \'size\', \';\', \'}\']', 'public long METHOD_1 ( TYPE_1 model ) { if ( VAR_1 . METHOD_2 ( model . name , VAR_2 ) ) { return VAR_1 . METHOD_3 ( model . name ) ; } File VAR_3 = TYPE_2 . METHOD_4 ( new File ( VAR_4 , model . name ) , VAR_5 ) ; long size = TYPE_3 . METHOD_5 ( VAR_3 ) ; VAR_1 . METHOD_6 ( model . name , VAR_2 , size ) ; return size ; }', '[\'TYPE_2: FileKey\', \'TYPE_1: RepositoryModel\', \'TYPE_3: com.gitblit.utils.FileUtils\', \'METHOD_2: hasCurrent\', \'METHOD_3: getObject\', \'METHOD_4: resolve\', \'METHOD_6: updateObject\', \'METHOD_5: folderSize\', \'METHOD_1: calculateSize\', \'VAR_1: repositorySizeCache\', \'VAR_4: repositoriesFolder\', \'VAR_5: FS.DETECTED\', \'VAR_2: model.lastChange\', \'VAR_3: gitDir\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitBlit.java', 151, '2103:9', '2111:9', 92, 7 ), ( 5, 221, 88, 'public List<Metric> getRepositoryDefaultMetrics(RepositoryModel model, Repository repository) {\n    if (repositoryMetricsCache.hasCurrent(model.name, model.lastChange)) {\n    return new ArrayList<Metric>(repositoryMetricsCache.getObject(model.name));\n    }\n    List<Metric> metrics = MetricUtils.getDateMetrics(repository, null, true, null, getTimezone());\n    repositoryMetricsCache.updateObject(model.name, model.lastChange, metrics);\n    return new ArrayList<Metric>(metrics);\n    }', '[\'public\', \'List\', \'<\', \'Metric\', \'>\', \'getRepositoryDefaultMetrics\', \'(\', \'RepositoryModel\', \'model\', \',\', \'Repository\', \'repository\', \')\', \'{\', \'if\', \'(\', \'repositoryMetricsCache\', \'.\', \'hasCurrent\', \'(\', \'model\', \'.\', \'name\', \',\', \'model.lastChange\', \')\', \')\', \'{\', \'return\', \'new\', \'ArrayList\', \'<\', \'Metric\', \'>\', \'(\', \'repositoryMetricsCache\', \'.\', \'getObject\', \'(\', \'model\', \'.\', \'name\', \')\', \')\', \';\', \'}\', \'List\', \'<\', \'Metric\', \'>\', \'metrics\', \'=\', \'MetricUtils\', \'.\', \'getDateMetrics\', \'(\', \'repository\', \',\', \'null\', \',\', \'true\', \',\', \'null\', \',\', \'getTimezone\', \'(\', \')\', \')\', \';\', \'repositoryMetricsCache\', \'.\', \'updateObject\', \'(\', \'model\', \'.\', \'name\', \',\', \'model.lastChange\', \',\', \'metrics\', \')\', \';\', \'return\', \'new\', \'ArrayList\', \'<\', \'Metric\', \'>\', \'(\', \'metrics\', \')\', \';\', \'}\']', 'public List < TYPE_1 > METHOD_1 ( TYPE_2 model , TYPE_3 VAR_1 ) { if ( VAR_2 . METHOD_2 ( model . name , VAR_3 ) ) { return new ArrayList < TYPE_1 > ( VAR_2 . METHOD_3 ( model . name ) ) ; } List < TYPE_1 > VAR_4 = TYPE_4 . METHOD_4 ( VAR_1 , null , true , null , METHOD_5 ( ) ) ; VAR_2 . METHOD_6 ( model . name , VAR_3 , VAR_4 ) ; return new ArrayList < TYPE_1 > ( VAR_4 ) ; }', '[\'TYPE_3: Repository\', \'TYPE_1: Metric\', \'TYPE_2: RepositoryModel\', \'TYPE_4: MetricUtils\', \'METHOD_2: hasCurrent\', \'METHOD_3: getObject\', \'METHOD_4: getDateMetrics\', \'METHOD_5: getTimezone\', \'METHOD_6: updateObject\', \'METHOD_1: getRepositoryDefaultMetrics\', \'VAR_2: repositoryMetricsCache\', \'VAR_3: model.lastChange\', \'VAR_4: metrics\', \'VAR_1: repository\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitBlit.java', 151, '2166:9', '2173:9', 96, 6 ), ( 5, 221, 89, 'private String getConfig(StoredConfig config, String field, String defaultValue) {\n    String value = config.getString(Constants.CONFIG_GITBLIT, null, field);\n    if (StringUtils.isEmpty(value)) {\n    return defaultValue;\n    }\n    return value;\n    }', '[\'private\', \'String\', \'getConfig\', \'(\', \'StoredConfig\', \'config\', \',\', \'String\', \'field\', \',\', \'String\', \'defaultValue\', \')\', \'{\', \'String\', \'value\', \'=\', \'config\', \'.\', \'getString\', \'(\', \'Constants.CONFIG_GITBLIT\', \',\', \'null\', \',\', \'field\', \')\', \';\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'value\', \')\', \')\', \'{\', \'return\', \'defaultValue\', \';\', \'}\', \'return\', \'value\', \';\', \'}\']', 'private String METHOD_1 ( TYPE_1 config , String field , String VAR_1 ) { String value = config . getString ( VAR_2 , null , field ) ; if ( StringUtils . isEmpty ( value ) ) { return VAR_1 ; } return value ; }', '[\'TYPE_1: StoredConfig\', \'METHOD_1: getConfig\', \'VAR_1: defaultValue\', \'VAR_2: Constants.CONFIG_GITBLIT\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitBlit.java', 151, '2184:9', '2190:9', 48, 5 ), ( 5, 221, 91, 'private int getConfig(StoredConfig config, String field, int defaultValue) {\n    String value = config.getString(Constants.CONFIG_GITBLIT, null, field);\n    if (StringUtils.isEmpty(value)) {\n    return defaultValue;\n    }\n    try {\n    return Integer.parseInt(value);\n    } catch (Exception e) {\n    }\n    return defaultValue;\n    }', '[\'private\', \'int\', \'getConfig\', \'(\', \'StoredConfig\', \'config\', \',\', \'String\', \'field\', \',\', \'int\', \'defaultValue\', \')\', \'{\', \'String\', \'value\', \'=\', \'config\', \'.\', \'getString\', \'(\', \'Constants.CONFIG_GITBLIT\', \',\', \'null\', \',\', \'field\', \')\', \';\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'value\', \')\', \')\', \'{\', \'return\', \'defaultValue\', \';\', \'}\', \'try\', \'{\', \'return\', \'Integer\', \'.\', \'parseInt\', \'(\', \'value\', \')\', \';\', \'}\', \'catch\', \'(\', \'Exception\', \'e\', \')\', \'{\', \'}\', \'return\', \'defaultValue\', \';\', \'}\']', 'private int METHOD_1 ( TYPE_1 config , String field , int VAR_1 ) { String value = config . getString ( VAR_2 , null , field ) ; if ( StringUtils . isEmpty ( value ) ) { return VAR_1 ; } try { return Integer . METHOD_2 ( value ) ; } catch ( Exception e ) { } return VAR_1 ; }', '[\'TYPE_1: StoredConfig\', \'METHOD_2: parseInt\', \'METHOD_1: getConfig\', \'VAR_1: defaultValue\', \'VAR_2: Constants.CONFIG_GITBLIT\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitBlit.java', 151, '2214:9', '2224:9', 66, 8 ), ( 5, 221, 94, 'private void updateList(StoredConfig config, String field, List<String> list) {\n    // a null list is skipped, not cleared\n    // this is for RPC administration where an older manager might be used\n    if (list == null) {\n    return;\n    }\n    if (ArrayUtils.isEmpty(list)) {\n    config.unset(Constants.CONFIG_GITBLIT, null, field);\n    } else {\n    config.setStringList(Constants.CONFIG_GITBLIT, null, field, list);\n    }\n    }', '[\'private\', \'void\', \'updateList\', \'(\', \'StoredConfig\', \'config\', \',\', \'String\', \'field\', \',\', \'List\', \'<\', \'String\', \'>\', \'list\', \')\', \'{\', \'if\', \'(\', \'list\', \'==\', \'null\', \')\', \'{\', \'return\', \';\', \'}\', \'if\', \'(\', \'ArrayUtils\', \'.\', \'isEmpty\', \'(\', \'list\', \')\', \')\', \'{\', \'config\', \'.\', \'unset\', \'(\', \'Constants.CONFIG_GITBLIT\', \',\', \'null\', \',\', \'field\', \')\', \';\', \'}\', \'else\', \'{\', \'config\', \'.\', \'setStringList\', \'(\', \'Constants.CONFIG_GITBLIT\', \',\', \'null\', \',\', \'field\', \',\', \'list\', \')\', \';\', \'}\', \'}\']', 'private void METHOD_1 ( TYPE_1 config , String field , List < String > list ) { if ( list == null ) { return ; } if ( TYPE_2 . isEmpty ( list ) ) { config . METHOD_2 ( VAR_1 , null , field ) ; } else { config . METHOD_3 ( VAR_1 , null , field , list ) ; } }', '[\'TYPE_1: StoredConfig\', \'TYPE_2: ArrayUtils\', \'METHOD_2: unset\', \'METHOD_1: updateList\', \'METHOD_3: setStringList\', \'VAR_1: Constants.CONFIG_GITBLIT\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitBlit.java', 151, '2442:9', '2453:9', 71, 7 ), ( 5, 221, 102, 'public FederationModel getFederationRegistration(String url, String name) {\n    // check registrations\n    for (FederationModel r : getFederationRegistrations()) {\n    if (r.name.equals(name) && r.url.equals(url)) {\n    return r;\n    }\n    }\n    // check the results\n    for (FederationModel r : getFederationResultRegistrations()) {\n    if (r.name.equals(name) && r.url.equals(url)) {\n    return r;\n    }\n    }\n    return null;\n    }', '[\'public\', \'FederationModel\', \'getFederationRegistration\', \'(\', \'String\', \'url\', \',\', \'String\', \'name\', \')\', \'{\', \'for\', \'(\', \'FederationModel\', \'r\', \':\', \'getFederationRegistrations\', \'(\', \')\', \')\', \'{\', \'if\', \'(\', \'r.name\', \'.\', \'equals\', \'(\', \'name\', \')\', \'&&\', \'r.url\', \'.\', \'equals\', \'(\', \'url\', \')\', \')\', \'{\', \'return\', \'r\', \';\', \'}\', \'}\', \'for\', \'(\', \'FederationModel\', \'r\', \':\', \'getFederationResultRegistrations\', \'(\', \')\', \')\', \'{\', \'if\', \'(\', \'r.name\', \'.\', \'equals\', \'(\', \'name\', \')\', \'&&\', \'r.url\', \'.\', \'equals\', \'(\', \'url\', \')\', \')\', \'{\', \'return\', \'r\', \';\', \'}\', \'}\', \'return\', \'null\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( String url , String name ) { for ( TYPE_1 r : METHOD_2 ( ) ) { if ( VAR_1 . equals ( name ) && VAR_2 . equals ( url ) ) { return r ; } } for ( TYPE_1 r : METHOD_3 ( ) ) { if ( VAR_1 . equals ( name ) && VAR_2 . equals ( url ) ) { return r ; } } return null ; }', '[\'TYPE_1: FederationModel\', \'METHOD_1: getFederationRegistration\', \'METHOD_3: getFederationResultRegistrations\', \'METHOD_2: getFederationRegistrations\', \'VAR_1: r.name\', \'VAR_2: r.url\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitBlit.java', 151, '2608:9', '2623:9', 87, 8 ), ( 5, 221, 104, 'public List<String> getFederationTokens() {\n    List<String> tokens = new ArrayList<String>();\n    // generate standard tokens\n    for (FederationToken type : FederationToken.values()) {\n    tokens.add(getFederationToken(type));\n    }\n    // generate tokens for federation sets\n    for (String set : settings.getStrings(Keys.federation.sets)) {\n    tokens.add(getFederationToken(set));\n    }\n    return tokens;\n    }', '[\'public\', \'List\', \'<\', \'String\', \'>\', \'getFederationTokens\', \'(\', \')\', \'{\', \'List\', \'<\', \'String\', \'>\', \'tokens\', \'=\', \'new\', \'ArrayList\', \'<\', \'String\', \'>\', \'(\', \')\', \';\', \'for\', \'(\', \'FederationToken\', \'type\', \':\', \'FederationToken\', \'.\', \'values\', \'(\', \')\', \')\', \'{\', \'tokens\', \'.\', \'add\', \'(\', \'getFederationToken\', \'(\', \'type\', \')\', \')\', \';\', \'}\', \'for\', \'(\', \'String\', \'set\', \':\', \'settings\', \'.\', \'getStrings\', \'(\', \'Keys.federation.sets\', \')\', \')\', \'{\', \'tokens\', \'.\', \'add\', \'(\', \'getFederationToken\', \'(\', \'set\', \')\', \')\', \';\', \'}\', \'return\', \'tokens\', \';\', \'}\']', 'public List < String > METHOD_1 ( ) { List < String > VAR_1 = new ArrayList < String > ( ) ; for ( TYPE_1 type : TYPE_1 . values ( ) ) { VAR_1 . add ( METHOD_2 ( type ) ) ; } for ( String set : VAR_2 . METHOD_3 ( VAR_3 ) ) { VAR_1 . add ( METHOD_2 ( set ) ) ; } return VAR_1 ; }', '[\'TYPE_1: FederationToken\', \'METHOD_2: getFederationToken\', \'METHOD_1: getFederationTokens\', \'METHOD_3: getStrings\', \'VAR_2: settings\', \'VAR_1: tokens\', \'VAR_3: Keys.federation.sets\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitBlit.java', 151, '2653:9', '2664:9', 77, 7 ), ( 5, 221, 108, 'public boolean acknowledgeFederationStatus(String identification, FederationModel registration) {\n    // reset the url to the identification of the pulling Gitblit instance\n    registration.url = identification;\n    String id = identification;\n    if (!StringUtils.isEmpty(registration.folder)) {\n    id += "-" + registration.folder;\n    }\n    federationPullResults.put(id, registration);\n    return true;\n    }', '[\'public\', \'boolean\', \'acknowledgeFederationStatus\', \'(\', \'String\', \'identification\', \',\', \'FederationModel\', \'registration\', \')\', \'{\', \'registration\', \'.\', \'url\', \'=\', \'identification\', \';\', \'String\', \'id\', \'=\', \'identification\', \';\', \'if\', \'(\', \'!\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'registration.folder\', \')\', \')\', \'{\', \'id\', \'+=\', \'"-"\', \'+\', \'registration.folder\', \';\', \'}\', \'federationPullResults\', \'.\', \'put\', \'(\', \'id\', \',\', \'registration\', \')\', \';\', \'return\', \'true\', \';\', \'}\']', 'public boolean METHOD_1 ( String VAR_1 , TYPE_1 VAR_2 ) { VAR_2 . url = VAR_1 ; String id = VAR_1 ; if ( ! StringUtils . isEmpty ( VAR_3 ) ) { id += STRING_1 + VAR_3 ; } VAR_4 . put ( id , VAR_2 ) ; return true ; }', '[\'TYPE_1: FederationModel\', \'METHOD_1: acknowledgeFederationStatus\', \'VAR_1: identification\', \'VAR_2: registration\', \'VAR_4: federationPullResults\', \'VAR_3: registration.folder\', \'STRING_1: "-"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitBlit.java', 151, '2723:9', '2732:9', 58, 7 ), ( 5, 221, 114, 'public FederationProposal createFederationProposal(String gitblitUrl, String token) {\n    FederationToken tokenType = FederationToken.REPOSITORIES;\n    for (FederationToken type : FederationToken.values()) {\n    if (token.equals(getFederationToken(type))) {\n    tokenType = type;\n    break;\n    }\n    }\n    Map<String, RepositoryModel> repositories = getRepositories(gitblitUrl, token);\n    FederationProposal proposal = new FederationProposal(gitblitUrl, tokenType, token,\n    				repositories);\n    return proposal;\n    }', '[\'public\', \'FederationProposal\', \'createFederationProposal\', \'(\', \'String\', \'gitblitUrl\', \',\', \'String\', \'token\', \')\', \'{\', \'FederationToken\', \'tokenType\', \'=\', \'FederationToken.REPOSITORIES\', \';\', \'for\', \'(\', \'FederationToken\', \'type\', \':\', \'FederationToken\', \'.\', \'values\', \'(\', \')\', \')\', \'{\', \'if\', \'(\', \'token\', \'.\', \'equals\', \'(\', \'getFederationToken\', \'(\', \'type\', \')\', \')\', \')\', \'{\', \'tokenType\', \'=\', \'type\', \';\', \'break\', \';\', \'}\', \'}\', \'Map\', \'<\', \'String\', \',\', \'RepositoryModel\', \'>\', \'repositories\', \'=\', \'getRepositories\', \'(\', \'gitblitUrl\', \',\', \'token\', \')\', \';\', \'FederationProposal\', \'proposal\', \'=\', \'new\', \'FederationProposal\', \'(\', \'gitblitUrl\', \',\', \'tokenType\', \',\', \'token\', \',\', \'repositories\', \')\', \';\', \'return\', \'proposal\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( String VAR_1 , String token ) { TYPE_2 VAR_2 = VAR_3 ; for ( TYPE_2 type : TYPE_2 . values ( ) ) { if ( token . equals ( METHOD_2 ( type ) ) ) { VAR_2 = type ; break ; } } Map < String , TYPE_3 > VAR_4 = METHOD_3 ( VAR_1 , token ) ; TYPE_1 VAR_5 = new TYPE_1 ( VAR_1 , VAR_2 , token , VAR_4 ) ; return VAR_5 ; }', '[\'TYPE_1: FederationProposal\', \'TYPE_3: RepositoryModel\', \'TYPE_2: FederationToken\', \'METHOD_3: getRepositories\', \'METHOD_2: getFederationToken\', \'METHOD_1: createFederationProposal\', \'VAR_5: proposal\', \'VAR_4: repositories\', \'VAR_1: gitblitUrl\', \'VAR_2: tokenType\', \'VAR_3: FederationToken.REPOSITORIES\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitBlit.java', 151, '2870:9', '2882:9', 83, 10 ) ;

INSERT INTO method (id_repo, id_file, id_method, code, code_tokens, abstract_code, abstract_representation, repo_name, repo_url,repo_commit, file_name, num_methods, start_method, end_method, num_tokens, num_lines) VALUES ( 5, 221, 115, 'public FederationProposal getPendingFederationProposal(String token) {\n    List<FederationProposal> list = getPendingFederationProposals();\n    for (FederationProposal proposal : list) {\n    if (proposal.token.equals(token)) {\n    return proposal;\n    }\n    }\n    return null;\n    }', '[\'public\', \'FederationProposal\', \'getPendingFederationProposal\', \'(\', \'String\', \'token\', \')\', \'{\', \'List\', \'<\', \'FederationProposal\', \'>\', \'list\', \'=\', \'getPendingFederationProposals\', \'(\', \')\', \';\', \'for\', \'(\', \'FederationProposal\', \'proposal\', \':\', \'list\', \')\', \'{\', \'if\', \'(\', \'proposal.token\', \'.\', \'equals\', \'(\', \'token\', \')\', \')\', \'{\', \'return\', \'proposal\', \';\', \'}\', \'}\', \'return\', \'null\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( String token ) { List < TYPE_1 > list = METHOD_2 ( ) ; for ( TYPE_1 VAR_1 : list ) { if ( VAR_2 . equals ( token ) ) { return VAR_1 ; } } return null ; }', '[\'TYPE_1: FederationProposal\', \'METHOD_2: getPendingFederationProposals\', \'METHOD_1: getPendingFederationProposal\', \'VAR_1: proposal\', \'VAR_2: proposal.token\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitBlit.java', 151, '2890:9', '2898:9', 46, 6 ), ( 5, 221, 120, 'public List<String> getPreReceiveScriptsUnused(RepositoryModel repository) {\n    Set<String> inherited = new TreeSet<String>(getPreReceiveScriptsInherited(repository));\n    // create list of available scripts by excluding inherited scripts\n    List<String> scripts = new ArrayList<String>();\n    for (String script : getAllScripts()) {\n    if (!inherited.contains(script)) {\n    scripts.add(script);\n    }\n    }\n    return scripts;\n    }', '[\'public\', \'List\', \'<\', \'String\', \'>\', \'getPreReceiveScriptsUnused\', \'(\', \'RepositoryModel\', \'repository\', \')\', \'{\', \'Set\', \'<\', \'String\', \'>\', \'inherited\', \'=\', \'new\', \'TreeSet\', \'<\', \'String\', \'>\', \'(\', \'getPreReceiveScriptsInherited\', \'(\', \'repository\', \')\', \')\', \';\', \'List\', \'<\', \'String\', \'>\', \'scripts\', \'=\', \'new\', \'ArrayList\', \'<\', \'String\', \'>\', \'(\', \')\', \';\', \'for\', \'(\', \'String\', \'script\', \':\', \'getAllScripts\', \'(\', \')\', \')\', \'{\', \'if\', \'(\', \'!\', \'inherited\', \'.\', \'contains\', \'(\', \'script\', \')\', \')\', \'{\', \'scripts\', \'.\', \'add\', \'(\', \'script\', \')\', \';\', \'}\', \'}\', \'return\', \'scripts\', \';\', \'}\']', 'public List < String > METHOD_1 ( TYPE_1 VAR_1 ) { Set < String > VAR_2 = new TYPE_2 < String > ( METHOD_2 ( VAR_1 ) ) ; List < String > VAR_3 = new ArrayList < String > ( ) ; for ( String VAR_4 : METHOD_3 ( ) ) { if ( ! VAR_2 . contains ( VAR_4 ) ) { VAR_3 . add ( VAR_4 ) ; } } return VAR_3 ; }', '[\'TYPE_2: TreeSet\', \'TYPE_1: RepositoryModel\', \'METHOD_2: getPreReceiveScriptsInherited\', \'METHOD_1: getPreReceiveScriptsUnused\', \'METHOD_3: getAllScripts\', \'VAR_2: inherited\', \'VAR_1: repository\', \'VAR_3: scripts\', \'VAR_4: script\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitBlit.java', 151, '2975:9', '2986:9', 76, 7 ), ( 5, 221, 122, 'public List<String> getPostReceiveScriptsUnused(RepositoryModel repository) {\n    Set<String> inherited = new TreeSet<String>(getPostReceiveScriptsInherited(repository));\n    // create list of available scripts by excluding inherited scripts\n    List<String> scripts = new ArrayList<String>();\n    for (String script : getAllScripts()) {\n    if (!inherited.contains(script)) {\n    scripts.add(script);\n    }\n    }\n    return scripts;\n    }', '[\'public\', \'List\', \'<\', \'String\', \'>\', \'getPostReceiveScriptsUnused\', \'(\', \'RepositoryModel\', \'repository\', \')\', \'{\', \'Set\', \'<\', \'String\', \'>\', \'inherited\', \'=\', \'new\', \'TreeSet\', \'<\', \'String\', \'>\', \'(\', \'getPostReceiveScriptsInherited\', \'(\', \'repository\', \')\', \')\', \';\', \'List\', \'<\', \'String\', \'>\', \'scripts\', \'=\', \'new\', \'ArrayList\', \'<\', \'String\', \'>\', \'(\', \')\', \';\', \'for\', \'(\', \'String\', \'script\', \':\', \'getAllScripts\', \'(\', \')\', \')\', \'{\', \'if\', \'(\', \'!\', \'inherited\', \'.\', \'contains\', \'(\', \'script\', \')\', \')\', \'{\', \'scripts\', \'.\', \'add\', \'(\', \'script\', \')\', \';\', \'}\', \'}\', \'return\', \'scripts\', \';\', \'}\']', 'public List < String > METHOD_1 ( TYPE_1 VAR_1 ) { Set < String > VAR_2 = new TYPE_2 < String > ( METHOD_2 ( VAR_1 ) ) ; List < String > VAR_3 = new ArrayList < String > ( ) ; for ( String VAR_4 : METHOD_3 ( ) ) { if ( ! VAR_2 . contains ( VAR_4 ) ) { VAR_3 . add ( VAR_4 ) ; } } return VAR_3 ; }', '[\'TYPE_2: TreeSet\', \'TYPE_1: RepositoryModel\', \'METHOD_3: getAllScripts\', \'METHOD_2: getPostReceiveScriptsInherited\', \'METHOD_1: getPostReceiveScriptsUnused\', \'VAR_2: inherited\', \'VAR_1: repository\', \'VAR_3: scripts\', \'VAR_4: script\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitBlit.java', 151, '3025:9', '3036:9', 76, 7 ), ( 5, 221, 129, 'public ServerSettings getSettingsModel() {\n    // ensure that the current values are updated in the setting models\n    for (String key : settings.getAllKeys(null)) {\n    SettingModel setting = settingsModel.get(key);\n    if (setting == null) {\n    // unreferenced setting, create a setting model\n    setting = new SettingModel();\n    setting.name = key;\n    settingsModel.add(setting);\n    }\n    setting.currentValue = settings.getString(key, "");\n    }\n    settingsModel.pushScripts = getAllScripts();\n    return settingsModel;\n    }', '[\'public\', \'ServerSettings\', \'getSettingsModel\', \'(\', \')\', \'{\', \'for\', \'(\', \'String\', \'key\', \':\', \'settings\', \'.\', \'getAllKeys\', \'(\', \'null\', \')\', \')\', \'{\', \'SettingModel\', \'setting\', \'=\', \'settingsModel\', \'.\', \'get\', \'(\', \'key\', \')\', \';\', \'if\', \'(\', \'setting\', \'==\', \'null\', \')\', \'{\', \'setting\', \'=\', \'new\', \'SettingModel\', \'(\', \')\', \';\', \'setting\', \'.\', \'name\', \'=\', \'key\', \';\', \'settingsModel\', \'.\', \'add\', \'(\', \'setting\', \')\', \';\', \'}\', \'setting.currentValue\', \'=\', \'settings\', \'.\', \'getString\', \'(\', \'key\', \',\', \'""\', \')\', \';\', \'}\', \'settingsModel.pushScripts\', \'=\', \'getAllScripts\', \'(\', \')\', \';\', \'return\', \'settingsModel\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( ) { for ( String key : VAR_1 . METHOD_2 ( null ) ) { TYPE_2 VAR_2 = VAR_3 . get ( key ) ; if ( VAR_2 == null ) { VAR_2 = new TYPE_2 ( ) ; VAR_2 . name = key ; VAR_3 . add ( VAR_2 ) ; } VAR_4 = VAR_1 . getString ( key , STRING_1 ) ; } VAR_5 = METHOD_3 ( ) ; return VAR_3 ; }', '[\'TYPE_2: SettingModel\', \'TYPE_1: ServerSettings\', \'METHOD_3: getAllScripts\', \'METHOD_2: getAllKeys\', \'METHOD_1: getSettingsModel\', \'VAR_1: settings\', \'VAR_5: settingsModel.pushScripts\', \'VAR_3: settingsModel\', \'VAR_4: setting.currentValue\', \'VAR_2: setting\', \'STRING_1: ""\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitBlit.java', 151, '3156:9', '3170:9', 82, 10 ), ( 5, 221, 132, 'protected void configureMailExecutor() {\n    if (mailExecutor.isReady()) {\n    logger.info("Mail executor is scheduled to process the message queue every 2 minutes.");\n    scheduledExecutor.scheduleAtFixedRate(mailExecutor, 1, 2, TimeUnit.MINUTES);\n    } else {\n    logger.warn("Mail server is not properly configured.  Mail services disabled.");\n    }\n    }', '[\'protected\', \'void\', \'configureMailExecutor\', \'(\', \')\', \'{\', \'if\', \'(\', \'mailExecutor\', \'.\', \'isReady\', \'(\', \')\', \')\', \'{\', \'logger\', \'.\', \'info\', \'(\', \'"Mail executor is scheduled to process the message queue every 2 minutes."\', \')\', \';\', \'scheduledExecutor\', \'.\', \'scheduleAtFixedRate\', \'(\', \'mailExecutor\', \',\', \'1\', \',\', \'2\', \',\', \'TimeUnit.MINUTES\', \')\', \';\', \'}\', \'else\', \'{\', \'logger\', \'.\', \'warn\', \'(\', \'"Mail server is not properly configured.  Mail services disabled."\', \')\', \';\', \'}\', \'}\']', 'protected void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { logger . info ( STRING_1 ) ; VAR_2 . METHOD_3 ( VAR_1 , 1 , 2 , VAR_3 ) ; } else { logger . warn ( STRING_2 ) ; } }', '[\'METHOD_3: scheduleAtFixedRate\', \'METHOD_1: configureMailExecutor\', \'METHOD_2: isReady\', \'VAR_1: mailExecutor\', \'VAR_3: TimeUnit.MINUTES\', \'VAR_2: scheduledExecutor\', \'STRING_2: "Mail server is not properly configured.  Mail services disabled."\', \'STRING_1: "Mail executor is scheduled to process the message queue every 2 minutes."\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitBlit.java', 151, '3307:9', '3314:9', 47, 6 ), ( 5, 221, 137, 'protected void configureGitDaemon() {\n    int port = settings.getInteger(Keys.git.daemonPort, 0);\n    String bindInterface = settings.getString(Keys.git.daemonBindInterface, "localhost");\n    if (port > 0) {\n    try {\n    gitDaemon = new GitDaemon(bindInterface, port, getRepositoriesFolder());\n    gitDaemon.start();\n    } catch (IOException e) {\n    gitDaemon = null;\n    logger.error(MessageFormat.format("Failed to start Git daemon on {0}:{1,number,0}", bindInterface, port), e);\n    }\n    }\n    }', '[\'protected\', \'void\', \'configureGitDaemon\', \'(\', \')\', \'{\', \'int\', \'port\', \'=\', \'settings\', \'.\', \'getInteger\', \'(\', \'Keys.git.daemonPort\', \',\', \'0\', \')\', \';\', \'String\', \'bindInterface\', \'=\', \'settings\', \'.\', \'getString\', \'(\', \'Keys.git.daemonBindInterface\', \',\', \'"localhost"\', \')\', \';\', \'if\', \'(\', \'port\', \'>\', \'0\', \')\', \'{\', \'try\', \'{\', \'gitDaemon\', \'=\', \'new\', \'GitDaemon\', \'(\', \'bindInterface\', \',\', \'port\', \',\', \'getRepositoriesFolder\', \'(\', \')\', \')\', \';\', \'gitDaemon\', \'.\', \'start\', \'(\', \')\', \';\', \'}\', \'catch\', \'(\', \'IOException\', \'e\', \')\', \'{\', \'gitDaemon\', \'=\', \'null\', \';\', \'logger\', \'.\', \'error\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'"Failed to start Git daemon on {0}:{1\', \',\', \'bindInterface\', \',\', \'port\', \')\', \',\', \'e\', \')\', \';\', \'}\', \'}\', \'}\']', 'protected void METHOD_1 ( ) { int VAR_1 = VAR_2 . METHOD_2 ( VAR_3 , 0 ) ; String VAR_4 = VAR_2 . getString ( VAR_5 , STRING_1 ) ; if ( VAR_1 > 0 ) { try { VAR_6 = new TYPE_1 ( VAR_4 , VAR_1 , METHOD_3 ( ) ) ; VAR_6 . start ( ) ; } catch ( IOException e ) { VAR_6 = null ; logger . error ( TYPE_2 . format ( STRING_2 , VAR_4 , VAR_1 ) , e ) ; } } }', '[\'TYPE_2: MessageFormat\', \'TYPE_1: GitDaemon\', \'METHOD_3: getRepositoriesFolder\', \'METHOD_1: configureGitDaemon\', \'METHOD_2: getInteger\', \'VAR_5: Keys.git.daemonBindInterface\', \'VAR_6: gitDaemon\', \'VAR_2: settings\', \'VAR_1: port\', \'VAR_3: Keys.git.daemonPort\', \'VAR_4: bindInterface\', \'STRING_1: "localhost"\', \'STRING_2: "Failed to start Git daemon on {0}:{1\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitBlit.java', 151, '3399:9', '3411:9', 96, 10 ), ( 5, 221, 141, 'private void logTimezone(String type, TimeZone zone) {\n    SimpleDateFormat df = new SimpleDateFormat("z Z");\n    df.setTimeZone(zone);\n    String offset = df.format(new Date());\n    logger.info(type + " timezone is " + zone.getID() + " (" + offset + ")");\n    }', '[\'private\', \'void\', \'logTimezone\', \'(\', \'String\', \'type\', \',\', \'TimeZone\', \'zone\', \')\', \'{\', \'SimpleDateFormat\', \'df\', \'=\', \'new\', \'SimpleDateFormat\', \'(\', \'"z Z"\', \')\', \';\', \'df\', \'.\', \'setTimeZone\', \'(\', \'zone\', \')\', \';\', \'String\', \'offset\', \'=\', \'df\', \'.\', \'format\', \'(\', \'new\', \'Date\', \'(\', \')\', \')\', \';\', \'logger\', \'.\', \'info\', \'(\', \'type\', \'+\', \'" timezone is "\', \'+\', \'zone\', \'.\', \'getID\', \'(\', \')\', \'+\', \'" ("\', \'+\', \'offset\', \'+\', \'")"\', \')\', \';\', \'}\']', 'private void METHOD_1 ( String type , TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( STRING_1 ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; String offset = VAR_2 . format ( new TYPE_3 ( ) ) ; logger . info ( type + STRING_2 + VAR_1 . METHOD_3 ( ) + STRING_3 + offset + STRING_4 ) ; }', '[\'TYPE_1: TimeZone\', \'TYPE_2: SimpleDateFormat\', \'TYPE_3: Date\', \'METHOD_1: logTimezone\', \'METHOD_2: setTimeZone\', \'METHOD_3: getID\', \'VAR_2: df\', \'VAR_1: zone\', \'STRING_1: "z Z"\', \'STRING_3: " ("\', \'STRING_2: " timezone is "\', \'STRING_4: ")"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitBlit.java', 151, '3425:9', '3430:9', 60, 5 ), ( 5, 221, 144, '@Override\n    public void contextDestroyed(ServletContextEvent contextEvent) {\n    logger.info("Gitblit context destroyed by servlet container.");\n    scheduledExecutor.shutdownNow();\n    luceneExecutor.close();\n    gcExecutor.close();\n    if (fanoutService != null) {\n    fanoutService.stop();\n    }\n    if (gitDaemon != null) {\n    gitDaemon.stop();\n    }\n    }', '[\'public\', \'void\', \'contextDestroyed\', \'(\', \'ServletContextEvent\', \'contextEvent\', \')\', \'{\', \'logger\', \'.\', \'info\', \'(\', \'"Gitblit context destroyed by servlet container."\', \')\', \';\', \'scheduledExecutor\', \'.\', \'shutdownNow\', \'(\', \')\', \';\', \'luceneExecutor\', \'.\', \'close\', \'(\', \')\', \';\', \'gcExecutor\', \'.\', \'close\', \'(\', \')\', \';\', \'if\', \'(\', \'fanoutService\', \'!=\', \'null\', \')\', \'{\', \'fanoutService\', \'.\', \'stop\', \'(\', \')\', \';\', \'}\', \'if\', \'(\', \'gitDaemon\', \'!=\', \'null\', \')\', \'{\', \'gitDaemon\', \'.\', \'stop\', \'(\', \')\', \';\', \'}\', \'}\']', 'public void METHOD_1 ( TYPE_1 VAR_1 ) { logger . info ( STRING_1 ) ; VAR_2 . METHOD_2 ( ) ; VAR_3 . close ( ) ; VAR_4 . close ( ) ; if ( VAR_5 != null ) { VAR_5 . METHOD_3 ( ) ; } if ( VAR_6 != null ) { VAR_6 . METHOD_3 ( ) ; } }', '[\'TYPE_1: ServletContextEvent\', \'METHOD_3: stop\', \'METHOD_2: shutdownNow\', \'METHOD_1: contextDestroyed\', \'VAR_6: gitDaemon\', \'VAR_5: fanoutService\', \'VAR_3: luceneExecutor\', \'VAR_2: scheduledExecutor\', \'VAR_4: gcExecutor\', \'VAR_1: contextEvent\', \'STRING_1: "Gitblit context destroyed by servlet container."\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitBlit.java', 151, '3562:9', '3574:9', 59, 10 ), ( 5, 222, 5, 'private String getAuthor(RevCommit commit) {\n    String name = "unknown";\n    try {\n    name = commit.getAuthorIdent().getName();\n    if (StringUtils.isEmpty(name)) {\n    name = commit.getAuthorIdent().getEmailAddress();\n    }\n    } catch (NullPointerException n) {\n    }\n    return name;\n    }', '[\'private\', \'String\', \'getAuthor\', \'(\', \'RevCommit\', \'commit\', \')\', \'{\', \'String\', \'name\', \'=\', \'"unknown"\', \';\', \'try\', \'{\', \'name\', \'=\', \'commit\', \'.\', \'getAuthorIdent\', \'(\', \')\', \'.\', \'getName\', \'(\', \')\', \';\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'name\', \')\', \')\', \'{\', \'name\', \'=\', \'commit\', \'.\', \'getAuthorIdent\', \'(\', \')\', \'.\', \'getEmailAddress\', \'(\', \')\', \';\', \'}\', \'}\', \'catch\', \'(\', \'NullPointerException\', \'n\', \')\', \'{\', \'}\', \'return\', \'name\', \';\', \'}\']', 'private String METHOD_1 ( TYPE_1 VAR_1 ) { String name = STRING_1 ; try { name = VAR_1 . METHOD_2 ( ) . getName ( ) ; if ( StringUtils . isEmpty ( name ) ) { name = VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; } } catch ( TYPE_2 n ) { } return name ; }', '[\'TYPE_2: NullPointerException\', \'TYPE_1: RevCommit\', \'METHOD_3: getEmailAddress\', \'METHOD_2: getAuthorIdent\', \'METHOD_1: getAuthor\', \'VAR_1: commit\', \'STRING_1: "unknown"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/LuceneExecutor.java', 35, '323:9', '333:9', 58, 8 ), ( 5, 222, 6, 'private String getCommitter(RevCommit commit) {\n    String name = "unknown";\n    try {\n    name = commit.getCommitterIdent().getName();\n    if (StringUtils.isEmpty(name)) {\n    name = commit.getCommitterIdent().getEmailAddress();\n    }\n    } catch (NullPointerException n) {\n    }\n    return name;\n    }', '[\'private\', \'String\', \'getCommitter\', \'(\', \'RevCommit\', \'commit\', \')\', \'{\', \'String\', \'name\', \'=\', \'"unknown"\', \';\', \'try\', \'{\', \'name\', \'=\', \'commit\', \'.\', \'getCommitterIdent\', \'(\', \')\', \'.\', \'getName\', \'(\', \')\', \';\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'name\', \')\', \')\', \'{\', \'name\', \'=\', \'commit\', \'.\', \'getCommitterIdent\', \'(\', \')\', \'.\', \'getEmailAddress\', \'(\', \')\', \';\', \'}\', \'}\', \'catch\', \'(\', \'NullPointerException\', \'n\', \')\', \'{\', \'}\', \'return\', \'name\', \';\', \'}\']', 'private String METHOD_1 ( TYPE_1 VAR_1 ) { String name = STRING_1 ; try { name = VAR_1 . METHOD_2 ( ) . getName ( ) ; if ( StringUtils . isEmpty ( name ) ) { name = VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; } } catch ( TYPE_2 n ) { } return name ; }', '[\'TYPE_2: NullPointerException\', \'TYPE_1: RevCommit\', \'METHOD_3: getEmailAddress\', \'METHOD_2: getCommitterIdent\', \'METHOD_1: getCommitter\', \'VAR_1: commit\', \'STRING_1: "unknown"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/LuceneExecutor.java', 35, '341:9', '351:9', 58, 8 ), ( 5, 222, 7, 'private RevTree getTree(final RevWalk walk, final RevCommit commit)\n    throws IOException {\n    final RevTree tree = commit.getTree();\n    if (tree != null) {\n    return tree;\n    }\n    walk.parseHeaders(commit);\n    return commit.getTree();\n    }', '[\'private\', \'RevTree\', \'getTree\', \'(\', \'final\', \'RevWalk\', \'walk\', \',\', \'final\', \'RevCommit\', \'commit\', \')\', \'throws\', \'IOException\', \'{\', \'final\', \'RevTree\', \'tree\', \'=\', \'commit\', \'.\', \'getTree\', \'(\', \')\', \';\', \'if\', \'(\', \'tree\', \'!=\', \'null\', \')\', \'{\', \'return\', \'tree\', \';\', \'}\', \'walk\', \'.\', \'parseHeaders\', \'(\', \'commit\', \')\', \';\', \'return\', \'commit\', \'.\', \'getTree\', \'(\', \')\', \';\', \'}\']', 'private TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 , final TYPE_3 VAR_2 ) throws IOException { final TYPE_1 VAR_3 = VAR_2 . METHOD_1 ( ) ; if ( VAR_3 != null ) { return VAR_3 ; } VAR_1 . METHOD_2 ( VAR_2 ) ; return VAR_2 . METHOD_1 ( ) ; }', '[\'TYPE_2: RevWalk\', \'TYPE_1: RevTree\', \'TYPE_3: RevCommit\', \'METHOD_1: getTree\', \'METHOD_2: parseHeaders\', \'VAR_2: commit\', \'VAR_3: tree\', \'VAR_1: walk\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/LuceneExecutor.java', 35, '361:9', '369:9', 49, 7 ), ( 5, 222, 10, 'private boolean shouldReindex(Repository repository) {\n    try {\n    FileBasedConfig config = getConfig(repository);\n    config.load();\n    int indexVersion = config.getInt(CONF_INDEX, CONF_VERSION, 0);\n    // reindex if versions do not match\n    return indexVersion != INDEX_VERSION;\n    } catch (Throwable t) {\n    }\n    return true;\n    }', '[\'private\', \'boolean\', \'shouldReindex\', \'(\', \'Repository\', \'repository\', \')\', \'{\', \'try\', \'{\', \'FileBasedConfig\', \'config\', \'=\', \'getConfig\', \'(\', \'repository\', \')\', \';\', \'config\', \'.\', \'load\', \'(\', \')\', \';\', \'int\', \'indexVersion\', \'=\', \'config\', \'.\', \'getInt\', \'(\', \'CONF_INDEX\', \',\', \'CONF_VERSION\', \',\', \'0\', \')\', \';\', \'return\', \'indexVersion\', \'!=\', \'INDEX_VERSION\', \';\', \'}\', \'catch\', \'(\', \'Throwable\', \'t\', \')\', \'{\', \'}\', \'return\', \'true\', \';\', \'}\']', 'private boolean METHOD_1 ( TYPE_1 VAR_1 ) { try { TYPE_2 config = METHOD_2 ( VAR_1 ) ; config . METHOD_3 ( ) ; int VAR_2 = config . METHOD_4 ( VAR_3 , VAR_4 , 0 ) ; return VAR_2 != VAR_5 ; } catch ( Throwable t ) { } return true ; }', '[\'TYPE_1: Repository\', \'TYPE_2: FileBasedConfig\', \'METHOD_4: getInt\', \'METHOD_3: load\', \'METHOD_1: shouldReindex\', \'METHOD_2: getConfig\', \'VAR_4: CONF_VERSION\', \'VAR_5: INDEX_VERSION\', \'VAR_2: indexVersion\', \'VAR_3: CONF_INDEX\', \'VAR_1: repository\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/LuceneExecutor.java', 35, '401:9', '411:9', 55, 8 ), ( 5, 222, 14, 'public boolean index(String repositoryName, IssueModel issue) {\n    try {\n    // delete the old issue from the index, if exists\n    deleteIssue(repositoryName, issue.id);\n    Document doc = createDocument(issue);\n    return index(repositoryName, doc);\n    } catch (Exception e) {\n    logger.error(MessageFormat.format("Error while indexing issue {0} in {1}", issue.id, repositoryName), e);\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'index\', \'(\', \'String\', \'repositoryName\', \',\', \'IssueModel\', \'issue\', \')\', \'{\', \'try\', \'{\', \'deleteIssue\', \'(\', \'repositoryName\', \',\', \'issue\', \'.\', \'id\', \')\', \';\', \'Document\', \'doc\', \'=\', \'createDocument\', \'(\', \'issue\', \')\', \';\', \'return\', \'index\', \'(\', \'repositoryName\', \',\', \'doc\', \')\', \';\', \'}\', \'catch\', \'(\', \'Exception\', \'e\', \')\', \'{\', \'logger\', \'.\', \'error\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'"Error while indexing issue {0} in {1}"\', \',\', \'issue\', \'.\', \'id\', \',\', \'repositoryName\', \')\', \',\', \'e\', \')\', \';\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean index ( String VAR_1 , TYPE_1 VAR_2 ) { try { METHOD_1 ( VAR_1 , VAR_2 . id ) ; TYPE_2 VAR_3 = METHOD_2 ( VAR_2 ) ; return index ( VAR_1 , VAR_3 ) ; } catch ( Exception e ) { logger . error ( TYPE_3 . format ( STRING_1 , VAR_2 . id , VAR_1 ) , e ) ; } return false ; }', '[\'TYPE_3: MessageFormat\', \'TYPE_1: IssueModel\', \'TYPE_2: Document\', \'METHOD_1: deleteIssue\', \'METHOD_2: createDocument\', \'VAR_2: issue\', \'VAR_3: doc\', \'VAR_1: repositoryName\', \'STRING_1: "Error while indexing issue {0} in {1}"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/LuceneExecutor.java', 35, '733:9', '743:9', 71, 8 ), ( 5, 222, 21, 'private boolean index(String repositoryName, Document doc) {\n    try {\n    IndexWriter writer = getIndexWriter(repositoryName);\n    writer.addDocument(doc);\n    writer.commit();\n    resetIndexSearcher(repositoryName);\n    return true;\n    } catch (Exception e) {\n    logger.error(MessageFormat.format("Exception while incrementally updating {0} Lucene index", repositoryName), e);\n    }\n    return false;\n    }', '[\'private\', \'boolean\', \'index\', \'(\', \'String\', \'repositoryName\', \',\', \'Document\', \'doc\', \')\', \'{\', \'try\', \'{\', \'IndexWriter\', \'writer\', \'=\', \'getIndexWriter\', \'(\', \'repositoryName\', \')\', \';\', \'writer\', \'.\', \'addDocument\', \'(\', \'doc\', \')\', \';\', \'writer\', \'.\', \'commit\', \'(\', \')\', \';\', \'resetIndexSearcher\', \'(\', \'repositoryName\', \')\', \';\', \'return\', \'true\', \';\', \'}\', \'catch\', \'(\', \'Exception\', \'e\', \')\', \'{\', \'logger\', \'.\', \'error\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'"Exception while incrementally updating {0} Lucene index"\', \',\', \'repositoryName\', \')\', \',\', \'e\', \')\', \';\', \'}\', \'return\', \'false\', \';\', \'}\']', 'private boolean index ( String VAR_1 , TYPE_1 VAR_2 ) { try { TYPE_2 writer = METHOD_1 ( VAR_1 ) ; writer . METHOD_2 ( VAR_2 ) ; writer . METHOD_3 ( ) ; METHOD_4 ( VAR_1 ) ; return true ; } catch ( Exception e ) { logger . error ( TYPE_3 . format ( STRING_1 , VAR_1 ) , e ) ; } return false ; }', '[\'TYPE_3: MessageFormat\', \'TYPE_2: IndexWriter\', \'TYPE_1: Document\', \'METHOD_4: resetIndexSearcher\', \'METHOD_1: getIndexWriter\', \'METHOD_2: addDocument\', \'METHOD_3: commit\', \'VAR_2: doc\', \'VAR_1: repositoryName\', \'STRING_1: "Exception while incrementally updating {0} Lucene index"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/LuceneExecutor.java', 35, '1020:9', '1031:9', 69, 10 ), ( 5, 222, 24, 'private IndexSearcher getIndexSearcher(String repository) throws IOException {\n    IndexSearcher searcher = searchers.get(repository);\n    if (searcher == null) {\n    IndexWriter writer = getIndexWriter(repository);\n    searcher = new IndexSearcher(IndexReader.open(writer, true));\n    searchers.put(repository, searcher);\n    }\n    return searcher;\n    }', '[\'private\', \'IndexSearcher\', \'getIndexSearcher\', \'(\', \'String\', \'repository\', \')\', \'throws\', \'IOException\', \'{\', \'IndexSearcher\', \'searcher\', \'=\', \'searchers\', \'.\', \'get\', \'(\', \'repository\', \')\', \';\', \'if\', \'(\', \'searcher\', \'==\', \'null\', \')\', \'{\', \'IndexWriter\', \'writer\', \'=\', \'getIndexWriter\', \'(\', \'repository\', \')\', \';\', \'searcher\', \'=\', \'new\', \'IndexSearcher\', \'(\', \'IndexReader\', \'.\', \'open\', \'(\', \'writer\', \',\', \'true\', \')\', \')\', \';\', \'searchers\', \'.\', \'put\', \'(\', \'repository\', \',\', \'searcher\', \')\', \';\', \'}\', \'return\', \'searcher\', \';\', \'}\']', 'private TYPE_1 METHOD_1 ( String VAR_1 ) throws IOException { TYPE_1 VAR_2 = VAR_3 . get ( VAR_1 ) ; if ( VAR_2 == null ) { TYPE_2 writer = METHOD_2 ( VAR_1 ) ; VAR_2 = new TYPE_1 ( TYPE_3 . METHOD_3 ( writer , true ) ) ; VAR_3 . put ( VAR_1 , VAR_2 ) ; } return VAR_2 ; }', '[\'TYPE_1: IndexSearcher\', \'TYPE_2: IndexWriter\', \'TYPE_3: IndexReader\', \'METHOD_2: getIndexWriter\', \'METHOD_1: getIndexSearcher\', \'METHOD_3: open\', \'VAR_2: searcher\', \'VAR_3: searchers\', \'VAR_1: repository\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/LuceneExecutor.java', 35, '1070:9', '1078:9', 64, 7 ), ( 5, 222, 29, 'void add(IndexResult result) {\n    this.branchCount += result.branchCount;\n    this.commitCount += result.commitCount;\n    this.blobCount += result.blobCount;\n    this.issueCount += result.issueCount;\n    }', '[\'void\', \'add\', \'(\', \'IndexResult\', \'result\', \')\', \'{\', \'this\', \'.\', \'branchCount\', \'+=\', \'result.branchCount\', \';\', \'this\', \'.\', \'commitCount\', \'+=\', \'result.commitCount\', \';\', \'this\', \'.\', \'blobCount\', \'+=\', \'result.blobCount\', \';\', \'this\', \'.\', \'issueCount\', \'+=\', \'result.issueCount\', \';\', \'}\']', 'void add ( TYPE_1 result ) { this . VAR_1 += VAR_2 ; this . VAR_3 += VAR_4 ; this . VAR_5 += VAR_6 ; this . VAR_7 += VAR_8 ; }', '[\'TYPE_1: IndexResult\', \'VAR_4: result.commitCount\', \'VAR_6: result.blobCount\', \'VAR_2: result.branchCount\', \'VAR_5: blobCount\', \'VAR_1: branchCount\', \'VAR_3: commitCount\', \'VAR_7: issueCount\', \'VAR_8: result.issueCount\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/LuceneExecutor.java', 35, '1325:17', '1330:17', 40, 5 ), ( 5, 222, 32, 'int getSourceIndex(int docId) {\n    int index = -1;\n    try {\n    Object o = method.invoke(this, docId);\n    index = (Integer) o;\n    } catch (Exception e) {\n    logger.error("Error getting source index", e);\n    }\n    return index;\n    }', '[\'int\', \'getSourceIndex\', \'(\', \'int\', \'docId\', \')\', \'{\', \'int\', \'index\', \'=\', \'-\', \'1\', \';\', \'try\', \'{\', \'Object\', \'o\', \'=\', \'method\', \'.\', \'invoke\', \'(\', \'this\', \',\', \'docId\', \')\', \';\', \'index\', \'=\', \'(\', \'Integer\', \')\', \'o\', \';\', \'}\', \'catch\', \'(\', \'Exception\', \'e\', \')\', \'{\', \'logger\', \'.\', \'error\', \'(\', \'"Error getting source index"\', \',\', \'e\', \')\', \';\', \'}\', \'return\', \'index\', \';\', \'}\']', 'int METHOD_1 ( int VAR_1 ) { int index = - 1 ; try { Object o = method . METHOD_2 ( this , VAR_1 ) ; index = ( Integer ) o ; } catch ( Exception e ) { logger . error ( STRING_1 , e ) ; } return index ; }', '[\'METHOD_1: getSourceIndex\', \'METHOD_2: invoke\', \'VAR_1: docId\', \'STRING_1: "Error getting source index"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/LuceneExecutor.java', 35, '1364:17', '1373:17', 55, 8 ), ( 5, 222, 33, 'public LuceneExecutor(IStoredSettings settings, File repositoriesFolder) {\n    this.storedSettings = settings;\n    this.repositoriesFolder = repositoriesFolder;\n    String exts = luceneIgnoreExtensions;\n    if (settings != null) {\n    exts = settings.getString(Keys.web.luceneIgnoreExtensions, exts);\n    }\n    excludedExtensions = new TreeSet<String>(StringUtils.getStringsFromValue(exts));\n    }', '[\'public\', \'LuceneExecutor\', \'(\', \'IStoredSettings\', \'settings\', \',\', \'File\', \'repositoriesFolder\', \')\', \'{\', \'this\', \'.\', \'storedSettings\', \'=\', \'settings\', \';\', \'this\', \'.\', \'repositoriesFolder\', \'=\', \'repositoriesFolder\', \';\', \'String\', \'exts\', \'=\', \'luceneIgnoreExtensions\', \';\', \'if\', \'(\', \'settings\', \'!=\', \'null\', \')\', \'{\', \'exts\', \'=\', \'settings\', \'.\', \'getString\', \'(\', \'Keys.web.luceneIgnoreExtensions\', \',\', \'exts\', \')\', \';\', \'}\', \'excludedExtensions\', \'=\', \'new\', \'TreeSet\', \'<\', \'String\', \'>\', \'(\', \'StringUtils\', \'.\', \'getStringsFromValue\', \'(\', \'exts\', \')\', \')\', \';\', \'}\']', 'public VAR_1 ( TYPE_1 VAR_2 , File VAR_3 ) { this . VAR_4 = VAR_2 ; this . VAR_3 = VAR_3 ; String VAR_5 = VAR_6 ; if ( VAR_2 != null ) { VAR_5 = VAR_2 . getString ( VAR_7 , VAR_5 ) ; } VAR_8 = new TYPE_2 < String > ( StringUtils . METHOD_1 ( VAR_5 ) ) ; }', '[\'TYPE_1: IStoredSettings\', \'TYPE_2: TreeSet\', \'METHOD_1: getStringsFromValue\', \'VAR_2: settings\', \'VAR_1: LuceneExecutor\', \'VAR_3: repositoriesFolder\', \'VAR_4: storedSettings\', \'VAR_6: luceneIgnoreExtensions\', \'VAR_8: excludedExtensions\', \'VAR_5: exts\', \'VAR_7: Keys.web.luceneIgnoreExtensions\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/LuceneExecutor.java', 35, '145:9', '153:9', 67, 7 ), ( 5, 222, 34, 'MultiSourceReader(IndexReader[] subReaders) {\n    super(subReaders);\n    Method m = null;\n    try {\n    m = MultiReader.class.getDeclaredMethod("readerIndex", int.class);\n    m.setAccessible(true);\n    } catch (Exception e) {\n    logger.error("Error getting readerIndex method", e);\n    }\n    method = m;\n    }', '[\'MultiSourceReader\', \'(\', \'IndexReader\', \'[\', \']\', \'subReaders\', \')\', \'{\', \'super\', \'(\', \'subReaders\', \')\', \';\', \'Method\', \'m\', \'=\', \'null\', \';\', \'try\', \'{\', \'m\', \'=\', \'MultiReader.\', \'class\', \'.\', \'getDeclaredMethod\', \'(\', \'"readerIndex"\', \',\', \'int\', \'.\', \'class\', \')\', \';\', \'m\', \'.\', \'setAccessible\', \'(\', \'true\', \')\', \';\', \'}\', \'catch\', \'(\', \'Exception\', \'e\', \')\', \'{\', \'logger\', \'.\', \'error\', \'(\', \'"Error getting readerIndex method"\', \',\', \'e\', \')\', \';\', \'}\', \'method\', \'=\', \'m\', \';\', \'}\']', 'VAR_1 ( TYPE_1 [ ] VAR_2 ) { super ( VAR_2 ) ; TYPE_2 m = null ; try { m = VAR_3 class . METHOD_1 ( STRING_1 , int . class ) ; m . METHOD_2 ( true ) ; } catch ( Exception e ) { logger . error ( STRING_2 , e ) ; } method = m ; }', '[\'TYPE_1: IndexReader\', \'TYPE_2: Method\', \'METHOD_2: setAccessible\', \'METHOD_1: getDeclaredMethod\', \'VAR_2: subReaders\', \'VAR_1: MultiSourceReader\', \'VAR_3: MultiReader.\', \'STRING_2: "Error getting readerIndex method"\', \'STRING_1: "readerIndex"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/LuceneExecutor.java', 35, '1352:17', '1362:17', 63, 9 ), ( 5, 223, 0, 'private long getSynchronizationPeriod() {\n    final String cacheDuration = settings.getString(Keys.realm.ldap.ldapCachePeriod, "2 MINUTES");\n    try {\n    final String[] s = cacheDuration.split(" ", 2);\n    long duration = Long.parseLong(s[0]);\n    TimeUnit timeUnit = TimeUnit.valueOf(s[1]);\n    return timeUnit.toMillis(duration);\n    } catch (RuntimeException ex) {\n    throw new IllegalArgumentException(Keys.realm.ldap.ldapCachePeriod + " must have format \'<long> <TimeUnit>\' where <TimeUnit> is one of \'MILLISECONDS\', \'SECONDS\', \'MINUTES\', \'HOURS\', \'DAYS\'");\n    }\n    }', '[\'private\', \'long\', \'getSynchronizationPeriod\', \'(\', \')\', \'{\', \'final\', \'String\', \'cacheDuration\', \'=\', \'settings\', \'.\', \'getString\', \'(\', \'Keys.realm.ldap.ldapCachePeriod\', \',\', \'"2 MINUTES"\', \')\', \';\', \'try\', \'{\', \'final\', \'String\', \'[\', \']\', \'s\', \'=\', \'cacheDuration\', \'.\', \'split\', \'(\', \'" "\', \',\', \'2\', \')\', \';\', \'long\', \'duration\', \'=\', \'Long\', \'.\', \'parseLong\', \'(\', \'s\', \'[\', \'0\', \']\', \')\', \';\', \'TimeUnit\', \'timeUnit\', \'=\', \'TimeUnit\', \'.\', \'valueOf\', \'(\', \'s\', \'[\', \'1\', \']\', \')\', \';\', \'return\', \'timeUnit\', \'.\', \'toMillis\', \'(\', \'duration\', \')\', \';\', \'}\', \'catch\', \'(\', \'RuntimeException\', \'ex\', \')\', \'{\', \'throw\', \'new\', \'IllegalArgumentException\', \'(\', \'Keys.realm.ldap.ldapCachePeriod\', \'+\', \'" must have format \\\'<long> <TimeUnit>\\\' where <TimeUnit> is one of \\\'MILLISECONDS\\\'\', \')\', \';\', \'}\', \'}\']', 'private long METHOD_1 ( ) { final String VAR_1 = VAR_2 . getString ( VAR_3 , STRING_1 ) ; try { final String [ ] s = VAR_1 . METHOD_2 ( STRING_2 , 2 ) ; long VAR_4 = Long . METHOD_3 ( s [ 0 ] ) ; TYPE_1 VAR_5 = TYPE_1 . valueOf ( s [ 1 ] ) ; return VAR_5 . METHOD_4 ( VAR_4 ) ; } catch ( RuntimeException ex ) { throw new IllegalArgumentException ( VAR_3 + STRING_3 ) ; } }', '[\'TYPE_1: TimeUnit\', \'METHOD_2: split\', \'METHOD_3: parseLong\', \'METHOD_4: toMillis\', \'METHOD_1: getSynchronizationPeriod\', \'VAR_4: duration\', \'VAR_2: settings\', \'VAR_1: cacheDuration\', \'VAR_3: Keys.realm.ldap.ldapCachePeriod\', \'VAR_5: timeUnit\', \'STRING_2: " "\', \'STRING_1: "2 MINUTES"\', \'STRING_3: " must have format \\\'<long> <TimeUnit>\\\' where <TimeUnit> is one of \\\'MILLISECONDS\\\'\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/LdapUserService.java', 21, '66:9', '76:5', 98, 9 ), ( 5, 223, 1, '@Override\n    public void setup(IStoredSettings settings) {\n    this.settings = settings;\n    String file = settings.getString(Keys.realm.ldap.backingUserService, "${baseFolder}/users.conf");\n    File realmFile = GitBlit.getFileOrFolder(file);\n    serviceImpl = createUserService(realmFile);\n    logger.info("LDAP User Service backed by " + serviceImpl.toString());\n    synchronizeLdapUsers();\n    }', '[\'public\', \'void\', \'setup\', \'(\', \'IStoredSettings\', \'settings\', \')\', \'{\', \'this\', \'.\', \'settings\', \'=\', \'settings\', \';\', \'String\', \'file\', \'=\', \'settings\', \'.\', \'getString\', \'(\', \'Keys.realm.ldap.backingUserService\', \',\', \'"${baseFolder}/users.conf"\', \')\', \';\', \'File\', \'realmFile\', \'=\', \'GitBlit\', \'.\', \'getFileOrFolder\', \'(\', \'file\', \')\', \';\', \'serviceImpl\', \'=\', \'createUserService\', \'(\', \'realmFile\', \')\', \';\', \'logger\', \'.\', \'info\', \'(\', \'"LDAP User Service backed by "\', \'+\', \'serviceImpl\', \'.\', \'toString\', \'(\', \')\', \')\', \';\', \'synchronizeLdapUsers\', \'(\', \')\', \';\', \'}\']', 'public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; String file = VAR_1 . getString ( VAR_2 , STRING_1 ) ; File VAR_3 = TYPE_2 . METHOD_2 ( file ) ; VAR_4 = METHOD_3 ( VAR_3 ) ; logger . info ( STRING_2 + VAR_4 . toString ( ) ) ; METHOD_4 ( ) ; }', '[\'TYPE_1: IStoredSettings\', \'TYPE_2: GitBlit\', \'METHOD_4: synchronizeLdapUsers\', \'METHOD_1: setup\', \'METHOD_3: createUserService\', \'METHOD_2: getFileOrFolder\', \'VAR_1: settings\', \'VAR_3: realmFile\', \'VAR_2: Keys.realm.ldap.backingUserService\', \'VAR_4: serviceImpl\', \'STRING_2: "LDAP User Service backed by "\', \'STRING_1: "${baseFolder}/users.conf"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/LdapUserService.java', 21, '78:9', '88:9', 67, 8 ), ( 5, 223, 14, 'private SearchResult doSearch(LDAPConnection ldapConnection, String base, String filter) {\n    try {\n    return ldapConnection.search(base, SearchScope.SUB, filter);\n    } catch (LDAPSearchException e) {\n    logger.error("Problem Searching LDAP", e);\n    return null;\n    }\n    }', '[\'private\', \'SearchResult\', \'doSearch\', \'(\', \'LDAPConnection\', \'ldapConnection\', \',\', \'String\', \'base\', \',\', \'String\', \'filter\', \')\', \'{\', \'try\', \'{\', \'return\', \'ldapConnection\', \'.\', \'search\', \'(\', \'base\', \',\', \'SearchScope.SUB\', \',\', \'filter\', \')\', \';\', \'}\', \'catch\', \'(\', \'LDAPSearchException\', \'e\', \')\', \'{\', \'logger\', \'.\', \'error\', \'(\', \'"Problem Searching LDAP"\', \',\', \'e\', \')\', \';\', \'return\', \'null\', \';\', \'}\', \'}\']', 'private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , String VAR_2 , String filter ) { try { return VAR_1 . METHOD_2 ( VAR_2 , VAR_3 , filter ) ; } catch ( TYPE_3 e ) { logger . error ( STRING_1 , e ) ; return null ; } }', '[\'TYPE_3: LDAPSearchException\', \'TYPE_1: SearchResult\', \'TYPE_2: LDAPConnection\', \'METHOD_2: search\', \'METHOD_1: doSearch\', \'VAR_1: ldapConnection\', \'VAR_3: SearchScope.SUB\', \'VAR_2: base\', \'STRING_1: "Problem Searching LDAP"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/LdapUserService.java', 21, '421:9', '429:9', 51, 6 ), ( 5, 223, 15, 'private boolean isAuthenticated(LDAPConnection ldapConnection, String userDn, String password) {\n    try {\n    // Binding will stop any LDAP-Injection Attacks since the searched-for user needs to bind to that DN\n    ldapConnection.bind(userDn, password);\n    return true;\n    } catch (LDAPException e) {\n    logger.error("Error authenticating user", e);\n    return false;\n    }\n    }', '[\'private\', \'boolean\', \'isAuthenticated\', \'(\', \'LDAPConnection\', \'ldapConnection\', \',\', \'String\', \'userDn\', \',\', \'String\', \'password\', \')\', \'{\', \'try\', \'{\', \'ldapConnection\', \'.\', \'bind\', \'(\', \'userDn\', \',\', \'password\', \')\', \';\', \'return\', \'true\', \';\', \'}\', \'catch\', \'(\', \'LDAPException\', \'e\', \')\', \'{\', \'logger\', \'.\', \'error\', \'(\', \'"Error authenticating user"\', \',\', \'e\', \')\', \';\', \'return\', \'false\', \';\', \'}\', \'}\']', 'private boolean METHOD_1 ( TYPE_1 VAR_1 , String VAR_2 , String VAR_3 ) { try { VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; return true ; } catch ( TYPE_2 e ) { logger . error ( STRING_1 , e ) ; return false ; } }', '[\'TYPE_2: LDAPException\', \'TYPE_1: LDAPConnection\', \'METHOD_2: bind\', \'METHOD_1: isAuthenticated\', \'VAR_3: password\', \'VAR_1: ldapConnection\', \'VAR_2: userDn\', \'STRING_1: "Error authenticating user"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/LdapUserService.java', 21, '431:9', '440:9', 50, 7 ), ( 5, 223, 18, 'protected String getSimpleUsername(String username) {\n    int lastSlash = username.lastIndexOf(\'\\\\\');\n    if (lastSlash > -1) {\n    username = username.substring(lastSlash + 1);\n    }\n    return username;\n    }', '[\'protected\', \'String\', \'getSimpleUsername\', \'(\', \'String\', \'username\', \')\', \'{\', \'int\', \'lastSlash\', \'=\', \'username\', \'.\', \'lastIndexOf\', \'(\', "\'\\\\\\\\\'", \')\', \';\', \'if\', \'(\', \'lastSlash\', \'>\', \'-\', \'1\', \')\', \'{\', \'username\', \'=\', \'username\', \'.\', \'substring\', \'(\', \'lastSlash\', \'+\', \'1\', \')\', \';\', \'}\', \'return\', \'username\', \';\', \'}\']', 'protected String METHOD_1 ( String VAR_1 ) { int VAR_2 = VAR_1 . METHOD_2 ( CHAR_1 ) ; if ( VAR_2 > - 1 ) { VAR_1 = VAR_1 . substring ( VAR_2 + 1 ) ; } return VAR_1 ; }', '[\'METHOD_2: lastIndexOf\', \'METHOD_1: getSimpleUsername\', \'VAR_2: lastSlash\', \'VAR_1: username\', "CHAR_1: \'\\\\\\\\\'"]', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/LdapUserService.java', 21, '460:9', '467:9', 42, 5 ), ( 5, 225, 2, 'public boolean getBoolean(String name, boolean defaultValue) {\n    Properties props = getSettings();\n    if (props.containsKey(name)) {\n    String value = props.getProperty(name);\n    if (!StringUtils.isEmpty(value)) {\n    return Boolean.parseBoolean(value.trim());\n    }\n    }\n    return defaultValue;\n    }', '[\'public\', \'boolean\', \'getBoolean\', \'(\', \'String\', \'name\', \',\', \'boolean\', \'defaultValue\', \')\', \'{\', \'Properties\', \'props\', \'=\', \'getSettings\', \'(\', \')\', \';\', \'if\', \'(\', \'props\', \'.\', \'containsKey\', \'(\', \'name\', \')\', \')\', \'{\', \'String\', \'value\', \'=\', \'props\', \'.\', \'getProperty\', \'(\', \'name\', \')\', \';\', \'if\', \'(\', \'!\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'value\', \')\', \')\', \'{\', \'return\', \'Boolean\', \'.\', \'parseBoolean\', \'(\', \'value\', \'.\', \'trim\', \'(\', \')\', \')\', \';\', \'}\', \'}\', \'return\', \'defaultValue\', \';\', \'}\']', 'public boolean METHOD_1 ( String name , boolean VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( ) ; if ( VAR_2 . containsKey ( name ) ) { String value = VAR_2 . getProperty ( name ) ; if ( ! StringUtils . isEmpty ( value ) ) { return Boolean . METHOD_3 ( value . METHOD_4 ( ) ) ; } } return VAR_1 ; }', '[\'TYPE_1: Properties\', \'METHOD_4: trim\', \'METHOD_2: getSettings\', \'METHOD_3: parseBoolean\', \'METHOD_1: getBoolean\', \'VAR_1: defaultValue\', \'VAR_2: props\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/IStoredSettings.java', 16, '86:9', '95:9', 65, 7 ), ( 5, 225, 3, 'public int getInteger(String name, int defaultValue) {\n    Properties props = getSettings();\n    if (props.containsKey(name)) {\n    try {\n    String value = props.getProperty(name);\n    if (!StringUtils.isEmpty(value)) {\n    return Integer.parseInt(value.trim());\n    }\n    } catch (NumberFormatException e) {\n    logger.warn("Failed to parse integer for " + name + " using default of "\n    + defaultValue);\n    }\n    }\n    return defaultValue;\n    }', '[\'public\', \'int\', \'getInteger\', \'(\', \'String\', \'name\', \',\', \'int\', \'defaultValue\', \')\', \'{\', \'Properties\', \'props\', \'=\', \'getSettings\', \'(\', \')\', \';\', \'if\', \'(\', \'props\', \'.\', \'containsKey\', \'(\', \'name\', \')\', \')\', \'{\', \'try\', \'{\', \'String\', \'value\', \'=\', \'props\', \'.\', \'getProperty\', \'(\', \'name\', \')\', \';\', \'if\', \'(\', \'!\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'value\', \')\', \')\', \'{\', \'return\', \'Integer\', \'.\', \'parseInt\', \'(\', \'value\', \'.\', \'trim\', \'(\', \')\', \')\', \';\', \'}\', \'}\', \'catch\', \'(\', \'NumberFormatException\', \'e\', \')\', \'{\', \'logger\', \'.\', \'warn\', \'(\', \'"Failed to parse integer for "\', \'+\', \'name\', \'+\', \'" using default of "\', \'+\', \'defaultValue\', \')\', \';\', \'}\', \'}\', \'return\', \'defaultValue\', \';\', \'}\']', 'public int METHOD_1 ( String name , int VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( ) ; if ( VAR_2 . containsKey ( name ) ) { try { String value = VAR_2 . getProperty ( name ) ; if ( ! StringUtils . isEmpty ( value ) ) { return Integer . METHOD_3 ( value . METHOD_4 ( ) ) ; } } catch ( TYPE_2 e ) { logger . warn ( STRING_1 + name + STRING_2 + VAR_1 ) ; } } return VAR_1 ; }', '[\'TYPE_2: NumberFormatException\', \'TYPE_1: Properties\', \'METHOD_3: parseInt\', \'METHOD_4: trim\', \'METHOD_2: getSettings\', \'METHOD_1: getInteger\', \'VAR_1: defaultValue\', \'VAR_2: props\', \'STRING_2: " using default of "\', \'STRING_1: "Failed to parse integer for "\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/IStoredSettings.java', 16, '106:9', '120:9', 88, 11 ), ( 5, 225, 4, 'public long getLong(String name, long defaultValue) {\n    Properties props = getSettings();\n    if (props.containsKey(name)) {\n    try {\n    String value = props.getProperty(name);\n    if (!StringUtils.isEmpty(value)) {\n    return Long.parseLong(value.trim());\n    }\n    } catch (NumberFormatException e) {\n    logger.warn("Failed to parse long for " + name + " using default of "\n    + defaultValue);\n    }\n    }\n    return defaultValue;\n    }', '[\'public\', \'long\', \'getLong\', \'(\', \'String\', \'name\', \',\', \'long\', \'defaultValue\', \')\', \'{\', \'Properties\', \'props\', \'=\', \'getSettings\', \'(\', \')\', \';\', \'if\', \'(\', \'props\', \'.\', \'containsKey\', \'(\', \'name\', \')\', \')\', \'{\', \'try\', \'{\', \'String\', \'value\', \'=\', \'props\', \'.\', \'getProperty\', \'(\', \'name\', \')\', \';\', \'if\', \'(\', \'!\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'value\', \')\', \')\', \'{\', \'return\', \'Long\', \'.\', \'parseLong\', \'(\', \'value\', \'.\', \'trim\', \'(\', \')\', \')\', \';\', \'}\', \'}\', \'catch\', \'(\', \'NumberFormatException\', \'e\', \')\', \'{\', \'logger\', \'.\', \'warn\', \'(\', \'"Failed to parse long for "\', \'+\', \'name\', \'+\', \'" using default of "\', \'+\', \'defaultValue\', \')\', \';\', \'}\', \'}\', \'return\', \'defaultValue\', \';\', \'}\']', 'public long METHOD_1 ( String name , long VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( ) ; if ( VAR_2 . containsKey ( name ) ) { try { String value = VAR_2 . getProperty ( name ) ; if ( ! StringUtils . isEmpty ( value ) ) { return Long . METHOD_3 ( value . METHOD_4 ( ) ) ; } } catch ( TYPE_2 e ) { logger . warn ( STRING_1 + name + STRING_2 + VAR_1 ) ; } } return VAR_1 ; }', '[\'TYPE_2: NumberFormatException\', \'TYPE_1: Properties\', \'METHOD_1: getLong\', \'METHOD_4: trim\', \'METHOD_2: getSettings\', \'METHOD_3: parseLong\', \'VAR_1: defaultValue\', \'VAR_2: props\', \'STRING_2: " using default of "\', \'STRING_1: "Failed to parse long for "\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/IStoredSettings.java', 16, '131:9', '145:9', 88, 11 ), ( 5, 225, 5, 'public int getFilesize(String name, int defaultValue) {\n    String val = getString(name, null);\n    if (StringUtils.isEmpty(val)) {\n    return defaultValue;\n    }\n    return com.gitblit.utils.FileUtils.convertSizeToInt(val, defaultValue);\n    }', '[\'public\', \'int\', \'getFilesize\', \'(\', \'String\', \'name\', \',\', \'int\', \'defaultValue\', \')\', \'{\', \'String\', \'val\', \'=\', \'getString\', \'(\', \'name\', \',\', \'null\', \')\', \';\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'val\', \')\', \')\', \'{\', \'return\', \'defaultValue\', \';\', \'}\', \'return\', \'com.gitblit.utils.FileUtils\', \'.\', \'convertSizeToInt\', \'(\', \'val\', \',\', \'defaultValue\', \')\', \';\', \'}\']', 'public int METHOD_1 ( String name , int VAR_1 ) { String val = getString ( name , null ) ; if ( StringUtils . isEmpty ( val ) ) { return VAR_1 ; } return TYPE_1 . METHOD_2 ( val , VAR_1 ) ; }', '[\'TYPE_1: com.gitblit.utils.FileUtils\', \'METHOD_2: convertSizeToInt\', \'METHOD_1: getFilesize\', \'VAR_1: defaultValue\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/IStoredSettings.java', 16, '154:9', '160:9', 52, 5 ), ( 5, 225, 6, 'public long getFilesize(String key, long defaultValue) {\n    String val = getString(key, null);\n    if (StringUtils.isEmpty(val)) {\n    return defaultValue;\n    }\n    return com.gitblit.utils.FileUtils.convertSizeToLong(val, defaultValue);\n    }', '[\'public\', \'long\', \'getFilesize\', \'(\', \'String\', \'key\', \',\', \'long\', \'defaultValue\', \')\', \'{\', \'String\', \'val\', \'=\', \'getString\', \'(\', \'key\', \',\', \'null\', \')\', \';\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'val\', \')\', \')\', \'{\', \'return\', \'defaultValue\', \';\', \'}\', \'return\', \'com.gitblit.utils.FileUtils\', \'.\', \'convertSizeToLong\', \'(\', \'val\', \',\', \'defaultValue\', \')\', \';\', \'}\']', 'public long METHOD_1 ( String key , long VAR_1 ) { String val = getString ( key , null ) ; if ( StringUtils . isEmpty ( val ) ) { return VAR_1 ; } return TYPE_1 . METHOD_2 ( val , VAR_1 ) ; }', '[\'TYPE_1: com.gitblit.utils.FileUtils\', \'METHOD_1: getFilesize\', \'METHOD_2: convertSizeToLong\', \'VAR_1: defaultValue\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/IStoredSettings.java', 16, '169:9', '175:9', 52, 5 ), ( 5, 225, 7, 'public char getChar(String name, char defaultValue) {\n    Properties props = getSettings();\n    if (props.containsKey(name)) {\n    String value = props.getProperty(name);\n    if (!StringUtils.isEmpty(value)) {\n    return value.trim().charAt(0);\n    }\n    }\n    return defaultValue;\n    }', '[\'public\', \'char\', \'getChar\', \'(\', \'String\', \'name\', \',\', \'char\', \'defaultValue\', \')\', \'{\', \'Properties\', \'props\', \'=\', \'getSettings\', \'(\', \')\', \';\', \'if\', \'(\', \'props\', \'.\', \'containsKey\', \'(\', \'name\', \')\', \')\', \'{\', \'String\', \'value\', \'=\', \'props\', \'.\', \'getProperty\', \'(\', \'name\', \')\', \';\', \'if\', \'(\', \'!\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'value\', \')\', \')\', \'{\', \'return\', \'value\', \'.\', \'trim\', \'(\', \')\', \'.\', \'charAt\', \'(\', \'0\', \')\', \';\', \'}\', \'}\', \'return\', \'defaultValue\', \';\', \'}\']', 'public char METHOD_1 ( String name , char VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( ) ; if ( VAR_2 . containsKey ( name ) ) { String value = VAR_2 . getProperty ( name ) ; if ( ! StringUtils . isEmpty ( value ) ) { return value . METHOD_3 ( ) . METHOD_4 ( 0 ) ; } } return VAR_1 ; }', '[\'TYPE_1: Properties\', \'METHOD_1: getChar\', \'METHOD_3: trim\', \'METHOD_2: getSettings\', \'METHOD_4: charAt\', \'VAR_1: defaultValue\', \'VAR_2: props\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/IStoredSettings.java', 16, '186:9', '195:9', 65, 7 ), ( 5, 225, 8, 'public String getString(String name, String defaultValue) {\n    Properties props = getSettings();\n    if (props.containsKey(name)) {\n    String value = props.getProperty(name);\n    if (value != null) {\n    return value.trim();\n    }\n    }\n    return defaultValue;\n    }', '[\'public\', \'String\', \'getString\', \'(\', \'String\', \'name\', \',\', \'String\', \'defaultValue\', \')\', \'{\', \'Properties\', \'props\', \'=\', \'getSettings\', \'(\', \')\', \';\', \'if\', \'(\', \'props\', \'.\', \'containsKey\', \'(\', \'name\', \')\', \')\', \'{\', \'String\', \'value\', \'=\', \'props\', \'.\', \'getProperty\', \'(\', \'name\', \')\', \';\', \'if\', \'(\', \'value\', \'!=\', \'null\', \')\', \'{\', \'return\', \'value\', \'.\', \'trim\', \'(\', \')\', \';\', \'}\', \'}\', \'return\', \'defaultValue\', \';\', \'}\']', 'public String getString ( String name , String VAR_1 ) { TYPE_1 VAR_2 = METHOD_1 ( ) ; if ( VAR_2 . containsKey ( name ) ) { String value = VAR_2 . getProperty ( name ) ; if ( value != null ) { return value . METHOD_2 ( ) ; } } return VAR_1 ; }', '[\'TYPE_1: Properties\', \'METHOD_2: trim\', \'METHOD_1: getSettings\', \'VAR_1: defaultValue\', \'VAR_2: props\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/IStoredSettings.java', 16, '206:9', '215:9', 56, 7 ), ( 5, 225, 9, 'public String getRequiredString(String name) {\n    Properties props = getSettings();\n    if (props.containsKey(name)) {\n    String value = props.getProperty(name);\n    if (value != null) {\n    return value.trim();\n    }\n    }\n    throw new RuntimeException("Property (" + name + ") does not exist");\n    }', '[\'public\', \'String\', \'getRequiredString\', \'(\', \'String\', \'name\', \')\', \'{\', \'Properties\', \'props\', \'=\', \'getSettings\', \'(\', \')\', \';\', \'if\', \'(\', \'props\', \'.\', \'containsKey\', \'(\', \'name\', \')\', \')\', \'{\', \'String\', \'value\', \'=\', \'props\', \'.\', \'getProperty\', \'(\', \'name\', \')\', \';\', \'if\', \'(\', \'value\', \'!=\', \'null\', \')\', \'{\', \'return\', \'value\', \'.\', \'trim\', \'(\', \')\', \';\', \'}\', \'}\', \'throw\', \'new\', \'RuntimeException\', \'(\', \'"Property ("\', \'+\', \'name\', \'+\', \'") does not exist"\', \')\', \';\', \'}\']', 'public String METHOD_1 ( String name ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; if ( VAR_1 . containsKey ( name ) ) { String value = VAR_1 . getProperty ( name ) ; if ( value != null ) { return value . METHOD_3 ( ) ; } } throw new RuntimeException ( STRING_1 + name + STRING_2 ) ; }', '[\'TYPE_1: Properties\', \'METHOD_1: getRequiredString\', \'METHOD_3: trim\', \'METHOD_2: getSettings\', \'VAR_1: props\', \'STRING_2: ") does not exist"\', \'STRING_1: "Property ("\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/IStoredSettings.java', 16, '224:9', '233:9', 61, 7 ), ( 5, 225, 11, 'public List<String> getStrings(String name, String separator) {\n    List<String> strings = new ArrayList<String>();\n    Properties props = getSettings();\n    if (props.containsKey(name)) {\n    String value = props.getProperty(name);\n    strings = StringUtils.getStringsFromValue(value, separator);\n    }\n    return strings;\n    }', '[\'public\', \'List\', \'<\', \'String\', \'>\', \'getStrings\', \'(\', \'String\', \'name\', \',\', \'String\', \'separator\', \')\', \'{\', \'List\', \'<\', \'String\', \'>\', \'strings\', \'=\', \'new\', \'ArrayList\', \'<\', \'String\', \'>\', \'(\', \')\', \';\', \'Properties\', \'props\', \'=\', \'getSettings\', \'(\', \')\', \';\', \'if\', \'(\', \'props\', \'.\', \'containsKey\', \'(\', \'name\', \')\', \')\', \'{\', \'String\', \'value\', \'=\', \'props\', \'.\', \'getProperty\', \'(\', \'name\', \')\', \';\', \'strings\', \'=\', \'StringUtils\', \'.\', \'getStringsFromValue\', \'(\', \'value\', \',\', \'separator\', \')\', \';\', \'}\', \'return\', \'strings\', \';\', \'}\']', 'public List < String > METHOD_1 ( String name , String VAR_1 ) { List < String > VAR_2 = new ArrayList < String > ( ) ; TYPE_1 VAR_3 = METHOD_2 ( ) ; if ( VAR_3 . containsKey ( name ) ) { String value = VAR_3 . getProperty ( name ) ; VAR_2 = StringUtils . METHOD_3 ( value , VAR_1 ) ; } return VAR_2 ; }', '[\'TYPE_1: Properties\', \'METHOD_2: getSettings\', \'METHOD_3: getStringsFromValue\', \'METHOD_1: getStrings\', \'VAR_2: strings\', \'VAR_1: separator\', \'VAR_3: props\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/IStoredSettings.java', 16, '253:9', '261:9', 69, 7 ), ( 5, 225, 12, 'public Map<String, String> getMap(String name) {\n    Map<String, String> map = new LinkedHashMap<String, String>();\n    for (String string : getStrings(name)) {\n    String[] kvp = string.split("=", 2);\n    String key = kvp[0];\n    String value = kvp[1];\n    map.put(key,  value);\n    }\n    return map;\n    }', '[\'public\', \'Map\', \'<\', \'String\', \',\', \'String\', \'>\', \'getMap\', \'(\', \'String\', \'name\', \')\', \'{\', \'Map\', \'<\', \'String\', \',\', \'String\', \'>\', \'map\', \'=\', \'new\', \'LinkedHashMap\', \'<\', \'String\', \',\', \'String\', \'>\', \'(\', \')\', \';\', \'for\', \'(\', \'String\', \'string\', \':\', \'getStrings\', \'(\', \'name\', \')\', \')\', \'{\', \'String\', \'[\', \']\', \'kvp\', \'=\', \'string\', \'.\', \'split\', \'(\', \'"="\', \',\', \'2\', \')\', \';\', \'String\', \'key\', \'=\', \'kvp\', \'[\', \'0\', \']\', \';\', \'String\', \'value\', \'=\', \'kvp\', \'[\', \'1\', \']\', \';\', \'map\', \'.\', \'put\', \'(\', \'key\', \',\', \'value\', \')\', \';\', \'}\', \'return\', \'map\', \';\', \'}\']', 'public Map < String , String > METHOD_1 ( String name ) { Map < String , String > map = new TYPE_1 < String , String > ( ) ; for ( String VAR_1 : METHOD_2 ( name ) ) { String [ ] VAR_2 = VAR_1 . METHOD_3 ( STRING_1 , 2 ) ; String key = VAR_2 [ 0 ] ; String value = VAR_2 [ 1 ] ; map . put ( key , value ) ; } return map ; }', '[\'TYPE_1: LinkedHashMap\', \'METHOD_3: split\', \'METHOD_1: getMap\', \'METHOD_2: getStrings\', \'VAR_1: string\', \'VAR_2: kvp\', \'STRING_1: "="\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/IStoredSettings.java', 16, '269:9', '278:9', 84, 8 ), ( 5, 231, 1, 'private boolean canAccess(UserModel user, RpcRequest requestType) {\n    switch (requestType) {\n    case GET_PROTOCOL:\n    return true;\n    case LIST_REPOSITORIES:\n    return true;\n    default:\n    return user.canAdmin();\n    }\n    }', '[\'private\', \'boolean\', \'canAccess\', \'(\', \'UserModel\', \'user\', \',\', \'RpcRequest\', \'requestType\', \')\', \'{\', \'switch\', \'(\', \'requestType\', \')\', \'{\', \'case\', \'GET_PROTOCOL\', \':\', \'return\', \'true\', \';\', \'case\', \'LIST_REPOSITORIES\', \':\', \'return\', \'true\', \';\', \'default\', \':\', \'return\', \'user\', \'.\', \'canAdmin\', \'(\', \')\', \';\', \'}\', \'}\']', 'private boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { switch ( VAR_2 ) { case VAR_3 : return true ; case VAR_4 : return true ; default : return VAR_1 . METHOD_2 ( ) ; } }', '[\'TYPE_1: UserModel\', \'TYPE_2: RpcRequest\', \'METHOD_1: canAccess\', \'METHOD_2: canAdmin\', \'VAR_4: LIST_REPOSITORIES\', \'VAR_2: requestType\', \'VAR_3: GET_PROTOCOL\', \'VAR_1: user\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/RpcFilter.java', 2, '136:9', '145:9', 37, 8 ), ( 5, 232, 1, 'private static void usage(JCommander jc, ParameterException t) {\n    System.out.println(Constants.getGitBlitVersion());\n    System.out.println();\n    if (t != null) {\n    System.out.println(t.getMessage());\n    System.out.println();\n    }\n    if (jc != null) {\n    jc.usage();\n    }\n    System.exit(0);\n    }', '[\'private\', \'static\', \'void\', \'usage\', \'(\', \'JCommander\', \'jc\', \',\', \'ParameterException\', \'t\', \')\', \'{\', \'System.out\', \'.\', \'println\', \'(\', \'Constants\', \'.\', \'getGitBlitVersion\', \'(\', \')\', \')\', \';\', \'System.out\', \'.\', \'println\', \'(\', \')\', \';\', \'if\', \'(\', \'t\', \'!=\', \'null\', \')\', \'{\', \'System.out\', \'.\', \'println\', \'(\', \'t\', \'.\', \'getMessage\', \'(\', \')\', \')\', \';\', \'System.out\', \'.\', \'println\', \'(\', \')\', \';\', \'}\', \'if\', \'(\', \'jc\', \'!=\', \'null\', \')\', \'{\', \'jc\', \'.\', \'usage\', \'(\', \')\', \';\', \'}\', \'System\', \'.\', \'exit\', \'(\', \'0\', \')\', \';\', \'}\']', 'private static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 t ) { VAR_2 . println ( TYPE_3 . METHOD_2 ( ) ) ; VAR_2 . println ( ) ; if ( t != null ) { VAR_2 . println ( t . getMessage ( ) ) ; VAR_2 . println ( ) ; } if ( VAR_1 != null ) { VAR_1 . METHOD_1 ( ) ; } System . METHOD_3 ( 0 ) ; }', '[\'TYPE_1: JCommander\', \'TYPE_3: Constants\', \'TYPE_2: ParameterException\', \'METHOD_3: exit\', \'METHOD_1: usage\', \'METHOD_2: getGitBlitVersion\', \'VAR_1: jc\', \'VAR_2: System.out\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/FederationClient.java', 2, '95:9', '107:9', 79, 9 ), ( 5, 233, 0, 'public static Format fromName(String name) {\n    for (Format format : values()) {\n    if (format.name().equalsIgnoreCase(name)) {\n    return format;\n    }\n    }\n    return zip;\n    }', '[\'public\', \'static\', \'Format\', \'fromName\', \'(\', \'String\', \'name\', \')\', \'{\', \'for\', \'(\', \'Format\', \'format\', \':\', \'values\', \'(\', \')\', \')\', \'{\', \'if\', \'(\', \'format\', \'.\', \'name\', \'(\', \')\', \'.\', \'equalsIgnoreCase\', \'(\', \'name\', \')\', \')\', \'{\', \'return\', \'format\', \';\', \'}\', \'}\', \'return\', \'zip\', \';\', \'}\']', 'public static TYPE_1 METHOD_1 ( String name ) { for ( TYPE_1 format : values ( ) ) { if ( format . name ( ) . METHOD_2 ( name ) ) { return format ; } } return VAR_1 ; }', '[\'TYPE_1: Format\', \'METHOD_1: fromName\', \'METHOD_2: equalsIgnoreCase\', \'VAR_1: zip\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/DownloadZipServlet.java', 8, '60:17', '67:17', 40, 5 ), ( 5, 233, 3, 'private void error(HttpServletResponse response, String mkd) throws ServletException,\n    			IOException, ParseException {\n    String content = MarkdownUtils.transformMarkdown(mkd);\n    response.setContentType("text/html; charset=" + Constants.ENCODING);\n    response.getWriter().write(content);\n    }', '[\'private\', \'void\', \'error\', \'(\', \'HttpServletResponse\', \'response\', \',\', \'String\', \'mkd\', \')\', \'throws\', \'ServletException\', \',\', \'IOException\', \',\', \'ParseException\', \'{\', \'String\', \'content\', \'=\', \'MarkdownUtils\', \'.\', \'transformMarkdown\', \'(\', \'mkd\', \')\', \';\', \'response\', \'.\', \'setContentType\', \'(\', \'"text/html; charset="\', \'+\', \'Constants.ENCODING\', \')\', \';\', \'response\', \'.\', \'getWriter\', \'(\', \')\', \'.\', \'write\', \'(\', \'content\', \')\', \';\', \'}\']', 'private void error ( TYPE_1 response , String VAR_1 ) throws TYPE_2 , IOException , TYPE_3 { String content = TYPE_4 . METHOD_1 ( VAR_1 ) ; response . METHOD_2 ( STRING_1 + VAR_2 ) ; response . METHOD_3 ( ) . write ( content ) ; }', '[\'TYPE_2: ServletException\', \'TYPE_1: HttpServletResponse\', \'TYPE_3: ParseException\', \'TYPE_4: MarkdownUtils\', \'METHOD_3: getWriter\', \'METHOD_2: setContentType\', \'METHOD_1: transformMarkdown\', \'VAR_1: mkd\', \'VAR_2: Constants.ENCODING\', \'STRING_1: "text/html; charset="\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/DownloadZipServlet.java', 8, '198:9', '203:9', 49, 5 ), ( 5, 233, 4, '@Override\n    protected void doPost(javax.servlet.http.HttpServletRequest request,\n    			javax.servlet.http.HttpServletResponse response) throws javax.servlet.ServletException,\n    			java.io.IOException {\n    processRequest(request, response);\n    }', '[\'protected\', \'void\', \'doPost\', \'(\', \'javax.servlet.http.HttpServletRequest\', \'request\', \',\', \'javax.servlet.http.HttpServletResponse\', \'response\', \')\', \'throws\', \'javax.servlet.ServletException\', \',\', \'java.io\', \'.\', \'IOException\', \'{\', \'processRequest\', \'(\', \'request\', \',\', \'response\', \')\', \';\', \'}\']', 'protected void METHOD_1 ( TYPE_1 request , TYPE_2 response ) throws TYPE_3 , TYPE_4 . IOException { METHOD_2 ( request , response ) ; }', '[\'TYPE_1: javax.servlet.http.HttpServletRequest\', \'TYPE_4: java.io\', \'TYPE_3: javax.servlet.ServletException\', \'TYPE_2: javax.servlet.http.HttpServletResponse\', \'METHOD_1: doPost\', \'METHOD_2: processRequest\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/DownloadZipServlet.java', 8, '205:9', '210:9', 45, 5 ), ( 5, 233, 5, '@Override\n    protected void doGet(javax.servlet.http.HttpServletRequest request,\n    			javax.servlet.http.HttpServletResponse response) throws javax.servlet.ServletException,\n    			java.io.IOException {\n    processRequest(request, response);\n    }', '[\'protected\', \'void\', \'doGet\', \'(\', \'javax.servlet.http.HttpServletRequest\', \'request\', \',\', \'javax.servlet.http.HttpServletResponse\', \'response\', \')\', \'throws\', \'javax.servlet.ServletException\', \',\', \'java.io\', \'.\', \'IOException\', \'{\', \'processRequest\', \'(\', \'request\', \',\', \'response\', \')\', \';\', \'}\']', 'protected void METHOD_1 ( TYPE_1 request , TYPE_2 response ) throws TYPE_3 , TYPE_4 . IOException { METHOD_2 ( request , response ) ; }', '[\'TYPE_1: javax.servlet.http.HttpServletRequest\', \'TYPE_4: java.io\', \'TYPE_3: javax.servlet.ServletException\', \'TYPE_2: javax.servlet.http.HttpServletResponse\', \'METHOD_1: doGet\', \'METHOD_2: processRequest\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/DownloadZipServlet.java', 8, '212:9', '217:9', 45, 5 ), ( 5, 234, 0, '@Override\n    protected String extractRepositoryName(String url) {\n    int a = url.indexOf("r=");\n    String repository = url.substring(a + 2);\n    if (repository.indexOf(\'&\') > -1) {\n    repository = repository.substring(0, repository.indexOf(\'&\'));\n    }\n    return repository;\n    }', '[\'protected\', \'String\', \'extractRepositoryName\', \'(\', \'String\', \'url\', \')\', \'{\', \'int\', \'a\', \'=\', \'url\', \'.\', \'indexOf\', \'(\', \'"r="\', \')\', \';\', \'String\', \'repository\', \'=\', \'url\', \'.\', \'substring\', \'(\', \'a\', \'+\', \'2\', \')\', \';\', \'if\', \'(\', \'repository\', \'.\', \'indexOf\', \'(\', "\'&\'", \')\', \'>\', \'-\', \'1\', \')\', \'{\', \'repository\', \'=\', \'repository\', \'.\', \'substring\', \'(\', \'0\', \',\', \'repository\', \'.\', \'indexOf\', \'(\', "\'&\'", \')\', \')\', \';\', \'}\', \'return\', \'repository\', \';\', \'}\']', 'protected String METHOD_1 ( String url ) { int a = url . METHOD_2 ( STRING_1 ) ; String VAR_1 = url . substring ( a + 2 ) ; if ( VAR_1 . METHOD_2 ( CHAR_1 ) > - 1 ) { VAR_1 = VAR_1 . substring ( 0 , VAR_1 . METHOD_2 ( CHAR_1 ) ) ; } return VAR_1 ; }', '[\'METHOD_1: extractRepositoryName\', \'METHOD_2: indexOf\', \'VAR_1: repository\', "CHAR_1: \'&\'", \'STRING_1: "r="\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/DownloadZipFilter.java', 6, '38:9', '46:9', 66, 7 ), ( 5, 235, 2, 'public void stop(Params params) {\n    try {\n    Socket s = new Socket(InetAddress.getByName("127.0.0.1"), params.shutdownPort);\n    OutputStream out = s.getOutputStream();\n    System.out.println("Sending Shutdown Request to " + Constants.NAME);\n    out.write("\\r\\n".getBytes());\n    out.flush();\n    s.close();\n    } catch (UnknownHostException e) {\n    e.printStackTrace();\n    } catch (IOException e) {\n    e.printStackTrace();\n    }\n    }', '[\'public\', \'void\', \'stop\', \'(\', \'Params\', \'params\', \')\', \'{\', \'try\', \'{\', \'Socket\', \'s\', \'=\', \'new\', \'Socket\', \'(\', \'InetAddress\', \'.\', \'getByName\', \'(\', \'"127.0.0.1"\', \')\', \',\', \'params.shutdownPort\', \')\', \';\', \'OutputStream\', \'out\', \'=\', \'s\', \'.\', \'getOutputStream\', \'(\', \')\', \';\', \'System.out\', \'.\', \'println\', \'(\', \'"Sending Shutdown Request to "\', \'+\', \'Constants.NAME\', \')\', \';\', \'out\', \'.\', \'write\', \'(\', \'"\\\\r\\\\n"\', \'.\', \'getBytes\', \'(\', \')\', \')\', \';\', \'out\', \'.\', \'flush\', \'(\', \')\', \';\', \'s\', \'.\', \'close\', \'(\', \')\', \';\', \'}\', \'catch\', \'(\', \'UnknownHostException\', \'e\', \')\', \'{\', \'e\', \'.\', \'printStackTrace\', \'(\', \')\', \';\', \'}\', \'catch\', \'(\', \'IOException\', \'e\', \')\', \'{\', \'e\', \'.\', \'printStackTrace\', \'(\', \')\', \';\', \'}\', \'}\']', 'public void METHOD_1 ( TYPE_1 params ) { try { TYPE_2 s = new TYPE_2 ( TYPE_3 . METHOD_2 ( STRING_1 ) , VAR_1 ) ; TYPE_4 out = s . METHOD_3 ( ) ; VAR_2 . println ( STRING_2 + VAR_3 ) ; out . write ( STRING_3 . METHOD_4 ( ) ) ; out . METHOD_5 ( ) ; s . close ( ) ; } catch ( TYPE_5 e ) { e . METHOD_6 ( ) ; } catch ( IOException e ) { e . METHOD_6 ( ) ; } }', '[\'TYPE_5: UnknownHostException\', \'TYPE_4: OutputStream\', \'TYPE_1: Params\', \'TYPE_3: InetAddress\', \'TYPE_2: Socket\', \'METHOD_1: stop\', \'METHOD_5: flush\', \'METHOD_6: printStackTrace\', \'METHOD_2: getByName\', \'METHOD_3: getOutputStream\', \'METHOD_4: getBytes\', \'VAR_1: params.shutdownPort\', \'VAR_3: Constants.NAME\', \'VAR_2: System.out\', \'STRING_3: "\\\\r\\\\n"\', \'STRING_1: "127.0.0.1"\', \'STRING_2: "Sending Shutdown Request to "\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitBlitServer.java', 12, '152:9', '165:9', 95, 12 ), ( 5, 235, 8, 'private Connector createAJPConnector(int port) {\n    logger.info("Setting up AJP Connector on port " + port);\n    Ajp13SocketConnector ajp = new Ajp13SocketConnector();\n    ajp.setPort(port);\n    if (port < 1024 && !isWindows()) {\n    logger.warn("Gitblit needs to run with ROOT permissions for ports < 1024!");\n    }\n    return ajp;\n    }', '[\'private\', \'Connector\', \'createAJPConnector\', \'(\', \'int\', \'port\', \')\', \'{\', \'logger\', \'.\', \'info\', \'(\', \'"Setting up AJP Connector on port "\', \'+\', \'port\', \')\', \';\', \'Ajp13SocketConnector\', \'ajp\', \'=\', \'new\', \'Ajp13SocketConnector\', \'(\', \')\', \';\', \'ajp\', \'.\', \'setPort\', \'(\', \'port\', \')\', \';\', \'if\', \'(\', \'port\', \'<\', \'1024\', \'&&\', \'!\', \'isWindows\', \'(\', \')\', \')\', \'{\', \'logger\', \'.\', \'warn\', \'(\', \'"Gitblit needs to run with ROOT permissions for ports < 1024!"\', \')\', \';\', \'}\', \'return\', \'ajp\', \';\', \'}\']', 'private TYPE_1 METHOD_1 ( int VAR_1 ) { logger . info ( STRING_1 + VAR_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; if ( VAR_1 < INT_1 && ! METHOD_3 ( ) ) { logger . warn ( STRING_2 ) ; } return VAR_2 ; }', '[\'TYPE_1: Connector\', \'TYPE_2: Ajp13SocketConnector\', \'METHOD_1: createAJPConnector\', \'METHOD_3: isWindows\', \'METHOD_2: setPort\', \'VAR_1: port\', \'VAR_2: ajp\', \'INT_1: 1024\', \'STRING_1: "Setting up AJP Connector on port "\', \'STRING_2: "Gitblit needs to run with ROOT permissions for ports < 1024!"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitBlitServer.java', 12, '496:9', '504:9', 54, 7 ), ( 5, 235, 11, 'public ShutdownMonitorThread(Server server, Params params) {\n    this.server = server;\n    setDaemon(true);\n    setName(Constants.NAME + " Shutdown Monitor");\n    ServerSocket skt = null;\n    try {\n    skt = new ServerSocket(params.shutdownPort, 1, InetAddress.getByName("127.0.0.1"));\n    } catch (Exception e) {\n    logger.warn("Could not open shutdown monitor on port " + params.shutdownPort, e);\n    }\n    socket = skt;\n    }', '[\'public\', \'ShutdownMonitorThread\', \'(\', \'Server\', \'server\', \',\', \'Params\', \'params\', \')\', \'{\', \'this\', \'.\', \'server\', \'=\', \'server\', \';\', \'setDaemon\', \'(\', \'true\', \')\', \';\', \'setName\', \'(\', \'Constants.NAME\', \'+\', \'" Shutdown Monitor"\', \')\', \';\', \'ServerSocket\', \'skt\', \'=\', \'null\', \';\', \'try\', \'{\', \'skt\', \'=\', \'new\', \'ServerSocket\', \'(\', \'params.shutdownPort\', \',\', \'1\', \',\', \'InetAddress\', \'.\', \'getByName\', \'(\', \'"127.0.0.1"\', \')\', \')\', \';\', \'}\', \'catch\', \'(\', \'Exception\', \'e\', \')\', \'{\', \'logger\', \'.\', \'warn\', \'(\', \'"Could not open shutdown monitor on port "\', \'+\', \'params.shutdownPort\', \',\', \'e\', \')\', \';\', \'}\', \'socket\', \'=\', \'skt\', \';\', \'}\']', 'public VAR_1 ( TYPE_1 VAR_2 , TYPE_2 params ) { this . VAR_2 = VAR_2 ; METHOD_1 ( true ) ; METHOD_2 ( VAR_3 + STRING_1 ) ; TYPE_3 VAR_4 = null ; try { VAR_4 = new TYPE_3 ( VAR_5 , 1 , TYPE_4 . METHOD_3 ( STRING_2 ) ) ; } catch ( Exception e ) { logger . warn ( STRING_3 + VAR_5 , e ) ; } VAR_6 = VAR_4 ; }', '[\'TYPE_1: Server\', \'TYPE_2: Params\', \'TYPE_3: ServerSocket\', \'TYPE_4: InetAddress\', \'METHOD_2: setName\', \'METHOD_1: setDaemon\', \'METHOD_3: getByName\', \'VAR_2: server\', \'VAR_5: params.shutdownPort\', \'VAR_1: ShutdownMonitorThread\', \'VAR_3: Constants.NAME\', \'VAR_6: socket\', \'VAR_4: skt\', \'STRING_2: "127.0.0.1"\', \'STRING_3: "Could not open shutdown monitor on port "\', \'STRING_1: " Shutdown Monitor"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitBlitServer.java', 12, '531:17', '542:17', 82, 10 ), ( 5, 236, 2, 'protected <X> X deserialize(HttpServletRequest request, HttpServletResponse response,\n    			Class<X> clazz) throws IOException {\n    String json = readJson(request, response);\n    if (StringUtils.isEmpty(json)) {\n    return null;\n    }\n    X object = JsonUtils.fromJsonString(json.toString(), clazz);\n    return object;\n    }', '[\'protected\', \'<\', \'X\', \'>\', \'X\', \'deserialize\', \'(\', \'HttpServletRequest\', \'request\', \',\', \'HttpServletResponse\', \'response\', \',\', \'Class\', \'<\', \'X\', \'>\', \'clazz\', \')\', \'throws\', \'IOException\', \'{\', \'String\', \'json\', \'=\', \'readJson\', \'(\', \'request\', \',\', \'response\', \')\', \';\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'json\', \')\', \')\', \'{\', \'return\', \'null\', \';\', \'}\', \'X\', \'object\', \'=\', \'JsonUtils\', \'.\', \'fromJsonString\', \'(\', \'json\', \'.\', \'toString\', \'(\', \')\', \',\', \'clazz\', \')\', \';\', \'return\', \'object\', \';\', \'}\']', 'protected < TYPE_1 > TYPE_1 METHOD_1 ( TYPE_2 request , TYPE_3 response , Class < TYPE_1 > clazz ) throws IOException { String json = METHOD_2 ( request , response ) ; if ( StringUtils . isEmpty ( json ) ) { return null ; } TYPE_1 object = TYPE_4 . METHOD_3 ( json . toString ( ) , clazz ) ; return object ; }', '[\'TYPE_2: HttpServletRequest\', \'TYPE_4: JsonUtils\', \'TYPE_1: X\', \'TYPE_3: HttpServletResponse\', \'METHOD_3: fromJsonString\', \'METHOD_2: readJson\', \'METHOD_1: deserialize\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/JsonServlet.java', 7, '80:9', '89:9', 65, 7 ), ( 5, 236, 3, 'protected <X> X deserialize(HttpServletRequest request, HttpServletResponse response, Type type)\n    throws IOException {\n    String json = readJson(request, response);\n    if (StringUtils.isEmpty(json)) {\n    return null;\n    }\n    X object = JsonUtils.fromJsonString(json.toString(), type);\n    return object;\n    }', '[\'protected\', \'<\', \'X\', \'>\', \'X\', \'deserialize\', \'(\', \'HttpServletRequest\', \'request\', \',\', \'HttpServletResponse\', \'response\', \',\', \'Type\', \'type\', \')\', \'throws\', \'IOException\', \'{\', \'String\', \'json\', \'=\', \'readJson\', \'(\', \'request\', \',\', \'response\', \')\', \';\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'json\', \')\', \')\', \'{\', \'return\', \'null\', \';\', \'}\', \'X\', \'object\', \'=\', \'JsonUtils\', \'.\', \'fromJsonString\', \'(\', \'json\', \'.\', \'toString\', \'(\', \')\', \',\', \'type\', \')\', \';\', \'return\', \'object\', \';\', \'}\']', 'protected < TYPE_1 > TYPE_1 METHOD_1 ( TYPE_2 request , TYPE_3 response , Type type ) throws IOException { String json = METHOD_2 ( request , response ) ; if ( StringUtils . isEmpty ( json ) ) { return null ; } TYPE_1 object = TYPE_4 . METHOD_3 ( json . toString ( ) , type ) ; return object ; }', '[\'TYPE_2: HttpServletRequest\', \'TYPE_4: JsonUtils\', \'TYPE_1: X\', \'TYPE_3: HttpServletResponse\', \'METHOD_3: fromJsonString\', \'METHOD_2: readJson\', \'METHOD_1: deserialize\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/JsonServlet.java', 7, '91:9', '100:9', 62, 7 ), ( 5, 236, 5, 'protected void serialize(HttpServletResponse response, Object o) throws IOException {\n    if (o != null) {\n    // Send JSON response\n    String json = JsonUtils.toJsonString(o);\n    response.setCharacterEncoding(Constants.ENCODING);\n    response.setContentType("application/json");\n    response.getWriter().append(json);\n    }\n    }', '[\'protected\', \'void\', \'serialize\', \'(\', \'HttpServletResponse\', \'response\', \',\', \'Object\', \'o\', \')\', \'throws\', \'IOException\', \'{\', \'if\', \'(\', \'o\', \'!=\', \'null\', \')\', \'{\', \'String\', \'json\', \'=\', \'JsonUtils\', \'.\', \'toJsonString\', \'(\', \'o\', \')\', \';\', \'response\', \'.\', \'setCharacterEncoding\', \'(\', \'Constants.ENCODING\', \')\', \';\', \'response\', \'.\', \'setContentType\', \'(\', \'"application/json"\', \')\', \';\', \'response\', \'.\', \'getWriter\', \'(\', \')\', \'.\', \'append\', \'(\', \'json\', \')\', \';\', \'}\', \'}\']', 'protected void METHOD_1 ( TYPE_1 response , Object o ) throws IOException { if ( o != null ) { String json = TYPE_2 . METHOD_2 ( o ) ; response . METHOD_3 ( VAR_1 ) ; response . METHOD_4 ( STRING_1 ) ; response . METHOD_5 ( ) . append ( json ) ; } }', '[\'TYPE_2: JsonUtils\', \'TYPE_1: HttpServletResponse\', \'METHOD_3: setCharacterEncoding\', \'METHOD_1: serialize\', \'METHOD_5: getWriter\', \'METHOD_4: setContentType\', \'METHOD_2: toJsonString\', \'VAR_1: Constants.ENCODING\', \'STRING_1: "application/json"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/JsonServlet.java', 7, '121:9', '129:9', 59, 6 ), ( 5, 237, 0, '@Override\n    public void setup(IStoredSettings settings) {\n    File realmFile = GitBlit.getFileOrFolder(Keys.realm.userService, "${baseFolder}/users.conf");\n    serviceImpl = createUserService(realmFile);\n    logger.info("GUS delegating to " + serviceImpl.toString());\n    }', '[\'public\', \'void\', \'setup\', \'(\', \'IStoredSettings\', \'settings\', \')\', \'{\', \'File\', \'realmFile\', \'=\', \'GitBlit\', \'.\', \'getFileOrFolder\', \'(\', \'Keys.realm.userService\', \',\', \'"${baseFolder}/users.conf"\', \')\', \';\', \'serviceImpl\', \'=\', \'createUserService\', \'(\', \'realmFile\', \')\', \';\', \'logger\', \'.\', \'info\', \'(\', \'"GUS delegating to "\', \'+\', \'serviceImpl\', \'.\', \'toString\', \'(\', \')\', \')\', \';\', \'}\']', 'public void METHOD_1 ( TYPE_1 VAR_1 ) { File VAR_2 = TYPE_2 . METHOD_2 ( VAR_3 , STRING_1 ) ; VAR_4 = METHOD_3 ( VAR_2 ) ; logger . info ( STRING_2 + VAR_4 . toString ( ) ) ; }', '[\'TYPE_1: IStoredSettings\', \'TYPE_2: GitBlit\', \'METHOD_1: setup\', \'METHOD_3: createUserService\', \'METHOD_2: getFileOrFolder\', \'VAR_1: settings\', \'VAR_2: realmFile\', \'VAR_3: Keys.realm.userService\', \'VAR_4: serviceImpl\', \'STRING_1: "${baseFolder}/users.conf"\', \'STRING_2: "GUS delegating to "\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitblitUserService.java', 38, '62:9', '67:9', 46, 5 ), ( 5, 237, 9, '@Override\n    public UserModel authenticate(char[] cookie) {\n    UserModel user = serviceImpl.authenticate(cookie);\n    setAccountType(user);\n    return user;\n    }', '[\'public\', \'UserModel\', \'authenticate\', \'(\', \'char\', \'[\', \']\', \'cookie\', \')\', \'{\', \'UserModel\', \'user\', \'=\', \'serviceImpl\', \'.\', \'authenticate\', \'(\', \'cookie\', \')\', \';\', \'setAccountType\', \'(\', \'user\', \')\', \';\', \'return\', \'user\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( char [ ] VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; return VAR_2 ; }', '[\'TYPE_1: UserModel\', \'METHOD_1: authenticate\', \'METHOD_2: setAccountType\', \'VAR_1: cookie\', \'VAR_2: user\', \'VAR_3: serviceImpl\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitblitUserService.java', 38, '150:9', '155:9', 30, 5 ), ( 5, 237, 10, '@Override\n    public UserModel authenticate(String username, char[] password) {\n    UserModel user = serviceImpl.authenticate(username, password);\n    setAccountType(user);\n    return user;\n    }', '[\'public\', \'UserModel\', \'authenticate\', \'(\', \'String\', \'username\', \',\', \'char\', \'[\', \']\', \'password\', \')\', \'{\', \'UserModel\', \'user\', \'=\', \'serviceImpl\', \'.\', \'authenticate\', \'(\', \'username\', \',\', \'password\', \')\', \';\', \'setAccountType\', \'(\', \'user\', \')\', \';\', \'return\', \'user\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( String VAR_1 , char [ ] VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . METHOD_1 ( VAR_1 , VAR_2 ) ; METHOD_2 ( VAR_3 ) ; return VAR_3 ; }', '[\'TYPE_1: UserModel\', \'METHOD_1: authenticate\', \'METHOD_2: setAccountType\', \'VAR_2: password\', \'VAR_3: user\', \'VAR_1: username\', \'VAR_4: serviceImpl\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitblitUserService.java', 38, '157:9', '162:9', 35, 5 ), ( 5, 237, 12, '@Override\n    public UserModel getUserModel(String username) {\n    UserModel user = serviceImpl.getUserModel(username);\n    setAccountType(user);\n    return user;\n    }', '[\'public\', \'UserModel\', \'getUserModel\', \'(\', \'String\', \'username\', \')\', \'{\', \'UserModel\', \'user\', \'=\', \'serviceImpl\', \'.\', \'getUserModel\', \'(\', \'username\', \')\', \';\', \'setAccountType\', \'(\', \'user\', \')\', \';\', \'return\', \'user\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( String VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_1 ( VAR_1 ) ; METHOD_2 ( VAR_2 ) ; return VAR_2 ; }', '[\'TYPE_1: UserModel\', \'METHOD_1: getUserModel\', \'METHOD_2: setAccountType\', \'VAR_2: user\', \'VAR_1: username\', \'VAR_3: serviceImpl\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitblitUserService.java', 38, '169:9', '174:9', 29, 5 ), ( 5, 237, 19, '@Override\n    public List<UserModel> getAllUsers() {\n    List<UserModel> users = serviceImpl.getAllUsers();\n    for (UserModel user : users) {\n    setAccountType(user);\n    }\n    return users;\n    }', '[\'public\', \'List\', \'<\', \'UserModel\', \'>\', \'getAllUsers\', \'(\', \')\', \'{\', \'List\', \'<\', \'UserModel\', \'>\', \'users\', \'=\', \'serviceImpl\', \'.\', \'getAllUsers\', \'(\', \')\', \';\', \'for\', \'(\', \'UserModel\', \'user\', \':\', \'users\', \')\', \'{\', \'setAccountType\', \'(\', \'user\', \')\', \';\', \'}\', \'return\', \'users\', \';\', \'}\']', 'public List < TYPE_1 > METHOD_1 ( ) { List < TYPE_1 > VAR_1 = VAR_2 . METHOD_1 ( ) ; for ( TYPE_1 VAR_3 : VAR_1 ) { METHOD_2 ( VAR_3 ) ; } return VAR_1 ; }', '[\'TYPE_1: UserModel\', \'METHOD_1: getAllUsers\', \'METHOD_2: setAccountType\', \'VAR_3: user\', \'VAR_1: users\', \'VAR_2: serviceImpl\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitblitUserService.java', 38, '230:9', '237:9', 39, 6 ), ( 5, 237, 27, '@Override\n    public boolean updateTeamModel(String teamname, TeamModel model) {\n    if (!supportsTeamMembershipChanges()) {\n    // teams are externally controlled - copy from original model\n    TeamModel existingModel = getTeamModel(teamname);\n    model = DeepCopier.copy(model);\n    model.users.clear();\n    model.users.addAll(existingModel.users);\n    }\n    return serviceImpl.updateTeamModel(teamname, model);\n    }', '[\'public\', \'boolean\', \'updateTeamModel\', \'(\', \'String\', \'teamname\', \',\', \'TeamModel\', \'model\', \')\', \'{\', \'if\', \'(\', \'!\', \'supportsTeamMembershipChanges\', \'(\', \')\', \')\', \'{\', \'TeamModel\', \'existingModel\', \'=\', \'getTeamModel\', \'(\', \'teamname\', \')\', \';\', \'model\', \'=\', \'DeepCopier\', \'.\', \'copy\', \'(\', \'model\', \')\', \';\', \'model.users\', \'.\', \'clear\', \'(\', \')\', \';\', \'model.users\', \'.\', \'addAll\', \'(\', \'existingModel.users\', \')\', \';\', \'}\', \'return\', \'serviceImpl\', \'.\', \'updateTeamModel\', \'(\', \'teamname\', \',\', \'model\', \')\', \';\', \'}\']', 'public boolean METHOD_1 ( String VAR_1 , TYPE_1 model ) { if ( ! METHOD_2 ( ) ) { TYPE_1 VAR_2 = METHOD_3 ( VAR_1 ) ; model = TYPE_2 . copy ( model ) ; VAR_3 . METHOD_4 ( ) ; VAR_3 . addAll ( VAR_4 ) ; } return VAR_5 . METHOD_1 ( VAR_1 , model ) ; }', '[\'TYPE_1: TeamModel\', \'TYPE_2: DeepCopier\', \'METHOD_2: supportsTeamMembershipChanges\', \'METHOD_1: updateTeamModel\', \'METHOD_3: getTeamModel\', \'METHOD_4: clear\', \'VAR_3: model.users\', \'VAR_4: existingModel.users\', \'VAR_1: teamname\', \'VAR_2: existingModel\', \'VAR_5: serviceImpl\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitblitUserService.java', 38, '275:9', '286:9', 68, 8 ), ( 5, 237, 35, 'protected void setAccountType(UserModel user) {\n    if (user != null) {\n    if (!StringUtils.isEmpty(user.password)\n    && !ExternalAccount.equalsIgnoreCase(user.password)\n    && !"StoredInLDAP".equalsIgnoreCase(user.password)) {\n    user.accountType = AccountType.LOCAL;\n    } else {\n    user.accountType = getAccountType();\n    }\n    }\n    }', '[\'protected\', \'void\', \'setAccountType\', \'(\', \'UserModel\', \'user\', \')\', \'{\', \'if\', \'(\', \'user\', \'!=\', \'null\', \')\', \'{\', \'if\', \'(\', \'!\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'user.password\', \')\', \'&&\', \'!\', \'ExternalAccount\', \'.\', \'equalsIgnoreCase\', \'(\', \'user.password\', \')\', \'&&\', \'!\', \'"StoredInLDAP"\', \'.\', \'equalsIgnoreCase\', \'(\', \'user.password\', \')\', \')\', \'{\', \'user.accountType\', \'=\', \'AccountType.LOCAL\', \';\', \'}\', \'else\', \'{\', \'user.accountType\', \'=\', \'getAccountType\', \'(\', \')\', \';\', \'}\', \'}\', \'}\']', 'protected void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { if ( ! StringUtils . isEmpty ( VAR_2 ) && ! TYPE_2 . METHOD_2 ( VAR_2 ) && ! STRING_1 . METHOD_2 ( VAR_2 ) ) { VAR_3 = VAR_4 ; } else { VAR_3 = METHOD_3 ( ) ; } } }', '[\'TYPE_1: UserModel\', \'TYPE_2: ExternalAccount\', \'METHOD_3: getAccountType\', \'METHOD_1: setAccountType\', \'METHOD_2: equalsIgnoreCase\', \'VAR_4: AccountType.LOCAL\', \'VAR_3: user.accountType\', \'VAR_1: user\', \'VAR_2: user.password\', \'STRING_1: "StoredInLDAP"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitblitUserService.java', 38, '324:9', '334:9', 69, 8 ), ( 5, 238, 0, '@Override\n    public void checkClientTrusted(X509Certificate[] chain, String authType)\n    throws CertificateException {\n    X509Certificate cert = chain[0];\n    if (isRevoked(cert)) {\n    String message = MessageFormat.format("Rejecting revoked certificate {0,number,0} for {1}",\n    					cert.getSerialNumber(), cert.getSubjectDN().getName());\n    logger.warn(message);\n    throw new CertificateException(message);\n    }\n    delegate.checkClientTrusted(chain, authType);\n    }', '[\'public\', \'void\', \'checkClientTrusted\', \'(\', \'X509Certificate\', \'[\', \']\', \'chain\', \',\', \'String\', \'authType\', \')\', \'throws\', \'CertificateException\', \'{\', \'X509Certificate\', \'cert\', \'=\', \'chain\', \'[\', \'0\', \']\', \';\', \'if\', \'(\', \'isRevoked\', \'(\', \'cert\', \')\', \')\', \'{\', \'String\', \'message\', \'=\', \'MessageFormat\', \'.\', \'format\', \'(\', \'"Rejecting revoked certificate {0\', \',\', \'cert\', \'.\', \'getSerialNumber\', \'(\', \')\', \',\', \'cert\', \'.\', \'getSubjectDN\', \'(\', \')\', \'.\', \'getName\', \'(\', \')\', \')\', \';\', \'logger\', \'.\', \'warn\', \'(\', \'message\', \')\', \';\', \'throw\', \'new\', \'CertificateException\', \'(\', \'message\', \')\', \';\', \'}\', \'delegate\', \'.\', \'checkClientTrusted\', \'(\', \'chain\', \',\', \'authType\', \')\', \';\', \'}\']', 'public void METHOD_1 ( TYPE_1 [ ] VAR_1 , String VAR_2 ) throws TYPE_2 { TYPE_1 VAR_3 = VAR_1 [ 0 ] ; if ( METHOD_2 ( VAR_3 ) ) { String message = TYPE_3 . format ( STRING_1 , VAR_3 . METHOD_3 ( ) , VAR_3 . METHOD_4 ( ) . getName ( ) ) ; logger . warn ( message ) ; throw new TYPE_2 ( message ) ; } VAR_4 . METHOD_1 ( VAR_1 , VAR_2 ) ; }', '[\'TYPE_3: MessageFormat\', \'TYPE_2: CertificateException\', \'TYPE_1: X509Certificate\', \'METHOD_1: checkClientTrusted\', \'METHOD_2: isRevoked\', \'METHOD_3: getSerialNumber\', \'METHOD_4: getSubjectDN\', \'VAR_4: delegate\', \'VAR_1: chain\', \'VAR_3: cert\', \'VAR_2: authType\', \'STRING_1: "Rejecting revoked certificate {0\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitblitTrustManager.java', 6, '57:9', '68:9', 80, 10 ), ( 5, 238, 3, 'protected boolean isRevoked(X509Certificate cert) {\n    if (!caRevocationList.exists()) {\n    return false;\n    }\n    read();\n    if (crl.isRevoked(cert)) {\n    // exact cert is revoked\n    return true;\n    }\n    X509CRLEntry entry = crl.getRevokedCertificate(cert.getSerialNumber());\n    if (entry != null) {\n    logger.warn("Certificate issuer does not match CRL issuer, but serial number has been revoked!");\n    logger.warn("   cert issuer = " + cert.getIssuerX500Principal());\n    logger.warn("   crl issuer  = " + crl.getIssuerX500Principal());\n    return true;\n    }\n    return false;\n    }', '[\'protected\', \'boolean\', \'isRevoked\', \'(\', \'X509Certificate\', \'cert\', \')\', \'{\', \'if\', \'(\', \'!\', \'caRevocationList\', \'.\', \'exists\', \'(\', \')\', \')\', \'{\', \'return\', \'false\', \';\', \'}\', \'read\', \'(\', \')\', \';\', \'if\', \'(\', \'crl\', \'.\', \'isRevoked\', \'(\', \'cert\', \')\', \')\', \'{\', \'return\', \'true\', \';\', \'}\', \'X509CRLEntry\', \'entry\', \'=\', \'crl\', \'.\', \'getRevokedCertificate\', \'(\', \'cert\', \'.\', \'getSerialNumber\', \'(\', \')\', \')\', \';\', \'if\', \'(\', \'entry\', \'!=\', \'null\', \')\', \'{\', \'logger\', \'.\', \'warn\', \'(\', \'"Certificate issuer does not match CRL issuer\', \')\', \';\', \'logger\', \'.\', \'warn\', \'(\', \'"   cert issuer = "\', \'+\', \'cert\', \'.\', \'getIssuerX500Principal\', \'(\', \')\', \')\', \';\', \'logger\', \'.\', \'warn\', \'(\', \'"   crl issuer  = "\', \'+\', \'crl\', \'.\', \'getIssuerX500Principal\', \'(\', \')\', \')\', \';\', \'return\', \'true\', \';\', \'}\', \'return\', \'false\', \';\', \'}\']', 'protected boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! VAR_2 . METHOD_2 ( ) ) { return false ; } read ( ) ; if ( VAR_3 . METHOD_1 ( VAR_1 ) ) { return true ; } TYPE_2 entry = VAR_3 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; if ( entry != null ) { logger . warn ( STRING_1 ) ; logger . warn ( STRING_2 + VAR_1 . METHOD_5 ( ) ) ; logger . warn ( STRING_3 + VAR_3 . METHOD_5 ( ) ) ; return true ; } return false ; }', '[\'TYPE_2: X509CRLEntry\', \'TYPE_1: X509Certificate\', \'METHOD_1: isRevoked\', \'METHOD_4: getSerialNumber\', \'METHOD_5: getIssuerX500Principal\', \'METHOD_3: getRevokedCertificate\', \'METHOD_2: exists\', \'VAR_2: caRevocationList\', \'VAR_1: cert\', \'VAR_3: crl\', \'STRING_3: "   crl issuer  = "\', \'STRING_2: "   cert issuer = "\', \'STRING_1: "Certificate issuer does not match CRL issuer\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/GitblitTrustManager.java', 6, '81:9', '101:9', 98, 13 ), ( 5, 239, 1, 'protected void done() {\n    parent.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));\n    try {\n    Boolean success = get();\n    if (success) {\n    onSuccess();\n    } else {\n    onFailure();\n    }\n    } catch (Throwable t) {\n    Utils.showException(parent, t);\n    }\n    }', '[\'protected\', \'void\', \'done\', \'(\', \')\', \'{\', \'parent\', \'.\', \'setCursor\', \'(\', \'Cursor\', \'.\', \'getPredefinedCursor\', \'(\', \'Cursor.DEFAULT_CURSOR\', \')\', \')\', \';\', \'try\', \'{\', \'Boolean\', \'success\', \'=\', \'get\', \'(\', \')\', \';\', \'if\', \'(\', \'success\', \')\', \'{\', \'onSuccess\', \'(\', \')\', \';\', \'}\', \'else\', \'{\', \'onFailure\', \'(\', \')\', \';\', \'}\', \'}\', \'catch\', \'(\', \'Throwable\', \'t\', \')\', \'{\', \'Utils\', \'.\', \'showException\', \'(\', \'parent\', \',\', \'t\', \')\', \';\', \'}\', \'}\']', 'protected void METHOD_1 ( ) { parent . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_1 ) ) ; try { Boolean VAR_2 = get ( ) ; if ( VAR_2 ) { METHOD_4 ( ) ; } else { METHOD_5 ( ) ; } } catch ( Throwable t ) { TYPE_2 . METHOD_6 ( parent , t ) ; } }', '[\'TYPE_2: Utils\', \'TYPE_1: Cursor\', \'METHOD_6: showException\', \'METHOD_3: getPredefinedCursor\', \'METHOD_5: onFailure\', \'METHOD_2: setCursor\', \'METHOD_1: done\', \'METHOD_4: onSuccess\', \'VAR_1: Cursor.DEFAULT_CURSOR\', \'VAR_2: success\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/authority/AuthorityWorker.java', 4, '38:9', '50:9', 60, 10 ), ( 5, 240, 1, 'public void update(X509Metadata metadata) {\n    update(metadata, "OU", OU);\n    update(metadata, "O", O);\n    update(metadata, "L", L);\n    update(metadata, "ST", ST);\n    update(metadata, "C", C);\n    if (duration > 0) {\n    metadata.notAfter = new Date(System.currentTimeMillis() + duration*TimeUtils.ONEDAY);\n    }\n    }', '[\'public\', \'void\', \'update\', \'(\', \'X509Metadata\', \'metadata\', \')\', \'{\', \'update\', \'(\', \'metadata\', \',\', \'"OU"\', \',\', \'OU\', \')\', \';\', \'update\', \'(\', \'metadata\', \',\', \'"O"\', \',\', \'O\', \')\', \';\', \'update\', \'(\', \'metadata\', \',\', \'"L"\', \',\', \'L\', \')\', \';\', \'update\', \'(\', \'metadata\', \',\', \'"ST"\', \',\', \'ST\', \')\', \';\', \'update\', \'(\', \'metadata\', \',\', \'"C"\', \',\', \'C\', \')\', \';\', \'if\', \'(\', \'duration\', \'>\', \'0\', \')\', \'{\', \'metadata.notAfter\', \'=\', \'new\', \'Date\', \'(\', \'System\', \'.\', \'currentTimeMillis\', \'(\', \')\', \'+\', \'duration\', \'*\', \'TimeUtils.ONEDAY\', \')\', \';\', \'}\', \'}\']', 'public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_1 ( VAR_1 , STRING_1 , VAR_2 ) ; METHOD_1 ( VAR_1 , STRING_2 , VAR_3 ) ; METHOD_1 ( VAR_1 , STRING_3 , VAR_4 ) ; METHOD_1 ( VAR_1 , STRING_4 , VAR_5 ) ; METHOD_1 ( VAR_1 , STRING_5 , VAR_6 ) ; if ( VAR_7 > 0 ) { VAR_8 = new TYPE_2 ( System . METHOD_2 ( ) + VAR_7 * VAR_9 ) ; } }', '[\'TYPE_1: X509Metadata\', \'TYPE_2: Date\', \'METHOD_2: currentTimeMillis\', \'METHOD_1: update\', \'VAR_7: duration\', \'VAR_5: ST\', \'VAR_1: metadata\', \'VAR_6: C\', \'VAR_2: OU\', \'VAR_8: metadata.notAfter\', \'VAR_9: TimeUtils.ONEDAY\', \'VAR_4: L\', \'VAR_3: O\', \'STRING_5: "C"\', \'STRING_2: "O"\', \'STRING_3: "L"\', \'STRING_1: "OU"\', \'STRING_4: "ST"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/authority/NewCertificateConfig.java', 6, '56:17', '65:17', 81, 8 ), ( 5, 240, 4, 'private void store(Config c, String section, String name, String value) {\n    if (StringUtils.isEmpty(value)) {\n    c.unset(section, null, name);\n    } else {\n    c.setString(section, null, name, value);\n    }\n    }', '[\'private\', \'void\', \'store\', \'(\', \'Config\', \'c\', \',\', \'String\', \'section\', \',\', \'String\', \'name\', \',\', \'String\', \'value\', \')\', \'{\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'value\', \')\', \')\', \'{\', \'c\', \'.\', \'unset\', \'(\', \'section\', \',\', \'null\', \',\', \'name\', \')\', \';\', \'}\', \'else\', \'{\', \'c\', \'.\', \'setString\', \'(\', \'section\', \',\', \'null\', \',\', \'name\', \',\', \'value\', \')\', \';\', \'}\', \'}\']', 'private void METHOD_1 ( TYPE_1 c , String VAR_1 , String name , String value ) { if ( StringUtils . isEmpty ( value ) ) { c . METHOD_2 ( VAR_1 , null , name ) ; } else { c . METHOD_3 ( VAR_1 , null , name , value ) ; } }', '[\'TYPE_1: Config\', \'METHOD_3: setString\', \'METHOD_1: store\', \'METHOD_2: unset\', \'VAR_1: section\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/authority/NewCertificateConfig.java', 6, '86:17', '92:17', 56, 5 ), ( 5, 240, 5, 'private NewCertificateConfig(final Config c) {\n    duration = c.getInt("new",  null, "duration", 0);\n    OU = c.getString("new", null, "organizationalUnit");\n    O = c.getString("new", null, "organization");\n    L = c.getString("new", null, "locality");\n    ST = c.getString("new", null, "stateProvince");\n    C = c.getString("new", null, "countryCode");\n    }', '[\'private\', \'NewCertificateConfig\', \'(\', \'final\', \'Config\', \'c\', \')\', \'{\', \'duration\', \'=\', \'c\', \'.\', \'getInt\', \'(\', \'"new"\', \',\', \'null\', \',\', \'"duration"\', \',\', \'0\', \')\', \';\', \'OU\', \'=\', \'c\', \'.\', \'getString\', \'(\', \'"new"\', \',\', \'null\', \',\', \'"organizationalUnit"\', \')\', \';\', \'O\', \'=\', \'c\', \'.\', \'getString\', \'(\', \'"new"\', \',\', \'null\', \',\', \'"organization"\', \')\', \';\', \'L\', \'=\', \'c\', \'.\', \'getString\', \'(\', \'"new"\', \',\', \'null\', \',\', \'"locality"\', \')\', \';\', \'ST\', \'=\', \'c\', \'.\', \'getString\', \'(\', \'"new"\', \',\', \'null\', \',\', \'"stateProvince"\', \')\', \';\', \'C\', \'=\', \'c\', \'.\', \'getString\', \'(\', \'"new"\', \',\', \'null\', \',\', \'"countryCode"\', \')\', \';\', \'}\']', 'private VAR_1 ( final TYPE_1 c ) { VAR_2 = c . METHOD_1 ( STRING_1 , null , STRING_2 , 0 ) ; VAR_3 = c . getString ( STRING_1 , null , STRING_3 ) ; VAR_4 = c . getString ( STRING_1 , null , STRING_4 ) ; VAR_5 = c . getString ( STRING_1 , null , STRING_5 ) ; VAR_6 = c . getString ( STRING_1 , null , STRING_6 ) ; VAR_7 = c . getString ( STRING_1 , null , STRING_7 ) ; }', '[\'TYPE_1: Config\', \'METHOD_1: getInt\', \'VAR_2: duration\', \'VAR_1: NewCertificateConfig\', \'VAR_6: ST\', \'VAR_7: C\', \'VAR_3: OU\', \'VAR_5: L\', \'VAR_4: O\', \'STRING_4: "organization"\', \'STRING_6: "stateProvince"\', \'STRING_3: "organizationalUnit"\', \'STRING_1: "new"\', \'STRING_5: "locality"\', \'STRING_7: "countryCode"\', \'STRING_2: "duration"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/authority/NewCertificateConfig.java', 6, '47:17', '54:17', 89, 7 ), ( 5, 241, 1, 'public UserCertificateModel getUserCertificateModel(String username) {\n    for (UserCertificateModel ucm : list) {\n    if (ucm.user.username.equalsIgnoreCase(username)) {\n    return ucm;\n    }\n    }\n    return null;\n    }', '[\'public\', \'UserCertificateModel\', \'getUserCertificateModel\', \'(\', \'String\', \'username\', \')\', \'{\', \'for\', \'(\', \'UserCertificateModel\', \'ucm\', \':\', \'list\', \')\', \'{\', \'if\', \'(\', \'ucm.user.username\', \'.\', \'equalsIgnoreCase\', \'(\', \'username\', \')\', \')\', \'{\', \'return\', \'ucm\', \';\', \'}\', \'}\', \'return\', \'null\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( String VAR_1 ) { for ( TYPE_1 VAR_2 : list ) { if ( VAR_3 . METHOD_2 ( VAR_1 ) ) { return VAR_2 ; } } return null ; }', '[\'TYPE_1: UserCertificateModel\', \'METHOD_1: getUserCertificateModel\', \'METHOD_2: equalsIgnoreCase\', \'VAR_2: ucm\', \'VAR_1: username\', \'VAR_3: ucm.user.username\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/authority/UserCertificateConfig.java', 3, '62:9', '69:9', 39, 5 ), ( 5, 242, 3, '@Override\n    public String getColumnName(int column) {\n    Columns col = Columns.values()[column];\n    switch (col) {\n    case SerialNumber:\n    return Translation.get("gb.serialNumber");\n    case Issued:\n    return Translation.get("gb.issued");\n    case Expires:\n    return Translation.get("gb.expires");\n    case Status:\n    return Translation.get("gb.status");\n    case Reason:\n    return Translation.get("gb.reason");\n    }\n    return "";\n    }', '[\'public\', \'String\', \'getColumnName\', \'(\', \'int\', \'column\', \')\', \'{\', \'Columns\', \'col\', \'=\', \'Columns\', \'.\', \'values\', \'(\', \')\', \'[\', \'column\', \']\', \';\', \'switch\', \'(\', \'col\', \')\', \'{\', \'case\', \'SerialNumber\', \':\', \'return\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.serialNumber"\', \')\', \';\', \'case\', \'Issued\', \':\', \'return\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.issued"\', \')\', \';\', \'case\', \'Expires\', \':\', \'return\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.expires"\', \')\', \';\', \'case\', \'Status\', \':\', \'return\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.status"\', \')\', \';\', \'case\', \'Reason\', \':\', \'return\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.reason"\', \')\', \';\', \'}\', \'return\', \'""\', \';\', \'}\']', 'public String METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = TYPE_1 . values ( ) [ VAR_1 ] ; switch ( VAR_2 ) { case VAR_3 : return TYPE_2 . get ( STRING_1 ) ; case VAR_4 : return TYPE_2 . get ( STRING_2 ) ; case VAR_5 : return TYPE_2 . get ( STRING_3 ) ; case VAR_6 : return TYPE_2 . get ( STRING_4 ) ; case VAR_7 : return TYPE_2 . get ( STRING_5 ) ; } return STRING_6 ; }', '[\'TYPE_2: Translation\', \'TYPE_1: Columns\', \'METHOD_1: getColumnName\', \'VAR_6: Status\', \'VAR_2: col\', \'VAR_3: SerialNumber\', \'VAR_4: Issued\', \'VAR_1: column\', \'VAR_5: Expires\', \'VAR_7: Reason\', \'STRING_6: ""\', \'STRING_3: "gb.expires"\', \'STRING_5: "gb.reason"\', \'STRING_1: "gb.serialNumber"\', \'STRING_2: "gb.issued"\', \'STRING_4: "gb.status"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/authority/CertificatesTableModel.java', 11, '63:9', '79:9', 86, 15 ), ( 5, 242, 4, 'public Class<?> getColumnClass(int columnIndex) {\n    Columns col = Columns.values()[columnIndex];\n    switch (col) {\n    case Status:\n    return CertificateStatus.class;\n    case Issued:\n    return Date.class;\n    case Expires:\n    return Date.class;\n    case SerialNumber:\n    return BigInteger.class;\n    default:\n    return String.class;\n    }\n    }', '[\'public\', \'Class\', \'<\', \'?\', \'>\', \'getColumnClass\', \'(\', \'int\', \'columnIndex\', \')\', \'{\', \'Columns\', \'col\', \'=\', \'Columns\', \'.\', \'values\', \'(\', \')\', \'[\', \'columnIndex\', \']\', \';\', \'switch\', \'(\', \'col\', \')\', \'{\', \'case\', \'Status\', \':\', \'return\', \'CertificateStatus.\', \'class\', \';\', \'case\', \'Issued\', \':\', \'return\', \'Date.\', \'class\', \';\', \'case\', \'Expires\', \':\', \'return\', \'Date.\', \'class\', \';\', \'case\', \'SerialNumber\', \':\', \'return\', \'BigInteger.\', \'class\', \';\', \'default\', \':\', \'return\', \'String.\', \'class\', \';\', \'}\', \'}\']', 'public Class < ? > METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = TYPE_1 . values ( ) [ VAR_1 ] ; switch ( VAR_2 ) { case VAR_3 : return VAR_4 class ; case VAR_5 : return VAR_6 class ; case VAR_7 : return VAR_6 class ; case VAR_8 : return VAR_9 class ; default : return VAR_10 class ; } }', '[\'TYPE_1: Columns\', \'METHOD_1: getColumnClass\', \'VAR_3: Status\', \'VAR_2: col\', \'VAR_10: String.\', \'VAR_9: BigInteger.\', \'VAR_8: SerialNumber\', \'VAR_5: Issued\', \'VAR_1: columnIndex\', \'VAR_4: CertificateStatus.\', \'VAR_7: Expires\', \'VAR_6: Date.\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/authority/CertificatesTableModel.java', 11, '88:9', '102:9', 67, 13 ), ( 5, 242, 5, '@Override\n    public boolean isCellEditable(int rowIndex, int columnIndex) {\n    Columns col = Columns.values()[columnIndex];\n    switch (col) {\n    default:\n    return false;\n    }\n    }', '[\'public\', \'boolean\', \'isCellEditable\', \'(\', \'int\', \'rowIndex\', \',\', \'int\', \'columnIndex\', \')\', \'{\', \'Columns\', \'col\', \'=\', \'Columns\', \'.\', \'values\', \'(\', \')\', \'[\', \'columnIndex\', \']\', \';\', \'switch\', \'(\', \'col\', \')\', \'{\', \'default\', \':\', \'return\', \'false\', \';\', \'}\', \'}\']', 'public boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { TYPE_1 VAR_3 = TYPE_1 . values ( ) [ VAR_2 ] ; switch ( VAR_3 ) { default : return false ; } }', '[\'TYPE_1: Columns\', \'METHOD_1: isCellEditable\', \'VAR_3: col\', \'VAR_1: rowIndex\', \'VAR_2: columnIndex\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/authority/CertificatesTableModel.java', 11, '104:9', '111:9', 35, 6 ), ( 5, 243, 2, 'public static JPanel newFieldPanel(String label, Component c, String trailingLabel) {\n    JLabel jlabel = new JLabel(label);\n    jlabel.setPreferredSize(new Dimension(Utils.LABEL_WIDTH, 20));\n    JPanel panel = new JPanel(new FlowLayout(FlowLayout.LEFT));\n    panel.add(jlabel);\n    panel.add(c);\n    if (!StringUtils.isEmpty(trailingLabel)) {\n    panel.add(new JLabel(trailingLabel));\n    }\n    return panel;\n    }', '[\'public\', \'static\', \'JPanel\', \'newFieldPanel\', \'(\', \'String\', \'label\', \',\', \'Component\', \'c\', \',\', \'String\', \'trailingLabel\', \')\', \'{\', \'JLabel\', \'jlabel\', \'=\', \'new\', \'JLabel\', \'(\', \'label\', \')\', \';\', \'jlabel\', \'.\', \'setPreferredSize\', \'(\', \'new\', \'Dimension\', \'(\', \'Utils.LABEL_WIDTH\', \',\', \'20\', \')\', \')\', \';\', \'JPanel\', \'panel\', \'=\', \'new\', \'JPanel\', \'(\', \'new\', \'FlowLayout\', \'(\', \'FlowLayout.LEFT\', \')\', \')\', \';\', \'panel\', \'.\', \'add\', \'(\', \'jlabel\', \')\', \';\', \'panel\', \'.\', \'add\', \'(\', \'c\', \')\', \';\', \'if\', \'(\', \'!\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'trailingLabel\', \')\', \')\', \'{\', \'panel\', \'.\', \'add\', \'(\', \'new\', \'JLabel\', \'(\', \'trailingLabel\', \')\', \')\', \';\', \'}\', \'return\', \'panel\', \';\', \'}\']', 'public static TYPE_1 METHOD_1 ( String VAR_1 , TYPE_2 c , String VAR_2 ) { TYPE_3 VAR_3 = new TYPE_3 ( VAR_1 ) ; VAR_3 . METHOD_2 ( new TYPE_4 ( VAR_4 , INT_1 ) ) ; TYPE_1 VAR_5 = new TYPE_1 ( new TYPE_5 ( VAR_6 ) ) ; VAR_5 . add ( VAR_3 ) ; VAR_5 . add ( c ) ; if ( ! StringUtils . isEmpty ( VAR_2 ) ) { VAR_5 . add ( new TYPE_3 ( VAR_2 ) ) ; } return VAR_5 ; }', '[\'TYPE_1: JPanel\', \'TYPE_5: FlowLayout\', \'TYPE_3: JLabel\', \'TYPE_4: Dimension\', \'TYPE_2: Component\', \'METHOD_1: newFieldPanel\', \'METHOD_2: setPreferredSize\', \'VAR_2: trailingLabel\', \'VAR_6: FlowLayout.LEFT\', \'VAR_4: Utils.LABEL_WIDTH\', \'VAR_1: label\', \'VAR_3: jlabel\', \'VAR_5: panel\', \'INT_1: 20\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/authority/Utils.java', 6, '57:9', '67:9', 95, 9 ), ( 5, 245, 0, '@Override\n    public void ancestorAdded(AncestorEvent e)\n    {\n    JComponent component = e.getComponent();\n    component.requestFocusInWindow();\n    if (removeListener)\n    component.removeAncestorListener( this );\n    }', '[\'public\', \'void\', \'ancestorAdded\', \'(\', \'AncestorEvent\', \'e\', \')\', \'{\', \'JComponent\', \'component\', \'=\', \'e\', \'.\', \'getComponent\', \'(\', \')\', \';\', \'component\', \'.\', \'requestFocusInWindow\', \'(\', \')\', \';\', \'if\', \'(\', \'removeListener\', \')\', \'component\', \'.\', \'removeAncestorListener\', \'(\', \'this\', \')\', \';\', \'}\']', 'public void METHOD_1 ( TYPE_1 e ) { TYPE_2 VAR_1 = e . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( ) ; if ( VAR_2 ) VAR_1 . METHOD_4 ( this ) ; }', '[\'TYPE_2: JComponent\', \'TYPE_1: AncestorEvent\', \'METHOD_3: requestFocusInWindow\', \'METHOD_4: removeAncestorListener\', \'METHOD_1: ancestorAdded\', \'METHOD_2: getComponent\', \'VAR_1: component\', \'VAR_2: removeListener\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/authority/RequestFocusListener.java', 5, '65:9', '73:9', 35, 6 ), ( 5, 246, 3, '@Override\n    public String getColumnName(int column) {\n    Columns col = Columns.values()[column];\n    switch (col) {\n    case Username:\n    return Translation.get("gb.username");\n    case DisplayName:\n    return Translation.get("gb.displayName");\n    case Expires:\n    return Translation.get("gb.expires");\n    case Status:\n    return Translation.get("gb.status");\n    }\n    return "";\n    }', '[\'public\', \'String\', \'getColumnName\', \'(\', \'int\', \'column\', \')\', \'{\', \'Columns\', \'col\', \'=\', \'Columns\', \'.\', \'values\', \'(\', \')\', \'[\', \'column\', \']\', \';\', \'switch\', \'(\', \'col\', \')\', \'{\', \'case\', \'Username\', \':\', \'return\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.username"\', \')\', \';\', \'case\', \'DisplayName\', \':\', \'return\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.displayName"\', \')\', \';\', \'case\', \'Expires\', \':\', \'return\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.expires"\', \')\', \';\', \'case\', \'Status\', \':\', \'return\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.status"\', \')\', \';\', \'}\', \'return\', \'""\', \';\', \'}\']', 'public String METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = TYPE_1 . values ( ) [ VAR_1 ] ; switch ( VAR_2 ) { case VAR_3 : return TYPE_2 . get ( STRING_1 ) ; case VAR_4 : return TYPE_2 . get ( STRING_2 ) ; case VAR_5 : return TYPE_2 . get ( STRING_3 ) ; case VAR_6 : return TYPE_2 . get ( STRING_4 ) ; } return STRING_5 ; }', '[\'TYPE_2: Translation\', \'TYPE_1: Columns\', \'METHOD_1: getColumnName\', \'VAR_6: Status\', \'VAR_2: col\', \'VAR_3: Username\', \'VAR_1: column\', \'VAR_4: DisplayName\', \'VAR_5: Expires\', \'STRING_5: ""\', \'STRING_3: "gb.expires"\', \'STRING_1: "gb.username"\', \'STRING_2: "gb.displayName"\', \'STRING_4: "gb.status"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/authority/UserCertificateTableModel.java', 10, '67:9', '81:9', 75, 13 ), ( 5, 246, 4, 'public Class<?> getColumnClass(int columnIndex) {\n    Columns col = Columns.values()[columnIndex];\n    switch (col) {\n    case Expires:\n    return Date.class;\n    case Status:\n    return CertificateStatus.class;\n    default:\n    return String.class;\n    }\n    }', '[\'public\', \'Class\', \'<\', \'?\', \'>\', \'getColumnClass\', \'(\', \'int\', \'columnIndex\', \')\', \'{\', \'Columns\', \'col\', \'=\', \'Columns\', \'.\', \'values\', \'(\', \')\', \'[\', \'columnIndex\', \']\', \';\', \'switch\', \'(\', \'col\', \')\', \'{\', \'case\', \'Expires\', \':\', \'return\', \'Date.\', \'class\', \';\', \'case\', \'Status\', \':\', \'return\', \'CertificateStatus.\', \'class\', \';\', \'default\', \':\', \'return\', \'String.\', \'class\', \';\', \'}\', \'}\']', 'public Class < ? > METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = TYPE_1 . values ( ) [ VAR_1 ] ; switch ( VAR_2 ) { case VAR_3 : return VAR_4 class ; case VAR_5 : return VAR_6 class ; default : return VAR_7 class ; } }', '[\'TYPE_1: Columns\', \'METHOD_1: getColumnClass\', \'VAR_5: Status\', \'VAR_2: col\', \'VAR_7: String.\', \'VAR_1: columnIndex\', \'VAR_6: CertificateStatus.\', \'VAR_3: Expires\', \'VAR_4: Date.\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/authority/UserCertificateTableModel.java', 10, '90:9', '100:9', 51, 9 ), ( 5, 246, 5, '@Override\n    public boolean isCellEditable(int rowIndex, int columnIndex) {\n    Columns col = Columns.values()[columnIndex];\n    switch (col) {\n    default:\n    return false;\n    }\n    }', '[\'public\', \'boolean\', \'isCellEditable\', \'(\', \'int\', \'rowIndex\', \',\', \'int\', \'columnIndex\', \')\', \'{\', \'Columns\', \'col\', \'=\', \'Columns\', \'.\', \'values\', \'(\', \')\', \'[\', \'columnIndex\', \']\', \';\', \'switch\', \'(\', \'col\', \')\', \'{\', \'default\', \':\', \'return\', \'false\', \';\', \'}\', \'}\']', 'public boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { TYPE_1 VAR_3 = TYPE_1 . values ( ) [ VAR_2 ] ; switch ( VAR_3 ) { default : return false ; } }', '[\'TYPE_1: Columns\', \'METHOD_1: isCellEditable\', \'VAR_3: col\', \'VAR_1: rowIndex\', \'VAR_2: columnIndex\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/authority/UserCertificateTableModel.java', 10, '102:9', '109:9', 35, 6 ), ( 5, 246, 6, '@Override\n    public Object getValueAt(int rowIndex, int columnIndex) {\n    UserCertificateModel model = list.get(rowIndex);\n    Columns col = Columns.values()[columnIndex];\n    switch (col) {\n    case Username:\n    return model.user.username;\n    case DisplayName:\n    return model.user.getDisplayName();\n    case Expires:\n    return model.expires;\n    case Status:\n    return model.getStatus();\n    }\n    return null;\n    }', '[\'public\', \'Object\', \'getValueAt\', \'(\', \'int\', \'rowIndex\', \',\', \'int\', \'columnIndex\', \')\', \'{\', \'UserCertificateModel\', \'model\', \'=\', \'list\', \'.\', \'get\', \'(\', \'rowIndex\', \')\', \';\', \'Columns\', \'col\', \'=\', \'Columns\', \'.\', \'values\', \'(\', \')\', \'[\', \'columnIndex\', \']\', \';\', \'switch\', \'(\', \'col\', \')\', \'{\', \'case\', \'Username\', \':\', \'return\', \'model.user.username\', \';\', \'case\', \'DisplayName\', \':\', \'return\', \'model.user\', \'.\', \'getDisplayName\', \'(\', \')\', \';\', \'case\', \'Expires\', \':\', \'return\', \'model.expires\', \';\', \'case\', \'Status\', \':\', \'return\', \'model\', \'.\', \'getStatus\', \'(\', \')\', \';\', \'}\', \'return\', \'null\', \';\', \'}\']', 'public Object METHOD_1 ( int VAR_1 , int VAR_2 ) { TYPE_1 model = list . get ( VAR_1 ) ; TYPE_2 VAR_3 = TYPE_2 . values ( ) [ VAR_2 ] ; switch ( VAR_3 ) { case VAR_4 : return VAR_5 ; case VAR_6 : return VAR_7 . METHOD_2 ( ) ; case VAR_8 : return VAR_9 ; case VAR_10 : return model . METHOD_3 ( ) ; } return null ; }', '[\'TYPE_1: UserCertificateModel\', \'TYPE_2: Columns\', \'METHOD_1: getValueAt\', \'METHOD_2: getDisplayName\', \'METHOD_3: getStatus\', \'VAR_10: Status\', \'VAR_3: col\', \'VAR_9: model.expires\', \'VAR_4: Username\', \'VAR_5: model.user.username\', \'VAR_7: model.user\', \'VAR_6: DisplayName\', \'VAR_1: rowIndex\', \'VAR_2: columnIndex\', \'VAR_8: Expires\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/authority/UserCertificateTableModel.java', 10, '111:9', '126:9', 82, 14 ), ( 5, 247, 0, 'public void actionPerformed(ActionEvent e) {\n    setEditable(false);\n    String username = ucm.user.username;\n    oidsPanel.updateUser(ucm);\n    saveUser(username, ucm);\n    }', '[\'public\', \'void\', \'actionPerformed\', \'(\', \'ActionEvent\', \'e\', \')\', \'{\', \'setEditable\', \'(\', \'false\', \')\', \';\', \'String\', \'username\', \'=\', \'ucm.user.username\', \';\', \'oidsPanel\', \'.\', \'updateUser\', \'(\', \'ucm\', \')\', \';\', \'saveUser\', \'(\', \'username\', \',\', \'ucm\', \')\', \';\', \'}\']', 'public void METHOD_1 ( TYPE_1 e ) { METHOD_2 ( false ) ; String VAR_1 = VAR_2 ; VAR_3 . METHOD_3 ( VAR_4 ) ; METHOD_4 ( VAR_1 , VAR_4 ) ; }', '[\'TYPE_1: ActionEvent\', \'METHOD_1: actionPerformed\', \'METHOD_2: setEditable\', \'METHOD_3: updateUser\', \'METHOD_4: saveUser\', \'VAR_3: oidsPanel\', \'VAR_4: ucm\', \'VAR_1: username\', \'VAR_2: ucm.user.username\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/authority/UserCertificatePanel.java', 13, '84:25', '89:25', 37, 5 ), ( 5, 247, 2, '@Override\n    public void valueChanged(ListSelectionEvent e) {\n    if (e.getValueIsAdjusting()) {\n    return;\n    }\n    boolean enable = false;\n    int row = table.getSelectedRow();\n    if (row > -1) {\n    int modelIndex = table.convertRowIndexToModel(row);\n    X509Certificate cert = tableModel.get(modelIndex);\n    enable = !ucm.isRevoked(cert.getSerialNumber());\n    }\n    revokeCertificateButton.setEnabled(enable);\n    }', '[\'public\', \'void\', \'valueChanged\', \'(\', \'ListSelectionEvent\', \'e\', \')\', \'{\', \'if\', \'(\', \'e\', \'.\', \'getValueIsAdjusting\', \'(\', \')\', \')\', \'{\', \'return\', \';\', \'}\', \'boolean\', \'enable\', \'=\', \'false\', \';\', \'int\', \'row\', \'=\', \'table\', \'.\', \'getSelectedRow\', \'(\', \')\', \';\', \'if\', \'(\', \'row\', \'>\', \'-\', \'1\', \')\', \'{\', \'int\', \'modelIndex\', \'=\', \'table\', \'.\', \'convertRowIndexToModel\', \'(\', \'row\', \')\', \';\', \'X509Certificate\', \'cert\', \'=\', \'tableModel\', \'.\', \'get\', \'(\', \'modelIndex\', \')\', \';\', \'enable\', \'=\', \'!\', \'ucm\', \'.\', \'isRevoked\', \'(\', \'cert\', \'.\', \'getSerialNumber\', \'(\', \')\', \')\', \';\', \'}\', \'revokeCertificateButton\', \'.\', \'setEnabled\', \'(\', \'enable\', \')\', \';\', \'}\']', 'public void METHOD_1 ( TYPE_1 e ) { if ( e . METHOD_2 ( ) ) { return ; } boolean VAR_1 = false ; int row = VAR_2 . METHOD_3 ( ) ; if ( row > - 1 ) { int VAR_3 = VAR_2 . METHOD_4 ( row ) ; TYPE_2 VAR_4 = VAR_5 . get ( VAR_3 ) ; VAR_1 = ! VAR_6 . METHOD_5 ( VAR_4 . METHOD_6 ( ) ) ; } VAR_7 . METHOD_7 ( VAR_1 ) ; }', '[\'TYPE_1: ListSelectionEvent\', \'TYPE_2: X509Certificate\', \'METHOD_4: convertRowIndexToModel\', \'METHOD_5: isRevoked\', \'METHOD_7: setEnabled\', \'METHOD_6: getSerialNumber\', \'METHOD_3: getSelectedRow\', \'METHOD_1: valueChanged\', \'METHOD_2: getValueIsAdjusting\', \'VAR_1: enable\', \'VAR_3: modelIndex\', \'VAR_5: tableModel\', \'VAR_4: cert\', \'VAR_2: table\', \'VAR_6: ucm\', \'VAR_7: revokeCertificateButton\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/authority/UserCertificatePanel.java', 13, '112:25', '125:25', 83, 11 ), ( 5, 247, 3, 'public void mouseClicked(MouseEvent e) {\n    if (e.getClickCount() == 2) {\n    int row = table.rowAtPoint(e.getPoint());\n    int modelIndex = table.convertRowIndexToModel(row);\n    X509Certificate cert = tableModel.get(modelIndex);\n    X509CertificateViewer viewer = new X509CertificateViewer(UserCertificatePanel.this.owner, cert);\n    viewer.setVisible(true);\n    }\n    }', '[\'public\', \'void\', \'mouseClicked\', \'(\', \'MouseEvent\', \'e\', \')\', \'{\', \'if\', \'(\', \'e\', \'.\', \'getClickCount\', \'(\', \')\', \'==\', \'2\', \')\', \'{\', \'int\', \'row\', \'=\', \'table\', \'.\', \'rowAtPoint\', \'(\', \'e\', \'.\', \'getPoint\', \'(\', \')\', \')\', \';\', \'int\', \'modelIndex\', \'=\', \'table\', \'.\', \'convertRowIndexToModel\', \'(\', \'row\', \')\', \';\', \'X509Certificate\', \'cert\', \'=\', \'tableModel\', \'.\', \'get\', \'(\', \'modelIndex\', \')\', \';\', \'X509CertificateViewer\', \'viewer\', \'=\', \'new\', \'X509CertificateViewer\', \'(\', \'UserCertificatePanel.\', \'this\', \'.\', \'owner\', \',\', \'cert\', \')\', \';\', \'viewer\', \'.\', \'setVisible\', \'(\', \'true\', \')\', \';\', \'}\', \'}\']', 'public void METHOD_1 ( TYPE_1 e ) { if ( e . METHOD_2 ( ) == 2 ) { int row = VAR_1 . METHOD_3 ( e . METHOD_4 ( ) ) ; int VAR_2 = VAR_1 . METHOD_5 ( row ) ; TYPE_2 VAR_3 = VAR_4 . get ( VAR_2 ) ; TYPE_3 VAR_5 = new TYPE_3 ( VAR_6 this . VAR_7 , VAR_3 ) ; VAR_5 . METHOD_6 ( true ) ; } }', '[\'TYPE_1: MouseEvent\', \'TYPE_3: X509CertificateViewer\', \'TYPE_2: X509Certificate\', \'METHOD_5: convertRowIndexToModel\', \'METHOD_6: setVisible\', \'METHOD_4: getPoint\', \'METHOD_1: mouseClicked\', \'METHOD_2: getClickCount\', \'METHOD_3: rowAtPoint\', \'VAR_7: owner\', \'VAR_5: viewer\', \'VAR_6: UserCertificatePanel.\', \'VAR_2: modelIndex\', \'VAR_4: tableModel\', \'VAR_3: cert\', \'VAR_1: table\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/authority/UserCertificatePanel.java', 13, '128:25', '136:25', 75, 7 ), ( 5, 247, 6, '@Override\n    protected void onSuccess() {\n    JOptionPane.showMessageDialog(UserCertificatePanel.this.owner, \n    									MessageFormat.format(Translation.get("gb.clientCertificateGenerated"), user.getDisplayName()),\n    									Translation.get("gb.newCertificate"), JOptionPane.INFORMATION_MESSAGE);\n    }', '[\'protected\', \'void\', \'onSuccess\', \'(\', \')\', \'{\', \'JOptionPane\', \'.\', \'showMessageDialog\', \'(\', \'UserCertificatePanel.\', \'this\', \'.\', \'owner\', \',\', \'MessageFormat\', \'.\', \'format\', \'(\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.clientCertificateGenerated"\', \')\', \',\', \'user\', \'.\', \'getDisplayName\', \'(\', \')\', \')\', \',\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.newCertificate"\', \')\', \',\', \'JOptionPane.INFORMATION_MESSAGE\', \')\', \';\', \'}\']', 'protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 this . VAR_2 , TYPE_2 . format ( TYPE_3 . get ( STRING_1 ) , VAR_3 . METHOD_3 ( ) ) , TYPE_3 . get ( STRING_2 ) , VAR_4 ) ; }', '[\'TYPE_3: Translation\', \'TYPE_2: MessageFormat\', \'TYPE_1: JOptionPane\', \'METHOD_2: showMessageDialog\', \'METHOD_3: getDisplayName\', \'METHOD_1: onSuccess\', \'VAR_2: owner\', \'VAR_1: UserCertificatePanel.\', \'VAR_4: JOptionPane.INFORMATION_MESSAGE\', \'VAR_3: user\', \'STRING_1: "gb.clientCertificateGenerated"\', \'STRING_2: "gb.newCertificate"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/authority/UserCertificatePanel.java', 13, '175:49', '180:49', 47, 5 ), ( 5, 247, 9, '@Override\n    protected void onSuccess() {\n    JOptionPane.showMessageDialog(UserCertificatePanel.this.owner, \n    										MessageFormat.format(Translation.get("gb.certificateRevoked"), cert.getSerialNumber(), cert.getIssuerDN().getName()),\n    										Translation.get("gb.revokeCertificate"), JOptionPane.INFORMATION_MESSAGE);\n    }', '[\'protected\', \'void\', \'onSuccess\', \'(\', \')\', \'{\', \'JOptionPane\', \'.\', \'showMessageDialog\', \'(\', \'UserCertificatePanel.\', \'this\', \'.\', \'owner\', \',\', \'MessageFormat\', \'.\', \'format\', \'(\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.certificateRevoked"\', \')\', \',\', \'cert\', \'.\', \'getSerialNumber\', \'(\', \')\', \',\', \'cert\', \'.\', \'getIssuerDN\', \'(\', \')\', \'.\', \'getName\', \'(\', \')\', \')\', \',\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.revokeCertificate"\', \')\', \',\', \'JOptionPane.INFORMATION_MESSAGE\', \')\', \';\', \'}\']', 'protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 this . VAR_2 , TYPE_2 . format ( TYPE_3 . get ( STRING_1 ) , VAR_3 . METHOD_3 ( ) , VAR_3 . METHOD_4 ( ) . getName ( ) ) , TYPE_3 . get ( STRING_2 ) , VAR_4 ) ; }', '[\'TYPE_3: Translation\', \'TYPE_2: MessageFormat\', \'TYPE_1: JOptionPane\', \'METHOD_3: getSerialNumber\', \'METHOD_2: showMessageDialog\', \'METHOD_4: getIssuerDN\', \'METHOD_1: onSuccess\', \'VAR_2: owner\', \'VAR_1: UserCertificatePanel.\', \'VAR_3: cert\', \'VAR_4: JOptionPane.INFORMATION_MESSAGE\', \'STRING_2: "gb.revokeCertificate"\', \'STRING_1: "gb.certificateRevoked"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/authority/UserCertificatePanel.java', 13, '246:57', '251:57', 55, 5 ), ( 5, 247, 10, 'public void setUserCertificateModel(UserCertificateModel ucm) {\n    this.ucm = ucm;\n    setEditable(false);\n    oidsPanel.setUserCertificateModel(ucm);\n    tableModel.setUserCertificateModel(ucm);\n    tableModel.fireTableDataChanged();\n    Utils.packColumns(table, Utils.MARGIN);\n    }', '[\'public\', \'void\', \'setUserCertificateModel\', \'(\', \'UserCertificateModel\', \'ucm\', \')\', \'{\', \'this\', \'.\', \'ucm\', \'=\', \'ucm\', \';\', \'setEditable\', \'(\', \'false\', \')\', \';\', \'oidsPanel\', \'.\', \'setUserCertificateModel\', \'(\', \'ucm\', \')\', \';\', \'tableModel\', \'.\', \'setUserCertificateModel\', \'(\', \'ucm\', \')\', \';\', \'tableModel\', \'.\', \'fireTableDataChanged\', \'(\', \')\', \';\', \'Utils\', \'.\', \'packColumns\', \'(\', \'table\', \',\', \'Utils.MARGIN\', \')\', \';\', \'}\']', 'public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( false ) ; VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_3 . METHOD_1 ( VAR_1 ) ; VAR_3 . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( VAR_4 , VAR_5 ) ; }', '[\'TYPE_2: Utils\', \'TYPE_1: UserCertificateModel\', \'METHOD_2: setEditable\', \'METHOD_1: setUserCertificateModel\', \'METHOD_3: fireTableDataChanged\', \'METHOD_4: packColumns\', \'VAR_2: oidsPanel\', \'VAR_3: tableModel\', \'VAR_5: Utils.MARGIN\', \'VAR_1: ucm\', \'VAR_4: table\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/authority/UserCertificatePanel.java', 13, '272:9', '280:9', 50, 7 ), ( 5, 247, 11, 'public void setEditable(boolean editable) {\n    oidsPanel.setEditable(editable);\n    editUserButton.setEnabled(!editable && ucm != null);\n    saveUserButton.setEnabled(editable && ucm != null);\n    newCertificateButton.setEnabled(ucm != null);\n    revokeCertificateButton.setEnabled(false);\n    }', '[\'public\', \'void\', \'setEditable\', \'(\', \'boolean\', \'editable\', \')\', \'{\', \'oidsPanel\', \'.\', \'setEditable\', \'(\', \'editable\', \')\', \';\', \'editUserButton\', \'.\', \'setEnabled\', \'(\', \'!\', \'editable\', \'&&\', \'ucm\', \'!=\', \'null\', \')\', \';\', \'saveUserButton\', \'.\', \'setEnabled\', \'(\', \'editable\', \'&&\', \'ucm\', \'!=\', \'null\', \')\', \';\', \'newCertificateButton\', \'.\', \'setEnabled\', \'(\', \'ucm\', \'!=\', \'null\', \')\', \';\', \'revokeCertificateButton\', \'.\', \'setEnabled\', \'(\', \'false\', \')\', \';\', \'}\']', 'public void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_3 . METHOD_2 ( ! VAR_1 && VAR_4 != null ) ; VAR_5 . METHOD_2 ( VAR_1 && VAR_4 != null ) ; VAR_6 . METHOD_2 ( VAR_4 != null ) ; VAR_7 . METHOD_2 ( false ) ; }', '[\'METHOD_2: setEnabled\', \'METHOD_1: setEditable\', \'VAR_2: oidsPanel\', \'VAR_5: saveUserButton\', \'VAR_1: editable\', \'VAR_3: editUserButton\', \'VAR_6: newCertificateButton\', \'VAR_4: ucm\', \'VAR_7: revokeCertificateButton\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/authority/UserCertificatePanel.java', 13, '282:9', '290:9', 55, 6 ), ( 5, 248, 1, 'public CertificateStatusRenderer() {\n    super();\n    unknownIcon = new ImageIcon(getClass().getResource("/bullet_white.png"));\n    revokedIcon = new ImageIcon(getClass().getResource("/bullet_delete.png"));\n    expiredIcon = new ImageIcon(getClass().getResource("/bullet_red.png"));\n    expiringIcon = new ImageIcon(getClass().getResource("/bullet_orange.png"));\n    okIcon = new ImageIcon(getClass().getResource("/bullet_green.png"));\n    }', '[\'public\', \'CertificateStatusRenderer\', \'(\', \')\', \'{\', \'super\', \'(\', \')\', \';\', \'unknownIcon\', \'=\', \'new\', \'ImageIcon\', \'(\', \'getClass\', \'(\', \')\', \'.\', \'getResource\', \'(\', \'"/bullet_white.png"\', \')\', \')\', \';\', \'revokedIcon\', \'=\', \'new\', \'ImageIcon\', \'(\', \'getClass\', \'(\', \')\', \'.\', \'getResource\', \'(\', \'"/bullet_delete.png"\', \')\', \')\', \';\', \'expiredIcon\', \'=\', \'new\', \'ImageIcon\', \'(\', \'getClass\', \'(\', \')\', \'.\', \'getResource\', \'(\', \'"/bullet_red.png"\', \')\', \')\', \';\', \'expiringIcon\', \'=\', \'new\', \'ImageIcon\', \'(\', \'getClass\', \'(\', \')\', \'.\', \'getResource\', \'(\', \'"/bullet_orange.png"\', \')\', \')\', \';\', \'okIcon\', \'=\', \'new\', \'ImageIcon\', \'(\', \'getClass\', \'(\', \')\', \'.\', \'getResource\', \'(\', \'"/bullet_green.png"\', \')\', \')\', \';\', \'}\']', 'public VAR_1 ( ) { super ( ) ; VAR_2 = new TYPE_1 ( getClass ( ) . METHOD_1 ( STRING_1 ) ) ; VAR_3 = new TYPE_1 ( getClass ( ) . METHOD_1 ( STRING_2 ) ) ; VAR_4 = new TYPE_1 ( getClass ( ) . METHOD_1 ( STRING_3 ) ) ; VAR_5 = new TYPE_1 ( getClass ( ) . METHOD_1 ( STRING_4 ) ) ; VAR_6 = new TYPE_1 ( getClass ( ) . METHOD_1 ( STRING_5 ) ) ; }', '[\'TYPE_1: ImageIcon\', \'METHOD_1: getResource\', \'VAR_1: CertificateStatusRenderer\', \'VAR_3: revokedIcon\', \'VAR_5: expiringIcon\', \'VAR_6: okIcon\', \'VAR_2: unknownIcon\', \'VAR_4: expiredIcon\', \'STRING_4: "/bullet_orange.png"\', \'STRING_2: "/bullet_delete.png"\', \'STRING_3: "/bullet_red.png"\', \'STRING_5: "/bullet_green.png"\', \'STRING_1: "/bullet_white.png"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/authority/CertificateStatusRenderer.java', 2, '43:9', '50:9', 78, 7 ), ( 5, 249, 1, 'public void run() {\n    try {\n    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\n    } catch (Exception e) {\n    }\n    GitblitAuthority authority = new GitblitAuthority();\n    authority.initialize(baseFolder);\n    authority.setLocationRelativeTo(null);\n    authority.setVisible(true);\n    }', '[\'public\', \'void\', \'run\', \'(\', \')\', \'{\', \'try\', \'{\', \'UIManager\', \'.\', \'setLookAndFeel\', \'(\', \'UIManager\', \'.\', \'getSystemLookAndFeelClassName\', \'(\', \')\', \')\', \';\', \'}\', \'catch\', \'(\', \'Exception\', \'e\', \')\', \'{\', \'}\', \'GitblitAuthority\', \'authority\', \'=\', \'new\', \'GitblitAuthority\', \'(\', \')\', \';\', \'authority\', \'.\', \'initialize\', \'(\', \'baseFolder\', \')\', \';\', \'authority\', \'.\', \'setLocationRelativeTo\', \'(\', \'null\', \')\', \';\', \'authority\', \'.\', \'setVisible\', \'(\', \'true\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; } catch ( Exception e ) { } TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_4 ( VAR_2 ) ; VAR_1 . METHOD_5 ( null ) ; VAR_1 . METHOD_6 ( true ) ; }', '[\'TYPE_1: UIManager\', \'TYPE_2: GitblitAuthority\', \'METHOD_6: setVisible\', \'METHOD_3: getSystemLookAndFeelClassName\', \'METHOD_2: setLookAndFeel\', \'METHOD_1: run\', \'METHOD_4: initialize\', \'METHOD_5: setLocationRelativeTo\', \'VAR_2: baseFolder\', \'VAR_1: authority\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/authority/GitblitAuthority.java', 41, '157:25', '166:25', 54, 8 ), ( 5, 249, 7, 'private StoredConfig getConfig() throws IOException, ConfigInvalidException {\n    File configFile = new File(folder, X509Utils.CA_CONFIG);\n    FileBasedConfig config = new FileBasedConfig(configFile, FS.detect());\n    config.load();\n    return config;\n    }', '[\'private\', \'StoredConfig\', \'getConfig\', \'(\', \')\', \'throws\', \'IOException\', \',\', \'ConfigInvalidException\', \'{\', \'File\', \'configFile\', \'=\', \'new\', \'File\', \'(\', \'folder\', \',\', \'X509Utils.CA_CONFIG\', \')\', \';\', \'FileBasedConfig\', \'config\', \'=\', \'new\', \'FileBasedConfig\', \'(\', \'configFile\', \',\', \'FS\', \'.\', \'detect\', \'(\', \')\', \')\', \';\', \'config\', \'.\', \'load\', \'(\', \')\', \';\', \'return\', \'config\', \';\', \'}\']', 'private TYPE_1 METHOD_1 ( ) throws IOException , TYPE_2 { File VAR_1 = new File ( VAR_2 , VAR_3 ) ; TYPE_3 config = new TYPE_3 ( VAR_1 , TYPE_4 . METHOD_2 ( ) ) ; config . METHOD_3 ( ) ; return config ; }', '[\'TYPE_1: StoredConfig\', \'TYPE_2: ConfigInvalidException\', \'TYPE_3: FileBasedConfig\', \'TYPE_4: FS\', \'METHOD_3: load\', \'METHOD_2: detect\', \'METHOD_1: getConfig\', \'VAR_2: folder\', \'VAR_1: configFile\', \'VAR_3: X509Utils.CA_CONFIG\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/authority/GitblitAuthority.java', 41, '247:9', '252:9', 45, 5 ), ( 5, 249, 16, '@Override\n    public Date getDefaultExpiration() {\n    Calendar c = Calendar.getInstance();\n    c.add(Calendar.DATE, defaultDuration);\n    c.set(Calendar.HOUR_OF_DAY, 0);\n    c.set(Calendar.MINUTE, 0);\n    c.set(Calendar.SECOND, 0);\n    c.set(Calendar.MILLISECOND, 0);\n    return c.getTime();\n    }', '[\'public\', \'Date\', \'getDefaultExpiration\', \'(\', \')\', \'{\', \'Calendar\', \'c\', \'=\', \'Calendar\', \'.\', \'getInstance\', \'(\', \')\', \';\', \'c\', \'.\', \'add\', \'(\', \'Calendar.DATE\', \',\', \'defaultDuration\', \')\', \';\', \'c\', \'.\', \'set\', \'(\', \'Calendar.HOUR_OF_DAY\', \',\', \'0\', \')\', \';\', \'c\', \'.\', \'set\', \'(\', \'Calendar.MINUTE\', \',\', \'0\', \')\', \';\', \'c\', \'.\', \'set\', \'(\', \'Calendar.SECOND\', \',\', \'0\', \')\', \';\', \'c\', \'.\', \'set\', \'(\', \'Calendar.MILLISECOND\', \',\', \'0\', \')\', \';\', \'return\', \'c\', \'.\', \'getTime\', \'(\', \')\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( ) { TYPE_2 c = TYPE_2 . getInstance ( ) ; c . add ( VAR_1 , VAR_2 ) ; c . set ( VAR_3 , 0 ) ; c . set ( VAR_4 , 0 ) ; c . set ( VAR_5 , 0 ) ; c . set ( VAR_6 , 0 ) ; return c . METHOD_2 ( ) ; }', '[\'TYPE_2: Calendar\', \'TYPE_1: Date\', \'METHOD_2: getTime\', \'METHOD_1: getDefaultExpiration\', \'VAR_6: Calendar.MILLISECOND\', \'VAR_1: Calendar.DATE\', \'VAR_2: defaultDuration\', \'VAR_3: Calendar.HOUR_OF_DAY\', \'VAR_4: Calendar.MINUTE\', \'VAR_5: Calendar.SECOND\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/authority/GitblitAuthority.java', 41, '411:25', '420:25', 77, 9 ), ( 5, 249, 20, '@Override\n    public void valueChanged(ListSelectionEvent e) {\n    if (e.getValueIsAdjusting()) {\n    return;\n    }\n    int row = table.getSelectedRow();\n    if (row < 0) {\n    return;\n    }\n    int modelIndex = table.convertRowIndexToModel(row);\n    UserCertificateModel ucm = tableModel.get(modelIndex);\n    if (ucm.certs == null) {\n    ucm.certs = findCerts(folder, ucm.user.username);\n    }\n    userCertificatePanel.setUserCertificateModel(ucm);\n    }', '[\'public\', \'void\', \'valueChanged\', \'(\', \'ListSelectionEvent\', \'e\', \')\', \'{\', \'if\', \'(\', \'e\', \'.\', \'getValueIsAdjusting\', \'(\', \')\', \')\', \'{\', \'return\', \';\', \'}\', \'int\', \'row\', \'=\', \'table\', \'.\', \'getSelectedRow\', \'(\', \')\', \';\', \'if\', \'(\', \'row\', \'<\', \'0\', \')\', \'{\', \'return\', \';\', \'}\', \'int\', \'modelIndex\', \'=\', \'table\', \'.\', \'convertRowIndexToModel\', \'(\', \'row\', \')\', \';\', \'UserCertificateModel\', \'ucm\', \'=\', \'tableModel\', \'.\', \'get\', \'(\', \'modelIndex\', \')\', \';\', \'if\', \'(\', \'ucm.certs\', \'==\', \'null\', \')\', \'{\', \'ucm.certs\', \'=\', \'findCerts\', \'(\', \'folder\', \',\', \'ucm.user.username\', \')\', \';\', \'}\', \'userCertificatePanel\', \'.\', \'setUserCertificateModel\', \'(\', \'ucm\', \')\', \';\', \'}\']', 'public void METHOD_1 ( TYPE_1 e ) { if ( e . METHOD_2 ( ) ) { return ; } int row = VAR_1 . METHOD_3 ( ) ; if ( row < 0 ) { return ; } int VAR_2 = VAR_1 . METHOD_4 ( row ) ; TYPE_2 VAR_3 = VAR_4 . get ( VAR_2 ) ; if ( VAR_5 == null ) { VAR_5 = METHOD_5 ( VAR_6 , VAR_7 ) ; } VAR_8 . METHOD_6 ( VAR_3 ) ; }', '[\'TYPE_2: UserCertificateModel\', \'TYPE_1: ListSelectionEvent\', \'METHOD_4: convertRowIndexToModel\', \'METHOD_3: getSelectedRow\', \'METHOD_1: valueChanged\', \'METHOD_5: findCerts\', \'METHOD_6: setUserCertificateModel\', \'METHOD_2: getValueIsAdjusting\', \'VAR_8: userCertificatePanel\', \'VAR_5: ucm.certs\', \'VAR_6: folder\', \'VAR_2: modelIndex\', \'VAR_4: tableModel\', \'VAR_1: table\', \'VAR_3: ucm\', \'VAR_7: ucm.user.username\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/authority/GitblitAuthority.java', 41, '522:25', '537:25', 90, 12 ), ( 5, 249, 23, 'public boolean verify(JComponent comp) {\n    boolean returnValue;\n    JTextField textField = (JTextField) comp;\n    try {\n    Integer.parseInt(textField.getText());\n    returnValue = true;\n    } catch (NumberFormatException e) {\n    returnValue = false;\n    }\n    return returnValue;\n    }', '[\'public\', \'boolean\', \'verify\', \'(\', \'JComponent\', \'comp\', \')\', \'{\', \'boolean\', \'returnValue\', \';\', \'JTextField\', \'textField\', \'=\', \'(\', \'JTextField\', \')\', \'comp\', \';\', \'try\', \'{\', \'Integer\', \'.\', \'parseInt\', \'(\', \'textField\', \'.\', \'getText\', \'(\', \')\', \')\', \';\', \'returnValue\', \'=\', \'true\', \';\', \'}\', \'catch\', \'(\', \'NumberFormatException\', \'e\', \')\', \'{\', \'returnValue\', \'=\', \'false\', \';\', \'}\', \'return\', \'returnValue\', \';\', \'}\']', 'public boolean METHOD_1 ( TYPE_1 VAR_1 ) { boolean VAR_2 ; TYPE_2 VAR_3 = ( TYPE_2 ) VAR_1 ; try { Integer . METHOD_2 ( VAR_3 . METHOD_3 ( ) ) ; VAR_2 = true ; } catch ( TYPE_3 e ) { VAR_2 = false ; } return VAR_2 ; }', '[\'TYPE_1: JComponent\', \'TYPE_3: NumberFormatException\', \'TYPE_2: JTextField\', \'METHOD_2: parseInt\', \'METHOD_3: getText\', \'METHOD_1: verify\', \'VAR_1: comp\', \'VAR_2: returnValue\', \'VAR_3: textField\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/authority/GitblitAuthority.java', 41, '573:41', '583:41', 51, 9 ), ( 5, 249, 26, '@Override\n    protected void onSuccess() {\n    if (serveCertificate) {\n    JOptionPane.showMessageDialog(GitblitAuthority.this, \n    									MessageFormat.format(Translation.get("gb.sslCertificateGeneratedRestart"), hostname),\n    									Translation.get("gb.newSSLCertificate"), JOptionPane.INFORMATION_MESSAGE);\n    } else {\n    JOptionPane.showMessageDialog(GitblitAuthority.this, \n    								MessageFormat.format(Translation.get("gb.sslCertificateGenerated"), hostname),\n    								Translation.get("gb.newSSLCertificate"), JOptionPane.INFORMATION_MESSAGE);\n    }\n    }', '[\'protected\', \'void\', \'onSuccess\', \'(\', \')\', \'{\', \'if\', \'(\', \'serveCertificate\', \')\', \'{\', \'JOptionPane\', \'.\', \'showMessageDialog\', \'(\', \'GitblitAuthority.\', \'this\', \',\', \'MessageFormat\', \'.\', \'format\', \'(\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.sslCertificateGeneratedRestart"\', \')\', \',\', \'hostname\', \')\', \',\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.newSSLCertificate"\', \')\', \',\', \'JOptionPane.INFORMATION_MESSAGE\', \')\', \';\', \'}\', \'else\', \'{\', \'JOptionPane\', \'.\', \'showMessageDialog\', \'(\', \'GitblitAuthority.\', \'this\', \',\', \'MessageFormat\', \'.\', \'format\', \'(\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.sslCertificateGenerated"\', \')\', \',\', \'hostname\', \')\', \',\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.newSSLCertificate"\', \')\', \',\', \'JOptionPane.INFORMATION_MESSAGE\', \')\', \';\', \'}\', \'}\']', 'protected void METHOD_1 ( ) { if ( VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 this , TYPE_2 . format ( TYPE_3 . get ( STRING_1 ) , VAR_3 ) , TYPE_3 . get ( STRING_2 ) , VAR_4 ) ; } else { TYPE_1 . METHOD_2 ( VAR_2 this , TYPE_2 . format ( TYPE_3 . get ( STRING_3 ) , VAR_3 ) , TYPE_3 . get ( STRING_2 ) , VAR_4 ) ; } }', '[\'TYPE_3: Translation\', \'TYPE_2: MessageFormat\', \'TYPE_1: JOptionPane\', \'METHOD_2: showMessageDialog\', \'METHOD_1: onSuccess\', \'VAR_3: hostname\', \'VAR_2: GitblitAuthority.\', \'VAR_1: serveCertificate\', \'VAR_4: JOptionPane.INFORMATION_MESSAGE\', \'STRING_1: "gb.sslCertificateGeneratedRestart"\', \'STRING_3: "gb.sslCertificateGenerated"\', \'STRING_2: "gb.newSSLCertificate"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/authority/GitblitAuthority.java', 41, '674:41', '685:41', 85, 10 ), ( 5, 249, 28, '@Override\n    protected Boolean doRequest() throws IOException {\n    X509Metadata metadata = new X509Metadata(ucm.user.username, "whocares");\n    metadata.serverHostname = gitblitSettings.getString(Keys.web.siteName, Constants.NAME);\n    if (StringUtils.isEmpty(metadata.serverHostname)) {\n    metadata.serverHostname = Constants.NAME;\n    }\n    metadata.userDisplayname = ucm.user.getDisplayName();\n    return sendEmail(ucm.user, metadata, zip);\n    }', '[\'protected\', \'Boolean\', \'doRequest\', \'(\', \')\', \'throws\', \'IOException\', \'{\', \'X509Metadata\', \'metadata\', \'=\', \'new\', \'X509Metadata\', \'(\', \'ucm.user.username\', \',\', \'"whocares"\', \')\', \';\', \'metadata.serverHostname\', \'=\', \'gitblitSettings\', \'.\', \'getString\', \'(\', \'Keys.web.siteName\', \',\', \'Constants.NAME\', \')\', \';\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'metadata.serverHostname\', \')\', \')\', \'{\', \'metadata.serverHostname\', \'=\', \'Constants.NAME\', \';\', \'}\', \'metadata.userDisplayname\', \'=\', \'ucm.user\', \'.\', \'getDisplayName\', \'(\', \')\', \';\', \'return\', \'sendEmail\', \'(\', \'ucm.user\', \',\', \'metadata\', \',\', \'zip\', \')\', \';\', \'}\']', 'protected Boolean METHOD_1 ( ) throws IOException { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , STRING_1 ) ; VAR_3 = VAR_4 . getString ( VAR_5 , VAR_6 ) ; if ( StringUtils . isEmpty ( VAR_3 ) ) { VAR_3 = VAR_6 ; } VAR_7 = VAR_8 . METHOD_2 ( ) ; return METHOD_3 ( VAR_8 , VAR_1 , VAR_9 ) ; }', '[\'TYPE_1: X509Metadata\', \'METHOD_1: doRequest\', \'METHOD_3: sendEmail\', \'METHOD_2: getDisplayName\', \'VAR_5: Keys.web.siteName\', \'VAR_9: zip\', \'VAR_1: metadata\', \'VAR_4: gitblitSettings\', \'VAR_7: metadata.userDisplayname\', \'VAR_6: Constants.NAME\', \'VAR_8: ucm.user\', \'VAR_3: metadata.serverHostname\', \'VAR_2: ucm.user.username\', \'STRING_1: "whocares"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/authority/GitblitAuthority.java', 41, '713:41', '722:41', 88, 8 ), ( 5, 249, 35, 'public boolean include(Entry<? extends UserCertificateTableModel, ? extends Object> entry) {\n    for (int i = entry.getValueCount() - 1; i >= 0; i--) {\n    if (entry.getStringValue(i).toLowerCase().contains(fragment.toLowerCase())) {\n    return true;\n    }\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'include\', \'(\', \'Entry\', \'<\', \'?\', \'extends\', \'UserCertificateTableModel\', \',\', \'?\', \'extends\', \'Object\', \'>\', \'entry\', \')\', \'{\', \'for\', \'(\', \'int\', \'i\', \'=\', \'entry\', \'.\', \'getValueCount\', \'(\', \')\', \'-\', \'1\', \';\', \'i\', \'>=\', \'0\', \';\', \'i\', \'--\', \')\', \'{\', \'if\', \'(\', \'entry\', \'.\', \'getStringValue\', \'(\', \'i\', \')\', \'.\', \'toLowerCase\', \'(\', \')\', \'.\', \'contains\', \'(\', \'fragment\', \'.\', \'toLowerCase\', \'(\', \')\', \')\', \')\', \'{\', \'return\', \'true\', \';\', \'}\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean METHOD_1 ( Entry < ? extends TYPE_1 , ? extends Object > entry ) { for ( int i = entry . METHOD_2 ( ) - 1 ; i >= 0 ; i -- ) { if ( entry . METHOD_3 ( i ) . METHOD_4 ( ) . contains ( VAR_1 . METHOD_4 ( ) ) ) { return true ; } } return false ; }', '[\'TYPE_1: UserCertificateTableModel\', \'METHOD_1: include\', \'METHOD_3: getStringValue\', \'METHOD_4: toLowerCase\', \'METHOD_2: getValueCount\', \'VAR_1: fragment\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/authority/GitblitAuthority.java', 41, '814:25', '821:25', 67, 5 ), ( 5, 251, 3, 'private boolean validateInputs() {\n    if (getExpiration().getTime() < System.currentTimeMillis()) {\n    // expires before now\n    JOptionPane.showMessageDialog(this, Translation.get("gb.invalidExpirationDate"),\n    					Translation.get("gb.error"), JOptionPane.ERROR_MESSAGE);\n    return false;\n    }\n    if (StringUtils.isEmpty(getHostname())) {\n    // must have hostname\n    JOptionPane.showMessageDialog(this, Translation.get("gb.hostnameRequired"),\n    					Translation.get("gb.error"), JOptionPane.ERROR_MESSAGE);\n    return false;\n    }\n    return true;\n    }', '[\'private\', \'boolean\', \'validateInputs\', \'(\', \')\', \'{\', \'if\', \'(\', \'getExpiration\', \'(\', \')\', \'.\', \'getTime\', \'(\', \')\', \'<\', \'System\', \'.\', \'currentTimeMillis\', \'(\', \')\', \')\', \'{\', \'JOptionPane\', \'.\', \'showMessageDialog\', \'(\', \'this\', \',\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.invalidExpirationDate"\', \')\', \',\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.error"\', \')\', \',\', \'JOptionPane.ERROR_MESSAGE\', \')\', \';\', \'return\', \'false\', \';\', \'}\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'getHostname\', \'(\', \')\', \')\', \')\', \'{\', \'JOptionPane\', \'.\', \'showMessageDialog\', \'(\', \'this\', \',\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.hostnameRequired"\', \')\', \',\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.error"\', \')\', \',\', \'JOptionPane.ERROR_MESSAGE\', \')\', \';\', \'return\', \'false\', \';\', \'}\', \'return\', \'true\', \';\', \'}\']', 'private boolean METHOD_1 ( ) { if ( METHOD_2 ( ) . METHOD_3 ( ) < System . METHOD_4 ( ) ) { TYPE_1 . METHOD_5 ( this , TYPE_2 . get ( STRING_1 ) , TYPE_2 . get ( STRING_2 ) , VAR_1 ) ; return false ; } if ( StringUtils . isEmpty ( METHOD_6 ( ) ) ) { TYPE_1 . METHOD_5 ( this , TYPE_2 . get ( STRING_3 ) , TYPE_2 . get ( STRING_2 ) , VAR_1 ) ; return false ; } return true ; }', '[\'TYPE_2: Translation\', \'TYPE_1: JOptionPane\', \'METHOD_1: validateInputs\', \'METHOD_6: getHostname\', \'METHOD_2: getExpiration\', \'METHOD_5: showMessageDialog\', \'METHOD_3: getTime\', \'METHOD_4: currentTimeMillis\', \'VAR_1: JOptionPane.ERROR_MESSAGE\', \'STRING_3: "gb.hostnameRequired"\', \'STRING_2: "gb.error"\', \'STRING_1: "gb.invalidExpirationDate"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/authority/NewSSLCertificateDialog.java', 9, '109:9', '123:9', 94, 10 ), ( 5, 252, 3, 'private String fingerprint(String value) {\n    value = value.toUpperCase();\n    StringBuilder sb = new StringBuilder();\n    for (int i = 0; i < value.length(); i += 2) {\n    sb.append(value.charAt(i));\n    sb.append(value.charAt(i + 1));\n    sb.append(\':\');\n    }\n    sb.setLength(sb.length() - 1);\n    return sb.toString();\n    }', '[\'private\', \'String\', \'fingerprint\', \'(\', \'String\', \'value\', \')\', \'{\', \'value\', \'=\', \'value\', \'.\', \'toUpperCase\', \'(\', \')\', \';\', \'StringBuilder\', \'sb\', \'=\', \'new\', \'StringBuilder\', \'(\', \')\', \';\', \'for\', \'(\', \'int\', \'i\', \'=\', \'0\', \';\', \'i\', \'<\', \'value\', \'.\', \'length\', \'(\', \')\', \';\', \'i\', \'+=\', \'2\', \')\', \'{\', \'sb\', \'.\', \'append\', \'(\', \'value\', \'.\', \'charAt\', \'(\', \'i\', \')\', \')\', \';\', \'sb\', \'.\', \'append\', \'(\', \'value\', \'.\', \'charAt\', \'(\', \'i\', \'+\', \'1\', \')\', \')\', \';\', \'sb\', \'.\', \'append\', \'(\', "\':\'", \')\', \';\', \'}\', \'sb\', \'.\', \'setLength\', \'(\', \'sb\', \'.\', \'length\', \'(\', \')\', \'-\', \'1\', \')\', \';\', \'return\', \'sb\', \'.\', \'toString\', \'(\', \')\', \';\', \'}\']', 'private String METHOD_1 ( String value ) { value = value . METHOD_2 ( ) ; StringBuilder sb = new StringBuilder ( ) ; for ( int i = 0 ; i < value . length ( ) ; i += 2 ) { sb . append ( value . METHOD_3 ( i ) ) ; sb . append ( value . METHOD_3 ( i + 1 ) ) ; sb . append ( CHAR_1 ) ; } sb . METHOD_4 ( sb . length ( ) - 1 ) ; return sb . toString ( ) ; }', '[\'METHOD_4: setLength\', \'METHOD_1: fingerprint\', \'METHOD_2: toUpperCase\', \'METHOD_3: charAt\', "CHAR_1: \':\'"]', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/authority/X509CertificateViewer.java', 5, '118:9', '128:9', 94, 9 ), ( 5, 253, 1, 'public void setEditable(boolean editable) {\n    displayname.setEditable(editable);\n    //		username.setEditable(editable);\n    emailAddress.setEditable(editable);\n    organizationalUnit.setEditable(editable);\n    organization.setEditable(editable);\n    locality.setEditable(editable);\n    stateProvince.setEditable(editable);\n    countryCode.setEditable(editable);\n    }', '[\'public\', \'void\', \'setEditable\', \'(\', \'boolean\', \'editable\', \')\', \'{\', \'displayname\', \'.\', \'setEditable\', \'(\', \'editable\', \')\', \';\', \'emailAddress\', \'.\', \'setEditable\', \'(\', \'editable\', \')\', \';\', \'organizationalUnit\', \'.\', \'setEditable\', \'(\', \'editable\', \')\', \';\', \'organization\', \'.\', \'setEditable\', \'(\', \'editable\', \')\', \';\', \'locality\', \'.\', \'setEditable\', \'(\', \'editable\', \')\', \';\', \'stateProvince\', \'.\', \'setEditable\', \'(\', \'editable\', \')\', \';\', \'countryCode\', \'.\', \'setEditable\', \'(\', \'editable\', \')\', \';\', \'}\']', 'public void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_3 . METHOD_1 ( VAR_1 ) ; VAR_4 . METHOD_1 ( VAR_1 ) ; VAR_5 . METHOD_1 ( VAR_1 ) ; VAR_6 . METHOD_1 ( VAR_1 ) ; VAR_7 . METHOD_1 ( VAR_1 ) ; VAR_8 . METHOD_1 ( VAR_1 ) ; }', '[\'METHOD_1: setEditable\', \'VAR_3: emailAddress\', \'VAR_1: editable\', \'VAR_8: countryCode\', \'VAR_2: displayname\', \'VAR_5: organization\', \'VAR_6: locality\', \'VAR_7: stateProvince\', \'VAR_4: organizationalUnit\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/authority/UserOidsPanel.java', 4, '74:9', '83:9', 59, 8 ), ( 5, 253, 2, 'protected void updateUser(UserCertificateModel ucm) {\n    ucm.user.displayName = displayname.getText();\n    ucm.user.username = username.getText();\n    ucm.user.emailAddress = emailAddress.getText();\n    ucm.user.organizationalUnit = organizationalUnit.getText();\n    ucm.user.organization = organization.getText();\n    ucm.user.locality = locality.getText();\n    ucm.user.stateProvince = stateProvince.getText();\n    ucm.user.countryCode = countryCode.getText();\n    }', '[\'protected\', \'void\', \'updateUser\', \'(\', \'UserCertificateModel\', \'ucm\', \')\', \'{\', \'ucm.user.displayName\', \'=\', \'displayname\', \'.\', \'getText\', \'(\', \')\', \';\', \'ucm.user.username\', \'=\', \'username\', \'.\', \'getText\', \'(\', \')\', \';\', \'ucm.user.emailAddress\', \'=\', \'emailAddress\', \'.\', \'getText\', \'(\', \')\', \';\', \'ucm.user.organizationalUnit\', \'=\', \'organizationalUnit\', \'.\', \'getText\', \'(\', \')\', \';\', \'ucm.user.organization\', \'=\', \'organization\', \'.\', \'getText\', \'(\', \')\', \';\', \'ucm.user.locality\', \'=\', \'locality\', \'.\', \'getText\', \'(\', \')\', \';\', \'ucm.user.stateProvince\', \'=\', \'stateProvince\', \'.\', \'getText\', \'(\', \')\', \';\', \'ucm.user.countryCode\', \'=\', \'countryCode\', \'.\', \'getText\', \'(\', \')\', \';\', \'}\']', 'protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 = VAR_3 . METHOD_2 ( ) ; VAR_4 = VAR_5 . METHOD_2 ( ) ; VAR_6 = VAR_7 . METHOD_2 ( ) ; VAR_8 = VAR_9 . METHOD_2 ( ) ; VAR_10 = VAR_11 . METHOD_2 ( ) ; VAR_12 = VAR_13 . METHOD_2 ( ) ; VAR_14 = VAR_15 . METHOD_2 ( ) ; VAR_16 = VAR_17 . METHOD_2 ( ) ; }', '[\'TYPE_1: UserCertificateModel\', \'METHOD_2: getText\', \'METHOD_1: updateUser\', \'VAR_8: ucm.user.organizationalUnit\', \'VAR_14: ucm.user.stateProvince\', \'VAR_13: locality\', \'VAR_10: ucm.user.organization\', \'VAR_15: stateProvince\', \'VAR_4: ucm.user.username\', \'VAR_12: ucm.user.locality\', \'VAR_7: emailAddress\', \'VAR_2: ucm.user.displayName\', \'VAR_17: countryCode\', \'VAR_3: displayname\', \'VAR_11: organization\', \'VAR_6: ucm.user.emailAddress\', \'VAR_16: ucm.user.countryCode\', \'VAR_1: ucm\', \'VAR_5: username\', \'VAR_9: organizationalUnit\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/authority/UserOidsPanel.java', 4, '85:9', '94:9', 97, 9 ), ( 5, 254, 4, 'public boolean isRevoked(String serial) {\n    if (ArrayUtils.isEmpty(revoked)) {\n    return false;\n    }\n    String sn = serial + ":";\n    for (String s : revoked) {\n    if (s.startsWith(sn)) {\n    return true;\n    }\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'isRevoked\', \'(\', \'String\', \'serial\', \')\', \'{\', \'if\', \'(\', \'ArrayUtils\', \'.\', \'isEmpty\', \'(\', \'revoked\', \')\', \')\', \'{\', \'return\', \'false\', \';\', \'}\', \'String\', \'sn\', \'=\', \'serial\', \'+\', \'":"\', \';\', \'for\', \'(\', \'String\', \'s\', \':\', \'revoked\', \')\', \'{\', \'if\', \'(\', \'s\', \'.\', \'startsWith\', \'(\', \'sn\', \')\', \')\', \'{\', \'return\', \'true\', \';\', \'}\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean METHOD_1 ( String VAR_1 ) { if ( TYPE_1 . isEmpty ( VAR_2 ) ) { return false ; } String VAR_3 = VAR_1 + STRING_1 ; for ( String s : VAR_2 ) { if ( s . startsWith ( VAR_3 ) ) { return true ; } } return false ; }', '[\'TYPE_1: ArrayUtils\', \'METHOD_1: isRevoked\', \'VAR_1: serial\', \'VAR_3: sn\', \'VAR_2: revoked\', \'STRING_1: ":"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/authority/UserCertificateModel.java', 12, '90:17', '101:17', 56, 8 ), ( 5, 254, 5, 'public RevocationReason getRevocationReason(BigInteger serial) {\n    try {\n    String sn = serial + ":";\n    for (String s : revoked) {\n    if (s.startsWith(sn)) {\n    String r = s.substring(sn.length());\n    int i = Integer.parseInt(r);\n    return RevocationReason.values()[i];\n    }\n    }\n    } catch (Exception e) {\n    }\n    return RevocationReason.unspecified;\n    }', '[\'public\', \'RevocationReason\', \'getRevocationReason\', \'(\', \'BigInteger\', \'serial\', \')\', \'{\', \'try\', \'{\', \'String\', \'sn\', \'=\', \'serial\', \'+\', \'":"\', \';\', \'for\', \'(\', \'String\', \'s\', \':\', \'revoked\', \')\', \'{\', \'if\', \'(\', \'s\', \'.\', \'startsWith\', \'(\', \'sn\', \')\', \')\', \'{\', \'String\', \'r\', \'=\', \'s\', \'.\', \'substring\', \'(\', \'sn\', \'.\', \'length\', \'(\', \')\', \')\', \';\', \'int\', \'i\', \'=\', \'Integer\', \'.\', \'parseInt\', \'(\', \'r\', \')\', \';\', \'return\', \'RevocationReason\', \'.\', \'values\', \'(\', \')\', \'[\', \'i\', \']\', \';\', \'}\', \'}\', \'}\', \'catch\', \'(\', \'Exception\', \'e\', \')\', \'{\', \'}\', \'return\', \'RevocationReason.unspecified\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { try { String VAR_2 = VAR_1 + STRING_1 ; for ( String s : VAR_3 ) { if ( s . startsWith ( VAR_2 ) ) { String r = s . substring ( VAR_2 . length ( ) ) ; int i = Integer . METHOD_2 ( r ) ; return TYPE_1 . values ( ) [ i ] ; } } } catch ( Exception e ) { } return VAR_4 ; }', '[\'TYPE_1: RevocationReason\', \'TYPE_2: BigInteger\', \'METHOD_2: parseInt\', \'METHOD_1: getRevocationReason\', \'VAR_1: serial\', \'VAR_2: sn\', \'VAR_3: revoked\', \'VAR_4: RevocationReason.unspecified\', \'STRING_1: ":"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/authority/UserCertificateModel.java', 12, '103:17', '116:17', 83, 10 ), ( 5, 254, 6, 'public CertificateStatus getStatus() {\n    if (expires == null) {\n    return CertificateStatus.unknown;\n    } else if (isExpired(expires)) {\n    return CertificateStatus.expired;\n    } else if (isExpiring(expires)) {\n    return CertificateStatus.expiring;\n    }\n    return CertificateStatus.ok;\n    }', '[\'public\', \'CertificateStatus\', \'getStatus\', \'(\', \')\', \'{\', \'if\', \'(\', \'expires\', \'==\', \'null\', \')\', \'{\', \'return\', \'CertificateStatus.unknown\', \';\', \'}\', \'else\', \'if\', \'(\', \'isExpired\', \'(\', \'expires\', \')\', \')\', \'{\', \'return\', \'CertificateStatus.expired\', \';\', \'}\', \'else\', \'if\', \'(\', \'isExpiring\', \'(\', \'expires\', \')\', \')\', \'{\', \'return\', \'CertificateStatus.expiring\', \';\', \'}\', \'return\', \'CertificateStatus.ok\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( ) { if ( VAR_1 == null ) { return VAR_2 ; } else if ( METHOD_2 ( VAR_1 ) ) { return VAR_3 ; } else if ( METHOD_3 ( VAR_1 ) ) { return VAR_4 ; } return VAR_5 ; }', '[\'TYPE_1: CertificateStatus\', \'METHOD_3: isExpiring\', \'METHOD_1: getStatus\', \'METHOD_2: isExpired\', \'VAR_1: expires\', \'VAR_2: CertificateStatus.unknown\', \'VAR_4: CertificateStatus.expiring\', \'VAR_5: CertificateStatus.ok\', \'VAR_3: CertificateStatus.expired\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/authority/UserCertificateModel.java', 12, '118:17', '127:17', 52, 8 ), ( 5, 254, 8, 'public CertificateStatus getStatus(X509Certificate cert) {\n    if (isRevoked(cert.getSerialNumber())) {\n    return CertificateStatus.revoked;\n    } else if (isExpired(cert.getNotAfter())) {\n    return CertificateStatus.expired;\n    } else if (isExpiring(cert.getNotAfter())) {\n    return CertificateStatus.expiring;\n    }\n    return CertificateStatus.ok;\n    }', '[\'public\', \'CertificateStatus\', \'getStatus\', \'(\', \'X509Certificate\', \'cert\', \')\', \'{\', \'if\', \'(\', \'isRevoked\', \'(\', \'cert\', \'.\', \'getSerialNumber\', \'(\', \')\', \')\', \')\', \'{\', \'return\', \'CertificateStatus.revoked\', \';\', \'}\', \'else\', \'if\', \'(\', \'isExpired\', \'(\', \'cert\', \'.\', \'getNotAfter\', \'(\', \')\', \')\', \')\', \'{\', \'return\', \'CertificateStatus.expired\', \';\', \'}\', \'else\', \'if\', \'(\', \'isExpiring\', \'(\', \'cert\', \'.\', \'getNotAfter\', \'(\', \')\', \')\', \')\', \'{\', \'return\', \'CertificateStatus.expiring\', \';\', \'}\', \'return\', \'CertificateStatus.ok\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) { return VAR_2 ; } else if ( METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ) { return VAR_3 ; } else if ( METHOD_6 ( VAR_1 . METHOD_5 ( ) ) ) { return VAR_4 ; } return VAR_5 ; }', '[\'TYPE_1: CertificateStatus\', \'TYPE_2: X509Certificate\', \'METHOD_2: isRevoked\', \'METHOD_3: getSerialNumber\', \'METHOD_6: isExpiring\', \'METHOD_5: getNotAfter\', \'METHOD_1: getStatus\', \'METHOD_4: isExpired\', \'VAR_2: CertificateStatus.revoked\', \'VAR_1: cert\', \'VAR_4: CertificateStatus.expiring\', \'VAR_5: CertificateStatus.ok\', \'VAR_3: CertificateStatus.expired\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/authority/UserCertificateModel.java', 12, '133:17', '142:17', 65, 8 ), ( 5, 255, 0, 'public void update(X509Metadata metadata) {\n    metadata.setOID("OU", organizationalUnit.getText());\n    metadata.setOID("O", organization.getText());\n    metadata.setOID("L", locality.getText());\n    metadata.setOID("ST", stateProvince.getText());\n    metadata.setOID("C", countryCode.getText());\n    }', '[\'public\', \'void\', \'update\', \'(\', \'X509Metadata\', \'metadata\', \')\', \'{\', \'metadata\', \'.\', \'setOID\', \'(\', \'"OU"\', \',\', \'organizationalUnit\', \'.\', \'getText\', \'(\', \')\', \')\', \';\', \'metadata\', \'.\', \'setOID\', \'(\', \'"O"\', \',\', \'organization\', \'.\', \'getText\', \'(\', \')\', \')\', \';\', \'metadata\', \'.\', \'setOID\', \'(\', \'"L"\', \',\', \'locality\', \'.\', \'getText\', \'(\', \')\', \')\', \';\', \'metadata\', \'.\', \'setOID\', \'(\', \'"ST"\', \',\', \'stateProvince\', \'.\', \'getText\', \'(\', \')\', \')\', \';\', \'metadata\', \'.\', \'setOID\', \'(\', \'"C"\', \',\', \'countryCode\', \'.\', \'getText\', \'(\', \')\', \')\', \';\', \'}\']', 'public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( STRING_1 , VAR_2 . METHOD_3 ( ) ) ; VAR_1 . METHOD_2 ( STRING_2 , VAR_3 . METHOD_3 ( ) ) ; VAR_1 . METHOD_2 ( STRING_3 , VAR_4 . METHOD_3 ( ) ) ; VAR_1 . METHOD_2 ( STRING_4 , VAR_5 . METHOD_3 ( ) ) ; VAR_1 . METHOD_2 ( STRING_5 , VAR_6 . METHOD_3 ( ) ) ; }', '[\'TYPE_1: X509Metadata\', \'METHOD_3: getText\', \'METHOD_1: update\', \'METHOD_2: setOID\', \'VAR_1: metadata\', \'VAR_6: countryCode\', \'VAR_3: organization\', \'VAR_4: locality\', \'VAR_5: stateProvince\', \'VAR_2: organizationalUnit\', \'STRING_5: "C"\', \'STRING_2: "O"\', \'STRING_3: "L"\', \'STRING_1: "OU"\', \'STRING_4: "ST"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/authority/DefaultOidsPanel.java', 7, '53:9', '59:9', 69, 6 ), ( 5, 257, 0, '@Override\n    public void setup(IStoredSettings settings) {\n    this.settings = settings;\n    String file = settings.getString(Keys.realm.redmine.backingUserService, "${baseFolder}/users.conf");\n    File realmFile = GitBlit.getFileOrFolder(file);\n    serviceImpl = createUserService(realmFile);\n    logger.info("Redmine User Service backed by " + serviceImpl.toString());\n    }', '[\'public\', \'void\', \'setup\', \'(\', \'IStoredSettings\', \'settings\', \')\', \'{\', \'this\', \'.\', \'settings\', \'=\', \'settings\', \';\', \'String\', \'file\', \'=\', \'settings\', \'.\', \'getString\', \'(\', \'Keys.realm.redmine.backingUserService\', \',\', \'"${baseFolder}/users.conf"\', \')\', \';\', \'File\', \'realmFile\', \'=\', \'GitBlit\', \'.\', \'getFileOrFolder\', \'(\', \'file\', \')\', \';\', \'serviceImpl\', \'=\', \'createUserService\', \'(\', \'realmFile\', \')\', \';\', \'logger\', \'.\', \'info\', \'(\', \'"Redmine User Service backed by "\', \'+\', \'serviceImpl\', \'.\', \'toString\', \'(\', \')\', \')\', \';\', \'}\']', 'public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; String file = VAR_1 . getString ( VAR_2 , STRING_1 ) ; File VAR_3 = TYPE_2 . METHOD_2 ( file ) ; VAR_4 = METHOD_3 ( VAR_3 ) ; logger . info ( STRING_2 + VAR_4 . toString ( ) ) ; }', '[\'TYPE_1: IStoredSettings\', \'TYPE_2: GitBlit\', \'METHOD_1: setup\', \'METHOD_3: createUserService\', \'METHOD_2: getFileOrFolder\', \'VAR_1: settings\', \'VAR_3: realmFile\', \'VAR_2: Keys.realm.redmine.backingUserService\', \'VAR_4: serviceImpl\', \'STRING_2: "Redmine User Service backed by "\', \'STRING_1: "${baseFolder}/users.conf"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/RedmineUserService.java', 10, '46:5', '55:5', 64, 7 ), ( 5, 258, 3, '@Override\n    protected void doPost(javax.servlet.http.HttpServletRequest request,\n    			javax.servlet.http.HttpServletResponse response) throws javax.servlet.ServletException,\n    			java.io.IOException {\n    processRequest(request, response);\n    }', '[\'protected\', \'void\', \'doPost\', \'(\', \'javax.servlet.http.HttpServletRequest\', \'request\', \',\', \'javax.servlet.http.HttpServletResponse\', \'response\', \')\', \'throws\', \'javax.servlet.ServletException\', \',\', \'java.io\', \'.\', \'IOException\', \'{\', \'processRequest\', \'(\', \'request\', \',\', \'response\', \')\', \';\', \'}\']', 'protected void METHOD_1 ( TYPE_1 request , TYPE_2 response ) throws TYPE_3 , TYPE_4 . IOException { METHOD_2 ( request , response ) ; }', '[\'TYPE_1: javax.servlet.http.HttpServletRequest\', \'TYPE_4: java.io\', \'TYPE_3: javax.servlet.ServletException\', \'TYPE_2: javax.servlet.http.HttpServletResponse\', \'METHOD_1: doPost\', \'METHOD_2: processRequest\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/SyndicationServlet.java', 5, '311:9', '316:9', 45, 5 ), ( 5, 258, 4, '@Override\n    protected void doGet(javax.servlet.http.HttpServletRequest request,\n    			javax.servlet.http.HttpServletResponse response) throws javax.servlet.ServletException,\n    			java.io.IOException {\n    processRequest(request, response);\n    }', '[\'protected\', \'void\', \'doGet\', \'(\', \'javax.servlet.http.HttpServletRequest\', \'request\', \',\', \'javax.servlet.http.HttpServletResponse\', \'response\', \')\', \'throws\', \'javax.servlet.ServletException\', \',\', \'java.io\', \'.\', \'IOException\', \'{\', \'processRequest\', \'(\', \'request\', \',\', \'response\', \')\', \';\', \'}\']', 'protected void METHOD_1 ( TYPE_1 request , TYPE_2 response ) throws TYPE_3 , TYPE_4 . IOException { METHOD_2 ( request , response ) ; }', '[\'TYPE_1: javax.servlet.http.HttpServletRequest\', \'TYPE_4: java.io\', \'TYPE_3: javax.servlet.ServletException\', \'TYPE_2: javax.servlet.http.HttpServletResponse\', \'METHOD_1: doGet\', \'METHOD_2: processRequest\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/SyndicationServlet.java', 5, '318:9', '323:9', 45, 5 ), ( 5, 259, 6, 'public AccessRestrictionType getDefaultAccessRestriction() {\n    String restriction = null;\n    if (settings.hasKey(Keys.git.defaultAccessRestriction)) {\n    restriction = settings.get(Keys.git.defaultAccessRestriction).currentValue;\n    }\n    return AccessRestrictionType.fromName(restriction);\n    }', '[\'public\', \'AccessRestrictionType\', \'getDefaultAccessRestriction\', \'(\', \')\', \'{\', \'String\', \'restriction\', \'=\', \'null\', \';\', \'if\', \'(\', \'settings\', \'.\', \'hasKey\', \'(\', \'Keys.git.defaultAccessRestriction\', \')\', \')\', \'{\', \'restriction\', \'=\', \'settings\', \'.\', \'get\', \'(\', \'Keys.git.defaultAccessRestriction\', \')\', \'.\', \'currentValue\', \';\', \'}\', \'return\', \'AccessRestrictionType\', \'.\', \'fromName\', \'(\', \'restriction\', \')\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( ) { String VAR_1 = null ; if ( VAR_2 . METHOD_2 ( VAR_3 ) ) { VAR_1 = VAR_2 . get ( VAR_3 ) . VAR_4 ; } return TYPE_1 . METHOD_3 ( VAR_1 ) ; }', '[\'TYPE_1: AccessRestrictionType\', \'METHOD_2: hasKey\', \'METHOD_1: getDefaultAccessRestriction\', \'METHOD_3: fromName\', \'VAR_2: settings\', \'VAR_3: Keys.git.defaultAccessRestriction\', \'VAR_1: restriction\', \'VAR_4: currentValue\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/GitblitClient.java', 64, '195:9', '201:9', 49, 5 ), ( 5, 259, 7, 'public AuthorizationControl getDefaultAuthorizationControl() {\n    String authorization = null;\n    if (settings.hasKey(Keys.git.defaultAuthorizationControl)) {\n    authorization = settings.get(Keys.git.defaultAuthorizationControl).currentValue;\n    }\n    return AuthorizationControl.fromName(authorization);\n    }', '[\'public\', \'AuthorizationControl\', \'getDefaultAuthorizationControl\', \'(\', \')\', \'{\', \'String\', \'authorization\', \'=\', \'null\', \';\', \'if\', \'(\', \'settings\', \'.\', \'hasKey\', \'(\', \'Keys.git.defaultAuthorizationControl\', \')\', \')\', \'{\', \'authorization\', \'=\', \'settings\', \'.\', \'get\', \'(\', \'Keys.git.defaultAuthorizationControl\', \')\', \'.\', \'currentValue\', \';\', \'}\', \'return\', \'AuthorizationControl\', \'.\', \'fromName\', \'(\', \'authorization\', \')\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( ) { String VAR_1 = null ; if ( VAR_2 . METHOD_2 ( VAR_3 ) ) { VAR_1 = VAR_2 . get ( VAR_3 ) . VAR_4 ; } return TYPE_1 . METHOD_3 ( VAR_1 ) ; }', '[\'TYPE_1: AuthorizationControl\', \'METHOD_2: hasKey\', \'METHOD_3: fromName\', \'METHOD_1: getDefaultAuthorizationControl\', \'VAR_1: authorization\', \'VAR_2: settings\', \'VAR_4: currentValue\', \'VAR_3: Keys.git.defaultAuthorizationControl\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/GitblitClient.java', 64, '203:9', '209:9', 49, 5 ) ;

INSERT INTO method (id_repo, id_file, id_method, code, code_tokens, abstract_code, abstract_representation, repo_name, repo_url,repo_commit, file_name, num_methods, start_method, end_method, num_tokens, num_lines) VALUES ( 5, 259, 9, 'public List<String> getPreReceiveScriptsUnused(RepositoryModel repository) {\n    Set<String> inherited = new TreeSet<String>(getPreReceiveScriptsInherited(repository));\n    // create list of available scripts by excluding inherited scripts\n    List<String> scripts = new ArrayList<String>();\n    for (String script : settings.pushScripts) {\n    if (!inherited.contains(script)) {\n    scripts.add(script);\n    }\n    }\n    return scripts;\n    }', '[\'public\', \'List\', \'<\', \'String\', \'>\', \'getPreReceiveScriptsUnused\', \'(\', \'RepositoryModel\', \'repository\', \')\', \'{\', \'Set\', \'<\', \'String\', \'>\', \'inherited\', \'=\', \'new\', \'TreeSet\', \'<\', \'String\', \'>\', \'(\', \'getPreReceiveScriptsInherited\', \'(\', \'repository\', \')\', \')\', \';\', \'List\', \'<\', \'String\', \'>\', \'scripts\', \'=\', \'new\', \'ArrayList\', \'<\', \'String\', \'>\', \'(\', \')\', \';\', \'for\', \'(\', \'String\', \'script\', \':\', \'settings.pushScripts\', \')\', \'{\', \'if\', \'(\', \'!\', \'inherited\', \'.\', \'contains\', \'(\', \'script\', \')\', \')\', \'{\', \'scripts\', \'.\', \'add\', \'(\', \'script\', \')\', \';\', \'}\', \'}\', \'return\', \'scripts\', \';\', \'}\']', 'public List < String > METHOD_1 ( TYPE_1 VAR_1 ) { Set < String > VAR_2 = new TYPE_2 < String > ( METHOD_2 ( VAR_1 ) ) ; List < String > VAR_3 = new ArrayList < String > ( ) ; for ( String VAR_4 : VAR_5 ) { if ( ! VAR_2 . contains ( VAR_4 ) ) { VAR_3 . add ( VAR_4 ) ; } } return VAR_3 ; }', '[\'TYPE_2: TreeSet\', \'TYPE_1: RepositoryModel\', \'METHOD_2: getPreReceiveScriptsInherited\', \'METHOD_1: getPreReceiveScriptsUnused\', \'VAR_5: settings.pushScripts\', \'VAR_2: inherited\', \'VAR_1: repository\', \'VAR_3: scripts\', \'VAR_4: script\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/GitblitClient.java', 64, '251:9', '262:9', 77, 7 ), ( 5, 259, 11, 'public List<String> getPostReceiveScriptsUnused(RepositoryModel repository) {\n    Set<String> inherited = new TreeSet<String>(getPostReceiveScriptsInherited(repository));\n    // create list of available scripts by excluding inherited scripts\n    List<String> scripts = new ArrayList<String>();\n    if (!ArrayUtils.isEmpty(settings.pushScripts)) {\n    for (String script : settings.pushScripts) {\n    if (!inherited.contains(script)) {\n    scripts.add(script);\n    }\n    }\n    }\n    return scripts;\n    }', '[\'public\', \'List\', \'<\', \'String\', \'>\', \'getPostReceiveScriptsUnused\', \'(\', \'RepositoryModel\', \'repository\', \')\', \'{\', \'Set\', \'<\', \'String\', \'>\', \'inherited\', \'=\', \'new\', \'TreeSet\', \'<\', \'String\', \'>\', \'(\', \'getPostReceiveScriptsInherited\', \'(\', \'repository\', \')\', \')\', \';\', \'List\', \'<\', \'String\', \'>\', \'scripts\', \'=\', \'new\', \'ArrayList\', \'<\', \'String\', \'>\', \'(\', \')\', \';\', \'if\', \'(\', \'!\', \'ArrayUtils\', \'.\', \'isEmpty\', \'(\', \'settings.pushScripts\', \')\', \')\', \'{\', \'for\', \'(\', \'String\', \'script\', \':\', \'settings.pushScripts\', \')\', \'{\', \'if\', \'(\', \'!\', \'inherited\', \'.\', \'contains\', \'(\', \'script\', \')\', \')\', \'{\', \'scripts\', \'.\', \'add\', \'(\', \'script\', \')\', \';\', \'}\', \'}\', \'}\', \'return\', \'scripts\', \';\', \'}\']', 'public List < String > METHOD_1 ( TYPE_1 VAR_1 ) { Set < String > VAR_2 = new TYPE_2 < String > ( METHOD_2 ( VAR_1 ) ) ; List < String > VAR_3 = new ArrayList < String > ( ) ; if ( ! TYPE_3 . isEmpty ( VAR_4 ) ) { for ( String VAR_5 : VAR_4 ) { if ( ! VAR_2 . contains ( VAR_5 ) ) { VAR_3 . add ( VAR_5 ) ; } } } return VAR_3 ; }', '[\'TYPE_2: TreeSet\', \'TYPE_3: ArrayUtils\', \'TYPE_1: RepositoryModel\', \'METHOD_2: getPostReceiveScriptsInherited\', \'METHOD_1: getPostReceiveScriptsUnused\', \'VAR_4: settings.pushScripts\', \'VAR_2: inherited\', \'VAR_1: repository\', \'VAR_3: scripts\', \'VAR_5: script\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/GitblitClient.java', 64, '303:9', '316:9', 91, 8 ), ( 5, 259, 15, 'public List<RepositoryModel> refreshRepositories() throws IOException {\n    Map<String, RepositoryModel> repositories = RpcUtils\n    .getRepositories(url, account, password);\n    allRepositories.clear();\n    allRepositories.addAll(repositories.values());\n    Collections.sort(allRepositories);\n    markSubscribedFeeds();\n    return allRepositories;\n    }', '[\'public\', \'List\', \'<\', \'RepositoryModel\', \'>\', \'refreshRepositories\', \'(\', \')\', \'throws\', \'IOException\', \'{\', \'Map\', \'<\', \'String\', \',\', \'RepositoryModel\', \'>\', \'repositories\', \'=\', \'RpcUtils\', \'.\', \'getRepositories\', \'(\', \'url\', \',\', \'account\', \',\', \'password\', \')\', \';\', \'allRepositories\', \'.\', \'clear\', \'(\', \')\', \';\', \'allRepositories\', \'.\', \'addAll\', \'(\', \'repositories\', \'.\', \'values\', \'(\', \')\', \')\', \';\', \'Collections\', \'.\', \'sort\', \'(\', \'allRepositories\', \')\', \';\', \'markSubscribedFeeds\', \'(\', \')\', \';\', \'return\', \'allRepositories\', \';\', \'}\']', 'public List < TYPE_1 > METHOD_1 ( ) throws IOException { Map < String , TYPE_1 > VAR_1 = TYPE_2 . METHOD_2 ( url , VAR_2 , VAR_3 ) ; VAR_4 . METHOD_3 ( ) ; VAR_4 . addAll ( VAR_1 . values ( ) ) ; Collections . METHOD_4 ( VAR_4 ) ; METHOD_5 ( ) ; return VAR_4 ; }', '[\'TYPE_2: RpcUtils\', \'TYPE_1: RepositoryModel\', \'METHOD_2: getRepositories\', \'METHOD_1: refreshRepositories\', \'METHOD_3: clear\', \'METHOD_4: sort\', \'METHOD_5: markSubscribedFeeds\', \'VAR_3: password\', \'VAR_1: repositories\', \'VAR_4: allRepositories\', \'VAR_2: account\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/GitblitClient.java', 64, '330:9', '338:9', 58, 8 ), ( 5, 259, 16, 'public List<UserModel> refreshUsers() throws IOException {\n    List<UserModel> users = RpcUtils.getUsers(url, account, password);\n    allUsers.clear();\n    allUsers.addAll(users);\n    Collections.sort(users);\n    return allUsers;\n    }', '[\'public\', \'List\', \'<\', \'UserModel\', \'>\', \'refreshUsers\', \'(\', \')\', \'throws\', \'IOException\', \'{\', \'List\', \'<\', \'UserModel\', \'>\', \'users\', \'=\', \'RpcUtils\', \'.\', \'getUsers\', \'(\', \'url\', \',\', \'account\', \',\', \'password\', \')\', \';\', \'allUsers\', \'.\', \'clear\', \'(\', \')\', \';\', \'allUsers\', \'.\', \'addAll\', \'(\', \'users\', \')\', \';\', \'Collections\', \'.\', \'sort\', \'(\', \'users\', \')\', \';\', \'return\', \'allUsers\', \';\', \'}\']', 'public List < TYPE_1 > METHOD_1 ( ) throws IOException { List < TYPE_1 > VAR_1 = TYPE_2 . METHOD_2 ( url , VAR_2 , VAR_3 ) ; VAR_4 . METHOD_3 ( ) ; VAR_4 . addAll ( VAR_1 ) ; Collections . METHOD_4 ( VAR_1 ) ; return VAR_4 ; }', '[\'TYPE_1: UserModel\', \'TYPE_2: RpcUtils\', \'METHOD_2: getUsers\', \'METHOD_3: clear\', \'METHOD_4: sort\', \'METHOD_1: refreshUsers\', \'VAR_3: password\', \'VAR_4: allUsers\', \'VAR_1: users\', \'VAR_2: account\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/GitblitClient.java', 64, '340:9', '346:9', 50, 6 ), ( 5, 259, 17, 'public List<TeamModel> refreshTeams() throws IOException {\n    List<TeamModel> teams = RpcUtils.getTeams(url, account, password);\n    allTeams.clear();\n    allTeams.addAll(teams);\n    Collections.sort(teams);\n    return allTeams;\n    }', '[\'public\', \'List\', \'<\', \'TeamModel\', \'>\', \'refreshTeams\', \'(\', \')\', \'throws\', \'IOException\', \'{\', \'List\', \'<\', \'TeamModel\', \'>\', \'teams\', \'=\', \'RpcUtils\', \'.\', \'getTeams\', \'(\', \'url\', \',\', \'account\', \',\', \'password\', \')\', \';\', \'allTeams\', \'.\', \'clear\', \'(\', \')\', \';\', \'allTeams\', \'.\', \'addAll\', \'(\', \'teams\', \')\', \';\', \'Collections\', \'.\', \'sort\', \'(\', \'teams\', \')\', \';\', \'return\', \'allTeams\', \';\', \'}\']', 'public List < TYPE_1 > METHOD_1 ( ) throws IOException { List < TYPE_1 > VAR_1 = TYPE_2 . METHOD_2 ( url , VAR_2 , VAR_3 ) ; VAR_4 . METHOD_3 ( ) ; VAR_4 . addAll ( VAR_1 ) ; Collections . METHOD_4 ( VAR_1 ) ; return VAR_4 ; }', '[\'TYPE_2: RpcUtils\', \'TYPE_1: TeamModel\', \'METHOD_1: refreshTeams\', \'METHOD_3: clear\', \'METHOD_4: sort\', \'METHOD_2: getTeams\', \'VAR_3: password\', \'VAR_1: teams\', \'VAR_4: allTeams\', \'VAR_2: account\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/GitblitClient.java', 64, '348:9', '354:9', 50, 6 ), ( 5, 259, 20, 'public List<String> getBranches(String repository) {\n    List<FeedModel> feeds = getAvailableFeeds(repository);\n    List<String> branches = new ArrayList<String>();\n    for (FeedModel feed : feeds) {\n    branches.add(feed.branch);\n    }\n    Collections.sort(branches);\n    return branches;\n    }', '[\'public\', \'List\', \'<\', \'String\', \'>\', \'getBranches\', \'(\', \'String\', \'repository\', \')\', \'{\', \'List\', \'<\', \'FeedModel\', \'>\', \'feeds\', \'=\', \'getAvailableFeeds\', \'(\', \'repository\', \')\', \';\', \'List\', \'<\', \'String\', \'>\', \'branches\', \'=\', \'new\', \'ArrayList\', \'<\', \'String\', \'>\', \'(\', \')\', \';\', \'for\', \'(\', \'FeedModel\', \'feed\', \':\', \'feeds\', \')\', \'{\', \'branches\', \'.\', \'add\', \'(\', \'feed.branch\', \')\', \';\', \'}\', \'Collections\', \'.\', \'sort\', \'(\', \'branches\', \')\', \';\', \'return\', \'branches\', \';\', \'}\']', 'public List < String > METHOD_1 ( String VAR_1 ) { List < TYPE_1 > VAR_2 = METHOD_2 ( VAR_1 ) ; List < String > VAR_3 = new ArrayList < String > ( ) ; for ( TYPE_1 VAR_4 : VAR_2 ) { VAR_3 . add ( VAR_5 ) ; } Collections . METHOD_3 ( VAR_3 ) ; return VAR_3 ; }', '[\'TYPE_1: FeedModel\', \'METHOD_1: getBranches\', \'METHOD_2: getAvailableFeeds\', \'METHOD_3: sort\', \'VAR_4: feed\', \'VAR_2: feeds\', \'VAR_5: feed.branch\', \'VAR_1: repository\', \'VAR_3: branches\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/GitblitClient.java', 64, '366:9', '374:9', 64, 7 ), ( 5, 259, 23, 'public List<FeedModel> getAvailableFeeds(String repository) {\n    List<FeedModel> repositoryFeeds = new ArrayList<FeedModel>();\n    if (repository == null) {\n    return repositoryFeeds;\n    }\n    for (FeedModel feed : availableFeeds) {\n    if (feed.repository.equalsIgnoreCase(repository)) {\n    repositoryFeeds.add(feed);\n    }\n    }\n    return repositoryFeeds;\n    }', '[\'public\', \'List\', \'<\', \'FeedModel\', \'>\', \'getAvailableFeeds\', \'(\', \'String\', \'repository\', \')\', \'{\', \'List\', \'<\', \'FeedModel\', \'>\', \'repositoryFeeds\', \'=\', \'new\', \'ArrayList\', \'<\', \'FeedModel\', \'>\', \'(\', \')\', \';\', \'if\', \'(\', \'repository\', \'==\', \'null\', \')\', \'{\', \'return\', \'repositoryFeeds\', \';\', \'}\', \'for\', \'(\', \'FeedModel\', \'feed\', \':\', \'availableFeeds\', \')\', \'{\', \'if\', \'(\', \'feed.repository\', \'.\', \'equalsIgnoreCase\', \'(\', \'repository\', \')\', \')\', \'{\', \'repositoryFeeds\', \'.\', \'add\', \'(\', \'feed\', \')\', \';\', \'}\', \'}\', \'return\', \'repositoryFeeds\', \';\', \'}\']', 'public List < TYPE_1 > METHOD_1 ( String VAR_1 ) { List < TYPE_1 > VAR_2 = new ArrayList < TYPE_1 > ( ) ; if ( VAR_1 == null ) { return VAR_2 ; } for ( TYPE_1 VAR_3 : VAR_4 ) { if ( VAR_5 . METHOD_2 ( VAR_1 ) ) { VAR_2 . add ( VAR_3 ) ; } } return VAR_2 ; }', '[\'TYPE_1: FeedModel\', \'METHOD_1: getAvailableFeeds\', \'METHOD_2: equalsIgnoreCase\', \'VAR_4: availableFeeds\', \'VAR_2: repositoryFeeds\', \'VAR_3: feed\', \'VAR_5: feed.repository\', \'VAR_1: repository\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/GitblitClient.java', 64, '384:9', '395:9', 68, 8 ), ( 5, 259, 24, 'public List<FeedModel> refreshAvailableFeeds() throws IOException {\n    List<FeedModel> feeds = RpcUtils.getBranchFeeds(url, account, password);\n    availableFeeds.clear();\n    availableFeeds.addAll(feeds);\n    markSubscribedFeeds();\n    return availableFeeds;\n    }', '[\'public\', \'List\', \'<\', \'FeedModel\', \'>\', \'refreshAvailableFeeds\', \'(\', \')\', \'throws\', \'IOException\', \'{\', \'List\', \'<\', \'FeedModel\', \'>\', \'feeds\', \'=\', \'RpcUtils\', \'.\', \'getBranchFeeds\', \'(\', \'url\', \',\', \'account\', \',\', \'password\', \')\', \';\', \'availableFeeds\', \'.\', \'clear\', \'(\', \')\', \';\', \'availableFeeds\', \'.\', \'addAll\', \'(\', \'feeds\', \')\', \';\', \'markSubscribedFeeds\', \'(\', \')\', \';\', \'return\', \'availableFeeds\', \';\', \'}\']', 'public List < TYPE_1 > METHOD_1 ( ) throws IOException { List < TYPE_1 > VAR_1 = TYPE_2 . METHOD_2 ( url , VAR_2 , VAR_3 ) ; VAR_4 . METHOD_3 ( ) ; VAR_4 . addAll ( VAR_1 ) ; METHOD_4 ( ) ; return VAR_4 ; }', '[\'TYPE_2: RpcUtils\', \'TYPE_1: FeedModel\', \'METHOD_1: refreshAvailableFeeds\', \'METHOD_3: clear\', \'METHOD_2: getBranchFeeds\', \'METHOD_4: markSubscribedFeeds\', \'VAR_4: availableFeeds\', \'VAR_3: password\', \'VAR_1: feeds\', \'VAR_2: account\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/GitblitClient.java', 64, '397:9', '403:9', 46, 6 ), ( 5, 259, 27, 'private void markSubscribedFeeds() {\n    subscribedRepositories.clear();\n    for (FeedModel feed : availableFeeds) {\n    // mark feed in the available list as subscribed\n    feed.subscribed = reg.feeds.contains(feed);\n    if (feed.subscribed) {\n    subscribedRepositories.add(feed.repository.toLowerCase());\n    }\n    }\n    }', '[\'private\', \'void\', \'markSubscribedFeeds\', \'(\', \')\', \'{\', \'subscribedRepositories\', \'.\', \'clear\', \'(\', \')\', \';\', \'for\', \'(\', \'FeedModel\', \'feed\', \':\', \'availableFeeds\', \')\', \'{\', \'feed.subscribed\', \'=\', \'reg.feeds\', \'.\', \'contains\', \'(\', \'feed\', \')\', \';\', \'if\', \'(\', \'feed.subscribed\', \')\', \'{\', \'subscribedRepositories\', \'.\', \'add\', \'(\', \'feed.repository\', \'.\', \'toLowerCase\', \'(\', \')\', \')\', \';\', \'}\', \'}\', \'}\']', 'private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; for ( TYPE_1 VAR_2 : VAR_3 ) { VAR_4 = VAR_5 . contains ( VAR_2 ) ; if ( VAR_4 ) { VAR_1 . add ( VAR_6 . METHOD_3 ( ) ) ; } } }', '[\'TYPE_1: FeedModel\', \'METHOD_3: toLowerCase\', \'METHOD_2: clear\', \'METHOD_1: markSubscribedFeeds\', \'VAR_1: subscribedRepositories\', \'VAR_3: availableFeeds\', \'VAR_2: feed\', \'VAR_5: reg.feeds\', \'VAR_6: feed.repository\', \'VAR_4: feed.subscribed\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/GitblitClient.java', 64, '428:9', '437:9', 54, 6 ), ( 5, 259, 28, 'public Date getLastFeedRefresh(String repository, String branch) {\n    FeedModel feed = new FeedModel();\n    feed.repository = repository;\n    feed.branch = branch;\n    if (reg.feeds.contains(feed)) {\n    int idx = reg.feeds.indexOf(feed);\n    feed = reg.feeds.get(idx);\n    return feed.lastRefreshDate;\n    }\n    return NEVER;\n    }', '[\'public\', \'Date\', \'getLastFeedRefresh\', \'(\', \'String\', \'repository\', \',\', \'String\', \'branch\', \')\', \'{\', \'FeedModel\', \'feed\', \'=\', \'new\', \'FeedModel\', \'(\', \')\', \';\', \'feed.repository\', \'=\', \'repository\', \';\', \'feed.branch\', \'=\', \'branch\', \';\', \'if\', \'(\', \'reg.feeds\', \'.\', \'contains\', \'(\', \'feed\', \')\', \')\', \'{\', \'int\', \'idx\', \'=\', \'reg.feeds\', \'.\', \'indexOf\', \'(\', \'feed\', \')\', \';\', \'feed\', \'=\', \'reg.feeds\', \'.\', \'get\', \'(\', \'idx\', \')\', \';\', \'return\', \'feed.lastRefreshDate\', \';\', \'}\', \'return\', \'NEVER\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( String VAR_1 , String VAR_2 ) { TYPE_2 VAR_3 = new TYPE_2 ( ) ; VAR_4 = VAR_1 ; VAR_5 = VAR_2 ; if ( VAR_6 . contains ( VAR_3 ) ) { int VAR_7 = VAR_6 . METHOD_2 ( VAR_3 ) ; VAR_3 = VAR_6 . get ( VAR_7 ) ; return VAR_8 ; } return VAR_9 ; }', '[\'TYPE_2: FeedModel\', \'TYPE_1: Date\', \'METHOD_1: getLastFeedRefresh\', \'METHOD_2: indexOf\', \'VAR_3: feed\', \'VAR_6: reg.feeds\', \'VAR_9: NEVER\', \'VAR_4: feed.repository\', \'VAR_5: feed.branch\', \'VAR_8: feed.lastRefreshDate\', \'VAR_1: repository\', \'VAR_7: idx\', \'VAR_2: branch\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/GitblitClient.java', 64, '439:9', '449:9', 75, 9 ), ( 5, 259, 33, 'public List<FederationModel> refreshFederationRegistrations() throws IOException {\n    List<FederationModel> list = RpcUtils.getFederationRegistrations(url, account, password);\n    federationRegistrations.clear();\n    federationRegistrations.addAll(list);\n    return federationRegistrations;\n    }', '[\'public\', \'List\', \'<\', \'FederationModel\', \'>\', \'refreshFederationRegistrations\', \'(\', \')\', \'throws\', \'IOException\', \'{\', \'List\', \'<\', \'FederationModel\', \'>\', \'list\', \'=\', \'RpcUtils\', \'.\', \'getFederationRegistrations\', \'(\', \'url\', \',\', \'account\', \',\', \'password\', \')\', \';\', \'federationRegistrations\', \'.\', \'clear\', \'(\', \')\', \';\', \'federationRegistrations\', \'.\', \'addAll\', \'(\', \'list\', \')\', \';\', \'return\', \'federationRegistrations\', \';\', \'}\']', 'public List < TYPE_1 > METHOD_1 ( ) throws IOException { List < TYPE_1 > list = TYPE_2 . METHOD_2 ( url , VAR_1 , VAR_2 ) ; VAR_3 . METHOD_3 ( ) ; VAR_3 . addAll ( list ) ; return VAR_3 ; }', '[\'TYPE_1: FederationModel\', \'TYPE_2: RpcUtils\', \'METHOD_3: clear\', \'METHOD_1: refreshFederationRegistrations\', \'METHOD_2: getFederationRegistrations\', \'VAR_2: password\', \'VAR_3: federationRegistrations\', \'VAR_1: account\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/GitblitClient.java', 64, '471:9', '476:9', 43, 5 ), ( 5, 259, 35, 'public UserModel getUser(String username) {\n    for (UserModel user : getUsers()) {\n    if (user.username.equalsIgnoreCase(username)) {\n    return user;\n    }\n    }\n    return null;\n    }', '[\'public\', \'UserModel\', \'getUser\', \'(\', \'String\', \'username\', \')\', \'{\', \'for\', \'(\', \'UserModel\', \'user\', \':\', \'getUsers\', \'(\', \')\', \')\', \'{\', \'if\', \'(\', \'user.username\', \'.\', \'equalsIgnoreCase\', \'(\', \'username\', \')\', \')\', \'{\', \'return\', \'user\', \';\', \'}\', \'}\', \'return\', \'null\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( String VAR_1 ) { for ( TYPE_1 VAR_2 : METHOD_2 ( ) ) { if ( VAR_3 . METHOD_3 ( VAR_1 ) ) { return VAR_2 ; } } return null ; }', '[\'TYPE_1: UserModel\', \'METHOD_2: getUsers\', \'METHOD_1: getUser\', \'METHOD_3: equalsIgnoreCase\', \'VAR_3: user.username\', \'VAR_2: user\', \'VAR_1: username\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/GitblitClient.java', 64, '482:9', '489:9', 38, 5 ), ( 5, 259, 36, 'public List<String> getUsernames() {\n    List<String> usernames = new ArrayList<String>();\n    for (UserModel user : this.allUsers) {\n    usernames.add(user.username);\n    }\n    Collections.sort(usernames);\n    return usernames;\n    }', '[\'public\', \'List\', \'<\', \'String\', \'>\', \'getUsernames\', \'(\', \')\', \'{\', \'List\', \'<\', \'String\', \'>\', \'usernames\', \'=\', \'new\', \'ArrayList\', \'<\', \'String\', \'>\', \'(\', \')\', \';\', \'for\', \'(\', \'UserModel\', \'user\', \':\', \'this\', \'.\', \'allUsers\', \')\', \'{\', \'usernames\', \'.\', \'add\', \'(\', \'user.username\', \')\', \';\', \'}\', \'Collections\', \'.\', \'sort\', \'(\', \'usernames\', \')\', \';\', \'return\', \'usernames\', \';\', \'}\']', 'public List < String > METHOD_1 ( ) { List < String > VAR_1 = new ArrayList < String > ( ) ; for ( TYPE_1 VAR_2 : this . VAR_3 ) { VAR_1 . add ( VAR_4 ) ; } Collections . METHOD_2 ( VAR_1 ) ; return VAR_1 ; }', '[\'TYPE_1: UserModel\', \'METHOD_1: getUsernames\', \'METHOD_2: sort\', \'VAR_3: allUsers\', \'VAR_1: usernames\', \'VAR_4: user.username\', \'VAR_2: user\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/GitblitClient.java', 64, '491:9', '498:9', 52, 6 ), ( 5, 259, 37, 'public List<String> getPermittedUsernames(RepositoryModel repository) {\n    List<String> usernames = new ArrayList<String>();\n    for (UserModel user : this.allUsers) {\n    if (user.hasRepositoryPermission(repository.name)) {\n    usernames.add(user.username);\n    }\n    }\n    return usernames;\n    }', '[\'public\', \'List\', \'<\', \'String\', \'>\', \'getPermittedUsernames\', \'(\', \'RepositoryModel\', \'repository\', \')\', \'{\', \'List\', \'<\', \'String\', \'>\', \'usernames\', \'=\', \'new\', \'ArrayList\', \'<\', \'String\', \'>\', \'(\', \')\', \';\', \'for\', \'(\', \'UserModel\', \'user\', \':\', \'this\', \'.\', \'allUsers\', \')\', \'{\', \'if\', \'(\', \'user\', \'.\', \'hasRepositoryPermission\', \'(\', \'repository\', \'.\', \'name\', \')\', \')\', \'{\', \'usernames\', \'.\', \'add\', \'(\', \'user.username\', \')\', \';\', \'}\', \'}\', \'return\', \'usernames\', \';\', \'}\']', 'public List < String > METHOD_1 ( TYPE_1 VAR_1 ) { List < String > VAR_2 = new ArrayList < String > ( ) ; for ( TYPE_2 VAR_3 : this . VAR_4 ) { if ( VAR_3 . METHOD_2 ( VAR_1 . name ) ) { VAR_2 . add ( VAR_5 ) ; } } return VAR_2 ; }', '[\'TYPE_2: UserModel\', \'TYPE_1: RepositoryModel\', \'METHOD_2: hasRepositoryPermission\', \'METHOD_1: getPermittedUsernames\', \'VAR_4: allUsers\', \'VAR_2: usernames\', \'VAR_5: user.username\', \'VAR_1: repository\', \'VAR_3: user\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/GitblitClient.java', 64, '500:9', '508:9', 61, 6 ), ( 5, 259, 42, 'public List<String> getTeamnames() {\n    List<String> teamnames = new ArrayList<String>();\n    for (TeamModel team : this.allTeams) {\n    teamnames.add(team.name);\n    }\n    Collections.sort(teamnames);\n    return teamnames;\n    }', '[\'public\', \'List\', \'<\', \'String\', \'>\', \'getTeamnames\', \'(\', \')\', \'{\', \'List\', \'<\', \'String\', \'>\', \'teamnames\', \'=\', \'new\', \'ArrayList\', \'<\', \'String\', \'>\', \'(\', \')\', \';\', \'for\', \'(\', \'TeamModel\', \'team\', \':\', \'this\', \'.\', \'allTeams\', \')\', \'{\', \'teamnames\', \'.\', \'add\', \'(\', \'team\', \'.\', \'name\', \')\', \';\', \'}\', \'Collections\', \'.\', \'sort\', \'(\', \'teamnames\', \')\', \';\', \'return\', \'teamnames\', \';\', \'}\']', 'public List < String > METHOD_1 ( ) { List < String > VAR_1 = new ArrayList < String > ( ) ; for ( TYPE_1 VAR_2 : this . VAR_3 ) { VAR_1 . add ( VAR_2 . name ) ; } Collections . METHOD_2 ( VAR_1 ) ; return VAR_1 ; }', '[\'TYPE_1: TeamModel\', \'METHOD_1: getTeamnames\', \'METHOD_2: sort\', \'VAR_3: allTeams\', \'VAR_1: teamnames\', \'VAR_2: team\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/GitblitClient.java', 64, '578:9', '585:9', 52, 6 ), ( 5, 259, 43, 'public List<String> getPermittedTeamnames(RepositoryModel repository) {\n    List<String> teamnames = new ArrayList<String>();\n    for (TeamModel team : this.allTeams) {\n    if (team.hasRepositoryPermission(repository.name)) {\n    teamnames.add(team.name);\n    }\n    }\n    return teamnames;\n    }', '[\'public\', \'List\', \'<\', \'String\', \'>\', \'getPermittedTeamnames\', \'(\', \'RepositoryModel\', \'repository\', \')\', \'{\', \'List\', \'<\', \'String\', \'>\', \'teamnames\', \'=\', \'new\', \'ArrayList\', \'<\', \'String\', \'>\', \'(\', \')\', \';\', \'for\', \'(\', \'TeamModel\', \'team\', \':\', \'this\', \'.\', \'allTeams\', \')\', \'{\', \'if\', \'(\', \'team\', \'.\', \'hasRepositoryPermission\', \'(\', \'repository\', \'.\', \'name\', \')\', \')\', \'{\', \'teamnames\', \'.\', \'add\', \'(\', \'team\', \'.\', \'name\', \')\', \';\', \'}\', \'}\', \'return\', \'teamnames\', \';\', \'}\']', 'public List < String > METHOD_1 ( TYPE_1 VAR_1 ) { List < String > VAR_2 = new ArrayList < String > ( ) ; for ( TYPE_2 VAR_3 : this . VAR_4 ) { if ( VAR_3 . METHOD_2 ( VAR_1 . name ) ) { VAR_2 . add ( VAR_3 . name ) ; } } return VAR_2 ; }', '[\'TYPE_2: TeamModel\', \'TYPE_1: RepositoryModel\', \'METHOD_1: getPermittedTeamnames\', \'METHOD_2: hasRepositoryPermission\', \'VAR_4: allTeams\', \'VAR_2: teamnames\', \'VAR_3: team\', \'VAR_1: repository\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/GitblitClient.java', 64, '587:9', '595:9', 61, 6 ), ( 5, 259, 44, 'public List<RegistrantAccessPermission> getTeamAccessPermissions(RepositoryModel repository) {\n    List<RegistrantAccessPermission> list = new ArrayList<RegistrantAccessPermission>();\n    for (TeamModel team : allTeams) {\n    RegistrantAccessPermission ap = team.getRepositoryPermission(repository);\n    if (ap.permission.exceeds(AccessPermission.NONE)) {\n    list.add(ap);\n    }\n    }\n    Collections.sort(list);\n    return list;\n    }', '[\'public\', \'List\', \'<\', \'RegistrantAccessPermission\', \'>\', \'getTeamAccessPermissions\', \'(\', \'RepositoryModel\', \'repository\', \')\', \'{\', \'List\', \'<\', \'RegistrantAccessPermission\', \'>\', \'list\', \'=\', \'new\', \'ArrayList\', \'<\', \'RegistrantAccessPermission\', \'>\', \'(\', \')\', \';\', \'for\', \'(\', \'TeamModel\', \'team\', \':\', \'allTeams\', \')\', \'{\', \'RegistrantAccessPermission\', \'ap\', \'=\', \'team\', \'.\', \'getRepositoryPermission\', \'(\', \'repository\', \')\', \';\', \'if\', \'(\', \'ap.permission\', \'.\', \'exceeds\', \'(\', \'AccessPermission.NONE\', \')\', \')\', \'{\', \'list\', \'.\', \'add\', \'(\', \'ap\', \')\', \';\', \'}\', \'}\', \'Collections\', \'.\', \'sort\', \'(\', \'list\', \')\', \';\', \'return\', \'list\', \';\', \'}\']', 'public List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 ) { List < TYPE_1 > list = new ArrayList < TYPE_1 > ( ) ; for ( TYPE_3 VAR_2 : VAR_3 ) { TYPE_1 VAR_4 = VAR_2 . METHOD_2 ( VAR_1 ) ; if ( VAR_5 . METHOD_3 ( VAR_6 ) ) { list . add ( VAR_4 ) ; } } Collections . METHOD_4 ( list ) ; return list ; }', '[\'TYPE_3: TeamModel\', \'TYPE_1: RegistrantAccessPermission\', \'TYPE_2: RepositoryModel\', \'METHOD_3: exceeds\', \'METHOD_1: getTeamAccessPermissions\', \'METHOD_4: sort\', \'METHOD_2: getRepositoryPermission\', \'VAR_5: ap.permission\', \'VAR_3: allTeams\', \'VAR_6: AccessPermission.NONE\', \'VAR_2: team\', \'VAR_1: repository\', \'VAR_4: ap\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/GitblitClient.java', 64, '597:9', '607:9', 76, 8 ), ( 5, 259, 46, 'public TeamModel getTeamModel(String name) {\n    for (TeamModel team : allTeams) {\n    if (team.name.equalsIgnoreCase(name)) {\n    return team;\n    }\n    }\n    return null;\n    }', '[\'public\', \'TeamModel\', \'getTeamModel\', \'(\', \'String\', \'name\', \')\', \'{\', \'for\', \'(\', \'TeamModel\', \'team\', \':\', \'allTeams\', \')\', \'{\', \'if\', \'(\', \'team.name\', \'.\', \'equalsIgnoreCase\', \'(\', \'name\', \')\', \')\', \'{\', \'return\', \'team\', \';\', \'}\', \'}\', \'return\', \'null\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( String name ) { for ( TYPE_1 VAR_1 : VAR_2 ) { if ( VAR_3 . METHOD_2 ( name ) ) { return VAR_1 ; } } return null ; }', '[\'TYPE_1: TeamModel\', \'METHOD_1: getTeamModel\', \'METHOD_2: equalsIgnoreCase\', \'VAR_2: allTeams\', \'VAR_1: team\', \'VAR_3: team.name\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/GitblitClient.java', 64, '613:9', '620:9', 37, 5 ), ( 5, 259, 49, 'public RepositoryModel getRepository(String name) {\n    for (RepositoryModel repository : allRepositories) {\n    if (repository.name.equalsIgnoreCase(name)) {\n    return repository;\n    }\n    }\n    return null;\n    }', '[\'public\', \'RepositoryModel\', \'getRepository\', \'(\', \'String\', \'name\', \')\', \'{\', \'for\', \'(\', \'RepositoryModel\', \'repository\', \':\', \'allRepositories\', \')\', \'{\', \'if\', \'(\', \'repository.name\', \'.\', \'equalsIgnoreCase\', \'(\', \'name\', \')\', \')\', \'{\', \'return\', \'repository\', \';\', \'}\', \'}\', \'return\', \'null\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( String name ) { for ( TYPE_1 VAR_1 : VAR_2 ) { if ( VAR_3 . METHOD_2 ( name ) ) { return VAR_1 ; } } return null ; }', '[\'TYPE_1: RepositoryModel\', \'METHOD_1: getRepository\', \'METHOD_2: equalsIgnoreCase\', \'VAR_3: repository.name\', \'VAR_2: allRepositories\', \'VAR_1: repository\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/GitblitClient.java', 64, '630:9', '637:9', 37, 5 ), ( 5, 261, 8, '@Override\n    public void valueChanged(ListSelectionEvent e) {\n    if (e.getValueIsAdjusting()) {\n    return;\n    }\n    boolean singleSelection = registrationsTable.getSelectedRowCount() == 1;\n    boolean selected = registrationsTable.getSelectedRow() > -1;\n    login.setEnabled(singleSelection);\n    edit.setEnabled(singleSelection);\n    delete.setEnabled(selected);\n    }', '[\'public\', \'void\', \'valueChanged\', \'(\', \'ListSelectionEvent\', \'e\', \')\', \'{\', \'if\', \'(\', \'e\', \'.\', \'getValueIsAdjusting\', \'(\', \')\', \')\', \'{\', \'return\', \';\', \'}\', \'boolean\', \'singleSelection\', \'=\', \'registrationsTable\', \'.\', \'getSelectedRowCount\', \'(\', \')\', \'==\', \'1\', \';\', \'boolean\', \'selected\', \'=\', \'registrationsTable\', \'.\', \'getSelectedRow\', \'(\', \')\', \'>\', \'-\', \'1\', \';\', \'login\', \'.\', \'setEnabled\', \'(\', \'singleSelection\', \')\', \';\', \'edit\', \'.\', \'setEnabled\', \'(\', \'singleSelection\', \')\', \';\', \'delete\', \'.\', \'setEnabled\', \'(\', \'selected\', \')\', \';\', \'}\']', 'public void METHOD_1 ( TYPE_1 e ) { if ( e . METHOD_2 ( ) ) { return ; } boolean VAR_1 = VAR_2 . METHOD_3 ( ) == 1 ; boolean VAR_3 = VAR_2 . METHOD_4 ( ) > - 1 ; VAR_4 . METHOD_5 ( VAR_1 ) ; VAR_5 . METHOD_5 ( VAR_1 ) ; VAR_6 . METHOD_5 ( VAR_3 ) ; }', '[\'TYPE_1: ListSelectionEvent\', \'METHOD_5: setEnabled\', \'METHOD_3: getSelectedRowCount\', \'METHOD_4: getSelectedRow\', \'METHOD_1: valueChanged\', \'METHOD_2: getValueIsAdjusting\', \'VAR_2: registrationsTable\', \'VAR_5: edit\', \'VAR_1: singleSelection\', \'VAR_4: login\', \'VAR_6: delete\', \'VAR_3: selected\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/RegistrationsDialog.java', 15, '141:41', '151:41', 63, 9 ), ( 5, 261, 10, 'private void login() {\n    int viewRow = registrationsTable.getSelectedRow();\n    int modelRow = registrationsTable.convertRowIndexToModel(viewRow);\n    GitblitRegistration reg = registrations.get(modelRow);\n    RegistrationsDialog.this.setVisible(false);\n    listener.login(reg);\n    }', '[\'private\', \'void\', \'login\', \'(\', \')\', \'{\', \'int\', \'viewRow\', \'=\', \'registrationsTable\', \'.\', \'getSelectedRow\', \'(\', \')\', \';\', \'int\', \'modelRow\', \'=\', \'registrationsTable\', \'.\', \'convertRowIndexToModel\', \'(\', \'viewRow\', \')\', \';\', \'GitblitRegistration\', \'reg\', \'=\', \'registrations\', \'.\', \'get\', \'(\', \'modelRow\', \')\', \';\', \'RegistrationsDialog.\', \'this\', \'.\', \'setVisible\', \'(\', \'false\', \')\', \';\', \'listener\', \'.\', \'login\', \'(\', \'reg\', \')\', \';\', \'}\']', 'private void METHOD_1 ( ) { int VAR_1 = VAR_2 . METHOD_2 ( ) ; int VAR_3 = VAR_2 . METHOD_3 ( VAR_1 ) ; TYPE_1 VAR_4 = VAR_5 . get ( VAR_3 ) ; VAR_6 this . METHOD_4 ( false ) ; listener . METHOD_1 ( VAR_4 ) ; }', '[\'TYPE_1: GitblitRegistration\', \'METHOD_3: convertRowIndexToModel\', \'METHOD_4: setVisible\', \'METHOD_2: getSelectedRow\', \'METHOD_1: login\', \'VAR_5: registrations\', \'VAR_2: registrationsTable\', \'VAR_4: reg\', \'VAR_6: RegistrationsDialog.\', \'VAR_1: viewRow\', \'VAR_3: modelRow\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/RegistrationsDialog.java', 15, '177:9', '183:9', 50, 6 ), ( 5, 261, 11, 'private void create() {\n    EditRegistrationDialog dialog = new EditRegistrationDialog(getOwner());\n    dialog.setLocationRelativeTo(this);\n    dialog.setVisible(true);\n    GitblitRegistration reg = dialog.getRegistration();\n    if (reg == null) {\n    return;\n    }\n    if (listener.saveRegistration(reg.name, reg)) {\n    model.list.add(reg);\n    model.fireTableDataChanged();\n    }\n    }', '[\'private\', \'void\', \'create\', \'(\', \')\', \'{\', \'EditRegistrationDialog\', \'dialog\', \'=\', \'new\', \'EditRegistrationDialog\', \'(\', \'getOwner\', \'(\', \')\', \')\', \';\', \'dialog\', \'.\', \'setLocationRelativeTo\', \'(\', \'this\', \')\', \';\', \'dialog\', \'.\', \'setVisible\', \'(\', \'true\', \')\', \';\', \'GitblitRegistration\', \'reg\', \'=\', \'dialog\', \'.\', \'getRegistration\', \'(\', \')\', \';\', \'if\', \'(\', \'reg\', \'==\', \'null\', \')\', \'{\', \'return\', \';\', \'}\', \'if\', \'(\', \'listener\', \'.\', \'saveRegistration\', \'(\', \'reg\', \'.\', \'name\', \',\', \'reg\', \')\', \')\', \'{\', \'model.list\', \'.\', \'add\', \'(\', \'reg\', \')\', \';\', \'model\', \'.\', \'fireTableDataChanged\', \'(\', \')\', \';\', \'}\', \'}\']', 'private void create ( ) { TYPE_1 VAR_1 = new TYPE_1 ( METHOD_1 ( ) ) ; VAR_1 . METHOD_2 ( this ) ; VAR_1 . METHOD_3 ( true ) ; TYPE_2 VAR_2 = VAR_1 . METHOD_4 ( ) ; if ( VAR_2 == null ) { return ; } if ( listener . METHOD_5 ( VAR_2 . name , VAR_2 ) ) { VAR_3 . add ( VAR_2 ) ; model . METHOD_6 ( ) ; } }', '[\'TYPE_1: EditRegistrationDialog\', \'TYPE_2: GitblitRegistration\', \'METHOD_3: setVisible\', \'METHOD_5: saveRegistration\', \'METHOD_4: getRegistration\', \'METHOD_6: fireTableDataChanged\', \'METHOD_1: getOwner\', \'METHOD_2: setLocationRelativeTo\', \'VAR_1: dialog\', \'VAR_3: model.list\', \'VAR_2: reg\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/RegistrationsDialog.java', 15, '185:9', '197:9', 76, 10 ), ( 5, 261, 13, 'private void delete() {\n    List<GitblitRegistration> list = new ArrayList<GitblitRegistration>();\n    for (int i : registrationsTable.getSelectedRows()) {\n    int model = registrationsTable.convertRowIndexToModel(i);\n    GitblitRegistration reg = registrations.get(model);\n    list.add(reg);\n    }\n    if (listener.deleteRegistrations(list)) {\n    registrations.removeAll(list);\n    model.fireTableDataChanged();\n    }\n    }', '[\'private\', \'void\', \'delete\', \'(\', \')\', \'{\', \'List\', \'<\', \'GitblitRegistration\', \'>\', \'list\', \'=\', \'new\', \'ArrayList\', \'<\', \'GitblitRegistration\', \'>\', \'(\', \')\', \';\', \'for\', \'(\', \'int\', \'i\', \':\', \'registrationsTable\', \'.\', \'getSelectedRows\', \'(\', \')\', \')\', \'{\', \'int\', \'model\', \'=\', \'registrationsTable\', \'.\', \'convertRowIndexToModel\', \'(\', \'i\', \')\', \';\', \'GitblitRegistration\', \'reg\', \'=\', \'registrations\', \'.\', \'get\', \'(\', \'model\', \')\', \';\', \'list\', \'.\', \'add\', \'(\', \'reg\', \')\', \';\', \'}\', \'if\', \'(\', \'listener\', \'.\', \'deleteRegistrations\', \'(\', \'list\', \')\', \')\', \'{\', \'registrations\', \'.\', \'removeAll\', \'(\', \'list\', \')\', \';\', \'model\', \'.\', \'fireTableDataChanged\', \'(\', \')\', \';\', \'}\', \'}\']', 'private void METHOD_1 ( ) { List < TYPE_1 > list = new ArrayList < TYPE_1 > ( ) ; for ( int i : VAR_1 . METHOD_2 ( ) ) { int model = VAR_1 . METHOD_3 ( i ) ; TYPE_1 VAR_2 = VAR_3 . get ( model ) ; list . add ( VAR_2 ) ; } if ( listener . METHOD_4 ( list ) ) { VAR_3 . METHOD_5 ( list ) ; model . METHOD_6 ( ) ; } }', '[\'TYPE_1: GitblitRegistration\', \'METHOD_3: convertRowIndexToModel\', \'METHOD_5: removeAll\', \'METHOD_2: getSelectedRows\', \'METHOD_4: deleteRegistrations\', \'METHOD_6: fireTableDataChanged\', \'METHOD_1: delete\', \'VAR_3: registrations\', \'VAR_1: registrationsTable\', \'VAR_2: reg\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/RegistrationsDialog.java', 15, '216:9', '227:9', 81, 9 ), ( 5, 261, 14, 'public RegistrationsDialog(List<GitblitRegistration> registrations,\n    			RegistrationListener listener) {\n    super();\n    this.registrations = registrations;\n    this.listener = listener;\n    setTitle(Translation.get("gb.manage"));\n    setIconImage(new ImageIcon(getClass().getResource("/gitblt-favicon.png")).getImage());\n    initialize();\n    setSize(600, 400);\n    }', '[\'public\', \'RegistrationsDialog\', \'(\', \'List\', \'<\', \'GitblitRegistration\', \'>\', \'registrations\', \',\', \'RegistrationListener\', \'listener\', \')\', \'{\', \'super\', \'(\', \')\', \';\', \'this\', \'.\', \'registrations\', \'=\', \'registrations\', \';\', \'this\', \'.\', \'listener\', \'=\', \'listener\', \';\', \'setTitle\', \'(\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.manage"\', \')\', \')\', \';\', \'setIconImage\', \'(\', \'new\', \'ImageIcon\', \'(\', \'getClass\', \'(\', \')\', \'.\', \'getResource\', \'(\', \'"/gitblt-favicon.png"\', \')\', \')\', \'.\', \'getImage\', \'(\', \')\', \')\', \';\', \'initialize\', \'(\', \')\', \';\', \'setSize\', \'(\', \'600\', \',\', \'400\', \')\', \';\', \'}\']', 'public VAR_1 ( List < TYPE_1 > VAR_2 , TYPE_2 listener ) { super ( ) ; this . VAR_2 = VAR_2 ; this . listener = listener ; METHOD_1 ( TYPE_3 . get ( STRING_1 ) ) ; METHOD_2 ( new TYPE_4 ( getClass ( ) . METHOD_3 ( STRING_2 ) ) . METHOD_4 ( ) ) ; METHOD_5 ( ) ; METHOD_6 ( INT_1 , INT_2 ) ; }', '[\'TYPE_2: RegistrationListener\', \'TYPE_4: ImageIcon\', \'TYPE_3: Translation\', \'TYPE_1: GitblitRegistration\', \'METHOD_3: getResource\', \'METHOD_6: setSize\', \'METHOD_2: setIconImage\', \'METHOD_1: setTitle\', \'METHOD_5: initialize\', \'METHOD_4: getImage\', \'VAR_2: registrations\', \'VAR_1: RegistrationsDialog\', \'INT_2: 400\', \'INT_1: 600\', \'STRING_1: "gb.manage"\', \'STRING_2: "/gitblt-favicon.png"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/RegistrationsDialog.java', 15, '69:9', '78:9', 67, 9 ), ( 5, 262, 7, 'private JPanel newLabelPanel(String text, JComponent field) {\n    JLabel label = new JLabel(text);\n    label.setFont(label.getFont().deriveFont(Font.BOLD));\n    label.setPreferredSize(new Dimension(75, 10));\n    JPanel jpanel = new JPanel(new BorderLayout());\n    jpanel.add(label, BorderLayout.WEST);\n    jpanel.add(field, BorderLayout.CENTER);\n    return jpanel;\n    }', '[\'private\', \'JPanel\', \'newLabelPanel\', \'(\', \'String\', \'text\', \',\', \'JComponent\', \'field\', \')\', \'{\', \'JLabel\', \'label\', \'=\', \'new\', \'JLabel\', \'(\', \'text\', \')\', \';\', \'label\', \'.\', \'setFont\', \'(\', \'label\', \'.\', \'getFont\', \'(\', \')\', \'.\', \'deriveFont\', \'(\', \'Font.BOLD\', \')\', \')\', \';\', \'label\', \'.\', \'setPreferredSize\', \'(\', \'new\', \'Dimension\', \'(\', \'75\', \',\', \'10\', \')\', \')\', \';\', \'JPanel\', \'jpanel\', \'=\', \'new\', \'JPanel\', \'(\', \'new\', \'BorderLayout\', \'(\', \')\', \')\', \';\', \'jpanel\', \'.\', \'add\', \'(\', \'label\', \',\', \'BorderLayout.WEST\', \')\', \';\', \'jpanel\', \'.\', \'add\', \'(\', \'field\', \',\', \'BorderLayout.CENTER\', \')\', \';\', \'return\', \'jpanel\', \';\', \'}\']', 'private TYPE_1 METHOD_1 ( String text , TYPE_2 field ) { TYPE_3 VAR_1 = new TYPE_3 ( text ) ; VAR_1 . METHOD_2 ( VAR_1 . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ) ; VAR_1 . METHOD_5 ( new TYPE_4 ( INT_1 , INT_2 ) ) ; TYPE_1 VAR_3 = new TYPE_1 ( new TYPE_5 ( ) ) ; VAR_3 . add ( VAR_1 , VAR_4 ) ; VAR_3 . add ( field , VAR_5 ) ; return VAR_3 ; }', '[\'TYPE_1: JPanel\', \'TYPE_5: BorderLayout\', \'TYPE_2: JComponent\', \'TYPE_3: JLabel\', \'TYPE_4: Dimension\', \'METHOD_5: setPreferredSize\', \'METHOD_1: newLabelPanel\', \'METHOD_4: deriveFont\', \'METHOD_3: getFont\', \'METHOD_2: setFont\', \'VAR_5: BorderLayout.CENTER\', \'VAR_3: jpanel\', \'VAR_4: BorderLayout.WEST\', \'VAR_1: label\', \'VAR_2: Font.BOLD\', \'INT_1: 75\', \'INT_2: 10\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/EditRegistrationDialog.java', 13, '158:9', '166:9', 87, 8 ), ( 5, 262, 8, 'private boolean validateFields() {\n    String name = nameField.getText();\n    if (StringUtils.isEmpty(name)) {\n    error("Please enter a name for this registration!");\n    return false;\n    }\n    String url = urlField.getText();\n    if (StringUtils.isEmpty(url)) {\n    error("Please enter a url for this registration!");\n    return false;\n    }\n    return true;\n    }', '[\'private\', \'boolean\', \'validateFields\', \'(\', \')\', \'{\', \'String\', \'name\', \'=\', \'nameField\', \'.\', \'getText\', \'(\', \')\', \';\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'name\', \')\', \')\', \'{\', \'error\', \'(\', \'"Please enter a name for this registration!"\', \')\', \';\', \'return\', \'false\', \';\', \'}\', \'String\', \'url\', \'=\', \'urlField\', \'.\', \'getText\', \'(\', \')\', \';\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'url\', \')\', \')\', \'{\', \'error\', \'(\', \'"Please enter a url for this registration!"\', \')\', \';\', \'return\', \'false\', \';\', \'}\', \'return\', \'true\', \';\', \'}\']', 'private boolean METHOD_1 ( ) { String name = VAR_1 . METHOD_2 ( ) ; if ( StringUtils . isEmpty ( name ) ) { error ( STRING_1 ) ; return false ; } String url = VAR_2 . METHOD_2 ( ) ; if ( StringUtils . isEmpty ( url ) ) { error ( STRING_2 ) ; return false ; } return true ; }', '[\'METHOD_2: getText\', \'METHOD_1: validateFields\', \'VAR_1: nameField\', \'VAR_2: urlField\', \'STRING_1: "Please enter a name for this registration!"\', \'STRING_2: "Please enter a url for this registration!"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/EditRegistrationDialog.java', 13, '168:9', '180:9', 63, 10 ), ( 5, 262, 10, 'public GitblitRegistration getRegistration() {\n    if (canceled) {\n    return null;\n    }\n    GitblitRegistration reg = new GitblitRegistration(nameField.getText(), urlField.getText(),\n    				accountField.getText(), passwordField.getPassword());\n    reg.savePassword = savePassword.isSelected();\n    return reg;\n    }', '[\'public\', \'GitblitRegistration\', \'getRegistration\', \'(\', \')\', \'{\', \'if\', \'(\', \'canceled\', \')\', \'{\', \'return\', \'null\', \';\', \'}\', \'GitblitRegistration\', \'reg\', \'=\', \'new\', \'GitblitRegistration\', \'(\', \'nameField\', \'.\', \'getText\', \'(\', \')\', \',\', \'urlField\', \'.\', \'getText\', \'(\', \')\', \',\', \'accountField\', \'.\', \'getText\', \'(\', \')\', \',\', \'passwordField\', \'.\', \'getPassword\', \'(\', \')\', \')\', \';\', \'reg.savePassword\', \'=\', \'savePassword\', \'.\', \'isSelected\', \'(\', \')\', \';\', \'return\', \'reg\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( ) { if ( VAR_1 ) { return null ; } TYPE_1 VAR_2 = new TYPE_1 ( VAR_3 . METHOD_2 ( ) , VAR_4 . METHOD_2 ( ) , VAR_5 . METHOD_2 ( ) , VAR_6 . METHOD_3 ( ) ) ; VAR_7 = VAR_8 . METHOD_4 ( ) ; return VAR_2 ; }', '[\'TYPE_1: GitblitRegistration\', \'METHOD_3: getPassword\', \'METHOD_2: getText\', \'METHOD_4: isSelected\', \'METHOD_1: getRegistration\', \'VAR_1: canceled\', \'VAR_7: reg.savePassword\', \'VAR_2: reg\', \'VAR_5: accountField\', \'VAR_3: nameField\', \'VAR_6: passwordField\', \'VAR_8: savePassword\', \'VAR_4: urlField\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/EditRegistrationDialog.java', 13, '187:9', '195:9', 54, 7 ), ( 5, 263, 0, 'private JLabel newRefLabel() {\n    JLabel label = new JLabel();\n    label.setOpaque(true);\n    Font font = label.getFont();\n    label.setFont(font.deriveFont(font.getSize2D() - 1f));\n    return label;\n    }', '[\'private\', \'JLabel\', \'newRefLabel\', \'(\', \')\', \'{\', \'JLabel\', \'label\', \'=\', \'new\', \'JLabel\', \'(\', \')\', \';\', \'label\', \'.\', \'setOpaque\', \'(\', \'true\', \')\', \';\', \'Font\', \'font\', \'=\', \'label\', \'.\', \'getFont\', \'(\', \')\', \';\', \'label\', \'.\', \'setFont\', \'(\', \'font\', \'.\', \'deriveFont\', \'(\', \'font\', \'.\', \'getSize2D\', \'(\', \')\', \'-\', \'1f\', \')\', \')\', \';\', \'return\', \'label\', \';\', \'}\']', 'private TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; TYPE_2 VAR_2 = VAR_1 . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( VAR_2 . METHOD_5 ( VAR_2 . METHOD_6 ( ) - FLOAT_1 ) ) ; return VAR_1 ; }', '[\'TYPE_1: JLabel\', \'TYPE_2: Font\', \'METHOD_5: deriveFont\', \'METHOD_3: getFont\', \'METHOD_4: setFont\', \'METHOD_6: getSize2D\', \'METHOD_2: setOpaque\', \'METHOD_1: newRefLabel\', \'VAR_1: label\', \'VAR_2: font\', \'FLOAT_1: 1f\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/MessageRenderer.java', 6, '88:9', '94:9', 48, 6 ), ( 5, 263, 1, 'private void resetRef(JLabel label) {\n    label.setText("");\n    label.setBackground(messageLabel.getBackground());\n    label.setBorder(null);\n    label.setVisible(false);\n    }', '[\'private\', \'void\', \'resetRef\', \'(\', \'JLabel\', \'label\', \')\', \'{\', \'label\', \'.\', \'setText\', \'(\', \'""\', \')\', \';\', \'label\', \'.\', \'setBackground\', \'(\', \'messageLabel\', \'.\', \'getBackground\', \'(\', \')\', \')\', \';\', \'label\', \'.\', \'setBorder\', \'(\', \'null\', \')\', \';\', \'label\', \'.\', \'setVisible\', \'(\', \'false\', \')\', \';\', \'}\']', 'private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( VAR_2 . METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( null ) ; VAR_1 . METHOD_6 ( false ) ; }', '[\'TYPE_1: JLabel\', \'METHOD_6: setVisible\', \'METHOD_5: setBorder\', \'METHOD_1: resetRef\', \'METHOD_3: setBackground\', \'METHOD_4: getBackground\', \'METHOD_2: setText\', \'VAR_1: label\', \'VAR_2: messageLabel\', \'STRING_1: ""\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/MessageRenderer.java', 6, '96:9', '101:9', 40, 5 ), ( 5, 264, 3, 'private JPanel createFieldPanel(String key, JLabel valueLabel) {\n    JPanel panel = new JPanel(new FlowLayout(FlowLayout.LEFT, Utils.MARGIN, 0));\n    JLabel textLabel = new JLabel(Translation.get(key));\n    textLabel.setFont(textLabel.getFont().deriveFont(Font.BOLD));\n    textLabel.setPreferredSize(new Dimension(120, 10));\n    panel.add(textLabel);\n    panel.add(valueLabel);\n    return panel;\n    }', '[\'private\', \'JPanel\', \'createFieldPanel\', \'(\', \'String\', \'key\', \',\', \'JLabel\', \'valueLabel\', \')\', \'{\', \'JPanel\', \'panel\', \'=\', \'new\', \'JPanel\', \'(\', \'new\', \'FlowLayout\', \'(\', \'FlowLayout.LEFT\', \',\', \'Utils.MARGIN\', \',\', \'0\', \')\', \')\', \';\', \'JLabel\', \'textLabel\', \'=\', \'new\', \'JLabel\', \'(\', \'Translation\', \'.\', \'get\', \'(\', \'key\', \')\', \')\', \';\', \'textLabel\', \'.\', \'setFont\', \'(\', \'textLabel\', \'.\', \'getFont\', \'(\', \')\', \'.\', \'deriveFont\', \'(\', \'Font.BOLD\', \')\', \')\', \';\', \'textLabel\', \'.\', \'setPreferredSize\', \'(\', \'new\', \'Dimension\', \'(\', \'120\', \',\', \'10\', \')\', \')\', \';\', \'panel\', \'.\', \'add\', \'(\', \'textLabel\', \')\', \';\', \'panel\', \'.\', \'add\', \'(\', \'valueLabel\', \')\', \';\', \'return\', \'panel\', \';\', \'}\']', 'private TYPE_1 METHOD_1 ( String key , TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( new TYPE_3 ( VAR_3 , VAR_4 , 0 ) ) ; TYPE_2 VAR_5 = new TYPE_2 ( TYPE_4 . get ( key ) ) ; VAR_5 . METHOD_2 ( VAR_5 . METHOD_3 ( ) . METHOD_4 ( VAR_6 ) ) ; VAR_5 . METHOD_5 ( new TYPE_5 ( INT_1 , INT_2 ) ) ; VAR_2 . add ( VAR_5 ) ; VAR_2 . add ( VAR_1 ) ; return VAR_2 ; }', '[\'TYPE_1: JPanel\', \'TYPE_4: Translation\', \'TYPE_3: FlowLayout\', \'TYPE_2: JLabel\', \'TYPE_5: Dimension\', \'METHOD_5: setPreferredSize\', \'METHOD_1: createFieldPanel\', \'METHOD_4: deriveFont\', \'METHOD_3: getFont\', \'METHOD_2: setFont\', \'VAR_3: FlowLayout.LEFT\', \'VAR_5: textLabel\', \'VAR_1: valueLabel\', \'VAR_4: Utils.MARGIN\', \'VAR_6: Font.BOLD\', \'VAR_2: panel\', \'INT_1: 120\', \'INT_2: 10\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/StatusPanel.java', 10, '121:9', '129:9', 94, 8 ), ( 5, 265, 3, '@Override\n    public void itemStateChanged(ItemEvent e) {\n    if (e.getStateChange() == ItemEvent.SELECTED) {\n    AccessRestrictionType art = (AccessRestrictionType) accessRestriction.getSelectedItem();\n    EditRepositoryDialog.this.setupAccessPermissions(art);\n    }\n    }', '[\'public\', \'void\', \'itemStateChanged\', \'(\', \'ItemEvent\', \'e\', \')\', \'{\', \'if\', \'(\', \'e\', \'.\', \'getStateChange\', \'(\', \')\', \'==\', \'ItemEvent.SELECTED\', \')\', \'{\', \'AccessRestrictionType\', \'art\', \'=\', \'(\', \'AccessRestrictionType\', \')\', \'accessRestriction\', \'.\', \'getSelectedItem\', \'(\', \')\', \';\', \'EditRepositoryDialog.\', \'this\', \'.\', \'setupAccessPermissions\', \'(\', \'art\', \')\', \';\', \'}\', \'}\']', 'public void METHOD_1 ( TYPE_1 e ) { if ( e . METHOD_2 ( ) == VAR_1 ) { TYPE_2 VAR_2 = ( TYPE_2 ) VAR_3 . METHOD_3 ( ) ; VAR_4 this . METHOD_4 ( VAR_2 ) ; } }', '[\'TYPE_1: ItemEvent\', \'TYPE_2: AccessRestrictionType\', \'METHOD_1: itemStateChanged\', \'METHOD_2: getStateChange\', \'METHOD_3: getSelectedItem\', \'METHOD_4: setupAccessPermissions\', \'VAR_2: art\', \'VAR_1: ItemEvent.SELECTED\', \'VAR_4: EditRepositoryDialog.\', \'VAR_3: accessRestriction\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/EditRepositoryDialog.java', 33, '245:25', '251:25', 44, 5 ), ( 5, 265, 4, '@Override\n    public void itemStateChanged(ItemEvent e) {\n    if (e.getStateChange() == ItemEvent.SELECTED) {\n    usersPalette.setEnabled(false);\n    teamsPalette.setEnabled(false);\n    }\n    }', '[\'public\', \'void\', \'itemStateChanged\', \'(\', \'ItemEvent\', \'e\', \')\', \'{\', \'if\', \'(\', \'e\', \'.\', \'getStateChange\', \'(\', \')\', \'==\', \'ItemEvent.SELECTED\', \')\', \'{\', \'usersPalette\', \'.\', \'setEnabled\', \'(\', \'false\', \')\', \';\', \'teamsPalette\', \'.\', \'setEnabled\', \'(\', \'false\', \')\', \';\', \'}\', \'}\']', 'public void METHOD_1 ( TYPE_1 e ) { if ( e . METHOD_2 ( ) == VAR_1 ) { VAR_2 . METHOD_3 ( false ) ; VAR_3 . METHOD_3 ( false ) ; } }', '[\'TYPE_1: ItemEvent\', \'METHOD_3: setEnabled\', \'METHOD_1: itemStateChanged\', \'METHOD_2: getStateChange\', \'VAR_2: usersPalette\', \'VAR_1: ItemEvent.SELECTED\', \'VAR_3: teamsPalette\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/EditRepositoryDialog.java', 33, '259:25', '265:25', 38, 5 ), ( 5, 265, 5, '@Override\n    public void itemStateChanged(ItemEvent e) {\n    if (e.getStateChange() == ItemEvent.SELECTED) {\n    usersPalette.setEnabled(true);\n    teamsPalette.setEnabled(true);\n    }\n    }', '[\'public\', \'void\', \'itemStateChanged\', \'(\', \'ItemEvent\', \'e\', \')\', \'{\', \'if\', \'(\', \'e\', \'.\', \'getStateChange\', \'(\', \')\', \'==\', \'ItemEvent.SELECTED\', \')\', \'{\', \'usersPalette\', \'.\', \'setEnabled\', \'(\', \'true\', \')\', \';\', \'teamsPalette\', \'.\', \'setEnabled\', \'(\', \'true\', \')\', \';\', \'}\', \'}\']', 'public void METHOD_1 ( TYPE_1 e ) { if ( e . METHOD_2 ( ) == VAR_1 ) { VAR_2 . METHOD_3 ( true ) ; VAR_3 . METHOD_3 ( true ) ; } }', '[\'TYPE_1: ItemEvent\', \'METHOD_3: setEnabled\', \'METHOD_1: itemStateChanged\', \'METHOD_2: getStateChange\', \'VAR_2: usersPalette\', \'VAR_1: ItemEvent.SELECTED\', \'VAR_3: teamsPalette\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/EditRepositoryDialog.java', 33, '271:25', '277:25', 38, 5 ), ( 5, 265, 10, 'private JPanel newFieldPanel(String label, int labelSize, JComponent comp) {\n    JLabel fieldLabel = new JLabel(label);\n    fieldLabel.setFont(fieldLabel.getFont().deriveFont(Font.BOLD));\n    fieldLabel.setPreferredSize(new Dimension(labelSize, 20));\n    JPanel panel = new JPanel(new FlowLayout(FlowLayout.LEFT, 10, 0));\n    panel.add(fieldLabel);\n    panel.add(comp);\n    return panel;\n    }', '[\'private\', \'JPanel\', \'newFieldPanel\', \'(\', \'String\', \'label\', \',\', \'int\', \'labelSize\', \',\', \'JComponent\', \'comp\', \')\', \'{\', \'JLabel\', \'fieldLabel\', \'=\', \'new\', \'JLabel\', \'(\', \'label\', \')\', \';\', \'fieldLabel\', \'.\', \'setFont\', \'(\', \'fieldLabel\', \'.\', \'getFont\', \'(\', \')\', \'.\', \'deriveFont\', \'(\', \'Font.BOLD\', \')\', \')\', \';\', \'fieldLabel\', \'.\', \'setPreferredSize\', \'(\', \'new\', \'Dimension\', \'(\', \'labelSize\', \',\', \'20\', \')\', \')\', \';\', \'JPanel\', \'panel\', \'=\', \'new\', \'JPanel\', \'(\', \'new\', \'FlowLayout\', \'(\', \'FlowLayout.LEFT\', \',\', \'10\', \',\', \'0\', \')\', \')\', \';\', \'panel\', \'.\', \'add\', \'(\', \'fieldLabel\', \')\', \';\', \'panel\', \'.\', \'add\', \'(\', \'comp\', \')\', \';\', \'return\', \'panel\', \';\', \'}\']', 'private TYPE_1 METHOD_1 ( String VAR_1 , int VAR_2 , TYPE_2 VAR_3 ) { TYPE_3 VAR_4 = new TYPE_3 ( VAR_1 ) ; VAR_4 . METHOD_2 ( VAR_4 . METHOD_3 ( ) . METHOD_4 ( VAR_5 ) ) ; VAR_4 . METHOD_5 ( new TYPE_4 ( VAR_2 , INT_1 ) ) ; TYPE_1 VAR_6 = new TYPE_1 ( new TYPE_5 ( VAR_7 , INT_2 , 0 ) ) ; VAR_6 . add ( VAR_4 ) ; VAR_6 . add ( VAR_3 ) ; return VAR_6 ; }', '[\'TYPE_1: JPanel\', \'TYPE_5: FlowLayout\', \'TYPE_2: JComponent\', \'TYPE_3: JLabel\', \'TYPE_4: Dimension\', \'METHOD_1: newFieldPanel\', \'METHOD_5: setPreferredSize\', \'METHOD_4: deriveFont\', \'METHOD_3: getFont\', \'METHOD_2: setFont\', \'VAR_3: comp\', \'VAR_2: labelSize\', \'VAR_7: FlowLayout.LEFT\', \'VAR_4: fieldLabel\', \'VAR_1: label\', \'VAR_5: Font.BOLD\', \'VAR_6: panel\', \'INT_1: 20\', \'INT_2: 10\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/EditRepositoryDialog.java', 33, '460:9', '468:9', 90, 8 ), ( 5, 265, 23, 'private void showInherited(List<String> list, JLabel label) {\n    StringBuilder sb = new StringBuilder();\n    if (list != null && list.size() > 0) {\n    sb.append("<html><body><b>INHERITED</b><ul style=\\"margin-left:5px;list-style-type: none;\\">");\n    for (String script : list) {\n    sb.append("<li>").append(script).append("</li>");\n    }\n    sb.append("</ul></body></html>");\n    }\n    label.setText(sb.toString());\n    }', '[\'private\', \'void\', \'showInherited\', \'(\', \'List\', \'<\', \'String\', \'>\', \'list\', \',\', \'JLabel\', \'label\', \')\', \'{\', \'StringBuilder\', \'sb\', \'=\', \'new\', \'StringBuilder\', \'(\', \')\', \';\', \'if\', \'(\', \'list\', \'!=\', \'null\', \'&&\', \'list\', \'.\', \'size\', \'(\', \')\', \'>\', \'0\', \')\', \'{\', \'sb\', \'.\', \'append\', \'(\', \'"<html><body><b>INHERITED</b><ul style=\\\\"margin-left:5px;list-style-type: none;\\\\">"\', \')\', \';\', \'for\', \'(\', \'String\', \'script\', \':\', \'list\', \')\', \'{\', \'sb\', \'.\', \'append\', \'(\', \'"<li>"\', \')\', \'.\', \'append\', \'(\', \'script\', \')\', \'.\', \'append\', \'(\', \'"</li>"\', \')\', \';\', \'}\', \'sb\', \'.\', \'append\', \'(\', \'"</ul></body></html>"\', \')\', \';\', \'}\', \'label\', \'.\', \'setText\', \'(\', \'sb\', \'.\', \'toString\', \'(\', \')\', \')\', \';\', \'}\']', 'private void METHOD_1 ( List < String > list , TYPE_1 VAR_1 ) { StringBuilder sb = new StringBuilder ( ) ; if ( list != null && list . size ( ) > 0 ) { sb . append ( STRING_1 ) ; for ( String VAR_2 : list ) { sb . append ( STRING_2 ) . append ( VAR_2 ) . append ( STRING_3 ) ; } sb . append ( STRING_4 ) ; } VAR_1 . METHOD_2 ( sb . toString ( ) ) ; }', '[\'TYPE_1: JLabel\', \'METHOD_1: showInherited\', \'METHOD_2: setText\', \'VAR_1: label\', \'VAR_2: script\', \'STRING_4: "</ul></body></html>"\', \'STRING_1: "<html><body><b>INHERITED</b><ul style=\\\\"margin-left:5px;list-style-type: none;\\\\">"\', \'STRING_3: "</li>"\', \'STRING_2: "<li>"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/EditRepositoryDialog.java', 33, '678:9', '688:9', 87, 8 ), ( 5, 265, 32, 'public EditRepositoryDialog(int protocolVersion, RepositoryModel aRepository) {\n    super();\n    this.repositoryName = aRepository.name;\n    this.repository = new RepositoryModel();\n    this.repositoryNames = new HashSet<String>();\n    this.isCreate = false;\n    initialize(protocolVersion, aRepository);\n    setModal(true);\n    setResizable(false);\n    setTitle(Translation.get("gb.edit") + ": " + aRepository.name);\n    setIconImage(new ImageIcon(getClass()\n    .getResource("/gitblt-favicon.png")).getImage());\n    }', '[\'public\', \'EditRepositoryDialog\', \'(\', \'int\', \'protocolVersion\', \',\', \'RepositoryModel\', \'aRepository\', \')\', \'{\', \'super\', \'(\', \')\', \';\', \'this\', \'.\', \'repositoryName\', \'=\', \'aRepository\', \'.\', \'name\', \';\', \'this\', \'.\', \'repository\', \'=\', \'new\', \'RepositoryModel\', \'(\', \')\', \';\', \'this\', \'.\', \'repositoryNames\', \'=\', \'new\', \'HashSet\', \'<\', \'String\', \'>\', \'(\', \')\', \';\', \'this\', \'.\', \'isCreate\', \'=\', \'false\', \';\', \'initialize\', \'(\', \'protocolVersion\', \',\', \'aRepository\', \')\', \';\', \'setModal\', \'(\', \'true\', \')\', \';\', \'setResizable\', \'(\', \'false\', \')\', \';\', \'setTitle\', \'(\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.edit"\', \')\', \'+\', \'": "\', \'+\', \'aRepository\', \'.\', \'name\', \')\', \';\', \'setIconImage\', \'(\', \'new\', \'ImageIcon\', \'(\', \'getClass\', \'(\', \')\', \'.\', \'getResource\', \'(\', \'"/gitblt-favicon.png"\', \')\', \')\', \'.\', \'getImage\', \'(\', \')\', \')\', \';\', \'}\']', 'public VAR_1 ( int VAR_2 , TYPE_1 VAR_3 ) { super ( ) ; this . VAR_4 = VAR_3 . name ; this . VAR_5 = new TYPE_1 ( ) ; this . VAR_6 = new TYPE_2 < String > ( ) ; this . VAR_7 = false ; METHOD_1 ( VAR_2 , VAR_3 ) ; METHOD_2 ( true ) ; METHOD_3 ( false ) ; METHOD_4 ( TYPE_3 . get ( STRING_1 ) + STRING_2 + VAR_3 . name ) ; METHOD_5 ( new TYPE_4 ( getClass ( ) . METHOD_6 ( STRING_3 ) ) . METHOD_7 ( ) ) ; }', '[\'TYPE_4: ImageIcon\', \'TYPE_3: Translation\', \'TYPE_1: RepositoryModel\', \'TYPE_2: HashSet\', \'METHOD_6: getResource\', \'METHOD_2: setModal\', \'METHOD_3: setResizable\', \'METHOD_5: setIconImage\', \'METHOD_4: setTitle\', \'METHOD_1: initialize\', \'METHOD_7: getImage\', \'VAR_7: isCreate\', \'VAR_6: repositoryNames\', \'VAR_2: protocolVersion\', \'VAR_3: aRepository\', \'VAR_4: repositoryName\', \'VAR_5: repository\', \'VAR_1: EditRepositoryDialog\', \'STRING_1: "gb.edit"\', \'STRING_2: ": "\', \'STRING_3: "/gitblt-favicon.png"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/EditRepositoryDialog.java', 33, '159:9', '171:9', 98, 12 ), ( 5, 266, 0, 'public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected,\n    			boolean hasFocus, int row, int column) {\n    super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);\n    if (value instanceof RepositoryModel) {\n    RepositoryModel model = (RepositoryModel) value;\n    if (gitblit.isSubscribed(model)) {\n    setIcon(subscribedIcon);\n    } else {\n    setIcon(blankIcon);\n    }\n    }\n    return this;\n    }', '[\'public\', \'Component\', \'getTableCellRendererComponent\', \'(\', \'JTable\', \'table\', \',\', \'Object\', \'value\', \',\', \'boolean\', \'isSelected\', \',\', \'boolean\', \'hasFocus\', \',\', \'int\', \'row\', \',\', \'int\', \'column\', \')\', \'{\', \'super\', \'.\', \'getTableCellRendererComponent\', \'(\', \'table\', \',\', \'value\', \',\', \'isSelected\', \',\', \'hasFocus\', \',\', \'row\', \',\', \'column\', \')\', \';\', \'if\', \'(\', \'value\', \'instanceof\', \'RepositoryModel\', \')\', \'{\', \'RepositoryModel\', \'model\', \'=\', \'(\', \'RepositoryModel\', \')\', \'value\', \';\', \'if\', \'(\', \'gitblit\', \'.\', \'isSubscribed\', \'(\', \'model\', \')\', \')\', \'{\', \'setIcon\', \'(\', \'subscribedIcon\', \')\', \';\', \'}\', \'else\', \'{\', \'setIcon\', \'(\', \'blankIcon\', \')\', \';\', \'}\', \'}\', \'return\', \'this\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , Object value , boolean VAR_2 , boolean VAR_3 , int row , int VAR_4 ) { super . METHOD_1 ( VAR_1 , value , VAR_2 , VAR_3 , row , VAR_4 ) ; if ( value instanceof TYPE_3 ) { TYPE_3 model = ( TYPE_3 ) value ; if ( VAR_5 . METHOD_2 ( model ) ) { METHOD_3 ( VAR_6 ) ; } else { METHOD_3 ( VAR_7 ) ; } } return this ; }', '[\'TYPE_2: JTable\', \'TYPE_3: RepositoryModel\', \'TYPE_1: Component\', \'METHOD_3: setIcon\', \'METHOD_2: isSubscribed\', \'METHOD_1: getTableCellRendererComponent\', \'VAR_7: blankIcon\', \'VAR_2: isSelected\', \'VAR_4: column\', \'VAR_5: gitblit\', \'VAR_3: hasFocus\', \'VAR_1: table\', \'VAR_6: subscribedIcon\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/SubscribedRepositoryRenderer.java', 2, '49:9', '61:9', 84, 10 ), ( 5, 266, 1, 'public SubscribedRepositoryRenderer(GitblitClient gitblit) {\n    super();\n    this.gitblit = gitblit;\n    blankIcon = new ImageIcon(getClass().getResource("/blank.png"));\n    subscribedIcon = new ImageIcon(getClass().getResource("/bullet_feed.png"));\n    }', '[\'public\', \'SubscribedRepositoryRenderer\', \'(\', \'GitblitClient\', \'gitblit\', \')\', \'{\', \'super\', \'(\', \')\', \';\', \'this\', \'.\', \'gitblit\', \'=\', \'gitblit\', \';\', \'blankIcon\', \'=\', \'new\', \'ImageIcon\', \'(\', \'getClass\', \'(\', \')\', \'.\', \'getResource\', \'(\', \'"/blank.png"\', \')\', \')\', \';\', \'subscribedIcon\', \'=\', \'new\', \'ImageIcon\', \'(\', \'getClass\', \'(\', \')\', \'.\', \'getResource\', \'(\', \'"/bullet_feed.png"\', \')\', \')\', \';\', \'}\']', 'public VAR_1 ( TYPE_1 VAR_2 ) { super ( ) ; this . VAR_2 = VAR_2 ; VAR_3 = new TYPE_2 ( getClass ( ) . METHOD_1 ( STRING_1 ) ) ; VAR_4 = new TYPE_2 ( getClass ( ) . METHOD_1 ( STRING_2 ) ) ; }', '[\'TYPE_2: ImageIcon\', \'TYPE_1: GitblitClient\', \'METHOD_1: getResource\', \'VAR_3: blankIcon\', \'VAR_2: gitblit\', \'VAR_1: SubscribedRepositoryRenderer\', \'VAR_4: subscribedIcon\', \'STRING_1: "/blank.png"\', \'STRING_2: "/bullet_feed.png"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/SubscribedRepositoryRenderer.java', 2, '42:9', '47:9', 45, 5 ), ( 5, 267, 0, 'String getHexColor(Color c) {\n    StringBuilder sb = new StringBuilder();\n    sb.append(Integer.toHexString((c.getRGB() & 0x00FFFFFF)));\n    while (sb.length() < 6)\n    sb.insert(0, \'0\');\n    sb.insert(0, \'#\');\n    return sb.toString();\n    }', '[\'String\', \'getHexColor\', \'(\', \'Color\', \'c\', \')\', \'{\', \'StringBuilder\', \'sb\', \'=\', \'new\', \'StringBuilder\', \'(\', \')\', \';\', \'sb\', \'.\', \'append\', \'(\', \'Integer\', \'.\', \'toHexString\', \'(\', \'(\', \'c\', \'.\', \'getRGB\', \'(\', \')\', \'&\', \'0x00FFFFFF\', \')\', \')\', \')\', \';\', \'while\', \'(\', \'sb\', \'.\', \'length\', \'(\', \')\', \'<\', \'6\', \')\', \'sb\', \'.\', \'insert\', \'(\', \'0\', \',\', "\'0\'", \')\', \';\', \'sb\', \'.\', \'insert\', \'(\', \'0\', \',\', "\'#\'", \')\', \';\', \'return\', \'sb\', \'.\', \'toString\', \'(\', \')\', \';\', \'}\']', 'String METHOD_1 ( TYPE_1 c ) { StringBuilder sb = new StringBuilder ( ) ; sb . append ( Integer . METHOD_2 ( ( c . METHOD_3 ( ) & INT_1 ) ) ) ; while ( sb . length ( ) < INT_2 ) sb . METHOD_4 ( 0 , CHAR_1 ) ; sb . METHOD_4 ( 0 , CHAR_2 ) ; return sb . toString ( ) ; }', '[\'TYPE_1: Color\', \'METHOD_2: toHexString\', \'METHOD_4: insert\', \'METHOD_1: getHexColor\', \'METHOD_3: getRGB\', "CHAR_2: \'#\'", "CHAR_1: \'0\'", \'INT_1: 0x00FFFFFF\', \'INT_2: 6\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/NameRenderer.java', 6, '50:9', '57:9', 67, 7 ), ( 5, 267, 1, 'public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected,\n    			boolean hasFocus, int row, int column) {\n    super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);\n    setValue(value == null ? "" : value, isSelected);\n    return this;\n    }', '[\'public\', \'Component\', \'getTableCellRendererComponent\', \'(\', \'JTable\', \'table\', \',\', \'Object\', \'value\', \',\', \'boolean\', \'isSelected\', \',\', \'boolean\', \'hasFocus\', \',\', \'int\', \'row\', \',\', \'int\', \'column\', \')\', \'{\', \'super\', \'.\', \'getTableCellRendererComponent\', \'(\', \'table\', \',\', \'value\', \',\', \'isSelected\', \',\', \'hasFocus\', \',\', \'row\', \',\', \'column\', \')\', \';\', \'setValue\', \'(\', \'value\', \'==\', \'null\', \'?\', \'""\', \':\', \'value\', \',\', \'isSelected\', \')\', \';\', \'return\', \'this\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , Object value , boolean VAR_2 , boolean VAR_3 , int row , int VAR_4 ) { super . METHOD_1 ( VAR_1 , value , VAR_2 , VAR_3 , row , VAR_4 ) ; METHOD_2 ( value == null ? STRING_1 : value , VAR_2 ) ; return this ; }', '[\'TYPE_2: JTable\', \'TYPE_1: Component\', \'METHOD_2: setValue\', \'METHOD_1: getTableCellRendererComponent\', \'VAR_2: isSelected\', \'VAR_4: column\', \'VAR_3: hasFocus\', \'VAR_1: table\', \'STRING_1: ""\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/NameRenderer.java', 6, '59:9', '64:9', 57, 5 ), ( 5, 267, 2, '@Override\n    public Component getListCellRendererComponent(JList list, Object value, int index,\n    			boolean isSelected, boolean cellHasFocus) {\n    setValue(value == null ? "" : value, isSelected);\n    if (isSelected) {\n    setBackground(list.getSelectionBackground());\n    setForeground(list.getSelectionForeground());\n    } else {\n    setBackground(list.getBackground());\n    setForeground(CORNFLOWER);\n    }\n    return this;\n    }', '[\'public\', \'Component\', \'getListCellRendererComponent\', \'(\', \'JList\', \'list\', \',\', \'Object\', \'value\', \',\', \'int\', \'index\', \',\', \'boolean\', \'isSelected\', \',\', \'boolean\', \'cellHasFocus\', \')\', \'{\', \'setValue\', \'(\', \'value\', \'==\', \'null\', \'?\', \'""\', \':\', \'value\', \',\', \'isSelected\', \')\', \';\', \'if\', \'(\', \'isSelected\', \')\', \'{\', \'setBackground\', \'(\', \'list\', \'.\', \'getSelectionBackground\', \'(\', \')\', \')\', \';\', \'setForeground\', \'(\', \'list\', \'.\', \'getSelectionForeground\', \'(\', \')\', \')\', \';\', \'}\', \'else\', \'{\', \'setBackground\', \'(\', \'list\', \'.\', \'getBackground\', \'(\', \')\', \')\', \';\', \'setForeground\', \'(\', \'CORNFLOWER\', \')\', \';\', \'}\', \'return\', \'this\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( TYPE_2 list , Object value , int index , boolean VAR_1 , boolean VAR_2 ) { METHOD_2 ( value == null ? STRING_1 : value , VAR_1 ) ; if ( VAR_1 ) { METHOD_3 ( list . METHOD_4 ( ) ) ; METHOD_5 ( list . METHOD_6 ( ) ) ; } else { METHOD_3 ( list . METHOD_7 ( ) ) ; METHOD_5 ( VAR_3 ) ; } return this ; }', '[\'TYPE_1: Component\', \'TYPE_2: JList\', \'METHOD_1: getListCellRendererComponent\', \'METHOD_6: getSelectionForeground\', \'METHOD_2: setValue\', \'METHOD_5: setForeground\', \'METHOD_3: setBackground\', \'METHOD_7: getBackground\', \'METHOD_4: getSelectionBackground\', \'VAR_2: cellHasFocus\', \'VAR_3: CORNFLOWER\', \'VAR_1: isSelected\', \'STRING_1: ""\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/NameRenderer.java', 6, '66:9', '78:9', 77, 11 ), ( 5, 267, 3, 'private void setValue(Object value, boolean isSelected) {\n    String name = value.toString();\n    int lastSlash = name.lastIndexOf(\'/\');\n    if (!isSelected && lastSlash > -1) {\n    String group = name.substring(0, lastSlash + 1);\n    String repo = name.substring(lastSlash + 1);\n    setText("<html><body>" + groupSpan + group + "</span>" + repo);\n    } else {\n    this.setText(name);\n    }\n    }', '[\'private\', \'void\', \'setValue\', \'(\', \'Object\', \'value\', \',\', \'boolean\', \'isSelected\', \')\', \'{\', \'String\', \'name\', \'=\', \'value\', \'.\', \'toString\', \'(\', \')\', \';\', \'int\', \'lastSlash\', \'=\', \'name\', \'.\', \'lastIndexOf\', \'(\', "\'/\'", \')\', \';\', \'if\', \'(\', \'!\', \'isSelected\', \'&&\', \'lastSlash\', \'>\', \'-\', \'1\', \')\', \'{\', \'String\', \'group\', \'=\', \'name\', \'.\', \'substring\', \'(\', \'0\', \',\', \'lastSlash\', \'+\', \'1\', \')\', \';\', \'String\', \'repo\', \'=\', \'name\', \'.\', \'substring\', \'(\', \'lastSlash\', \'+\', \'1\', \')\', \';\', \'setText\', \'(\', \'"<html><body>"\', \'+\', \'groupSpan\', \'+\', \'group\', \'+\', \'"</span>"\', \'+\', \'repo\', \')\', \';\', \'}\', \'else\', \'{\', \'this\', \'.\', \'setText\', \'(\', \'name\', \')\', \';\', \'}\', \'}\']', 'private void METHOD_1 ( Object value , boolean VAR_1 ) { String name = value . toString ( ) ; int VAR_2 = name . METHOD_2 ( CHAR_1 ) ; if ( ! VAR_1 && VAR_2 > - 1 ) { String VAR_3 = name . substring ( 0 , VAR_2 + 1 ) ; String VAR_4 = name . substring ( VAR_2 + 1 ) ; METHOD_3 ( STRING_1 + VAR_5 + VAR_3 + STRING_2 + VAR_4 ) ; } else { this . METHOD_3 ( name ) ; } }', '[\'METHOD_2: lastIndexOf\', \'METHOD_1: setValue\', \'METHOD_3: setText\', \'VAR_5: groupSpan\', \'VAR_2: lastSlash\', \'VAR_4: repo\', \'VAR_1: isSelected\', \'VAR_3: group\', "CHAR_1: \'/\'", \'STRING_2: "</span>"\', \'STRING_1: "<html><body>"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/NameRenderer.java', 6, '80:9', '90:9', 91, 9 ), ( 5, 268, 8, 'private JPanel newFieldPanel(String label, JComponent comp) {\n    JLabel fieldLabel = new JLabel(label);\n    fieldLabel.setFont(fieldLabel.getFont().deriveFont(Font.BOLD));\n    fieldLabel.setPreferredSize(new Dimension(150, 20));\n    JPanel panel = new JPanel(new FlowLayout(FlowLayout.LEFT, 10, 0));\n    panel.add(fieldLabel);\n    panel.add(comp);\n    return panel;\n    }', '[\'private\', \'JPanel\', \'newFieldPanel\', \'(\', \'String\', \'label\', \',\', \'JComponent\', \'comp\', \')\', \'{\', \'JLabel\', \'fieldLabel\', \'=\', \'new\', \'JLabel\', \'(\', \'label\', \')\', \';\', \'fieldLabel\', \'.\', \'setFont\', \'(\', \'fieldLabel\', \'.\', \'getFont\', \'(\', \')\', \'.\', \'deriveFont\', \'(\', \'Font.BOLD\', \')\', \')\', \';\', \'fieldLabel\', \'.\', \'setPreferredSize\', \'(\', \'new\', \'Dimension\', \'(\', \'150\', \',\', \'20\', \')\', \')\', \';\', \'JPanel\', \'panel\', \'=\', \'new\', \'JPanel\', \'(\', \'new\', \'FlowLayout\', \'(\', \'FlowLayout.LEFT\', \',\', \'10\', \',\', \'0\', \')\', \')\', \';\', \'panel\', \'.\', \'add\', \'(\', \'fieldLabel\', \')\', \';\', \'panel\', \'.\', \'add\', \'(\', \'comp\', \')\', \';\', \'return\', \'panel\', \';\', \'}\']', 'private TYPE_1 METHOD_1 ( String VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 VAR_3 = new TYPE_3 ( VAR_1 ) ; VAR_3 . METHOD_2 ( VAR_3 . METHOD_3 ( ) . METHOD_4 ( VAR_4 ) ) ; VAR_3 . METHOD_5 ( new TYPE_4 ( INT_1 , INT_2 ) ) ; TYPE_1 VAR_5 = new TYPE_1 ( new TYPE_5 ( VAR_6 , INT_3 , 0 ) ) ; VAR_5 . add ( VAR_3 ) ; VAR_5 . add ( VAR_2 ) ; return VAR_5 ; }', '[\'TYPE_1: JPanel\', \'TYPE_5: FlowLayout\', \'TYPE_2: JComponent\', \'TYPE_3: JLabel\', \'TYPE_4: Dimension\', \'METHOD_1: newFieldPanel\', \'METHOD_5: setPreferredSize\', \'METHOD_4: deriveFont\', \'METHOD_3: getFont\', \'METHOD_2: setFont\', \'VAR_2: comp\', \'VAR_6: FlowLayout.LEFT\', \'VAR_3: fieldLabel\', \'VAR_1: label\', \'VAR_4: Font.BOLD\', \'VAR_5: panel\', \'INT_1: 150\', \'INT_2: 20\', \'INT_3: 10\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/EditTeamDialog.java', 20, '229:9', '237:9', 87, 8 ), ( 5, 268, 13, 'public void setUsers(List<String> users, List<String> selected) {\n    Collections.sort(users);\n    if (selected != null) {\n    Collections.sort(selected);\n    }\n    userPalette.setObjects(users, selected);\n    }', '[\'public\', \'void\', \'setUsers\', \'(\', \'List\', \'<\', \'String\', \'>\', \'users\', \',\', \'List\', \'<\', \'String\', \'>\', \'selected\', \')\', \'{\', \'Collections\', \'.\', \'sort\', \'(\', \'users\', \')\', \';\', \'if\', \'(\', \'selected\', \'!=\', \'null\', \')\', \'{\', \'Collections\', \'.\', \'sort\', \'(\', \'selected\', \')\', \';\', \'}\', \'userPalette\', \'.\', \'setObjects\', \'(\', \'users\', \',\', \'selected\', \')\', \';\', \'}\']', 'public void METHOD_1 ( List < String > VAR_1 , List < String > VAR_2 ) { Collections . METHOD_2 ( VAR_1 ) ; if ( VAR_2 != null ) { Collections . METHOD_2 ( VAR_2 ) ; } VAR_3 . METHOD_3 ( VAR_1 , VAR_2 ) ; }', '[\'METHOD_3: setObjects\', \'METHOD_1: setUsers\', \'METHOD_2: sort\', \'VAR_3: userPalette\', \'VAR_1: users\', \'VAR_2: selected\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/EditTeamDialog.java', 20, '351:9', '357:9', 49, 5 ), ( 5, 268, 14, 'public void setPreReceiveScripts(List<String> unused, List<String> inherited,\n    			List<String> selected) {\n    Collections.sort(unused);\n    if (selected != null) {\n    Collections.sort(selected);\n    }\n    preReceivePalette.setObjects(unused, selected);\n    showInherited(inherited, preReceiveInherited);\n    }', '[\'public\', \'void\', \'setPreReceiveScripts\', \'(\', \'List\', \'<\', \'String\', \'>\', \'unused\', \',\', \'List\', \'<\', \'String\', \'>\', \'inherited\', \',\', \'List\', \'<\', \'String\', \'>\', \'selected\', \')\', \'{\', \'Collections\', \'.\', \'sort\', \'(\', \'unused\', \')\', \';\', \'if\', \'(\', \'selected\', \'!=\', \'null\', \')\', \'{\', \'Collections\', \'.\', \'sort\', \'(\', \'selected\', \')\', \';\', \'}\', \'preReceivePalette\', \'.\', \'setObjects\', \'(\', \'unused\', \',\', \'selected\', \')\', \';\', \'showInherited\', \'(\', \'inherited\', \',\', \'preReceiveInherited\', \')\', \';\', \'}\']', 'public void METHOD_1 ( List < String > VAR_1 , List < String > VAR_2 , List < String > VAR_3 ) { Collections . METHOD_2 ( VAR_1 ) ; if ( VAR_3 != null ) { Collections . METHOD_2 ( VAR_3 ) ; } VAR_4 . METHOD_3 ( VAR_1 , VAR_3 ) ; METHOD_4 ( VAR_2 , VAR_5 ) ; }', '[\'METHOD_3: setObjects\', \'METHOD_2: sort\', \'METHOD_1: setPreReceiveScripts\', \'METHOD_4: showInherited\', \'VAR_4: preReceivePalette\', \'VAR_2: inherited\', \'VAR_1: unused\', \'VAR_3: selected\', \'VAR_5: preReceiveInherited\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/EditTeamDialog.java', 20, '359:9', '367:9', 62, 7 ), ( 5, 268, 15, 'public void setPostReceiveScripts(List<String> unused, List<String> inherited,\n    			List<String> selected) {\n    Collections.sort(unused);\n    if (selected != null) {\n    Collections.sort(selected);\n    }\n    postReceivePalette.setObjects(unused, selected);\n    showInherited(inherited, postReceiveInherited);\n    }', '[\'public\', \'void\', \'setPostReceiveScripts\', \'(\', \'List\', \'<\', \'String\', \'>\', \'unused\', \',\', \'List\', \'<\', \'String\', \'>\', \'inherited\', \',\', \'List\', \'<\', \'String\', \'>\', \'selected\', \')\', \'{\', \'Collections\', \'.\', \'sort\', \'(\', \'unused\', \')\', \';\', \'if\', \'(\', \'selected\', \'!=\', \'null\', \')\', \'{\', \'Collections\', \'.\', \'sort\', \'(\', \'selected\', \')\', \';\', \'}\', \'postReceivePalette\', \'.\', \'setObjects\', \'(\', \'unused\', \',\', \'selected\', \')\', \';\', \'showInherited\', \'(\', \'inherited\', \',\', \'postReceiveInherited\', \')\', \';\', \'}\']', 'public void METHOD_1 ( List < String > VAR_1 , List < String > VAR_2 , List < String > VAR_3 ) { Collections . METHOD_2 ( VAR_1 ) ; if ( VAR_3 != null ) { Collections . METHOD_2 ( VAR_3 ) ; } VAR_4 . METHOD_3 ( VAR_1 , VAR_3 ) ; METHOD_4 ( VAR_2 , VAR_5 ) ; }', '[\'METHOD_3: setObjects\', \'METHOD_1: setPostReceiveScripts\', \'METHOD_2: sort\', \'METHOD_4: showInherited\', \'VAR_2: inherited\', \'VAR_5: postReceiveInherited\', \'VAR_1: unused\', \'VAR_4: postReceivePalette\', \'VAR_3: selected\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/EditTeamDialog.java', 20, '369:9', '377:9', 62, 7 ), ( 5, 268, 16, 'private void showInherited(List<String> list, JLabel label) {\n    StringBuilder sb = new StringBuilder();\n    if (list != null && list.size() > 0) {\n    sb.append("<html><body><b>INHERITED</b><ul style=\\"margin-left:5px;list-style-type: none;\\">");\n    for (String script : list) {\n    sb.append("<li>").append(script).append("</li>");\n    }\n    sb.append("</ul></body></html>");\n    }\n    label.setText(sb.toString());\n    }', '[\'private\', \'void\', \'showInherited\', \'(\', \'List\', \'<\', \'String\', \'>\', \'list\', \',\', \'JLabel\', \'label\', \')\', \'{\', \'StringBuilder\', \'sb\', \'=\', \'new\', \'StringBuilder\', \'(\', \')\', \';\', \'if\', \'(\', \'list\', \'!=\', \'null\', \'&&\', \'list\', \'.\', \'size\', \'(\', \')\', \'>\', \'0\', \')\', \'{\', \'sb\', \'.\', \'append\', \'(\', \'"<html><body><b>INHERITED</b><ul style=\\\\"margin-left:5px;list-style-type: none;\\\\">"\', \')\', \';\', \'for\', \'(\', \'String\', \'script\', \':\', \'list\', \')\', \'{\', \'sb\', \'.\', \'append\', \'(\', \'"<li>"\', \')\', \'.\', \'append\', \'(\', \'script\', \')\', \'.\', \'append\', \'(\', \'"</li>"\', \')\', \';\', \'}\', \'sb\', \'.\', \'append\', \'(\', \'"</ul></body></html>"\', \')\', \';\', \'}\', \'label\', \'.\', \'setText\', \'(\', \'sb\', \'.\', \'toString\', \'(\', \')\', \')\', \';\', \'}\']', 'private void METHOD_1 ( List < String > list , TYPE_1 VAR_1 ) { StringBuilder sb = new StringBuilder ( ) ; if ( list != null && list . size ( ) > 0 ) { sb . append ( STRING_1 ) ; for ( String VAR_2 : list ) { sb . append ( STRING_2 ) . append ( VAR_2 ) . append ( STRING_3 ) ; } sb . append ( STRING_4 ) ; } VAR_1 . METHOD_2 ( sb . toString ( ) ) ; }', '[\'TYPE_1: JLabel\', \'METHOD_1: showInherited\', \'METHOD_2: setText\', \'VAR_1: label\', \'VAR_2: script\', \'STRING_4: "</ul></body></html>"\', \'STRING_1: "<html><body><b>INHERITED</b><ul style=\\\\"margin-left:5px;list-style-type: none;\\\\">"\', \'STRING_3: "</li>"\', \'STRING_2: "<li>"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/EditTeamDialog.java', 20, '379:9', '389:9', 87, 8 ), ( 5, 269, 16, 'private void setRepositoryRenderer(RepositoriesTableModel.Columns col,\n    			TableCellRenderer renderer, int maxWidth) {\n    String name = table.getColumnName(col.ordinal());\n    table.getColumn(name).setCellRenderer(renderer);\n    if (maxWidth > 0) {\n    table.getColumn(name).setMinWidth(maxWidth);\n    table.getColumn(name).setMaxWidth(maxWidth);\n    }\n    }', '[\'private\', \'void\', \'setRepositoryRenderer\', \'(\', \'RepositoriesTableModel.Columns\', \'col\', \',\', \'TableCellRenderer\', \'renderer\', \',\', \'int\', \'maxWidth\', \')\', \'{\', \'String\', \'name\', \'=\', \'table\', \'.\', \'getColumnName\', \'(\', \'col\', \'.\', \'ordinal\', \'(\', \')\', \')\', \';\', \'table\', \'.\', \'getColumn\', \'(\', \'name\', \')\', \'.\', \'setCellRenderer\', \'(\', \'renderer\', \')\', \';\', \'if\', \'(\', \'maxWidth\', \'>\', \'0\', \')\', \'{\', \'table\', \'.\', \'getColumn\', \'(\', \'name\', \')\', \'.\', \'setMinWidth\', \'(\', \'maxWidth\', \')\', \';\', \'table\', \'.\', \'getColumn\', \'(\', \'name\', \')\', \'.\', \'setMaxWidth\', \'(\', \'maxWidth\', \')\', \';\', \'}\', \'}\']', 'private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , int VAR_3 ) { String name = VAR_4 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_4 . METHOD_4 ( name ) . METHOD_5 ( VAR_2 ) ; if ( VAR_3 > 0 ) { VAR_4 . METHOD_4 ( name ) . METHOD_6 ( VAR_3 ) ; VAR_4 . METHOD_4 ( name ) . METHOD_7 ( VAR_3 ) ; } }', '[\'TYPE_2: TableCellRenderer\', \'TYPE_1: RepositoriesTableModel.Columns\', \'METHOD_6: setMinWidth\', \'METHOD_1: setRepositoryRenderer\', \'METHOD_5: setCellRenderer\', \'METHOD_2: getColumnName\', \'METHOD_4: getColumn\', \'METHOD_7: setMaxWidth\', \'METHOD_3: ordinal\', \'VAR_1: col\', \'VAR_2: renderer\', \'VAR_4: table\', \'VAR_3: maxWidth\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/RepositoriesPanel.java', 42, '281:9', '289:9', 74, 7 ), ( 5, 269, 17, 'protected void disableManagement() {\n    clearCache.setVisible(false);\n    createRepository.setVisible(false);\n    editRepository.setVisible(false);\n    delRepository.setVisible(false);\n    }', '[\'protected\', \'void\', \'disableManagement\', \'(\', \')\', \'{\', \'clearCache\', \'.\', \'setVisible\', \'(\', \'false\', \')\', \';\', \'createRepository\', \'.\', \'setVisible\', \'(\', \'false\', \')\', \';\', \'editRepository\', \'.\', \'setVisible\', \'(\', \'false\', \')\', \';\', \'delRepository\', \'.\', \'setVisible\', \'(\', \'false\', \')\', \';\', \'}\']', 'protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( false ) ; VAR_2 . METHOD_2 ( false ) ; VAR_3 . METHOD_2 ( false ) ; VAR_4 . METHOD_2 ( false ) ; }', '[\'METHOD_2: setVisible\', \'METHOD_1: disableManagement\', \'VAR_2: createRepository\', \'VAR_3: editRepository\', \'VAR_1: clearCache\', \'VAR_4: delRepository\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/RepositoriesPanel.java', 42, '297:9', '302:9', 34, 5 ), ( 5, 269, 18, 'protected void updateTable(boolean pack) {\n    tableModel.list.clear();\n    tableModel.list.addAll(gitblit.getRepositories());\n    tableModel.fireTableDataChanged();\n    header.setText(Translation.get("gb.repositories") + " (" + gitblit.getRepositories().size()\n    + ")");\n    if (pack) {\n    Utils.packColumns(table, Utils.MARGIN);\n    }\n    }', '[\'protected\', \'void\', \'updateTable\', \'(\', \'boolean\', \'pack\', \')\', \'{\', \'tableModel.list\', \'.\', \'clear\', \'(\', \')\', \';\', \'tableModel.list\', \'.\', \'addAll\', \'(\', \'gitblit\', \'.\', \'getRepositories\', \'(\', \')\', \')\', \';\', \'tableModel\', \'.\', \'fireTableDataChanged\', \'(\', \')\', \';\', \'header\', \'.\', \'setText\', \'(\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.repositories"\', \')\', \'+\', \'" ("\', \'+\', \'gitblit\', \'.\', \'getRepositories\', \'(\', \')\', \'.\', \'size\', \'(\', \')\', \'+\', \'")"\', \')\', \';\', \'if\', \'(\', \'pack\', \')\', \'{\', \'Utils\', \'.\', \'packColumns\', \'(\', \'table\', \',\', \'Utils.MARGIN\', \')\', \';\', \'}\', \'}\']', 'protected void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_2 . addAll ( VAR_3 . METHOD_3 ( ) ) ; VAR_4 . METHOD_4 ( ) ; VAR_5 . METHOD_5 ( TYPE_1 . get ( STRING_1 ) + STRING_2 + VAR_3 . METHOD_3 ( ) . size ( ) + STRING_3 ) ; if ( VAR_1 ) { TYPE_2 . METHOD_6 ( VAR_6 , VAR_7 ) ; } }', '[\'TYPE_1: Translation\', \'TYPE_2: Utils\', \'METHOD_3: getRepositories\', \'METHOD_2: clear\', \'METHOD_4: fireTableDataChanged\', \'METHOD_1: updateTable\', \'METHOD_6: packColumns\', \'METHOD_5: setText\', \'VAR_3: gitblit\', \'VAR_4: tableModel\', \'VAR_5: header\', \'VAR_7: Utils.MARGIN\', \'VAR_1: pack\', \'VAR_6: table\', \'VAR_2: tableModel.list\', \'STRING_1: "gb.repositories"\', \'STRING_2: " ("\', \'STRING_3: ")"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/RepositoriesPanel.java', 42, '304:9', '313:9', 74, 8 ), ( 5, 269, 20, 'public boolean include(Entry<? extends RepositoriesTableModel, ? extends Object> entry) {\n    for (int i = entry.getValueCount() - 1; i >= 0; i--) {\n    if (entry.getStringValue(i).toLowerCase().contains(fragment.toLowerCase())) {\n    return true;\n    }\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'include\', \'(\', \'Entry\', \'<\', \'?\', \'extends\', \'RepositoriesTableModel\', \',\', \'?\', \'extends\', \'Object\', \'>\', \'entry\', \')\', \'{\', \'for\', \'(\', \'int\', \'i\', \'=\', \'entry\', \'.\', \'getValueCount\', \'(\', \')\', \'-\', \'1\', \';\', \'i\', \'>=\', \'0\', \';\', \'i\', \'--\', \')\', \'{\', \'if\', \'(\', \'entry\', \'.\', \'getStringValue\', \'(\', \'i\', \')\', \'.\', \'toLowerCase\', \'(\', \')\', \'.\', \'contains\', \'(\', \'fragment\', \'.\', \'toLowerCase\', \'(\', \')\', \')\', \')\', \'{\', \'return\', \'true\', \';\', \'}\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean METHOD_1 ( Entry < ? extends TYPE_1 , ? extends Object > entry ) { for ( int i = entry . METHOD_2 ( ) - 1 ; i >= 0 ; i -- ) { if ( entry . METHOD_3 ( i ) . METHOD_4 ( ) . contains ( VAR_1 . METHOD_4 ( ) ) ) { return true ; } } return false ; }', '[\'TYPE_1: RepositoriesTableModel\', \'METHOD_1: include\', \'METHOD_3: getStringValue\', \'METHOD_4: toLowerCase\', \'METHOD_2: getValueCount\', \'VAR_1: fragment\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/RepositoriesPanel.java', 42, '321:25', '328:25', 67, 5 ), ( 5, 269, 21, 'private List<RepositoryModel> getSelectedRepositories() {\n    List<RepositoryModel> repositories = new ArrayList<RepositoryModel>();\n    for (int viewRow : table.getSelectedRows()) {\n    int modelRow = table.convertRowIndexToModel(viewRow);\n    RepositoryModel model = tableModel.list.get(modelRow);\n    repositories.add(model);\n    }\n    return repositories;\n    }', '[\'private\', \'List\', \'<\', \'RepositoryModel\', \'>\', \'getSelectedRepositories\', \'(\', \')\', \'{\', \'List\', \'<\', \'RepositoryModel\', \'>\', \'repositories\', \'=\', \'new\', \'ArrayList\', \'<\', \'RepositoryModel\', \'>\', \'(\', \')\', \';\', \'for\', \'(\', \'int\', \'viewRow\', \':\', \'table\', \'.\', \'getSelectedRows\', \'(\', \')\', \')\', \'{\', \'int\', \'modelRow\', \'=\', \'table\', \'.\', \'convertRowIndexToModel\', \'(\', \'viewRow\', \')\', \';\', \'RepositoryModel\', \'model\', \'=\', \'tableModel.list\', \'.\', \'get\', \'(\', \'modelRow\', \')\', \';\', \'repositories\', \'.\', \'add\', \'(\', \'model\', \')\', \';\', \'}\', \'return\', \'repositories\', \';\', \'}\']', 'private List < TYPE_1 > METHOD_1 ( ) { List < TYPE_1 > VAR_1 = new ArrayList < TYPE_1 > ( ) ; for ( int VAR_2 : VAR_3 . METHOD_2 ( ) ) { int VAR_4 = VAR_3 . METHOD_3 ( VAR_2 ) ; TYPE_1 model = VAR_5 . get ( VAR_4 ) ; VAR_1 . add ( model ) ; } return VAR_1 ; }', '[\'TYPE_1: RepositoryModel\', \'METHOD_3: convertRowIndexToModel\', \'METHOD_2: getSelectedRows\', \'METHOD_1: getSelectedRepositories\', \'VAR_1: repositories\', \'VAR_2: viewRow\', \'VAR_4: modelRow\', \'VAR_3: table\', \'VAR_5: tableModel.list\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/RepositoriesPanel.java', 42, '336:9', '344:9', 66, 7 ), ( 5, 269, 26, '@Override\n    protected Boolean doRequest() throws IOException {\n    if (gitblit.clearRepositoryCache()) {\n    gitblit.refreshRepositories();\n    return true;\n    }\n    return false;\n    }', '[\'protected\', \'Boolean\', \'doRequest\', \'(\', \')\', \'throws\', \'IOException\', \'{\', \'if\', \'(\', \'gitblit\', \'.\', \'clearRepositoryCache\', \'(\', \')\', \')\', \'{\', \'gitblit\', \'.\', \'refreshRepositories\', \'(\', \')\', \';\', \'return\', \'true\', \';\', \'}\', \'return\', \'false\', \';\', \'}\']', 'protected Boolean METHOD_1 ( ) throws IOException { if ( VAR_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( ) ; return true ; } return false ; }', '[\'METHOD_1: doRequest\', \'METHOD_2: clearRepositoryCache\', \'METHOD_3: refreshRepositories\', \'VAR_1: gitblit\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/RepositoriesPanel.java', 42, '366:25', '373:25', 30, 6 ), ( 5, 269, 29, '@Override\n    protected Boolean doRequest() throws IOException {\n    boolean success = gitblit.createRepository(newRepository, permittedUsers,\n    						permittedTeams);\n    if (success) {\n    gitblit.refreshRepositories();\n    if (permittedUsers.size() > 0) {\n    gitblit.refreshUsers();\n    }\n    if (permittedTeams.size() > 0) {\n    gitblit.refreshTeams();\n    }\n    }\n    return success;\n    }', '[\'protected\', \'Boolean\', \'doRequest\', \'(\', \')\', \'throws\', \'IOException\', \'{\', \'boolean\', \'success\', \'=\', \'gitblit\', \'.\', \'createRepository\', \'(\', \'newRepository\', \',\', \'permittedUsers\', \',\', \'permittedTeams\', \')\', \';\', \'if\', \'(\', \'success\', \')\', \'{\', \'gitblit\', \'.\', \'refreshRepositories\', \'(\', \')\', \';\', \'if\', \'(\', \'permittedUsers\', \'.\', \'size\', \'(\', \')\', \'>\', \'0\', \')\', \'{\', \'gitblit\', \'.\', \'refreshUsers\', \'(\', \')\', \';\', \'}\', \'if\', \'(\', \'permittedTeams\', \'.\', \'size\', \'(\', \')\', \'>\', \'0\', \')\', \'{\', \'gitblit\', \'.\', \'refreshTeams\', \'(\', \')\', \';\', \'}\', \'}\', \'return\', \'success\', \';\', \'}\']', 'protected Boolean METHOD_1 ( ) throws IOException { boolean VAR_1 = VAR_2 . METHOD_2 ( VAR_3 , VAR_4 , VAR_5 ) ; if ( VAR_1 ) { VAR_2 . METHOD_3 ( ) ; if ( VAR_4 . size ( ) > 0 ) { VAR_2 . METHOD_4 ( ) ; } if ( VAR_5 . size ( ) > 0 ) { VAR_2 . METHOD_5 ( ) ; } } return VAR_1 ; }', '[\'METHOD_2: createRepository\', \'METHOD_1: doRequest\', \'METHOD_3: refreshRepositories\', \'METHOD_5: refreshTeams\', \'METHOD_4: refreshUsers\', \'VAR_3: newRepository\', \'VAR_1: success\', \'VAR_5: permittedTeams\', \'VAR_2: gitblit\', \'VAR_4: permittedUsers\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/RepositoriesPanel.java', 42, '412:25', '426:25', 70, 11 ), ( 5, 269, 30, '@Override\n    protected void onSuccess() {\n    updateTable(false);\n    updateUsersTable();\n    updateTeamsTable();\n    }', '[\'protected\', \'void\', \'onSuccess\', \'(\', \')\', \'{\', \'updateTable\', \'(\', \'false\', \')\', \';\', \'updateUsersTable\', \'(\', \')\', \';\', \'updateTeamsTable\', \'(\', \')\', \';\', \'}\']', 'protected void METHOD_1 ( ) { METHOD_2 ( false ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; }', '[\'METHOD_4: updateTeamsTable\', \'METHOD_2: updateTable\', \'METHOD_3: updateUsersTable\', \'METHOD_1: onSuccess\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/RepositoriesPanel.java', 42, '428:25', '433:25', 19, 5 ), ( 5, 269, 33, '@Override\n    protected Boolean doRequest() throws IOException {\n    boolean success = gitblit.updateRepository(repository.name, revisedRepository,\n    						permittedUsers, permittedTeams);\n    if (success) {\n    gitblit.refreshRepositories();\n    gitblit.refreshUsers();\n    gitblit.refreshTeams();\n    }\n    return success;\n    }', '[\'protected\', \'Boolean\', \'doRequest\', \'(\', \')\', \'throws\', \'IOException\', \'{\', \'boolean\', \'success\', \'=\', \'gitblit\', \'.\', \'updateRepository\', \'(\', \'repository\', \'.\', \'name\', \',\', \'revisedRepository\', \',\', \'permittedUsers\', \',\', \'permittedTeams\', \')\', \';\', \'if\', \'(\', \'success\', \')\', \'{\', \'gitblit\', \'.\', \'refreshRepositories\', \'(\', \')\', \';\', \'gitblit\', \'.\', \'refreshUsers\', \'(\', \')\', \';\', \'gitblit\', \'.\', \'refreshTeams\', \'(\', \')\', \';\', \'}\', \'return\', \'success\', \';\', \'}\']', 'protected Boolean METHOD_1 ( ) throws IOException { boolean VAR_1 = VAR_2 . METHOD_2 ( VAR_3 . name , VAR_4 , VAR_5 , VAR_6 ) ; if ( VAR_1 ) { VAR_2 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; VAR_2 . METHOD_5 ( ) ; } return VAR_1 ; }', '[\'METHOD_2: updateRepository\', \'METHOD_1: doRequest\', \'METHOD_3: refreshRepositories\', \'METHOD_5: refreshTeams\', \'METHOD_4: refreshUsers\', \'VAR_1: success\', \'VAR_6: permittedTeams\', \'VAR_2: gitblit\', \'VAR_4: revisedRepository\', \'VAR_3: repository\', \'VAR_5: permittedUsers\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/RepositoriesPanel.java', 42, '482:25', '492:25', 52, 9 ), ( 5, 269, 34, '@Override\n    protected void onSuccess() {\n    updateTable(false);\n    updateUsersTable();\n    updateTeamsTable();\n    }', '[\'protected\', \'void\', \'onSuccess\', \'(\', \')\', \'{\', \'updateTable\', \'(\', \'false\', \')\', \';\', \'updateUsersTable\', \'(\', \')\', \';\', \'updateTeamsTable\', \'(\', \')\', \';\', \'}\']', 'protected void METHOD_1 ( ) { METHOD_2 ( false ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; }', '[\'METHOD_4: updateTeamsTable\', \'METHOD_2: updateTable\', \'METHOD_3: updateUsersTable\', \'METHOD_1: onSuccess\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/RepositoriesPanel.java', 42, '494:25', '499:25', 19, 5 ), ( 5, 269, 37, '@Override\n    protected Boolean doRequest() throws IOException {\n    boolean success = true;\n    for (RepositoryModel repository : repositories) {\n    success &= gitblit.deleteRepository(repository);\n    }\n    if (success) {\n    gitblit.refreshRepositories();\n    gitblit.refreshUsers();\n    gitblit.refreshTeams();\n    }\n    return success;\n    }', '[\'protected\', \'Boolean\', \'doRequest\', \'(\', \')\', \'throws\', \'IOException\', \'{\', \'boolean\', \'success\', \'=\', \'true\', \';\', \'for\', \'(\', \'RepositoryModel\', \'repository\', \':\', \'repositories\', \')\', \'{\', \'success\', \'&=\', \'gitblit\', \'.\', \'deleteRepository\', \'(\', \'repository\', \')\', \';\', \'}\', \'if\', \'(\', \'success\', \')\', \'{\', \'gitblit\', \'.\', \'refreshRepositories\', \'(\', \')\', \';\', \'gitblit\', \'.\', \'refreshUsers\', \'(\', \')\', \';\', \'gitblit\', \'.\', \'refreshTeams\', \'(\', \')\', \';\', \'}\', \'return\', \'success\', \';\', \'}\']', 'protected Boolean METHOD_1 ( ) throws IOException { boolean VAR_1 = true ; for ( TYPE_1 VAR_2 : VAR_3 ) { VAR_1 &= VAR_4 . METHOD_2 ( VAR_2 ) ; } if ( VAR_1 ) { VAR_4 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( ) ; VAR_4 . METHOD_5 ( ) ; } return VAR_1 ; }', '[\'TYPE_1: RepositoryModel\', \'METHOD_1: doRequest\', \'METHOD_2: deleteRepository\', \'METHOD_3: refreshRepositories\', \'METHOD_5: refreshTeams\', \'METHOD_4: refreshUsers\', \'VAR_3: repositories\', \'VAR_1: success\', \'VAR_4: gitblit\', \'VAR_2: repository\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/RepositoriesPanel.java', 42, '522:33', '534:33', 57, 10 ), ( 5, 269, 38, '@Override\n    protected void onSuccess() {\n    updateTable(false);\n    updateUsersTable();\n    updateTeamsTable();\n    }', '[\'protected\', \'void\', \'onSuccess\', \'(\', \')\', \'{\', \'updateTable\', \'(\', \'false\', \')\', \';\', \'updateUsersTable\', \'(\', \')\', \';\', \'updateTeamsTable\', \'(\', \')\', \';\', \'}\']', 'protected void METHOD_1 ( ) { METHOD_2 ( false ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; }', '[\'METHOD_4: updateTeamsTable\', \'METHOD_2: updateTable\', \'METHOD_3: updateUsersTable\', \'METHOD_1: onSuccess\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/RepositoriesPanel.java', 42, '536:33', '541:33', 19, 5 ), ( 5, 269, 40, 'private void showSearchDialog(boolean isSearch, final RepositoryModel repository) {\n    final SearchDialog dialog = new SearchDialog(gitblit, isSearch);\n    if (repository != null) {\n    dialog.selectRepository(repository);\n    }\n    dialog.setLocationRelativeTo(this);\n    dialog.setVisible(true);\n    }', '[\'private\', \'void\', \'showSearchDialog\', \'(\', \'boolean\', \'isSearch\', \',\', \'final\', \'RepositoryModel\', \'repository\', \')\', \'{\', \'final\', \'SearchDialog\', \'dialog\', \'=\', \'new\', \'SearchDialog\', \'(\', \'gitblit\', \',\', \'isSearch\', \')\', \';\', \'if\', \'(\', \'repository\', \'!=\', \'null\', \')\', \'{\', \'dialog\', \'.\', \'selectRepository\', \'(\', \'repository\', \')\', \';\', \'}\', \'dialog\', \'.\', \'setLocationRelativeTo\', \'(\', \'this\', \')\', \';\', \'dialog\', \'.\', \'setVisible\', \'(\', \'true\', \')\', \';\', \'}\']', 'private void METHOD_1 ( boolean VAR_1 , final TYPE_1 VAR_2 ) { final TYPE_2 VAR_3 = new TYPE_2 ( VAR_4 , VAR_1 ) ; if ( VAR_2 != null ) { VAR_3 . METHOD_2 ( VAR_2 ) ; } VAR_3 . METHOD_3 ( this ) ; VAR_3 . METHOD_4 ( true ) ; }', '[\'TYPE_1: RepositoryModel\', \'TYPE_2: SearchDialog\', \'METHOD_2: selectRepository\', \'METHOD_4: setVisible\', \'METHOD_1: showSearchDialog\', \'METHOD_3: setLocationRelativeTo\', \'VAR_3: dialog\', \'VAR_1: isSearch\', \'VAR_4: gitblit\', \'VAR_2: repository\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/RepositoriesPanel.java', 42, '552:9', '559:9', 54, 6 ), ( 5, 271, 0, 'public void mouseEntered(MouseEvent e) {\n    Component component = e.getComponent();\n    if (component instanceof AbstractButton) {\n    AbstractButton button = (AbstractButton) component;\n    button.setBorderPainted(true);\n    }\n    }', '[\'public\', \'void\', \'mouseEntered\', \'(\', \'MouseEvent\', \'e\', \')\', \'{\', \'Component\', \'component\', \'=\', \'e\', \'.\', \'getComponent\', \'(\', \')\', \';\', \'if\', \'(\', \'component\', \'instanceof\', \'AbstractButton\', \')\', \'{\', \'AbstractButton\', \'button\', \'=\', \'(\', \'AbstractButton\', \')\', \'component\', \';\', \'button\', \'.\', \'setBorderPainted\', \'(\', \'true\', \')\', \';\', \'}\', \'}\']', 'public void METHOD_1 ( TYPE_1 e ) { TYPE_2 VAR_1 = e . METHOD_2 ( ) ; if ( VAR_1 instanceof TYPE_3 ) { TYPE_3 VAR_2 = ( TYPE_3 ) VAR_1 ; VAR_2 . METHOD_3 ( true ) ; } }', '[\'TYPE_1: MouseEvent\', \'TYPE_3: AbstractButton\', \'TYPE_2: Component\', \'METHOD_1: mouseEntered\', \'METHOD_3: setBorderPainted\', \'METHOD_2: getComponent\', \'VAR_2: button\', \'VAR_1: component\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/ClosableTabComponent.java', 7, '49:17', '55:17', 40, 5 ), ( 5, 271, 1, 'public void mouseExited(MouseEvent e) {\n    Component component = e.getComponent();\n    if (component instanceof AbstractButton) {\n    AbstractButton button = (AbstractButton) component;\n    button.setBorderPainted(false);\n    }\n    }', '[\'public\', \'void\', \'mouseExited\', \'(\', \'MouseEvent\', \'e\', \')\', \'{\', \'Component\', \'component\', \'=\', \'e\', \'.\', \'getComponent\', \'(\', \')\', \';\', \'if\', \'(\', \'component\', \'instanceof\', \'AbstractButton\', \')\', \'{\', \'AbstractButton\', \'button\', \'=\', \'(\', \'AbstractButton\', \')\', \'component\', \';\', \'button\', \'.\', \'setBorderPainted\', \'(\', \'false\', \')\', \';\', \'}\', \'}\']', 'public void METHOD_1 ( TYPE_1 e ) { TYPE_2 VAR_1 = e . METHOD_2 ( ) ; if ( VAR_1 instanceof TYPE_3 ) { TYPE_3 VAR_2 = ( TYPE_3 ) VAR_1 ; VAR_2 . METHOD_3 ( false ) ; } }', '[\'TYPE_1: MouseEvent\', \'TYPE_3: AbstractButton\', \'TYPE_2: Component\', \'METHOD_1: mouseExited\', \'METHOD_3: setBorderPainted\', \'METHOD_2: getComponent\', \'VAR_2: button\', \'VAR_1: component\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/ClosableTabComponent.java', 7, '57:17', '63:17', 40, 5 ), ( 5, 271, 2, 'public void actionPerformed(ActionEvent e) {\n    int i = pane.indexOfTabComponent(ClosableTabComponent.this);\n    Component c = pane.getComponentAt(i);\n    if (i != -1) {\n    pane.remove(i);\n    }\n    if (closeListener != null) {\n    closeListener.closeTab(c);\n    }\n    }', '[\'public\', \'void\', \'actionPerformed\', \'(\', \'ActionEvent\', \'e\', \')\', \'{\', \'int\', \'i\', \'=\', \'pane\', \'.\', \'indexOfTabComponent\', \'(\', \'ClosableTabComponent.\', \'this\', \')\', \';\', \'Component\', \'c\', \'=\', \'pane\', \'.\', \'getComponentAt\', \'(\', \'i\', \')\', \';\', \'if\', \'(\', \'i\', \'!=\', \'-\', \'1\', \')\', \'{\', \'pane\', \'.\', \'remove\', \'(\', \'i\', \')\', \';\', \'}\', \'if\', \'(\', \'closeListener\', \'!=\', \'null\', \')\', \'{\', \'closeListener\', \'.\', \'closeTab\', \'(\', \'c\', \')\', \';\', \'}\', \'}\']', 'public void METHOD_1 ( TYPE_1 e ) { int i = VAR_1 . METHOD_2 ( VAR_2 this ) ; TYPE_2 c = VAR_1 . METHOD_3 ( i ) ; if ( i != - 1 ) { VAR_1 . remove ( i ) ; } if ( VAR_3 != null ) { VAR_3 . METHOD_4 ( c ) ; } }', '[\'TYPE_1: ActionEvent\', \'TYPE_2: Component\', \'METHOD_1: actionPerformed\', \'METHOD_3: getComponentAt\', \'METHOD_2: indexOfTabComponent\', \'METHOD_4: closeTab\', \'VAR_2: ClosableTabComponent.\', \'VAR_3: closeListener\', \'VAR_1: pane\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/ClosableTabComponent.java', 7, '115:17', '124:17', 62, 7 ), ( 5, 271, 6, 'public TabButton() {\n    int size = 17;\n    setPreferredSize(new Dimension(size, size));\n    setToolTipText("Close");\n    setUI(new BasicButtonUI());\n    setContentAreaFilled(false);\n    setFocusable(false);\n    setBorder(BorderFactory.createEtchedBorder());\n    setBorderPainted(false);\n    addMouseListener(BUTTON_MOUSE_LISTENER);\n    setRolloverEnabled(true);\n    addActionListener(this);\n    }', '[\'public\', \'TabButton\', \'(\', \')\', \'{\', \'int\', \'size\', \'=\', \'17\', \';\', \'setPreferredSize\', \'(\', \'new\', \'Dimension\', \'(\', \'size\', \',\', \'size\', \')\', \')\', \';\', \'setToolTipText\', \'(\', \'"Close"\', \')\', \';\', \'setUI\', \'(\', \'new\', \'BasicButtonUI\', \'(\', \')\', \')\', \';\', \'setContentAreaFilled\', \'(\', \'false\', \')\', \';\', \'setFocusable\', \'(\', \'false\', \')\', \';\', \'setBorder\', \'(\', \'BorderFactory\', \'.\', \'createEtchedBorder\', \'(\', \')\', \')\', \';\', \'setBorderPainted\', \'(\', \'false\', \')\', \';\', \'addMouseListener\', \'(\', \'BUTTON_MOUSE_LISTENER\', \')\', \';\', \'setRolloverEnabled\', \'(\', \'true\', \')\', \';\', \'addActionListener\', \'(\', \'this\', \')\', \';\', \'}\']', 'public VAR_1 ( ) { int size = INT_1 ; METHOD_1 ( new TYPE_1 ( size , size ) ) ; METHOD_2 ( STRING_1 ) ; METHOD_3 ( new TYPE_2 ( ) ) ; METHOD_4 ( false ) ; METHOD_5 ( false ) ; METHOD_6 ( TYPE_3 . METHOD_7 ( ) ) ; METHOD_8 ( false ) ; METHOD_9 ( VAR_2 ) ; METHOD_10 ( true ) ; METHOD_11 ( this ) ; }', '[\'TYPE_3: BorderFactory\', \'TYPE_1: Dimension\', \'TYPE_2: BasicButtonUI\', \'METHOD_1: setPreferredSize\', \'METHOD_3: setUI\', \'METHOD_2: setToolTipText\', \'METHOD_6: setBorder\', \'METHOD_7: createEtchedBorder\', \'METHOD_11: addActionListener\', \'METHOD_5: setFocusable\', \'METHOD_8: setBorderPainted\', \'METHOD_10: setRolloverEnabled\', \'METHOD_4: setContentAreaFilled\', \'METHOD_9: addMouseListener\', \'VAR_1: TabButton\', \'VAR_2: BUTTON_MOUSE_LISTENER\', \'INT_1: 17\', \'STRING_1: "Close"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/ClosableTabComponent.java', 7, '101:17', '113:17', 71, 12 ), ( 5, 272, 1, 'public void setSettings(ServerSettings settings) {\n    this.settings = settings;\n    if (settings == null) {\n    keys = new ArrayList<String>();\n    } else {\n    keys = new ArrayList<String>(settings.getKeys());\n    Collections.sort(keys);\n    }\n    }', '[\'public\', \'void\', \'setSettings\', \'(\', \'ServerSettings\', \'settings\', \')\', \'{\', \'this\', \'.\', \'settings\', \'=\', \'settings\', \';\', \'if\', \'(\', \'settings\', \'==\', \'null\', \')\', \'{\', \'keys\', \'=\', \'new\', \'ArrayList\', \'<\', \'String\', \'>\', \'(\', \')\', \';\', \'}\', \'else\', \'{\', \'keys\', \'=\', \'new\', \'ArrayList\', \'<\', \'String\', \'>\', \'(\', \'settings\', \'.\', \'getKeys\', \'(\', \')\', \')\', \';\', \'Collections\', \'.\', \'sort\', \'(\', \'keys\', \')\', \';\', \'}\', \'}\']', 'public void METHOD_1 ( TYPE_1 VAR_1 ) { this . VAR_1 = VAR_1 ; if ( VAR_1 == null ) { VAR_2 = new ArrayList < String > ( ) ; } else { VAR_2 = new ArrayList < String > ( VAR_1 . METHOD_2 ( ) ) ; Collections . METHOD_3 ( VAR_2 ) ; } }', '[\'TYPE_1: ServerSettings\', \'METHOD_1: setSettings\', \'METHOD_2: getKeys\', \'METHOD_3: sort\', \'VAR_1: settings\', \'VAR_2: keys\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/SettingsTableModel.java', 10, '58:9', '66:9', 56, 7 ), ( 5, 272, 4, '@Override\n    public String getColumnName(int column) {\n    Columns col = Columns.values()[column];\n    switch (col) {\n    case Name:\n    return Translation.get("gb.name");\n    case Since:\n    return Translation.get("gb.since");\n    }\n    return "";\n    }', '[\'public\', \'String\', \'getColumnName\', \'(\', \'int\', \'column\', \')\', \'{\', \'Columns\', \'col\', \'=\', \'Columns\', \'.\', \'values\', \'(\', \')\', \'[\', \'column\', \']\', \';\', \'switch\', \'(\', \'col\', \')\', \'{\', \'case\', \'Name\', \':\', \'return\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.name"\', \')\', \';\', \'case\', \'Since\', \':\', \'return\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.since"\', \')\', \';\', \'}\', \'return\', \'""\', \';\', \'}\']', 'public String METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = TYPE_1 . values ( ) [ VAR_1 ] ; switch ( VAR_2 ) { case VAR_3 : return TYPE_2 . get ( STRING_1 ) ; case VAR_4 : return TYPE_2 . get ( STRING_2 ) ; } return STRING_3 ; }', '[\'TYPE_2: Translation\', \'TYPE_1: Columns\', \'METHOD_1: getColumnName\', \'VAR_2: col\', \'VAR_1: column\', \'VAR_4: Since\', \'VAR_3: Name\', \'STRING_3: ""\', \'STRING_2: "gb.since"\', \'STRING_1: "gb.name"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/SettingsTableModel.java', 10, '78:9', '88:9', 53, 9 ), ( 5, 272, 6, '@Override\n    public Object getValueAt(int rowIndex, int columnIndex) {\n    String key = keys.get(rowIndex);\n    SettingModel setting = settings.get(key);\n    Columns col = Columns.values()[columnIndex];\n    switch (col) {\n    case Name:\n    return key;\n    case Value:\n    return setting;\n    case Since:\n    return setting.since;\n    }\n    return null;\n    }', '[\'public\', \'Object\', \'getValueAt\', \'(\', \'int\', \'rowIndex\', \',\', \'int\', \'columnIndex\', \')\', \'{\', \'String\', \'key\', \'=\', \'keys\', \'.\', \'get\', \'(\', \'rowIndex\', \')\', \';\', \'SettingModel\', \'setting\', \'=\', \'settings\', \'.\', \'get\', \'(\', \'key\', \')\', \';\', \'Columns\', \'col\', \'=\', \'Columns\', \'.\', \'values\', \'(\', \')\', \'[\', \'columnIndex\', \']\', \';\', \'switch\', \'(\', \'col\', \')\', \'{\', \'case\', \'Name\', \':\', \'return\', \'key\', \';\', \'case\', \'Value\', \':\', \'return\', \'setting\', \';\', \'case\', \'Since\', \':\', \'return\', \'setting.since\', \';\', \'}\', \'return\', \'null\', \';\', \'}\']', 'public Object METHOD_1 ( int VAR_1 , int VAR_2 ) { String key = VAR_3 . get ( VAR_1 ) ; TYPE_1 VAR_4 = VAR_5 . get ( key ) ; TYPE_2 VAR_6 = TYPE_2 . values ( ) [ VAR_2 ] ; switch ( VAR_6 ) { case VAR_7 : return key ; case VAR_8 : return VAR_4 ; case VAR_9 : return VAR_10 ; } return null ; }', '[\'TYPE_1: SettingModel\', \'TYPE_2: Columns\', \'METHOD_1: getValueAt\', \'VAR_5: settings\', \'VAR_6: col\', \'VAR_3: keys\', \'VAR_8: Value\', \'VAR_9: Since\', \'VAR_1: rowIndex\', \'VAR_2: columnIndex\', \'VAR_4: setting\', \'VAR_7: Name\', \'VAR_10: setting.since\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/SettingsTableModel.java', 10, '104:9', '118:9', 74, 13 ), ( 5, 273, 8, 'private JPanel newFieldPanel(String label, JComponent comp) {\n    JLabel fieldLabel = new JLabel(label);\n    fieldLabel.setFont(fieldLabel.getFont().deriveFont(Font.BOLD));\n    fieldLabel.setPreferredSize(new Dimension(150, 20));\n    JPanel panel = new JPanel(new FlowLayout(FlowLayout.LEFT, 10, 0));\n    panel.add(fieldLabel);\n    panel.add(comp);\n    return panel;\n    }', '[\'private\', \'JPanel\', \'newFieldPanel\', \'(\', \'String\', \'label\', \',\', \'JComponent\', \'comp\', \')\', \'{\', \'JLabel\', \'fieldLabel\', \'=\', \'new\', \'JLabel\', \'(\', \'label\', \')\', \';\', \'fieldLabel\', \'.\', \'setFont\', \'(\', \'fieldLabel\', \'.\', \'getFont\', \'(\', \')\', \'.\', \'deriveFont\', \'(\', \'Font.BOLD\', \')\', \')\', \';\', \'fieldLabel\', \'.\', \'setPreferredSize\', \'(\', \'new\', \'Dimension\', \'(\', \'150\', \',\', \'20\', \')\', \')\', \';\', \'JPanel\', \'panel\', \'=\', \'new\', \'JPanel\', \'(\', \'new\', \'FlowLayout\', \'(\', \'FlowLayout.LEFT\', \',\', \'10\', \',\', \'0\', \')\', \')\', \';\', \'panel\', \'.\', \'add\', \'(\', \'fieldLabel\', \')\', \';\', \'panel\', \'.\', \'add\', \'(\', \'comp\', \')\', \';\', \'return\', \'panel\', \';\', \'}\']', 'private TYPE_1 METHOD_1 ( String VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 VAR_3 = new TYPE_3 ( VAR_1 ) ; VAR_3 . METHOD_2 ( VAR_3 . METHOD_3 ( ) . METHOD_4 ( VAR_4 ) ) ; VAR_3 . METHOD_5 ( new TYPE_4 ( INT_1 , INT_2 ) ) ; TYPE_1 VAR_5 = new TYPE_1 ( new TYPE_5 ( VAR_6 , INT_3 , 0 ) ) ; VAR_5 . add ( VAR_3 ) ; VAR_5 . add ( VAR_2 ) ; return VAR_5 ; }', '[\'TYPE_1: JPanel\', \'TYPE_5: FlowLayout\', \'TYPE_2: JComponent\', \'TYPE_3: JLabel\', \'TYPE_4: Dimension\', \'METHOD_1: newFieldPanel\', \'METHOD_5: setPreferredSize\', \'METHOD_4: deriveFont\', \'METHOD_3: getFont\', \'METHOD_2: setFont\', \'VAR_2: comp\', \'VAR_6: FlowLayout.LEFT\', \'VAR_3: fieldLabel\', \'VAR_1: label\', \'VAR_4: Font.BOLD\', \'VAR_5: panel\', \'INT_1: 150\', \'INT_2: 20\', \'INT_3: 10\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/EditUserDialog.java', 17, '272:9', '280:9', 87, 8 ), ( 5, 273, 13, 'public void setTeams(List<TeamModel> teams, List<TeamModel> selected) {\n    Collections.sort(teams);\n    if (selected != null) {\n    Collections.sort(selected);\n    }\n    teamsPalette.setObjects(teams, selected);\n    }', '[\'public\', \'void\', \'setTeams\', \'(\', \'List\', \'<\', \'TeamModel\', \'>\', \'teams\', \',\', \'List\', \'<\', \'TeamModel\', \'>\', \'selected\', \')\', \'{\', \'Collections\', \'.\', \'sort\', \'(\', \'teams\', \')\', \';\', \'if\', \'(\', \'selected\', \'!=\', \'null\', \')\', \'{\', \'Collections\', \'.\', \'sort\', \'(\', \'selected\', \')\', \';\', \'}\', \'teamsPalette\', \'.\', \'setObjects\', \'(\', \'teams\', \',\', \'selected\', \')\', \';\', \'}\']', 'public void METHOD_1 ( List < TYPE_1 > VAR_1 , List < TYPE_1 > VAR_2 ) { Collections . METHOD_2 ( VAR_1 ) ; if ( VAR_2 != null ) { Collections . METHOD_2 ( VAR_2 ) ; } VAR_3 . METHOD_3 ( VAR_1 , VAR_2 ) ; }', '[\'TYPE_1: TeamModel\', \'METHOD_3: setObjects\', \'METHOD_1: setTeams\', \'METHOD_2: sort\', \'VAR_1: teams\', \'VAR_3: teamsPalette\', \'VAR_2: selected\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/EditUserDialog.java', 17, '452:9', '458:9', 49, 5 ), ( 5, 274, 2, 'public void clear() {\n    settingName.setText(" ");\n    settingDefault.setText(" ");\n    sinceVersion.setText(" ");\n    directives.setText(" ");\n    descriptionArea.setText("");\n    }', '[\'public\', \'void\', \'clear\', \'(\', \')\', \'{\', \'settingName\', \'.\', \'setText\', \'(\', \'" "\', \')\', \';\', \'settingDefault\', \'.\', \'setText\', \'(\', \'" "\', \')\', \';\', \'sinceVersion\', \'.\', \'setText\', \'(\', \'" "\', \')\', \';\', \'directives\', \'.\', \'setText\', \'(\', \'" "\', \')\', \';\', \'descriptionArea\', \'.\', \'setText\', \'(\', \'""\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_3 . METHOD_2 ( STRING_1 ) ; VAR_4 . METHOD_2 ( STRING_1 ) ; VAR_5 . METHOD_2 ( STRING_2 ) ; }', '[\'METHOD_1: clear\', \'METHOD_2: setText\', \'VAR_5: descriptionArea\', \'VAR_4: directives\', \'VAR_3: sinceVersion\', \'VAR_2: settingDefault\', \'VAR_1: settingName\', \'STRING_2: ""\', \'STRING_1: " "\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/SettingPanel.java', 5, '113:9', '119:9', 41, 6 ), ( 5, 275, 3, '@Override\n    public String getColumnName(int column) {\n    Columns col = Columns.values()[column];\n    switch (col) {\n    case Name:\n    return Translation.get("gb.name");\n    case Display_Name:\n    return Translation.get("gb.displayName");\n    case Type:\n    return Translation.get("gb.type");\n    case Teams:\n    return Translation.get("gb.teamMemberships");\n    case Repositories:\n    return Translation.get("gb.repositories");\n    }\n    return "";\n    }', '[\'public\', \'String\', \'getColumnName\', \'(\', \'int\', \'column\', \')\', \'{\', \'Columns\', \'col\', \'=\', \'Columns\', \'.\', \'values\', \'(\', \')\', \'[\', \'column\', \']\', \';\', \'switch\', \'(\', \'col\', \')\', \'{\', \'case\', \'Name\', \':\', \'return\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.name"\', \')\', \';\', \'case\', \'Display_Name\', \':\', \'return\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.displayName"\', \')\', \';\', \'case\', \'Type\', \':\', \'return\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.type"\', \')\', \';\', \'case\', \'Teams\', \':\', \'return\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.teamMemberships"\', \')\', \';\', \'case\', \'Repositories\', \':\', \'return\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.repositories"\', \')\', \';\', \'}\', \'return\', \'""\', \';\', \'}\']', 'public String METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = TYPE_1 . values ( ) [ VAR_1 ] ; switch ( VAR_2 ) { case VAR_3 : return TYPE_2 . get ( STRING_1 ) ; case VAR_4 : return TYPE_2 . get ( STRING_2 ) ; case Type : return TYPE_2 . get ( STRING_3 ) ; case VAR_5 : return TYPE_2 . get ( STRING_4 ) ; case VAR_6 : return TYPE_2 . get ( STRING_5 ) ; } return STRING_6 ; }', '[\'TYPE_2: Translation\', \'TYPE_1: Columns\', \'METHOD_1: getColumnName\', \'VAR_6: Repositories\', \'VAR_2: col\', \'VAR_1: column\', \'VAR_4: Display_Name\', \'VAR_5: Teams\', \'VAR_3: Name\', \'STRING_6: ""\', \'STRING_5: "gb.repositories"\', \'STRING_1: "gb.name"\', \'STRING_3: "gb.type"\', \'STRING_2: "gb.displayName"\', \'STRING_4: "gb.teamMemberships"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/UsersTableModel.java', 8, '66:9', '82:9', 86, 15 ), ( 5, 277, 4, '@Override\n    public String getColumnName(int column) {\n    Columns col = Columns.values()[column];\n    switch (col) {\n    case Date:\n    return Translation.get("gb.date");\n    case Repository:\n    return Translation.get("gb.repository");\n    case Branch:\n    return Translation.get("gb.branch");\n    case Author:\n    return Translation.get("gb.author");\n    case Message:\n    return Translation.get("gb.message");\n    }\n    return "";\n    }', '[\'public\', \'String\', \'getColumnName\', \'(\', \'int\', \'column\', \')\', \'{\', \'Columns\', \'col\', \'=\', \'Columns\', \'.\', \'values\', \'(\', \')\', \'[\', \'column\', \']\', \';\', \'switch\', \'(\', \'col\', \')\', \'{\', \'case\', \'Date\', \':\', \'return\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.date"\', \')\', \';\', \'case\', \'Repository\', \':\', \'return\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.repository"\', \')\', \';\', \'case\', \'Branch\', \':\', \'return\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.branch"\', \')\', \';\', \'case\', \'Author\', \':\', \'return\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.author"\', \')\', \';\', \'case\', \'Message\', \':\', \'return\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.message"\', \')\', \';\', \'}\', \'return\', \'""\', \';\', \'}\']', 'public String METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = TYPE_1 . values ( ) [ VAR_1 ] ; switch ( VAR_2 ) { case VAR_3 : return TYPE_2 . get ( STRING_1 ) ; case VAR_4 : return TYPE_2 . get ( STRING_2 ) ; case VAR_5 : return TYPE_2 . get ( STRING_3 ) ; case VAR_6 : return TYPE_2 . get ( STRING_4 ) ; case VAR_7 : return TYPE_2 . get ( STRING_5 ) ; } return STRING_6 ; }', '[\'TYPE_2: Translation\', \'TYPE_1: Columns\', \'METHOD_1: getColumnName\', \'VAR_2: col\', \'VAR_4: Repository\', \'VAR_7: Message\', \'VAR_5: Branch\', \'VAR_1: column\', \'VAR_6: Author\', \'VAR_3: Date\', \'STRING_6: ""\', \'STRING_1: "gb.date"\', \'STRING_3: "gb.branch"\', \'STRING_5: "gb.message"\', \'STRING_4: "gb.author"\', \'STRING_2: "gb.repository"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/FeedEntryTableModel.java', 9, '67:9', '83:9', 86, 15 ), ( 5, 277, 5, 'public Class<?> getColumnClass(int columnIndex) {\n    if (Columns.Date.ordinal() == columnIndex) {\n    return Date.class;\n    } else if (Columns.Message.ordinal() == columnIndex) {\n    return FeedEntryModel.class;\n    }\n    return String.class;\n    }', '[\'public\', \'Class\', \'<\', \'?\', \'>\', \'getColumnClass\', \'(\', \'int\', \'columnIndex\', \')\', \'{\', \'if\', \'(\', \'Columns.Date\', \'.\', \'ordinal\', \'(\', \')\', \'==\', \'columnIndex\', \')\', \'{\', \'return\', \'Date.\', \'class\', \';\', \'}\', \'else\', \'if\', \'(\', \'Columns.Message\', \'.\', \'ordinal\', \'(\', \')\', \'==\', \'columnIndex\', \')\', \'{\', \'return\', \'FeedEntryModel.\', \'class\', \';\', \'}\', \'return\', \'String.\', \'class\', \';\', \'}\']', 'public Class < ? > METHOD_1 ( int VAR_1 ) { if ( TYPE_1 . METHOD_2 ( ) == VAR_1 ) { return VAR_2 class ; } else if ( TYPE_2 . METHOD_2 ( ) == VAR_1 ) { return VAR_3 class ; } return VAR_4 class ; }', '[\'TYPE_1: Columns.Date\', \'TYPE_2: Columns.Message\', \'METHOD_1: getColumnClass\', \'METHOD_2: ordinal\', \'VAR_4: String.\', \'VAR_1: columnIndex\', \'VAR_3: FeedEntryModel.\', \'VAR_2: Date.\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/FeedEntryTableModel.java', 9, '92:9', '99:9', 53, 6 ), ( 5, 278, 2, '@Override\n    public Component prepareRenderer(TableCellRenderer renderer, int row, int column) {\n    Component c = super.prepareRenderer(renderer, row, column);\n    boolean isSelected = isCellSelected(row, column);\n    rowRenderer.prepareRow(c, isSelected, row, column);\n    return c;\n    }', '[\'public\', \'Component\', \'prepareRenderer\', \'(\', \'TableCellRenderer\', \'renderer\', \',\', \'int\', \'row\', \',\', \'int\', \'column\', \')\', \'{\', \'Component\', \'c\', \'=\', \'super\', \'.\', \'prepareRenderer\', \'(\', \'renderer\', \',\', \'row\', \',\', \'column\', \')\', \';\', \'boolean\', \'isSelected\', \'=\', \'isCellSelected\', \'(\', \'row\', \',\', \'column\', \')\', \';\', \'rowRenderer\', \'.\', \'prepareRow\', \'(\', \'c\', \',\', \'isSelected\', \',\', \'row\', \',\', \'column\', \')\', \';\', \'return\', \'c\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , int row , int VAR_2 ) { TYPE_1 c = super . METHOD_1 ( VAR_1 , row , VAR_2 ) ; boolean VAR_3 = METHOD_2 ( row , VAR_2 ) ; VAR_4 . METHOD_3 ( c , VAR_3 , row , VAR_2 ) ; return c ; }', '[\'TYPE_2: TableCellRenderer\', \'TYPE_1: Component\', \'METHOD_2: isCellSelected\', \'METHOD_3: prepareRow\', \'METHOD_1: prepareRenderer\', \'VAR_1: renderer\', \'VAR_4: rowRenderer\', \'VAR_2: column\', \'VAR_3: isSelected\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/Utils.java', 11, '62:33', '68:33', 57, 6 ), ( 5, 278, 4, 'public static void explainForbidden(Component c, RpcRequest request) {\n    String msg = MessageFormat.format(\n    				"The request \\"{0}\\" has been forbidden for the account by the Gitblit server.",\n    				request.name());\n    JOptionPane.showMessageDialog(c, msg, "Forbidden", JOptionPane.ERROR_MESSAGE);\n    }', '[\'public\', \'static\', \'void\', \'explainForbidden\', \'(\', \'Component\', \'c\', \',\', \'RpcRequest\', \'request\', \')\', \'{\', \'String\', \'msg\', \'=\', \'MessageFormat\', \'.\', \'format\', \'(\', \'"The request \\\\"{0}\\\\" has been forbidden for the account by the Gitblit server."\', \',\', \'request\', \'.\', \'name\', \'(\', \')\', \')\', \';\', \'JOptionPane\', \'.\', \'showMessageDialog\', \'(\', \'c\', \',\', \'msg\', \',\', \'"Forbidden"\', \',\', \'JOptionPane.ERROR_MESSAGE\', \')\', \';\', \'}\']', 'public static void METHOD_1 ( TYPE_1 c , TYPE_2 request ) { String msg = TYPE_3 . format ( STRING_1 , request . name ( ) ) ; TYPE_4 . METHOD_2 ( c , msg , STRING_2 , VAR_1 ) ; }', '[\'TYPE_3: MessageFormat\', \'TYPE_2: RpcRequest\', \'TYPE_1: Component\', \'TYPE_4: JOptionPane\', \'METHOD_1: explainForbidden\', \'METHOD_2: showMessageDialog\', \'VAR_1: JOptionPane.ERROR_MESSAGE\', \'STRING_1: "The request \\\\"{0}\\\\" has been forbidden for the account by the Gitblit server."\', \'STRING_2: "Forbidden"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/Utils.java', 11, '88:9', '93:9', 43, 5 ), ( 5, 278, 10, 'public static void browse(String url) {\n    try {\n    Desktop.getDesktop().browse(new URI(url));\n    } catch (Exception x) {\n    showException(null, x);\n    }\n    }', '[\'public\', \'static\', \'void\', \'browse\', \'(\', \'String\', \'url\', \')\', \'{\', \'try\', \'{\', \'Desktop\', \'.\', \'getDesktop\', \'(\', \')\', \'.\', \'browse\', \'(\', \'new\', \'URI\', \'(\', \'url\', \')\', \')\', \';\', \'}\', \'catch\', \'(\', \'Exception\', \'x\', \')\', \'{\', \'showException\', \'(\', \'null\', \',\', \'x\', \')\', \';\', \'}\', \'}\']', 'public static void METHOD_1 ( String url ) { try { TYPE_1 . METHOD_2 ( ) . METHOD_1 ( new TYPE_2 ( url ) ) ; } catch ( Exception x ) { METHOD_3 ( null , x ) ; } }', '[\'TYPE_1: Desktop\', \'TYPE_2: URI\', \'METHOD_3: showException\', \'METHOD_2: getDesktop\', \'METHOD_1: browse\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/Utils.java', 11, '162:9', '168:9', 41, 5 ), ( 5, 279, 3, '@Override\n    public String getColumnName(int column) {\n    Columns col = Columns.values()[column];\n    switch (col) {\n    case Name:\n    return Translation.get("gb.name");\n    case Description:\n    return Translation.get("gb.description");\n    case Owner:\n    return Translation.get("gb.owner");\n    case Last_Change:\n    return Translation.get("gb.lastChange");\n    case Size:\n    return Translation.get("gb.size");\n    }\n    return "";\n    }', '[\'public\', \'String\', \'getColumnName\', \'(\', \'int\', \'column\', \')\', \'{\', \'Columns\', \'col\', \'=\', \'Columns\', \'.\', \'values\', \'(\', \')\', \'[\', \'column\', \']\', \';\', \'switch\', \'(\', \'col\', \')\', \'{\', \'case\', \'Name\', \':\', \'return\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.name"\', \')\', \';\', \'case\', \'Description\', \':\', \'return\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.description"\', \')\', \';\', \'case\', \'Owner\', \':\', \'return\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.owner"\', \')\', \';\', \'case\', \'Last_Change\', \':\', \'return\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.lastChange"\', \')\', \';\', \'case\', \'Size\', \':\', \'return\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.size"\', \')\', \';\', \'}\', \'return\', \'""\', \';\', \'}\']', 'public String METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = TYPE_1 . values ( ) [ VAR_1 ] ; switch ( VAR_2 ) { case VAR_3 : return TYPE_2 . get ( STRING_1 ) ; case VAR_4 : return TYPE_2 . get ( STRING_2 ) ; case VAR_5 : return TYPE_2 . get ( STRING_3 ) ; case VAR_6 : return TYPE_2 . get ( STRING_4 ) ; case VAR_7 : return TYPE_2 . get ( STRING_5 ) ; } return STRING_6 ; }', '[\'TYPE_2: Translation\', \'TYPE_1: Columns\', \'METHOD_1: getColumnName\', \'VAR_2: col\', \'VAR_5: Owner\', \'VAR_6: Last_Change\', \'VAR_4: Description\', \'VAR_7: Size\', \'VAR_1: column\', \'VAR_3: Name\', \'STRING_6: ""\', \'STRING_2: "gb.description"\', \'STRING_3: "gb.owner"\', \'STRING_4: "gb.lastChange"\', \'STRING_5: "gb.size"\', \'STRING_1: "gb.name"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/RepositoriesTableModel.java', 8, '68:9', '84:9', 86, 15 ), ( 5, 279, 4, 'public Class<?> getColumnClass(int columnIndex) {\n    Columns col = Columns.values()[columnIndex];\n    switch (col) {\n    case Name:\n    case Indicators:\n    return RepositoryModel.class;\n    case Last_Change:\n    return Date.class;\n    }\n    return String.class;\n    }', '[\'public\', \'Class\', \'<\', \'?\', \'>\', \'getColumnClass\', \'(\', \'int\', \'columnIndex\', \')\', \'{\', \'Columns\', \'col\', \'=\', \'Columns\', \'.\', \'values\', \'(\', \')\', \'[\', \'columnIndex\', \']\', \';\', \'switch\', \'(\', \'col\', \')\', \'{\', \'case\', \'Name\', \':\', \'case\', \'Indicators\', \':\', \'return\', \'RepositoryModel.\', \'class\', \';\', \'case\', \'Last_Change\', \':\', \'return\', \'Date.\', \'class\', \';\', \'}\', \'return\', \'String.\', \'class\', \';\', \'}\']', 'public Class < ? > METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = TYPE_1 . values ( ) [ VAR_1 ] ; switch ( VAR_2 ) { case VAR_3 : case VAR_4 : return VAR_5 class ; case VAR_6 : return VAR_7 class ; } return VAR_8 class ; }', '[\'TYPE_1: Columns\', \'METHOD_1: getColumnClass\', \'VAR_2: col\', \'VAR_6: Last_Change\', \'VAR_8: String.\', \'VAR_5: RepositoryModel.\', \'VAR_1: columnIndex\', \'VAR_7: Date.\', \'VAR_4: Indicators\', \'VAR_3: Name\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/RepositoriesTableModel.java', 8, '93:9', '103:9', 53, 9 ), ( 5, 281, 5, '@Override\n    public void valueChanged(ListSelectionEvent e) {\n    if (e.getValueIsAdjusting()) {\n    return;\n    }\n    boolean selected = table.getSelectedRow() > -1;\n    boolean singleSelection = table.getSelectedRows().length == 1;\n    editUser.setEnabled(singleSelection && selected);\n    delUser.setEnabled(selected);\n    }', '[\'public\', \'void\', \'valueChanged\', \'(\', \'ListSelectionEvent\', \'e\', \')\', \'{\', \'if\', \'(\', \'e\', \'.\', \'getValueIsAdjusting\', \'(\', \')\', \')\', \'{\', \'return\', \';\', \'}\', \'boolean\', \'selected\', \'=\', \'table\', \'.\', \'getSelectedRow\', \'(\', \')\', \'>\', \'-\', \'1\', \';\', \'boolean\', \'singleSelection\', \'=\', \'table\', \'.\', \'getSelectedRows\', \'(\', \')\', \'.\', \'length\', \'==\', \'1\', \';\', \'editUser\', \'.\', \'setEnabled\', \'(\', \'singleSelection\', \'&&\', \'selected\', \')\', \';\', \'delUser\', \'.\', \'setEnabled\', \'(\', \'selected\', \')\', \';\', \'}\']', 'public void METHOD_1 ( TYPE_1 e ) { if ( e . METHOD_2 ( ) ) { return ; } boolean VAR_1 = VAR_2 . METHOD_3 ( ) > - 1 ; boolean VAR_3 = VAR_2 . METHOD_4 ( ) . length == 1 ; VAR_4 . METHOD_5 ( VAR_3 && VAR_1 ) ; VAR_5 . METHOD_5 ( VAR_1 ) ; }', '[\'TYPE_1: ListSelectionEvent\', \'METHOD_5: setEnabled\', \'METHOD_3: getSelectedRow\', \'METHOD_1: valueChanged\', \'METHOD_4: getSelectedRows\', \'METHOD_2: getValueIsAdjusting\', \'VAR_5: delUser\', \'VAR_4: editUser\', \'VAR_3: singleSelection\', \'VAR_1: selected\', \'VAR_2: table\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/UsersPanel.java', 31, '130:25', '139:25', 60, 8 ), ( 5, 281, 11, 'protected void updateTable(boolean pack) {\n    tableModel.list.clear();\n    tableModel.list.addAll(gitblit.getUsers());\n    tableModel.fireTableDataChanged();\n    header.setText(Translation.get("gb.users") + " (" + gitblit.getUsers().size() + ")");\n    if (pack) {\n    Utils.packColumns(table, Utils.MARGIN);\n    }\n    }', '[\'protected\', \'void\', \'updateTable\', \'(\', \'boolean\', \'pack\', \')\', \'{\', \'tableModel.list\', \'.\', \'clear\', \'(\', \')\', \';\', \'tableModel.list\', \'.\', \'addAll\', \'(\', \'gitblit\', \'.\', \'getUsers\', \'(\', \')\', \')\', \';\', \'tableModel\', \'.\', \'fireTableDataChanged\', \'(\', \')\', \';\', \'header\', \'.\', \'setText\', \'(\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.users"\', \')\', \'+\', \'" ("\', \'+\', \'gitblit\', \'.\', \'getUsers\', \'(\', \')\', \'.\', \'size\', \'(\', \')\', \'+\', \'")"\', \')\', \';\', \'if\', \'(\', \'pack\', \')\', \'{\', \'Utils\', \'.\', \'packColumns\', \'(\', \'table\', \',\', \'Utils.MARGIN\', \')\', \';\', \'}\', \'}\']', 'protected void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_2 . addAll ( VAR_3 . METHOD_3 ( ) ) ; VAR_4 . METHOD_4 ( ) ; VAR_5 . METHOD_5 ( TYPE_1 . get ( STRING_1 ) + STRING_2 + VAR_3 . METHOD_3 ( ) . size ( ) + STRING_3 ) ; if ( VAR_1 ) { TYPE_2 . METHOD_6 ( VAR_6 , VAR_7 ) ; } }', '[\'TYPE_1: Translation\', \'TYPE_2: Utils\', \'METHOD_3: getUsers\', \'METHOD_2: clear\', \'METHOD_4: fireTableDataChanged\', \'METHOD_1: updateTable\', \'METHOD_6: packColumns\', \'METHOD_5: setText\', \'VAR_3: gitblit\', \'VAR_4: tableModel\', \'VAR_5: header\', \'VAR_7: Utils.MARGIN\', \'VAR_1: pack\', \'VAR_6: table\', \'VAR_2: tableModel.list\', \'STRING_2: " ("\', \'STRING_3: ")"\', \'STRING_1: "gb.users"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/UsersPanel.java', 31, '195:9', '203:9', 74, 7 ), ( 5, 281, 13, 'public boolean include(Entry<? extends UsersTableModel, ? extends Object> entry) {\n    for (int i = entry.getValueCount() - 1; i >= 0; i--) {\n    if (entry.getStringValue(i).toLowerCase().contains(fragment.toLowerCase())) {\n    return true;\n    }\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'include\', \'(\', \'Entry\', \'<\', \'?\', \'extends\', \'UsersTableModel\', \',\', \'?\', \'extends\', \'Object\', \'>\', \'entry\', \')\', \'{\', \'for\', \'(\', \'int\', \'i\', \'=\', \'entry\', \'.\', \'getValueCount\', \'(\', \')\', \'-\', \'1\', \';\', \'i\', \'>=\', \'0\', \';\', \'i\', \'--\', \')\', \'{\', \'if\', \'(\', \'entry\', \'.\', \'getStringValue\', \'(\', \'i\', \')\', \'.\', \'toLowerCase\', \'(\', \')\', \'.\', \'contains\', \'(\', \'fragment\', \'.\', \'toLowerCase\', \'(\', \')\', \')\', \')\', \'{\', \'return\', \'true\', \';\', \'}\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean METHOD_1 ( Entry < ? extends TYPE_1 , ? extends Object > entry ) { for ( int i = entry . METHOD_2 ( ) - 1 ; i >= 0 ; i -- ) { if ( entry . METHOD_3 ( i ) . METHOD_4 ( ) . contains ( VAR_1 . METHOD_4 ( ) ) ) { return true ; } } return false ; }', '[\'TYPE_1: UsersTableModel\', \'METHOD_1: include\', \'METHOD_3: getStringValue\', \'METHOD_4: toLowerCase\', \'METHOD_2: getValueCount\', \'VAR_1: fragment\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/UsersPanel.java', 31, '211:25', '218:25', 67, 5 ), ( 5, 281, 14, 'private List<UserModel> getSelectedUsers() {\n    List<UserModel> users = new ArrayList<UserModel>();\n    for (int viewRow : table.getSelectedRows()) {\n    int modelRow = table.convertRowIndexToModel(viewRow);\n    UserModel model = tableModel.list.get(modelRow);\n    users.add(model);\n    }\n    return users;\n    }', '[\'private\', \'List\', \'<\', \'UserModel\', \'>\', \'getSelectedUsers\', \'(\', \')\', \'{\', \'List\', \'<\', \'UserModel\', \'>\', \'users\', \'=\', \'new\', \'ArrayList\', \'<\', \'UserModel\', \'>\', \'(\', \')\', \';\', \'for\', \'(\', \'int\', \'viewRow\', \':\', \'table\', \'.\', \'getSelectedRows\', \'(\', \')\', \')\', \'{\', \'int\', \'modelRow\', \'=\', \'table\', \'.\', \'convertRowIndexToModel\', \'(\', \'viewRow\', \')\', \';\', \'UserModel\', \'model\', \'=\', \'tableModel.list\', \'.\', \'get\', \'(\', \'modelRow\', \')\', \';\', \'users\', \'.\', \'add\', \'(\', \'model\', \')\', \';\', \'}\', \'return\', \'users\', \';\', \'}\']', 'private List < TYPE_1 > METHOD_1 ( ) { List < TYPE_1 > VAR_1 = new ArrayList < TYPE_1 > ( ) ; for ( int VAR_2 : VAR_3 . METHOD_2 ( ) ) { int VAR_4 = VAR_3 . METHOD_3 ( VAR_2 ) ; TYPE_1 model = VAR_5 . get ( VAR_4 ) ; VAR_1 . add ( model ) ; } return VAR_1 ; }', '[\'TYPE_1: UserModel\', \'METHOD_3: convertRowIndexToModel\', \'METHOD_1: getSelectedUsers\', \'METHOD_2: getSelectedRows\', \'VAR_2: viewRow\', \'VAR_4: modelRow\', \'VAR_1: users\', \'VAR_3: table\', \'VAR_5: tableModel.list\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/UsersPanel.java', 31, '225:9', '233:9', 66, 7 ), ( 5, 281, 19, '@Override\n    protected Boolean doRequest() throws IOException {\n    boolean success = gitblit.createUser(newUser);\n    if (success) {\n    gitblit.refreshUsers();\n    if (newUser.teams.size() > 0) {\n    gitblit.refreshTeams();\n    }\n    }\n    return success;\n    }', '[\'protected\', \'Boolean\', \'doRequest\', \'(\', \')\', \'throws\', \'IOException\', \'{\', \'boolean\', \'success\', \'=\', \'gitblit\', \'.\', \'createUser\', \'(\', \'newUser\', \')\', \';\', \'if\', \'(\', \'success\', \')\', \'{\', \'gitblit\', \'.\', \'refreshUsers\', \'(\', \')\', \';\', \'if\', \'(\', \'newUser.teams\', \'.\', \'size\', \'(\', \')\', \'>\', \'0\', \')\', \'{\', \'gitblit\', \'.\', \'refreshTeams\', \'(\', \')\', \';\', \'}\', \'}\', \'return\', \'success\', \';\', \'}\']', 'protected Boolean METHOD_1 ( ) throws IOException { boolean VAR_1 = VAR_2 . METHOD_2 ( VAR_3 ) ; if ( VAR_1 ) { VAR_2 . METHOD_3 ( ) ; if ( VAR_4 . size ( ) > 0 ) { VAR_2 . METHOD_4 ( ) ; } } return VAR_1 ; }', '[\'METHOD_1: doRequest\', \'METHOD_4: refreshTeams\', \'METHOD_2: createUser\', \'METHOD_3: refreshUsers\', \'VAR_4: newUser.teams\', \'VAR_1: success\', \'VAR_3: newUser\', \'VAR_2: gitblit\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/UsersPanel.java', 31, '271:25', '281:25', 52, 8 ), ( 5, 281, 20, '@Override\n    protected void onSuccess() {\n    updateTable(false);\n    if (newUser.teams.size() > 0) {\n    updateTeamsTable();\n    }\n    }', '[\'protected\', \'void\', \'onSuccess\', \'(\', \')\', \'{\', \'updateTable\', \'(\', \'false\', \')\', \';\', \'if\', \'(\', \'newUser.teams\', \'.\', \'size\', \'(\', \')\', \'>\', \'0\', \')\', \'{\', \'updateTeamsTable\', \'(\', \')\', \';\', \'}\', \'}\']', 'protected void METHOD_1 ( ) { METHOD_2 ( false ) ; if ( VAR_1 . size ( ) > 0 ) { METHOD_3 ( ) ; } }', '[\'METHOD_3: updateTeamsTable\', \'METHOD_2: updateTable\', \'METHOD_1: onSuccess\', \'VAR_1: newUser.teams\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/UsersPanel.java', 31, '283:25', '289:25', 29, 5 ), ( 5, 281, 23, '@Override\n    protected Boolean doRequest() throws IOException {\n    boolean success = gitblit.updateUser(user.username, revisedUser);\n    if (success) {\n    gitblit.refreshUsers();\n    gitblit.refreshTeams();\n    }\n    return success;\n    }', '[\'protected\', \'Boolean\', \'doRequest\', \'(\', \')\', \'throws\', \'IOException\', \'{\', \'boolean\', \'success\', \'=\', \'gitblit\', \'.\', \'updateUser\', \'(\', \'user.username\', \',\', \'revisedUser\', \')\', \';\', \'if\', \'(\', \'success\', \')\', \'{\', \'gitblit\', \'.\', \'refreshUsers\', \'(\', \')\', \';\', \'gitblit\', \'.\', \'refreshTeams\', \'(\', \')\', \';\', \'}\', \'return\', \'success\', \';\', \'}\']', 'protected Boolean METHOD_1 ( ) throws IOException { boolean VAR_1 = VAR_2 . METHOD_2 ( VAR_3 , VAR_4 ) ; if ( VAR_1 ) { VAR_2 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; } return VAR_1 ; }', '[\'METHOD_1: doRequest\', \'METHOD_4: refreshTeams\', \'METHOD_2: updateUser\', \'METHOD_3: refreshUsers\', \'VAR_4: revisedUser\', \'VAR_1: success\', \'VAR_2: gitblit\', \'VAR_3: user.username\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/UsersPanel.java', 31, '321:25', '329:25', 43, 7 ), ( 5, 281, 27, '@Override\n    protected Boolean doRequest() throws IOException {\n    boolean success = true;\n    for (UserModel user : users) {\n    success &= gitblit.deleteUser(user);\n    }\n    if (success) {\n    gitblit.refreshUsers();\n    gitblit.refreshTeams();\n    }\n    return success;\n    }', '[\'protected\', \'Boolean\', \'doRequest\', \'(\', \')\', \'throws\', \'IOException\', \'{\', \'boolean\', \'success\', \'=\', \'true\', \';\', \'for\', \'(\', \'UserModel\', \'user\', \':\', \'users\', \')\', \'{\', \'success\', \'&=\', \'gitblit\', \'.\', \'deleteUser\', \'(\', \'user\', \')\', \';\', \'}\', \'if\', \'(\', \'success\', \')\', \'{\', \'gitblit\', \'.\', \'refreshUsers\', \'(\', \')\', \';\', \'gitblit\', \'.\', \'refreshTeams\', \'(\', \')\', \';\', \'}\', \'return\', \'success\', \';\', \'}\']', 'protected Boolean METHOD_1 ( ) throws IOException { boolean VAR_1 = true ; for ( TYPE_1 VAR_2 : VAR_3 ) { VAR_1 &= VAR_4 . METHOD_2 ( VAR_2 ) ; } if ( VAR_1 ) { VAR_4 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( ) ; } return VAR_1 ; }', '[\'TYPE_1: UserModel\', \'METHOD_1: doRequest\', \'METHOD_4: refreshTeams\', \'METHOD_2: deleteUser\', \'METHOD_3: refreshUsers\', \'VAR_1: success\', \'VAR_4: gitblit\', \'VAR_2: user\', \'VAR_3: users\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/UsersPanel.java', 31, '358:33', '369:33', 52, 9 ), ( 5, 282, 7, 'private JPanel getCenterPanel() {\n    serverTabs = new JTabbedPane(JTabbedPane.TOP);\n    JMenuBar menubar = setupMenu();\n    JPanel panel = new JPanel(new BorderLayout());\n    panel.add(menubar, BorderLayout.NORTH);\n    panel.add(serverTabs, BorderLayout.CENTER);\n    return panel;\n    }', '[\'private\', \'JPanel\', \'getCenterPanel\', \'(\', \')\', \'{\', \'serverTabs\', \'=\', \'new\', \'JTabbedPane\', \'(\', \'JTabbedPane.TOP\', \')\', \';\', \'JMenuBar\', \'menubar\', \'=\', \'setupMenu\', \'(\', \')\', \';\', \'JPanel\', \'panel\', \'=\', \'new\', \'JPanel\', \'(\', \'new\', \'BorderLayout\', \'(\', \')\', \')\', \';\', \'panel\', \'.\', \'add\', \'(\', \'menubar\', \',\', \'BorderLayout.NORTH\', \')\', \';\', \'panel\', \'.\', \'add\', \'(\', \'serverTabs\', \',\', \'BorderLayout.CENTER\', \')\', \';\', \'return\', \'panel\', \';\', \'}\']', 'private TYPE_1 METHOD_1 ( ) { VAR_1 = new TYPE_2 ( VAR_2 ) ; TYPE_3 VAR_3 = METHOD_2 ( ) ; TYPE_1 VAR_4 = new TYPE_1 ( new TYPE_4 ( ) ) ; VAR_4 . add ( VAR_3 , VAR_5 ) ; VAR_4 . add ( VAR_1 , VAR_6 ) ; return VAR_4 ; }', '[\'TYPE_1: JPanel\', \'TYPE_4: BorderLayout\', \'TYPE_2: JTabbedPane\', \'TYPE_3: JMenuBar\', \'METHOD_2: setupMenu\', \'METHOD_1: getCenterPanel\', \'VAR_3: menubar\', \'VAR_6: BorderLayout.CENTER\', \'VAR_2: JTabbedPane.TOP\', \'VAR_5: BorderLayout.NORTH\', \'VAR_1: serverTabs\', \'VAR_4: panel\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/GitblitManager.java', 25, '185:9', '192:9', 58, 7 ), ( 5, 282, 8, 'private void manageRegistrations() {\n    RegistrationsDialog dialog = new RegistrationsDialog(new ArrayList<GitblitRegistration>(\n    				registrations.values()), this);\n    dialog.setLocationRelativeTo(GitblitManager.this);\n    dialog.setVisible(true);\n    }', '[\'private\', \'void\', \'manageRegistrations\', \'(\', \')\', \'{\', \'RegistrationsDialog\', \'dialog\', \'=\', \'new\', \'RegistrationsDialog\', \'(\', \'new\', \'ArrayList\', \'<\', \'GitblitRegistration\', \'>\', \'(\', \'registrations\', \'.\', \'values\', \'(\', \')\', \')\', \',\', \'this\', \')\', \';\', \'dialog\', \'.\', \'setLocationRelativeTo\', \'(\', \'GitblitManager.\', \'this\', \')\', \';\', \'dialog\', \'.\', \'setVisible\', \'(\', \'true\', \')\', \';\', \'}\']', 'private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( new ArrayList < TYPE_2 > ( VAR_2 . values ( ) ) , this ) ; VAR_1 . METHOD_2 ( VAR_3 this ) ; VAR_1 . METHOD_3 ( true ) ; }', '[\'TYPE_1: RegistrationsDialog\', \'TYPE_2: GitblitRegistration\', \'METHOD_1: manageRegistrations\', \'METHOD_3: setVisible\', \'METHOD_2: setLocationRelativeTo\', \'VAR_1: dialog\', \'VAR_2: registrations\', \'VAR_3: GitblitManager.\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/GitblitManager.java', 25, '194:9', '199:9', 43, 5 ), ( 5, 282, 18, '@Override\n    public boolean deleteRegistrations(List<GitblitRegistration> list) {\n    boolean success = false;\n    try {\n    StoredConfig config = getConfig();\n    for (GitblitRegistration reg : list) {\n    config.unsetSection(SERVER, reg.name);\n    registrations.remove(reg.name);\n    }\n    config.save();\n    success = true;\n    } catch (Throwable t) {\n    Utils.showException(GitblitManager.this, t);\n    }\n    return success;\n    }', '[\'public\', \'boolean\', \'deleteRegistrations\', \'(\', \'List\', \'<\', \'GitblitRegistration\', \'>\', \'list\', \')\', \'{\', \'boolean\', \'success\', \'=\', \'false\', \';\', \'try\', \'{\', \'StoredConfig\', \'config\', \'=\', \'getConfig\', \'(\', \')\', \';\', \'for\', \'(\', \'GitblitRegistration\', \'reg\', \':\', \'list\', \')\', \'{\', \'config\', \'.\', \'unsetSection\', \'(\', \'SERVER\', \',\', \'reg\', \'.\', \'name\', \')\', \';\', \'registrations\', \'.\', \'remove\', \'(\', \'reg\', \'.\', \'name\', \')\', \';\', \'}\', \'config\', \'.\', \'save\', \'(\', \')\', \';\', \'success\', \'=\', \'true\', \';\', \'}\', \'catch\', \'(\', \'Throwable\', \'t\', \')\', \'{\', \'Utils\', \'.\', \'showException\', \'(\', \'GitblitManager.\', \'this\', \',\', \'t\', \')\', \';\', \'}\', \'return\', \'success\', \';\', \'}\']', 'public boolean METHOD_1 ( List < TYPE_1 > list ) { boolean VAR_1 = false ; try { TYPE_2 config = METHOD_2 ( ) ; for ( TYPE_1 VAR_2 : list ) { config . METHOD_3 ( VAR_3 , VAR_2 . name ) ; VAR_4 . remove ( VAR_2 . name ) ; } config . METHOD_4 ( ) ; VAR_1 = true ; } catch ( Throwable t ) { TYPE_3 . METHOD_5 ( VAR_5 this , t ) ; } return VAR_1 ; }', '[\'TYPE_2: StoredConfig\', \'TYPE_3: Utils\', \'TYPE_1: GitblitRegistration\', \'METHOD_5: showException\', \'METHOD_1: deleteRegistrations\', \'METHOD_4: save\', \'METHOD_2: getConfig\', \'METHOD_3: unsetSection\', \'VAR_4: registrations\', \'VAR_2: reg\', \'VAR_1: success\', \'VAR_3: SERVER\', \'VAR_5: GitblitManager.\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/GitblitManager.java', 25, '379:9', '394:9', 87, 13 ), ( 5, 282, 21, 'private void writeFeedCache(GitblitRegistration reg) {\n    try {\n    File feedCache = new File(configFile.getParentFile(), StringUtils.getSHA1(reg\n    .toString()) + ".cache");\n    FileWriter writer = new FileWriter(feedCache);\n    for (FeedModel feed : reg.feeds) {\n    writer.append(MessageFormat.format("{0}={1,date,yyyy-MM-dd\'T\'HH:mm:ss}\\n",\n    						feed.toString(), feed.currentRefreshDate));\n    }\n    writer.close();\n    } catch (Exception e) {\n    Utils.showException(GitblitManager.this, e);\n    }\n    }', '[\'private\', \'void\', \'writeFeedCache\', \'(\', \'GitblitRegistration\', \'reg\', \')\', \'{\', \'try\', \'{\', \'File\', \'feedCache\', \'=\', \'new\', \'File\', \'(\', \'configFile\', \'.\', \'getParentFile\', \'(\', \')\', \',\', \'StringUtils\', \'.\', \'getSHA1\', \'(\', \'reg\', \'.\', \'toString\', \'(\', \')\', \')\', \'+\', \'".cache"\', \')\', \';\', \'FileWriter\', \'writer\', \'=\', \'new\', \'FileWriter\', \'(\', \'feedCache\', \')\', \';\', \'for\', \'(\', \'FeedModel\', \'feed\', \':\', \'reg.feeds\', \')\', \'{\', \'writer\', \'.\', \'append\', \'(\', \'MessageFormat\', \'.\', \'format\', \'(\', \'"{0}={1\', \',\', \'feed\', \'.\', \'toString\', \'(\', \')\', \',\', \'feed.currentRefreshDate\', \')\', \')\', \';\', \'}\', \'writer\', \'.\', \'close\', \'(\', \')\', \';\', \'}\', \'catch\', \'(\', \'Exception\', \'e\', \')\', \'{\', \'Utils\', \'.\', \'showException\', \'(\', \'GitblitManager.\', \'this\', \',\', \'e\', \')\', \';\', \'}\', \'}\']', 'private void METHOD_1 ( TYPE_1 VAR_1 ) { try { File VAR_2 = new File ( VAR_3 . METHOD_2 ( ) , StringUtils . METHOD_3 ( VAR_1 . toString ( ) ) + STRING_1 ) ; TYPE_2 writer = new TYPE_2 ( VAR_2 ) ; for ( TYPE_3 VAR_4 : VAR_5 ) { writer . append ( TYPE_4 . format ( STRING_2 , VAR_4 . toString ( ) , VAR_6 ) ) ; } writer . close ( ) ; } catch ( Exception e ) { TYPE_5 . METHOD_4 ( VAR_7 this , e ) ; } }', '[\'TYPE_3: FeedModel\', \'TYPE_4: MessageFormat\', \'TYPE_5: Utils\', \'TYPE_2: FileWriter\', \'TYPE_1: GitblitRegistration\', \'METHOD_4: showException\', \'METHOD_1: writeFeedCache\', \'METHOD_2: getParentFile\', \'METHOD_3: getSHA1\', \'VAR_4: feed\', \'VAR_1: reg\', \'VAR_2: feedCache\', \'VAR_5: reg.feeds\', \'VAR_3: configFile\', \'VAR_6: feed.currentRefreshDate\', \'VAR_7: GitblitManager.\', \'STRING_1: ".cache"\', \'STRING_2: "{0}={1\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/GitblitManager.java', 25, '430:9', '443:9', 100, 11 ), ( 5, 282, 23, 'public void run() {\n    try {\n    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\n    } catch (Exception e) {\n    }\n    GitblitManager frame = new GitblitManager();\n    frame.initialize();\n    frame.setVisible(true);\n    }', '[\'public\', \'void\', \'run\', \'(\', \')\', \'{\', \'try\', \'{\', \'UIManager\', \'.\', \'setLookAndFeel\', \'(\', \'UIManager\', \'.\', \'getSystemLookAndFeelClassName\', \'(\', \')\', \')\', \';\', \'}\', \'catch\', \'(\', \'Exception\', \'e\', \')\', \'{\', \'}\', \'GitblitManager\', \'frame\', \'=\', \'new\', \'GitblitManager\', \'(\', \')\', \';\', \'frame\', \'.\', \'initialize\', \'(\', \')\', \';\', \'frame\', \'.\', \'setVisible\', \'(\', \'true\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) { try { TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; } catch ( Exception e ) { } TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_4 ( ) ; VAR_1 . METHOD_5 ( true ) ; }', '[\'TYPE_2: GitblitManager\', \'TYPE_1: UIManager\', \'METHOD_5: setVisible\', \'METHOD_3: getSystemLookAndFeelClassName\', \'METHOD_2: setLookAndFeel\', \'METHOD_1: run\', \'METHOD_4: initialize\', \'VAR_1: frame\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/GitblitManager.java', 25, '447:25', '455:25', 45, 7 ), ( 5, 284, 3, '@Override\n    public String getColumnName(int column) {\n    Columns col = Columns.values()[column];\n    switch (col) {\n    case Repository:\n    return Translation.get("gb.repository");\n    case Branch:\n    return Translation.get("gb.branch");\n    }\n    return "";\n    }', '[\'public\', \'String\', \'getColumnName\', \'(\', \'int\', \'column\', \')\', \'{\', \'Columns\', \'col\', \'=\', \'Columns\', \'.\', \'values\', \'(\', \')\', \'[\', \'column\', \']\', \';\', \'switch\', \'(\', \'col\', \')\', \'{\', \'case\', \'Repository\', \':\', \'return\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.repository"\', \')\', \';\', \'case\', \'Branch\', \':\', \'return\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.branch"\', \')\', \';\', \'}\', \'return\', \'""\', \';\', \'}\']', 'public String METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = TYPE_1 . values ( ) [ VAR_1 ] ; switch ( VAR_2 ) { case VAR_3 : return TYPE_2 . get ( STRING_1 ) ; case VAR_4 : return TYPE_2 . get ( STRING_2 ) ; } return STRING_3 ; }', '[\'TYPE_2: Translation\', \'TYPE_1: Columns\', \'METHOD_1: getColumnName\', \'VAR_2: col\', \'VAR_3: Repository\', \'VAR_4: Branch\', \'VAR_1: column\', \'STRING_3: ""\', \'STRING_2: "gb.branch"\', \'STRING_1: "gb.repository"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/FeedsTableModel.java', 10, '66:9', '76:9', 53, 9 ), ( 5, 284, 4, 'public Class<?> getColumnClass(int columnIndex) {\n    Columns col = Columns.values()[columnIndex];\n    switch (col) {\n    case Subscribed:\n    return Boolean.class;\n    }\n    return String.class;\n    }', '[\'public\', \'Class\', \'<\', \'?\', \'>\', \'getColumnClass\', \'(\', \'int\', \'columnIndex\', \')\', \'{\', \'Columns\', \'col\', \'=\', \'Columns\', \'.\', \'values\', \'(\', \')\', \'[\', \'columnIndex\', \']\', \';\', \'switch\', \'(\', \'col\', \')\', \'{\', \'case\', \'Subscribed\', \':\', \'return\', \'Boolean.\', \'class\', \';\', \'}\', \'return\', \'String.\', \'class\', \';\', \'}\']', 'public Class < ? > METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = TYPE_1 . values ( ) [ VAR_1 ] ; switch ( VAR_2 ) { case VAR_3 : return VAR_4 class ; } return VAR_5 class ; }', '[\'TYPE_1: Columns\', \'METHOD_1: getColumnClass\', \'VAR_2: col\', \'VAR_5: String.\', \'VAR_3: Subscribed\', \'VAR_1: columnIndex\', \'VAR_4: Boolean.\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/FeedsTableModel.java', 10, '85:9', '92:9', 42, 6 ), ( 5, 284, 5, '@Override\n    public boolean isCellEditable(int rowIndex, int columnIndex) {\n    Columns col = Columns.values()[columnIndex];\n    switch (col) {\n    case Subscribed:\n    return true;\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'isCellEditable\', \'(\', \'int\', \'rowIndex\', \',\', \'int\', \'columnIndex\', \')\', \'{\', \'Columns\', \'col\', \'=\', \'Columns\', \'.\', \'values\', \'(\', \')\', \'[\', \'columnIndex\', \']\', \';\', \'switch\', \'(\', \'col\', \')\', \'{\', \'case\', \'Subscribed\', \':\', \'return\', \'true\', \';\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { TYPE_1 VAR_3 = TYPE_1 . values ( ) [ VAR_2 ] ; switch ( VAR_3 ) { case VAR_4 : return true ; } return false ; }', '[\'TYPE_1: Columns\', \'METHOD_1: isCellEditable\', \'VAR_3: col\', \'VAR_4: Subscribed\', \'VAR_1: rowIndex\', \'VAR_2: columnIndex\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/FeedsTableModel.java', 10, '94:9', '102:9', 40, 7 ), ( 5, 284, 6, '@Override\n    public Object getValueAt(int rowIndex, int columnIndex) {\n    FeedModel model = list.get(rowIndex);\n    Columns col = Columns.values()[columnIndex];\n    switch (col) {\n    case Repository:\n    return model.repository;\n    case Branch:\n    return model.branch;\n    case Subscribed:\n    return model.subscribed;\n    }\n    return null;\n    }', '[\'public\', \'Object\', \'getValueAt\', \'(\', \'int\', \'rowIndex\', \',\', \'int\', \'columnIndex\', \')\', \'{\', \'FeedModel\', \'model\', \'=\', \'list\', \'.\', \'get\', \'(\', \'rowIndex\', \')\', \';\', \'Columns\', \'col\', \'=\', \'Columns\', \'.\', \'values\', \'(\', \')\', \'[\', \'columnIndex\', \']\', \';\', \'switch\', \'(\', \'col\', \')\', \'{\', \'case\', \'Repository\', \':\', \'return\', \'model.repository\', \';\', \'case\', \'Branch\', \':\', \'return\', \'model.branch\', \';\', \'case\', \'Subscribed\', \':\', \'return\', \'model.subscribed\', \';\', \'}\', \'return\', \'null\', \';\', \'}\']', 'public Object METHOD_1 ( int VAR_1 , int VAR_2 ) { TYPE_1 model = list . get ( VAR_1 ) ; TYPE_2 VAR_3 = TYPE_2 . values ( ) [ VAR_2 ] ; switch ( VAR_3 ) { case VAR_4 : return VAR_5 ; case VAR_6 : return VAR_7 ; case VAR_8 : return VAR_9 ; } return null ; }', '[\'TYPE_1: FeedModel\', \'TYPE_2: Columns\', \'METHOD_1: getValueAt\', \'VAR_3: col\', \'VAR_4: Repository\', \'VAR_6: Branch\', \'VAR_8: Subscribed\', \'VAR_9: model.subscribed\', \'VAR_1: rowIndex\', \'VAR_2: columnIndex\', \'VAR_5: model.repository\', \'VAR_7: model.branch\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/FeedsTableModel.java', 10, '104:9', '117:9', 68, 12 ), ( 5, 286, 3, '@Override\n    public String getColumnName(int column) {\n    Columns col = Columns.values()[column];\n    switch (col) {\n    case Name:\n    return Translation.get("gb.name");\n    case Members:\n    return Translation.get("gb.teamMembers");\n    case Repositories:\n    return Translation.get("gb.repositories");\n    }\n    return "";\n    }', '[\'public\', \'String\', \'getColumnName\', \'(\', \'int\', \'column\', \')\', \'{\', \'Columns\', \'col\', \'=\', \'Columns\', \'.\', \'values\', \'(\', \')\', \'[\', \'column\', \']\', \';\', \'switch\', \'(\', \'col\', \')\', \'{\', \'case\', \'Name\', \':\', \'return\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.name"\', \')\', \';\', \'case\', \'Members\', \':\', \'return\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.teamMembers"\', \')\', \';\', \'case\', \'Repositories\', \':\', \'return\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.repositories"\', \')\', \';\', \'}\', \'return\', \'""\', \';\', \'}\']', 'public String METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = TYPE_1 . values ( ) [ VAR_1 ] ; switch ( VAR_2 ) { case VAR_3 : return TYPE_2 . get ( STRING_1 ) ; case VAR_4 : return TYPE_2 . get ( STRING_2 ) ; case VAR_5 : return TYPE_2 . get ( STRING_3 ) ; } return STRING_4 ; }', '[\'TYPE_2: Translation\', \'TYPE_1: Columns\', \'METHOD_1: getColumnName\', \'VAR_5: Repositories\', \'VAR_2: col\', \'VAR_1: column\', \'VAR_4: Members\', \'VAR_3: Name\', \'STRING_4: ""\', \'STRING_3: "gb.repositories"\', \'STRING_2: "gb.teamMembers"\', \'STRING_1: "gb.name"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/TeamsTableModel.java', 8, '66:9', '78:9', 64, 11 ), ( 5, 287, 3, '@Override\n    public String getColumnName(int column) {\n    Columns col = Columns.values()[column];\n    switch (col) {\n    case Name:\n    return Translation.get("gb.name");\n    case URL:\n    return Translation.get("gb.url");\n    case Last_Login:\n    return Translation.get("gb.lastLogin");\n    }\n    return "";\n    }', '[\'public\', \'String\', \'getColumnName\', \'(\', \'int\', \'column\', \')\', \'{\', \'Columns\', \'col\', \'=\', \'Columns\', \'.\', \'values\', \'(\', \')\', \'[\', \'column\', \']\', \';\', \'switch\', \'(\', \'col\', \')\', \'{\', \'case\', \'Name\', \':\', \'return\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.name"\', \')\', \';\', \'case\', \'URL\', \':\', \'return\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.url"\', \')\', \';\', \'case\', \'Last_Login\', \':\', \'return\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.lastLogin"\', \')\', \';\', \'}\', \'return\', \'""\', \';\', \'}\']', 'public String METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = TYPE_1 . values ( ) [ VAR_1 ] ; switch ( VAR_2 ) { case VAR_3 : return TYPE_2 . get ( STRING_1 ) ; case VAR_4 : return TYPE_2 . get ( STRING_2 ) ; case VAR_5 : return TYPE_2 . get ( STRING_3 ) ; } return STRING_4 ; }', '[\'TYPE_2: Translation\', \'TYPE_1: Columns\', \'METHOD_1: getColumnName\', \'VAR_2: col\', \'VAR_5: Last_Login\', \'VAR_1: column\', \'VAR_4: URL\', \'VAR_3: Name\', \'STRING_4: ""\', \'STRING_3: "gb.lastLogin"\', \'STRING_2: "gb.url"\', \'STRING_1: "gb.name"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/RegistrationsTableModel.java', 7, '60:9', '72:9', 64, 11 ), ( 5, 287, 5, '@Override\n    public Object getValueAt(int rowIndex, int columnIndex) {\n    GitblitRegistration model = list.get(rowIndex);\n    Columns col = Columns.values()[columnIndex];\n    switch (col) {\n    case Name:\n    return model.name;\n    case URL:\n    return model.url;\n    case Last_Login:\n    return model.lastLogin;\n    }\n    return null;\n    }', '[\'public\', \'Object\', \'getValueAt\', \'(\', \'int\', \'rowIndex\', \',\', \'int\', \'columnIndex\', \')\', \'{\', \'GitblitRegistration\', \'model\', \'=\', \'list\', \'.\', \'get\', \'(\', \'rowIndex\', \')\', \';\', \'Columns\', \'col\', \'=\', \'Columns\', \'.\', \'values\', \'(\', \')\', \'[\', \'columnIndex\', \']\', \';\', \'switch\', \'(\', \'col\', \')\', \'{\', \'case\', \'Name\', \':\', \'return\', \'model\', \'.\', \'name\', \';\', \'case\', \'URL\', \':\', \'return\', \'model\', \'.\', \'url\', \';\', \'case\', \'Last_Login\', \':\', \'return\', \'model.lastLogin\', \';\', \'}\', \'return\', \'null\', \';\', \'}\']', 'public Object METHOD_1 ( int VAR_1 , int VAR_2 ) { TYPE_1 model = list . get ( VAR_1 ) ; TYPE_2 VAR_3 = TYPE_2 . values ( ) [ VAR_2 ] ; switch ( VAR_3 ) { case VAR_4 : return model . name ; case VAR_5 : return model . url ; case VAR_6 : return VAR_7 ; } return null ; }', '[\'TYPE_2: Columns\', \'TYPE_1: GitblitRegistration\', \'METHOD_1: getValueAt\', \'VAR_3: col\', \'VAR_6: Last_Login\', \'VAR_7: model.lastLogin\', \'VAR_1: rowIndex\', \'VAR_2: columnIndex\', \'VAR_5: URL\', \'VAR_4: Name\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/RegistrationsTableModel.java', 7, '88:9', '101:9', 68, 12 ), ( 5, 288, 17, '@Override\n    public void save() {\n    gitblit.updateSubscribedFeeds(feeds);\n    listener.saveRegistration(gitblit.reg.name, gitblit.reg);\n    setVisible(false);\n    repositoriesPanel.updateTable(false);\n    }', '[\'public\', \'void\', \'save\', \'(\', \')\', \'{\', \'gitblit\', \'.\', \'updateSubscribedFeeds\', \'(\', \'feeds\', \')\', \';\', \'listener\', \'.\', \'saveRegistration\', \'(\', \'gitblit.reg\', \'.\', \'name\', \',\', \'gitblit.reg\', \')\', \';\', \'setVisible\', \'(\', \'false\', \')\', \';\', \'repositoriesPanel\', \'.\', \'updateTable\', \'(\', \'false\', \')\', \';\', \'}\']', 'public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; listener . METHOD_3 ( VAR_3 . name , VAR_3 ) ; METHOD_4 ( false ) ; VAR_4 . METHOD_5 ( false ) ; }', '[\'METHOD_4: setVisible\', \'METHOD_3: saveRegistration\', \'METHOD_2: updateSubscribedFeeds\', \'METHOD_1: save\', \'METHOD_5: updateTable\', \'VAR_3: gitblit.reg\', \'VAR_4: repositoriesPanel\', \'VAR_1: gitblit\', \'VAR_2: feeds\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/GitblitPanel.java', 19, '217:25', '223:25', 42, 6 ), ( 5, 289, 2, 'public void actionPerformed(ActionEvent e) {\n    int viewRow = table.getSelectedRow();\n    int modelRow = table.convertRowIndexToModel(viewRow);\n    String key = tableModel.keys.get(modelRow);\n    SettingModel setting = tableModel.settings.get(key);\n    editSetting(setting);\n    }', '[\'public\', \'void\', \'actionPerformed\', \'(\', \'ActionEvent\', \'e\', \')\', \'{\', \'int\', \'viewRow\', \'=\', \'table\', \'.\', \'getSelectedRow\', \'(\', \')\', \';\', \'int\', \'modelRow\', \'=\', \'table\', \'.\', \'convertRowIndexToModel\', \'(\', \'viewRow\', \')\', \';\', \'String\', \'key\', \'=\', \'tableModel.keys\', \'.\', \'get\', \'(\', \'modelRow\', \')\', \';\', \'SettingModel\', \'setting\', \'=\', \'tableModel.settings\', \'.\', \'get\', \'(\', \'key\', \')\', \';\', \'editSetting\', \'(\', \'setting\', \')\', \';\', \'}\']', 'public void METHOD_1 ( TYPE_1 e ) { int VAR_1 = VAR_2 . METHOD_2 ( ) ; int VAR_3 = VAR_2 . METHOD_3 ( VAR_1 ) ; String key = VAR_4 . get ( VAR_3 ) ; TYPE_2 VAR_5 = VAR_6 . get ( key ) ; METHOD_4 ( VAR_5 ) ; }', '[\'TYPE_2: SettingModel\', \'TYPE_1: ActionEvent\', \'METHOD_3: convertRowIndexToModel\', \'METHOD_1: actionPerformed\', \'METHOD_2: getSelectedRow\', \'METHOD_4: editSetting\', \'VAR_1: viewRow\', \'VAR_4: tableModel.keys\', \'VAR_3: modelRow\', \'VAR_6: tableModel.settings\', \'VAR_2: table\', \'VAR_5: setting\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/SettingsPanel.java', 19, '89:25', '95:25', 56, 6 ) ;

INSERT INTO method (id_repo, id_file, id_method, code, code_tokens, abstract_code, abstract_representation, repo_name, repo_url,repo_commit, file_name, num_methods, start_method, end_method, num_tokens, num_lines) VALUES ( 5, 289, 3, '@Override\n    public void valueChanged(ListSelectionEvent e) {\n    if (e.getValueIsAdjusting()) {\n    return;\n    }\n    boolean singleSelection = table.getSelectedRows().length == 1;\n    editSetting.setEnabled(singleSelection);\n    if (singleSelection) {\n    int viewRow = table.getSelectedRow();\n    int modelRow = table.convertRowIndexToModel(viewRow);\n    SettingModel setting = tableModel.get(modelRow);\n    settingPanel.setSetting(setting);\n    } else {\n    settingPanel.clear();\n    }\n    }', '[\'public\', \'void\', \'valueChanged\', \'(\', \'ListSelectionEvent\', \'e\', \')\', \'{\', \'if\', \'(\', \'e\', \'.\', \'getValueIsAdjusting\', \'(\', \')\', \')\', \'{\', \'return\', \';\', \'}\', \'boolean\', \'singleSelection\', \'=\', \'table\', \'.\', \'getSelectedRows\', \'(\', \')\', \'.\', \'length\', \'==\', \'1\', \';\', \'editSetting\', \'.\', \'setEnabled\', \'(\', \'singleSelection\', \')\', \';\', \'if\', \'(\', \'singleSelection\', \')\', \'{\', \'int\', \'viewRow\', \'=\', \'table\', \'.\', \'getSelectedRow\', \'(\', \')\', \';\', \'int\', \'modelRow\', \'=\', \'table\', \'.\', \'convertRowIndexToModel\', \'(\', \'viewRow\', \')\', \';\', \'SettingModel\', \'setting\', \'=\', \'tableModel\', \'.\', \'get\', \'(\', \'modelRow\', \')\', \';\', \'settingPanel\', \'.\', \'setSetting\', \'(\', \'setting\', \')\', \';\', \'}\', \'else\', \'{\', \'settingPanel\', \'.\', \'clear\', \'(\', \')\', \';\', \'}\', \'}\']', 'public void METHOD_1 ( TYPE_1 e ) { if ( e . METHOD_2 ( ) ) { return ; } boolean VAR_1 = VAR_2 . METHOD_3 ( ) . length == 1 ; VAR_3 . METHOD_4 ( VAR_1 ) ; if ( VAR_1 ) { int VAR_4 = VAR_2 . METHOD_5 ( ) ; int VAR_5 = VAR_2 . METHOD_6 ( VAR_4 ) ; TYPE_2 VAR_6 = VAR_7 . get ( VAR_5 ) ; VAR_8 . METHOD_7 ( VAR_6 ) ; } else { VAR_8 . METHOD_8 ( ) ; } }', '[\'TYPE_2: SettingModel\', \'TYPE_1: ListSelectionEvent\', \'METHOD_6: convertRowIndexToModel\', \'METHOD_4: setEnabled\', \'METHOD_5: getSelectedRow\', \'METHOD_7: setSetting\', \'METHOD_1: valueChanged\', \'METHOD_3: getSelectedRows\', \'METHOD_8: clear\', \'METHOD_2: getValueIsAdjusting\', \'VAR_8: settingPanel\', \'VAR_4: viewRow\', \'VAR_7: tableModel\', \'VAR_1: singleSelection\', \'VAR_3: editSetting\', \'VAR_5: modelRow\', \'VAR_2: table\', \'VAR_6: setting\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/SettingsPanel.java', 19, '110:25', '125:25', 89, 13 ), ( 5, 289, 4, 'public void mouseClicked(MouseEvent e) {\n    if (e.getClickCount() == 2) {\n    int viewRow = table.getSelectedRow();\n    int modelRow = table.convertRowIndexToModel(viewRow);\n    SettingModel setting = tableModel.get(modelRow);\n    editSetting(setting);\n    }\n    }', '[\'public\', \'void\', \'mouseClicked\', \'(\', \'MouseEvent\', \'e\', \')\', \'{\', \'if\', \'(\', \'e\', \'.\', \'getClickCount\', \'(\', \')\', \'==\', \'2\', \')\', \'{\', \'int\', \'viewRow\', \'=\', \'table\', \'.\', \'getSelectedRow\', \'(\', \')\', \';\', \'int\', \'modelRow\', \'=\', \'table\', \'.\', \'convertRowIndexToModel\', \'(\', \'viewRow\', \')\', \';\', \'SettingModel\', \'setting\', \'=\', \'tableModel\', \'.\', \'get\', \'(\', \'modelRow\', \')\', \';\', \'editSetting\', \'(\', \'setting\', \')\', \';\', \'}\', \'}\']', 'public void METHOD_1 ( TYPE_1 e ) { if ( e . METHOD_2 ( ) == 2 ) { int VAR_1 = VAR_2 . METHOD_3 ( ) ; int VAR_3 = VAR_2 . METHOD_4 ( VAR_1 ) ; TYPE_2 VAR_4 = VAR_5 . get ( VAR_3 ) ; METHOD_5 ( VAR_4 ) ; } }', '[\'TYPE_2: SettingModel\', \'TYPE_1: MouseEvent\', \'METHOD_4: convertRowIndexToModel\', \'METHOD_3: getSelectedRow\', \'METHOD_1: mouseClicked\', \'METHOD_2: getClickCount\', \'METHOD_5: editSetting\', \'VAR_1: viewRow\', \'VAR_5: tableModel\', \'VAR_3: modelRow\', \'VAR_2: table\', \'VAR_4: setting\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/SettingsPanel.java', 19, '128:25', '135:25', 53, 6 ), ( 5, 289, 9, 'protected void updateTable(boolean pack) {\n    tableModel.setSettings(gitblit.getSettings());\n    tableModel.fireTableDataChanged();\n    header.setText(Translation.get("gb.settings"));\n    if (pack) {\n    Utils.packColumns(table, Utils.MARGIN);\n    }\n    }', '[\'protected\', \'void\', \'updateTable\', \'(\', \'boolean\', \'pack\', \')\', \'{\', \'tableModel\', \'.\', \'setSettings\', \'(\', \'gitblit\', \'.\', \'getSettings\', \'(\', \')\', \')\', \';\', \'tableModel\', \'.\', \'fireTableDataChanged\', \'(\', \')\', \';\', \'header\', \'.\', \'setText\', \'(\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.settings"\', \')\', \')\', \';\', \'if\', \'(\', \'pack\', \')\', \'{\', \'Utils\', \'.\', \'packColumns\', \'(\', \'table\', \',\', \'Utils.MARGIN\', \')\', \';\', \'}\', \'}\']', 'protected void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 . METHOD_3 ( ) ) ; VAR_2 . METHOD_4 ( ) ; VAR_4 . METHOD_5 ( TYPE_1 . get ( STRING_1 ) ) ; if ( VAR_1 ) { TYPE_2 . METHOD_6 ( VAR_5 , VAR_6 ) ; } }', '[\'TYPE_1: Translation\', \'TYPE_2: Utils\', \'METHOD_2: setSettings\', \'METHOD_3: getSettings\', \'METHOD_4: fireTableDataChanged\', \'METHOD_1: updateTable\', \'METHOD_6: packColumns\', \'METHOD_5: setText\', \'VAR_2: tableModel\', \'VAR_3: gitblit\', \'VAR_4: header\', \'VAR_6: Utils.MARGIN\', \'VAR_1: pack\', \'VAR_5: table\', \'STRING_1: "gb.settings"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/SettingsPanel.java', 19, '180:9', '187:9', 53, 6 ), ( 5, 289, 11, 'public boolean include(Entry<? extends SettingsTableModel, ? extends Object> entry) {\n    for (int i = entry.getValueCount() - 1; i >= 0; i--) {\n    if (entry.getStringValue(i).toLowerCase().contains(fragment.toLowerCase())) {\n    return true;\n    }\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'include\', \'(\', \'Entry\', \'<\', \'?\', \'extends\', \'SettingsTableModel\', \',\', \'?\', \'extends\', \'Object\', \'>\', \'entry\', \')\', \'{\', \'for\', \'(\', \'int\', \'i\', \'=\', \'entry\', \'.\', \'getValueCount\', \'(\', \')\', \'-\', \'1\', \';\', \'i\', \'>=\', \'0\', \';\', \'i\', \'--\', \')\', \'{\', \'if\', \'(\', \'entry\', \'.\', \'getStringValue\', \'(\', \'i\', \')\', \'.\', \'toLowerCase\', \'(\', \')\', \'.\', \'contains\', \'(\', \'fragment\', \'.\', \'toLowerCase\', \'(\', \')\', \')\', \')\', \'{\', \'return\', \'true\', \';\', \'}\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean METHOD_1 ( Entry < ? extends TYPE_1 , ? extends Object > entry ) { for ( int i = entry . METHOD_2 ( ) - 1 ; i >= 0 ; i -- ) { if ( entry . METHOD_3 ( i ) . METHOD_4 ( ) . contains ( VAR_1 . METHOD_4 ( ) ) ) { return true ; } } return false ; }', '[\'TYPE_1: SettingsTableModel\', \'METHOD_1: include\', \'METHOD_3: getStringValue\', \'METHOD_4: toLowerCase\', \'METHOD_2: getValueCount\', \'VAR_1: fragment\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/SettingsPanel.java', 19, '195:25', '202:25', 67, 5 ), ( 5, 289, 16, '@Override\n    protected Boolean doRequest() throws IOException {\n    boolean success = gitblit.updateSettings(newSettings);\n    if (success) {\n    gitblit.refreshSettings();\n    }\n    return success;\n    }', '[\'protected\', \'Boolean\', \'doRequest\', \'(\', \')\', \'throws\', \'IOException\', \'{\', \'boolean\', \'success\', \'=\', \'gitblit\', \'.\', \'updateSettings\', \'(\', \'newSettings\', \')\', \';\', \'if\', \'(\', \'success\', \')\', \'{\', \'gitblit\', \'.\', \'refreshSettings\', \'(\', \')\', \';\', \'}\', \'return\', \'success\', \';\', \'}\']', 'protected Boolean METHOD_1 ( ) throws IOException { boolean VAR_1 = VAR_2 . METHOD_2 ( VAR_3 ) ; if ( VAR_1 ) { VAR_2 . METHOD_3 ( ) ; } return VAR_1 ; }', '[\'METHOD_1: doRequest\', \'METHOD_3: refreshSettings\', \'METHOD_2: updateSettings\', \'VAR_1: success\', \'VAR_2: gitblit\', \'VAR_3: newSettings\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/SettingsPanel.java', 19, '258:25', '265:25', 34, 6 ), ( 5, 290, 7, 'public void mouseClicked(MouseEvent e) {\n    if (e.getClickCount() == 2) {\n    if (e.isControlDown()) {\n    viewCommitDiff();\n    } else {\n    viewCommit();\n    }\n    }\n    }', '[\'public\', \'void\', \'mouseClicked\', \'(\', \'MouseEvent\', \'e\', \')\', \'{\', \'if\', \'(\', \'e\', \'.\', \'getClickCount\', \'(\', \')\', \'==\', \'2\', \')\', \'{\', \'if\', \'(\', \'e\', \'.\', \'isControlDown\', \'(\', \')\', \')\', \'{\', \'viewCommitDiff\', \'(\', \')\', \';\', \'}\', \'else\', \'{\', \'viewCommit\', \'(\', \')\', \';\', \'}\', \'}\', \'}\']', 'public void METHOD_1 ( TYPE_1 e ) { if ( e . METHOD_2 ( ) == 2 ) { if ( e . METHOD_3 ( ) ) { METHOD_4 ( ) ; } else { METHOD_5 ( ) ; } } }', '[\'TYPE_1: MouseEvent\', \'METHOD_5: viewCommit\', \'METHOD_3: isControlDown\', \'METHOD_1: mouseClicked\', \'METHOD_2: getClickCount\', \'METHOD_4: viewCommitDiff\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/SearchDialog.java', 25, '174:25', '182:25', 38, 6 ), ( 5, 290, 8, '@Override\n    public void valueChanged(ListSelectionEvent e) {\n    if (e.getValueIsAdjusting()) {\n    return;\n    }\n    boolean singleSelection = table.getSelectedRowCount() == 1;\n    viewCommit.setEnabled(singleSelection);\n    viewCommitDiff.setEnabled(singleSelection);\n    viewTree.setEnabled(singleSelection);\n    }', '[\'public\', \'void\', \'valueChanged\', \'(\', \'ListSelectionEvent\', \'e\', \')\', \'{\', \'if\', \'(\', \'e\', \'.\', \'getValueIsAdjusting\', \'(\', \')\', \')\', \'{\', \'return\', \';\', \'}\', \'boolean\', \'singleSelection\', \'=\', \'table\', \'.\', \'getSelectedRowCount\', \'(\', \')\', \'==\', \'1\', \';\', \'viewCommit\', \'.\', \'setEnabled\', \'(\', \'singleSelection\', \')\', \';\', \'viewCommitDiff\', \'.\', \'setEnabled\', \'(\', \'singleSelection\', \')\', \';\', \'viewTree\', \'.\', \'setEnabled\', \'(\', \'singleSelection\', \')\', \';\', \'}\']', 'public void METHOD_1 ( TYPE_1 e ) { if ( e . METHOD_2 ( ) ) { return ; } boolean VAR_1 = VAR_2 . METHOD_3 ( ) == 1 ; VAR_3 . METHOD_4 ( VAR_1 ) ; VAR_4 . METHOD_4 ( VAR_1 ) ; VAR_5 . METHOD_4 ( VAR_1 ) ; }', '[\'TYPE_1: ListSelectionEvent\', \'METHOD_4: setEnabled\', \'METHOD_3: getSelectedRowCount\', \'METHOD_1: valueChanged\', \'METHOD_2: getValueIsAdjusting\', \'VAR_3: viewCommit\', \'VAR_5: viewTree\', \'VAR_1: singleSelection\', \'VAR_4: viewCommitDiff\', \'VAR_2: table\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/SearchDialog.java', 25, '186:25', '195:25', 52, 8 ), ( 5, 290, 9, 'public void actionPerformed(ActionEvent event) {\n    // repopulate the branch list based on repository selection\n    // preserve branch selection, if possible\n    String selectedBranch = null;\n    if (branchSelector.getSelectedIndex() > -1) {\n    selectedBranch = branchSelector.getSelectedItem().toString();\n    }\n    updateBranches();\n    if (StringUtils.isEmpty(selectedBranch)) {\n    // do not select branch\n    branchSelector.setSelectedIndex(-1);\n    } else {\n    if (branchChoices.getIndexOf(selectedBranch) > -1) {\n    // select branch\n    branchChoices.setSelectedItem(selectedBranch);\n    } else {\n    // branch does not exist, do not select branch\n    branchSelector.setSelectedIndex(-1);\n    }\n    }\n    }', '[\'public\', \'void\', \'actionPerformed\', \'(\', \'ActionEvent\', \'event\', \')\', \'{\', \'String\', \'selectedBranch\', \'=\', \'null\', \';\', \'if\', \'(\', \'branchSelector\', \'.\', \'getSelectedIndex\', \'(\', \')\', \'>\', \'-\', \'1\', \')\', \'{\', \'selectedBranch\', \'=\', \'branchSelector\', \'.\', \'getSelectedItem\', \'(\', \')\', \'.\', \'toString\', \'(\', \')\', \';\', \'}\', \'updateBranches\', \'(\', \')\', \';\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'selectedBranch\', \')\', \')\', \'{\', \'branchSelector\', \'.\', \'setSelectedIndex\', \'(\', \'-\', \'1\', \')\', \';\', \'}\', \'else\', \'{\', \'if\', \'(\', \'branchChoices\', \'.\', \'getIndexOf\', \'(\', \'selectedBranch\', \')\', \'>\', \'-\', \'1\', \')\', \'{\', \'branchChoices\', \'.\', \'setSelectedItem\', \'(\', \'selectedBranch\', \')\', \';\', \'}\', \'else\', \'{\', \'branchSelector\', \'.\', \'setSelectedIndex\', \'(\', \'-\', \'1\', \')\', \';\', \'}\', \'}\', \'}\']', 'public void METHOD_1 ( TYPE_1 event ) { String VAR_1 = null ; if ( VAR_2 . METHOD_2 ( ) > - 1 ) { VAR_1 = VAR_2 . METHOD_3 ( ) . toString ( ) ; } METHOD_4 ( ) ; if ( StringUtils . isEmpty ( VAR_1 ) ) { VAR_2 . METHOD_5 ( - 1 ) ; } else { if ( VAR_3 . METHOD_6 ( VAR_1 ) > - 1 ) { VAR_3 . METHOD_7 ( VAR_1 ) ; } else { VAR_2 . METHOD_5 ( - 1 ) ; } } }', '[\'TYPE_1: ActionEvent\', \'METHOD_1: actionPerformed\', \'METHOD_6: getIndexOf\', \'METHOD_4: updateBranches\', \'METHOD_7: setSelectedItem\', \'METHOD_2: getSelectedIndex\', \'METHOD_5: setSelectedIndex\', \'METHOD_3: getSelectedItem\', \'VAR_3: branchChoices\', \'VAR_2: branchSelector\', \'VAR_1: selectedBranch\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/SearchDialog.java', 25, '202:25', '222:25', 98, 12 ), ( 5, 290, 12, '@Override\n    public void windowOpened(WindowEvent event) {\n    if (isSearch) {\n    searchFragment.requestFocus();\n    } else {\n    search(0);\n    }\n    }', '[\'public\', \'void\', \'windowOpened\', \'(\', \'WindowEvent\', \'event\', \')\', \'{\', \'if\', \'(\', \'isSearch\', \')\', \'{\', \'searchFragment\', \'.\', \'requestFocus\', \'(\', \')\', \';\', \'}\', \'else\', \'{\', \'search\', \'(\', \'0\', \')\', \';\', \'}\', \'}\']', 'public void METHOD_1 ( TYPE_1 event ) { if ( VAR_1 ) { VAR_2 . METHOD_2 ( ) ; } else { METHOD_3 ( 0 ) ; } }', '[\'TYPE_1: WindowEvent\', \'METHOD_1: windowOpened\', \'METHOD_2: requestFocus\', \'METHOD_3: search\', \'VAR_2: searchFragment\', \'VAR_1: isSearch\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/SearchDialog.java', 25, '286:25', '293:25', 30, 6 ), ( 5, 290, 15, 'private void updateBranches() {\n    String repository = null;\n    if (repositorySelector.getSelectedIndex() > -1) {\n    repository = repositorySelector.getSelectedItem().toString();\n    }\n    List<String> branches = gitblit.getBranches(repository);\n    branchChoices.removeAllElements();\n    for (String branch : branches) {\n    branchChoices.addElement(branch);\n    }\n    }', '[\'private\', \'void\', \'updateBranches\', \'(\', \')\', \'{\', \'String\', \'repository\', \'=\', \'null\', \';\', \'if\', \'(\', \'repositorySelector\', \'.\', \'getSelectedIndex\', \'(\', \')\', \'>\', \'-\', \'1\', \')\', \'{\', \'repository\', \'=\', \'repositorySelector\', \'.\', \'getSelectedItem\', \'(\', \')\', \'.\', \'toString\', \'(\', \')\', \';\', \'}\', \'List\', \'<\', \'String\', \'>\', \'branches\', \'=\', \'gitblit\', \'.\', \'getBranches\', \'(\', \'repository\', \')\', \';\', \'branchChoices\', \'.\', \'removeAllElements\', \'(\', \')\', \';\', \'for\', \'(\', \'String\', \'branch\', \':\', \'branches\', \')\', \'{\', \'branchChoices\', \'.\', \'addElement\', \'(\', \'branch\', \')\', \';\', \'}\', \'}\']', 'private void METHOD_1 ( ) { String VAR_1 = null ; if ( VAR_2 . METHOD_2 ( ) > - 1 ) { VAR_1 = VAR_2 . METHOD_3 ( ) . toString ( ) ; } List < String > VAR_3 = VAR_4 . METHOD_4 ( VAR_1 ) ; VAR_5 . METHOD_5 ( ) ; for ( String VAR_6 : VAR_3 ) { VAR_5 . METHOD_6 ( VAR_6 ) ; } }', '[\'METHOD_4: getBranches\', \'METHOD_1: updateBranches\', \'METHOD_2: getSelectedIndex\', \'METHOD_6: addElement\', \'METHOD_3: getSelectedItem\', \'METHOD_5: removeAllElements\', \'VAR_5: branchChoices\', \'VAR_4: gitblit\', \'VAR_1: repository\', \'VAR_3: branches\', \'VAR_2: repositorySelector\', \'VAR_6: branch\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/SearchDialog.java', 25, '308:9', '318:9', 67, 8 ), ( 5, 290, 17, '@Override\n    protected List<FeedEntryModel> doInBackground() throws IOException {\n    if (isSearch) {\n    return gitblit.search(repository, branch, fragment, searchType, maxEntryCount,\n    							page);\n    } else {\n    return gitblit.log(repository, branch, maxEntryCount, page);\n    }\n    }', '[\'protected\', \'List\', \'<\', \'FeedEntryModel\', \'>\', \'doInBackground\', \'(\', \')\', \'throws\', \'IOException\', \'{\', \'if\', \'(\', \'isSearch\', \')\', \'{\', \'return\', \'gitblit\', \'.\', \'search\', \'(\', \'repository\', \',\', \'branch\', \',\', \'fragment\', \',\', \'searchType\', \',\', \'maxEntryCount\', \',\', \'page\', \')\', \';\', \'}\', \'else\', \'{\', \'return\', \'gitblit\', \'.\', \'log\', \'(\', \'repository\', \',\', \'branch\', \',\', \'maxEntryCount\', \',\', \'page\', \')\', \';\', \'}\', \'}\']', 'protected List < TYPE_1 > METHOD_1 ( ) throws IOException { if ( VAR_1 ) { return VAR_2 . METHOD_2 ( VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , VAR_8 ) ; } else { return VAR_2 . log ( VAR_3 , VAR_4 , VAR_7 , VAR_8 ) ; } }', '[\'TYPE_1: FeedEntryModel\', \'METHOD_2: search\', \'METHOD_1: doInBackground\', \'VAR_5: fragment\', \'VAR_1: isSearch\', \'VAR_6: searchType\', \'VAR_2: gitblit\', \'VAR_8: page\', \'VAR_3: repository\', \'VAR_7: maxEntryCount\', \'VAR_4: branch\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/SearchDialog.java', 25, '336:25', '344:25', 54, 7 ), ( 5, 290, 18, '@Override\n    protected void done() {\n    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));\n    try {\n    List<FeedEntryModel> results = get();\n    if (isSearch) {\n    updateTable(true, fragment, results);\n    } else {\n    updateTable(true, branch == null ? "" : branch, results);\n    }\n    } catch (Throwable t) {\n    Utils.showException(SearchDialog.this, t);\n    }\n    }', '[\'protected\', \'void\', \'done\', \'(\', \')\', \'{\', \'setCursor\', \'(\', \'Cursor\', \'.\', \'getPredefinedCursor\', \'(\', \'Cursor.DEFAULT_CURSOR\', \')\', \')\', \';\', \'try\', \'{\', \'List\', \'<\', \'FeedEntryModel\', \'>\', \'results\', \'=\', \'get\', \'(\', \')\', \';\', \'if\', \'(\', \'isSearch\', \')\', \'{\', \'updateTable\', \'(\', \'true\', \',\', \'fragment\', \',\', \'results\', \')\', \';\', \'}\', \'else\', \'{\', \'updateTable\', \'(\', \'true\', \',\', \'branch\', \'==\', \'null\', \'?\', \'""\', \':\', \'branch\', \',\', \'results\', \')\', \';\', \'}\', \'}\', \'catch\', \'(\', \'Throwable\', \'t\', \')\', \'{\', \'Utils\', \'.\', \'showException\', \'(\', \'SearchDialog.\', \'this\', \',\', \'t\', \')\', \';\', \'}\', \'}\']', 'protected void METHOD_1 ( ) { METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_1 ) ) ; try { List < TYPE_2 > VAR_2 = get ( ) ; if ( VAR_3 ) { METHOD_4 ( true , VAR_4 , VAR_2 ) ; } else { METHOD_4 ( true , VAR_5 == null ? STRING_1 : VAR_5 , VAR_2 ) ; } } catch ( Throwable t ) { TYPE_3 . METHOD_5 ( VAR_6 this , t ) ; } }', '[\'TYPE_2: FeedEntryModel\', \'TYPE_3: Utils\', \'TYPE_1: Cursor\', \'METHOD_5: showException\', \'METHOD_3: getPredefinedCursor\', \'METHOD_2: setCursor\', \'METHOD_4: updateTable\', \'METHOD_1: done\', \'VAR_1: Cursor.DEFAULT_CURSOR\', \'VAR_4: fragment\', \'VAR_6: SearchDialog.\', \'VAR_3: isSearch\', \'VAR_2: results\', \'VAR_5: branch\', \'STRING_1: ""\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/SearchDialog.java', 25, '346:25', '359:25', 83, 11 ), ( 5, 290, 20, 'protected FeedEntryModel getSelectedSyndicatedEntry() {\n    int viewRow = table.getSelectedRow();\n    int modelRow = table.convertRowIndexToModel(viewRow);\n    FeedEntryModel entry = tableModel.get(modelRow);\n    return entry;\n    }', '[\'protected\', \'FeedEntryModel\', \'getSelectedSyndicatedEntry\', \'(\', \')\', \'{\', \'int\', \'viewRow\', \'=\', \'table\', \'.\', \'getSelectedRow\', \'(\', \')\', \';\', \'int\', \'modelRow\', \'=\', \'table\', \'.\', \'convertRowIndexToModel\', \'(\', \'viewRow\', \')\', \';\', \'FeedEntryModel\', \'entry\', \'=\', \'tableModel\', \'.\', \'get\', \'(\', \'modelRow\', \')\', \';\', \'return\', \'entry\', \';\', \'}\']', 'protected TYPE_1 METHOD_1 ( ) { int VAR_1 = VAR_2 . METHOD_2 ( ) ; int VAR_3 = VAR_2 . METHOD_3 ( VAR_1 ) ; TYPE_1 entry = VAR_4 . get ( VAR_3 ) ; return entry ; }', '[\'TYPE_1: FeedEntryModel\', \'METHOD_3: convertRowIndexToModel\', \'METHOD_2: getSelectedRow\', \'METHOD_1: getSelectedSyndicatedEntry\', \'VAR_1: viewRow\', \'VAR_4: tableModel\', \'VAR_3: modelRow\', \'VAR_2: table\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/SearchDialog.java', 25, '383:9', '388:9', 37, 5 ), ( 5, 290, 24, 'public SearchDialog(GitblitClient gitblit, boolean isSearch) {\n    super();\n    this.gitblit = gitblit;\n    this.isSearch = isSearch;\n    setTitle(Translation.get(isSearch ? "gb.search" : "gb.log"));\n    setIconImage(new ImageIcon(getClass().getResource("/gitblt-favicon.png")).getImage());\n    initialize();\n    setSize(900, 550);\n    }', '[\'public\', \'SearchDialog\', \'(\', \'GitblitClient\', \'gitblit\', \',\', \'boolean\', \'isSearch\', \')\', \'{\', \'super\', \'(\', \')\', \';\', \'this\', \'.\', \'gitblit\', \'=\', \'gitblit\', \';\', \'this\', \'.\', \'isSearch\', \'=\', \'isSearch\', \';\', \'setTitle\', \'(\', \'Translation\', \'.\', \'get\', \'(\', \'isSearch\', \'?\', \'"gb.search"\', \':\', \'"gb.log"\', \')\', \')\', \';\', \'setIconImage\', \'(\', \'new\', \'ImageIcon\', \'(\', \'getClass\', \'(\', \')\', \'.\', \'getResource\', \'(\', \'"/gitblt-favicon.png"\', \')\', \')\', \'.\', \'getImage\', \'(\', \')\', \')\', \';\', \'initialize\', \'(\', \')\', \';\', \'setSize\', \'(\', \'900\', \',\', \'550\', \')\', \';\', \'}\']', 'public VAR_1 ( TYPE_1 VAR_2 , boolean VAR_3 ) { super ( ) ; this . VAR_2 = VAR_2 ; this . VAR_3 = VAR_3 ; METHOD_1 ( TYPE_2 . get ( VAR_3 ? STRING_1 : STRING_2 ) ) ; METHOD_2 ( new TYPE_3 ( getClass ( ) . METHOD_3 ( STRING_3 ) ) . METHOD_4 ( ) ) ; METHOD_5 ( ) ; METHOD_6 ( INT_1 , INT_2 ) ; }', '[\'TYPE_3: ImageIcon\', \'TYPE_2: Translation\', \'TYPE_1: GitblitClient\', \'METHOD_3: getResource\', \'METHOD_6: setSize\', \'METHOD_2: setIconImage\', \'METHOD_1: setTitle\', \'METHOD_5: initialize\', \'METHOD_4: getImage\', \'VAR_3: isSearch\', \'VAR_2: gitblit\', \'VAR_1: SearchDialog\', \'INT_2: 550\', \'INT_1: 900\', \'STRING_2: "gb.log"\', \'STRING_3: "/gitblt-favicon.png"\', \'STRING_1: "gb.search"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/SearchDialog.java', 25, '90:9', '98:9', 68, 8 ), ( 5, 291, 0, '@Override\n    public void prepareRow(Component c, boolean isSelected, int row, int column) {\n    if (isSelected) {\n    c.setBackground(permissionsTable.getSelectionBackground());\n    } else {\n    if (tableModel.permissions.get(row).mutable) {\n    c.setBackground(clear);\n    } else {\n    c.setBackground(iceGray);\n    }\n    }\n    }', '[\'public\', \'void\', \'prepareRow\', \'(\', \'Component\', \'c\', \',\', \'boolean\', \'isSelected\', \',\', \'int\', \'row\', \',\', \'int\', \'column\', \')\', \'{\', \'if\', \'(\', \'isSelected\', \')\', \'{\', \'c\', \'.\', \'setBackground\', \'(\', \'permissionsTable\', \'.\', \'getSelectionBackground\', \'(\', \')\', \')\', \';\', \'}\', \'else\', \'{\', \'if\', \'(\', \'tableModel.permissions\', \'.\', \'get\', \'(\', \'row\', \')\', \'.\', \'mutable\', \')\', \'{\', \'c\', \'.\', \'setBackground\', \'(\', \'clear\', \')\', \';\', \'}\', \'else\', \'{\', \'c\', \'.\', \'setBackground\', \'(\', \'iceGray\', \')\', \';\', \'}\', \'}\', \'}\']', 'public void METHOD_1 ( TYPE_1 c , boolean VAR_1 , int row , int VAR_2 ) { if ( VAR_1 ) { c . METHOD_2 ( VAR_3 . METHOD_3 ( ) ) ; } else { if ( VAR_4 . get ( row ) . VAR_5 ) { c . METHOD_2 ( VAR_6 ) ; } else { c . METHOD_2 ( VAR_7 ) ; } } }', '[\'TYPE_1: Component\', \'METHOD_1: prepareRow\', \'METHOD_2: setBackground\', \'METHOD_3: getSelectionBackground\', \'VAR_7: iceGray\', \'VAR_4: tableModel.permissions\', \'VAR_1: isSelected\', \'VAR_2: column\', \'VAR_3: permissionsTable\', \'VAR_5: mutable\', \'VAR_6: clear\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/RegistrantPermissionsPanel.java', 9, '71:25', '82:25', 71, 9 ), ( 5, 291, 2, '@Override\n    public void setEnabled(boolean enabled) {\n    super.setEnabled(enabled);\n    permissionsTable.setEnabled(enabled);\n    registrantSelector.setEnabled(enabled);\n    permissionSelector.setEnabled(enabled);\n    addButton.setEnabled(enabled);\n    }', '[\'public\', \'void\', \'setEnabled\', \'(\', \'boolean\', \'enabled\', \')\', \'{\', \'super\', \'.\', \'setEnabled\', \'(\', \'enabled\', \')\', \';\', \'permissionsTable\', \'.\', \'setEnabled\', \'(\', \'enabled\', \')\', \';\', \'registrantSelector\', \'.\', \'setEnabled\', \'(\', \'enabled\', \')\', \';\', \'permissionSelector\', \'.\', \'setEnabled\', \'(\', \'enabled\', \')\', \';\', \'addButton\', \'.\', \'setEnabled\', \'(\', \'enabled\', \')\', \';\', \'}\']', 'public void METHOD_1 ( boolean VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_3 . METHOD_1 ( VAR_1 ) ; VAR_4 . METHOD_1 ( VAR_1 ) ; VAR_5 . METHOD_1 ( VAR_1 ) ; }', '[\'METHOD_1: setEnabled\', \'VAR_3: registrantSelector\', \'VAR_2: permissionsTable\', \'VAR_4: permissionSelector\', \'VAR_5: addButton\', \'VAR_1: enabled\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/RegistrantPermissionsPanel.java', 9, '139:9', '146:9', 46, 7 ), ( 5, 292, 8, 'public void mouseClicked(MouseEvent e) {\n    if (e.getClickCount() == 2) {\n    if (e.isControlDown()) {\n    viewCommitDiff();\n    } else {\n    viewCommit();\n    }\n    }\n    }', '[\'public\', \'void\', \'mouseClicked\', \'(\', \'MouseEvent\', \'e\', \')\', \'{\', \'if\', \'(\', \'e\', \'.\', \'getClickCount\', \'(\', \')\', \'==\', \'2\', \')\', \'{\', \'if\', \'(\', \'e\', \'.\', \'isControlDown\', \'(\', \')\', \')\', \'{\', \'viewCommitDiff\', \'(\', \')\', \';\', \'}\', \'else\', \'{\', \'viewCommit\', \'(\', \')\', \';\', \'}\', \'}\', \'}\']', 'public void METHOD_1 ( TYPE_1 e ) { if ( e . METHOD_2 ( ) == 2 ) { if ( e . METHOD_3 ( ) ) { METHOD_4 ( ) ; } else { METHOD_5 ( ) ; } } }', '[\'TYPE_1: MouseEvent\', \'METHOD_5: viewCommit\', \'METHOD_3: isControlDown\', \'METHOD_1: mouseClicked\', \'METHOD_2: getClickCount\', \'METHOD_4: viewCommitDiff\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/FeedsPanel.java', 27, '174:25', '182:25', 38, 6 ), ( 5, 292, 9, '@Override\n    public void valueChanged(ListSelectionEvent e) {\n    if (e.getValueIsAdjusting()) {\n    return;\n    }\n    boolean singleSelection = table.getSelectedRowCount() == 1;\n    viewCommit.setEnabled(singleSelection);\n    viewCommitDiff.setEnabled(singleSelection);\n    viewTree.setEnabled(singleSelection);\n    }', '[\'public\', \'void\', \'valueChanged\', \'(\', \'ListSelectionEvent\', \'e\', \')\', \'{\', \'if\', \'(\', \'e\', \'.\', \'getValueIsAdjusting\', \'(\', \')\', \')\', \'{\', \'return\', \';\', \'}\', \'boolean\', \'singleSelection\', \'=\', \'table\', \'.\', \'getSelectedRowCount\', \'(\', \')\', \'==\', \'1\', \';\', \'viewCommit\', \'.\', \'setEnabled\', \'(\', \'singleSelection\', \')\', \';\', \'viewCommitDiff\', \'.\', \'setEnabled\', \'(\', \'singleSelection\', \')\', \';\', \'viewTree\', \'.\', \'setEnabled\', \'(\', \'singleSelection\', \')\', \';\', \'}\']', 'public void METHOD_1 ( TYPE_1 e ) { if ( e . METHOD_2 ( ) ) { return ; } boolean VAR_1 = VAR_2 . METHOD_3 ( ) == 1 ; VAR_3 . METHOD_4 ( VAR_1 ) ; VAR_4 . METHOD_4 ( VAR_1 ) ; VAR_5 . METHOD_4 ( VAR_1 ) ; }', '[\'TYPE_1: ListSelectionEvent\', \'METHOD_4: setEnabled\', \'METHOD_3: getSelectedRowCount\', \'METHOD_1: valueChanged\', \'METHOD_2: getValueIsAdjusting\', \'VAR_3: viewCommit\', \'VAR_5: viewTree\', \'VAR_1: singleSelection\', \'VAR_4: viewCommitDiff\', \'VAR_2: table\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/FeedsPanel.java', 27, '186:25', '195:25', 52, 8 ), ( 5, 292, 10, 'public void actionPerformed(ActionEvent event) {\n    // repopulate the author list based on repository selection\n    // preserve author selection, if possible\n    String selectedAuthor = null;\n    if (authorSelector.getSelectedIndex() > -1) {\n    selectedAuthor = authorSelector.getSelectedItem().toString();\n    }\n    updateAuthors();\n    if (selectedAuthor != null) {\n    if (authorChoices.getIndexOf(selectedAuthor) > -1) {\n    authorChoices.setSelectedItem(selectedAuthor);\n    }\n    }\n    filterFeeds();\n    }', '[\'public\', \'void\', \'actionPerformed\', \'(\', \'ActionEvent\', \'event\', \')\', \'{\', \'String\', \'selectedAuthor\', \'=\', \'null\', \';\', \'if\', \'(\', \'authorSelector\', \'.\', \'getSelectedIndex\', \'(\', \')\', \'>\', \'-\', \'1\', \')\', \'{\', \'selectedAuthor\', \'=\', \'authorSelector\', \'.\', \'getSelectedItem\', \'(\', \')\', \'.\', \'toString\', \'(\', \')\', \';\', \'}\', \'updateAuthors\', \'(\', \')\', \';\', \'if\', \'(\', \'selectedAuthor\', \'!=\', \'null\', \')\', \'{\', \'if\', \'(\', \'authorChoices\', \'.\', \'getIndexOf\', \'(\', \'selectedAuthor\', \')\', \'>\', \'-\', \'1\', \')\', \'{\', \'authorChoices\', \'.\', \'setSelectedItem\', \'(\', \'selectedAuthor\', \')\', \';\', \'}\', \'}\', \'filterFeeds\', \'(\', \')\', \';\', \'}\']', 'public void METHOD_1 ( TYPE_1 event ) { String VAR_1 = null ; if ( VAR_2 . METHOD_2 ( ) > - 1 ) { VAR_1 = VAR_2 . METHOD_3 ( ) . toString ( ) ; } METHOD_4 ( ) ; if ( VAR_1 != null ) { if ( VAR_3 . METHOD_5 ( VAR_1 ) > - 1 ) { VAR_3 . METHOD_6 ( VAR_1 ) ; } } METHOD_7 ( ) ; }', '[\'TYPE_1: ActionEvent\', \'METHOD_7: filterFeeds\', \'METHOD_1: actionPerformed\', \'METHOD_5: getIndexOf\', \'METHOD_4: updateAuthors\', \'METHOD_6: setSelectedItem\', \'METHOD_2: getSelectedIndex\', \'METHOD_3: getSelectedItem\', \'VAR_3: authorChoices\', \'VAR_1: selectedAuthor\', \'VAR_2: authorSelector\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/FeedsPanel.java', 27, '203:25', '217:25', 73, 9 ), ( 5, 292, 18, 'protected FeedEntryModel getSelectedSyndicatedEntry() {\n    int viewRow = table.getSelectedRow();\n    int modelRow = table.convertRowIndexToModel(viewRow);\n    FeedEntryModel entry = tableModel.get(modelRow);\n    return entry;\n    }', '[\'protected\', \'FeedEntryModel\', \'getSelectedSyndicatedEntry\', \'(\', \')\', \'{\', \'int\', \'viewRow\', \'=\', \'table\', \'.\', \'getSelectedRow\', \'(\', \')\', \';\', \'int\', \'modelRow\', \'=\', \'table\', \'.\', \'convertRowIndexToModel\', \'(\', \'viewRow\', \')\', \';\', \'FeedEntryModel\', \'entry\', \'=\', \'tableModel\', \'.\', \'get\', \'(\', \'modelRow\', \')\', \';\', \'return\', \'entry\', \';\', \'}\']', 'protected TYPE_1 METHOD_1 ( ) { int VAR_1 = VAR_2 . METHOD_2 ( ) ; int VAR_3 = VAR_2 . METHOD_3 ( VAR_1 ) ; TYPE_1 entry = VAR_4 . get ( VAR_3 ) ; return entry ; }', '[\'TYPE_1: FeedEntryModel\', \'METHOD_3: convertRowIndexToModel\', \'METHOD_2: getSelectedRow\', \'METHOD_1: getSelectedSyndicatedEntry\', \'VAR_1: viewRow\', \'VAR_4: tableModel\', \'VAR_3: modelRow\', \'VAR_2: table\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/FeedsPanel.java', 27, '327:9', '332:9', 37, 5 ), ( 5, 292, 25, 'public boolean include(\n    						Entry<? extends FeedEntryTableModel, ? extends Object> entry) {\n    boolean authorMatch = entry.getStringValue(authorIndex)\n    .equalsIgnoreCase(author);\n    boolean repositoryMatch = entry.getStringValue(repositoryIndex)\n    .equalsIgnoreCase(repository);\n    return authorMatch && repositoryMatch;\n    }', '[\'public\', \'boolean\', \'include\', \'(\', \'Entry\', \'<\', \'?\', \'extends\', \'FeedEntryTableModel\', \',\', \'?\', \'extends\', \'Object\', \'>\', \'entry\', \')\', \'{\', \'boolean\', \'authorMatch\', \'=\', \'entry\', \'.\', \'getStringValue\', \'(\', \'authorIndex\', \')\', \'.\', \'equalsIgnoreCase\', \'(\', \'author\', \')\', \';\', \'boolean\', \'repositoryMatch\', \'=\', \'entry\', \'.\', \'getStringValue\', \'(\', \'repositoryIndex\', \')\', \'.\', \'equalsIgnoreCase\', \'(\', \'repository\', \')\', \';\', \'return\', \'authorMatch\', \'&&\', \'repositoryMatch\', \';\', \'}\']', 'public boolean METHOD_1 ( Entry < ? extends TYPE_1 , ? extends Object > entry ) { boolean VAR_1 = entry . METHOD_2 ( VAR_2 ) . METHOD_3 ( VAR_3 ) ; boolean VAR_4 = entry . METHOD_2 ( VAR_5 ) . METHOD_3 ( VAR_6 ) ; return VAR_1 && VAR_4 ; }', '[\'TYPE_1: FeedEntryTableModel\', \'METHOD_1: include\', \'METHOD_2: getStringValue\', \'METHOD_3: equalsIgnoreCase\', \'VAR_4: repositoryMatch\', \'VAR_5: repositoryIndex\', \'VAR_1: authorMatch\', \'VAR_3: author\', \'VAR_6: repository\', \'VAR_2: authorIndex\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/FeedsPanel.java', 27, '390:33', '397:33', 53, 7 ), ( 5, 294, 0, 'public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected,\n    			boolean hasFocus, int row, int column) {\n    if (value instanceof Boolean) {\n    boolean checked = (Boolean) value;\n    this.setSelected(checked);\n    }\n    return this;\n    }', '[\'public\', \'Component\', \'getTableCellRendererComponent\', \'(\', \'JTable\', \'table\', \',\', \'Object\', \'value\', \',\', \'boolean\', \'isSelected\', \',\', \'boolean\', \'hasFocus\', \',\', \'int\', \'row\', \',\', \'int\', \'column\', \')\', \'{\', \'if\', \'(\', \'value\', \'instanceof\', \'Boolean\', \')\', \'{\', \'boolean\', \'checked\', \'=\', \'(\', \'Boolean\', \')\', \'value\', \';\', \'this\', \'.\', \'setSelected\', \'(\', \'checked\', \')\', \';\', \'}\', \'return\', \'this\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , Object value , boolean VAR_2 , boolean VAR_3 , int row , int VAR_4 ) { if ( value instanceof Boolean ) { boolean VAR_5 = ( Boolean ) value ; this . METHOD_2 ( VAR_5 ) ; } return this ; }', '[\'TYPE_2: JTable\', \'TYPE_1: Component\', \'METHOD_2: setSelected\', \'METHOD_1: getTableCellRendererComponent\', \'VAR_2: isSelected\', \'VAR_4: column\', \'VAR_5: checked\', \'VAR_3: hasFocus\', \'VAR_1: table\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/BooleanCellRenderer.java', 2, '42:9', '49:9', 50, 6 ), ( 5, 295, 0, 'public void updateSubscribedFeeds(List<FeedModel> list) {\n    for (FeedModel feed : list) {\n    if (feeds.contains(feed)) {\n    // possibly unsubscribe/remove feed\n    int index = feeds.indexOf(feed);\n    FeedModel existingFeed = feeds.get(index);\n    existingFeed.subscribed = feed.subscribed;\n    if (!existingFeed.subscribed) {\n    feeds.remove(index);\n    }\n    } else if (feed.subscribed) {\n    // new subscription\n    feeds.add(feed);\n    }\n    }\n    }', '[\'public\', \'void\', \'updateSubscribedFeeds\', \'(\', \'List\', \'<\', \'FeedModel\', \'>\', \'list\', \')\', \'{\', \'for\', \'(\', \'FeedModel\', \'feed\', \':\', \'list\', \')\', \'{\', \'if\', \'(\', \'feeds\', \'.\', \'contains\', \'(\', \'feed\', \')\', \')\', \'{\', \'int\', \'index\', \'=\', \'feeds\', \'.\', \'indexOf\', \'(\', \'feed\', \')\', \';\', \'FeedModel\', \'existingFeed\', \'=\', \'feeds\', \'.\', \'get\', \'(\', \'index\', \')\', \';\', \'existingFeed.subscribed\', \'=\', \'feed.subscribed\', \';\', \'if\', \'(\', \'!\', \'existingFeed.subscribed\', \')\', \'{\', \'feeds\', \'.\', \'remove\', \'(\', \'index\', \')\', \';\', \'}\', \'}\', \'else\', \'if\', \'(\', \'feed.subscribed\', \')\', \'{\', \'feeds\', \'.\', \'add\', \'(\', \'feed\', \')\', \';\', \'}\', \'}\', \'}\']', 'public void METHOD_1 ( List < TYPE_1 > list ) { for ( TYPE_1 VAR_1 : list ) { if ( VAR_2 . contains ( VAR_1 ) ) { int index = VAR_2 . METHOD_2 ( VAR_1 ) ; TYPE_1 VAR_3 = VAR_2 . get ( index ) ; VAR_4 = VAR_5 ; if ( ! VAR_4 ) { VAR_2 . remove ( index ) ; } } else if ( VAR_5 ) { VAR_2 . add ( VAR_1 ) ; } } }', '[\'TYPE_1: FeedModel\', \'METHOD_1: updateSubscribedFeeds\', \'METHOD_2: indexOf\', \'VAR_1: feed\', \'VAR_3: existingFeed\', \'VAR_2: feeds\', \'VAR_5: feed.subscribed\', \'VAR_4: existingFeed.subscribed\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/GitblitRegistration.java', 5, '57:9', '72:9', 93, 10 ), ( 5, 295, 4, 'public GitblitRegistration(String name, String url, String account, char[] password) {\n    this.url = url;\n    this.account = account;\n    this.password = password;\n    this.savePassword = password != null && password.length > 0;\n    if (StringUtils.isEmpty(name)) {\n    this.name = url.substring(url.indexOf("//") + 2);\n    } else {\n    this.name = name;\n    }\n    feeds = new ArrayList<FeedModel>();\n    }', '[\'public\', \'GitblitRegistration\', \'(\', \'String\', \'name\', \',\', \'String\', \'url\', \',\', \'String\', \'account\', \',\', \'char\', \'[\', \']\', \'password\', \')\', \'{\', \'this\', \'.\', \'url\', \'=\', \'url\', \';\', \'this\', \'.\', \'account\', \'=\', \'account\', \';\', \'this\', \'.\', \'password\', \'=\', \'password\', \';\', \'this\', \'.\', \'savePassword\', \'=\', \'password\', \'!=\', \'null\', \'&&\', \'password\', \'.\', \'length\', \'>\', \'0\', \';\', \'if\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'name\', \')\', \')\', \'{\', \'this\', \'.\', \'name\', \'=\', \'url\', \'.\', \'substring\', \'(\', \'url\', \'.\', \'indexOf\', \'(\', \'"<DOUBLE_SLASH>"\', \')\', \'+\', \'2\', \')\', \';\', \'}\', \'else\', \'{\', \'this\', \'.\', \'name\', \'=\', \'name\', \';\', \'}\', \'feeds\', \'=\', \'new\', \'ArrayList\', \'<\', \'FeedModel\', \'>\', \'(\', \')\', \';\', \'}\']', 'public VAR_1 ( String name , String url , String VAR_2 , char [ ] VAR_3 ) { this . url = url ; this . VAR_2 = VAR_2 ; this . VAR_3 = VAR_3 ; this . VAR_4 = VAR_3 != null && VAR_3 . length > 0 ; if ( StringUtils . isEmpty ( name ) ) { this . name = url . substring ( url . METHOD_1 ( STRING_1 ) + 2 ) ; } else { this . name = name ; } VAR_5 = new ArrayList < TYPE_1 > ( ) ; }', '[\'TYPE_1: FeedModel\', \'METHOD_1: indexOf\', \'VAR_3: password\', \'VAR_5: feeds\', \'VAR_4: savePassword\', \'VAR_1: GitblitRegistration\', \'VAR_2: account\', \'STRING_1: "<DOUBLE_SLASH>"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/GitblitRegistration.java', 5, '44:9', '55:9', 97, 10 ), ( 5, 296, 5, '@Override\n    public void valueChanged(ListSelectionEvent e) {\n    if (e.getValueIsAdjusting()) {\n    return;\n    }\n    boolean selected = table.getSelectedRow() > -1;\n    boolean singleSelection = table.getSelectedRows().length == 1;\n    editTeam.setEnabled(singleSelection && selected);\n    delTeam.setEnabled(selected);\n    }', '[\'public\', \'void\', \'valueChanged\', \'(\', \'ListSelectionEvent\', \'e\', \')\', \'{\', \'if\', \'(\', \'e\', \'.\', \'getValueIsAdjusting\', \'(\', \')\', \')\', \'{\', \'return\', \';\', \'}\', \'boolean\', \'selected\', \'=\', \'table\', \'.\', \'getSelectedRow\', \'(\', \')\', \'>\', \'-\', \'1\', \';\', \'boolean\', \'singleSelection\', \'=\', \'table\', \'.\', \'getSelectedRows\', \'(\', \')\', \'.\', \'length\', \'==\', \'1\', \';\', \'editTeam\', \'.\', \'setEnabled\', \'(\', \'singleSelection\', \'&&\', \'selected\', \')\', \';\', \'delTeam\', \'.\', \'setEnabled\', \'(\', \'selected\', \')\', \';\', \'}\']', 'public void METHOD_1 ( TYPE_1 e ) { if ( e . METHOD_2 ( ) ) { return ; } boolean VAR_1 = VAR_2 . METHOD_3 ( ) > - 1 ; boolean VAR_3 = VAR_2 . METHOD_4 ( ) . length == 1 ; VAR_4 . METHOD_5 ( VAR_3 && VAR_1 ) ; VAR_5 . METHOD_5 ( VAR_1 ) ; }', '[\'TYPE_1: ListSelectionEvent\', \'METHOD_5: setEnabled\', \'METHOD_3: getSelectedRow\', \'METHOD_1: valueChanged\', \'METHOD_4: getSelectedRows\', \'METHOD_2: getValueIsAdjusting\', \'VAR_3: singleSelection\', \'VAR_4: editTeam\', \'VAR_5: delTeam\', \'VAR_1: selected\', \'VAR_2: table\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/TeamsPanel.java', 31, '126:25', '135:25', 60, 8 ), ( 5, 296, 11, 'protected void updateTable(boolean pack) {\n    tableModel.list.clear();\n    tableModel.list.addAll(gitblit.getTeams());\n    tableModel.fireTableDataChanged();\n    header.setText(Translation.get("gb.teams") + " (" + gitblit.getTeams().size() + ")");\n    if (pack) {\n    Utils.packColumns(table, Utils.MARGIN);\n    }\n    }', '[\'protected\', \'void\', \'updateTable\', \'(\', \'boolean\', \'pack\', \')\', \'{\', \'tableModel.list\', \'.\', \'clear\', \'(\', \')\', \';\', \'tableModel.list\', \'.\', \'addAll\', \'(\', \'gitblit\', \'.\', \'getTeams\', \'(\', \')\', \')\', \';\', \'tableModel\', \'.\', \'fireTableDataChanged\', \'(\', \')\', \';\', \'header\', \'.\', \'setText\', \'(\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.teams"\', \')\', \'+\', \'" ("\', \'+\', \'gitblit\', \'.\', \'getTeams\', \'(\', \')\', \'.\', \'size\', \'(\', \')\', \'+\', \'")"\', \')\', \';\', \'if\', \'(\', \'pack\', \')\', \'{\', \'Utils\', \'.\', \'packColumns\', \'(\', \'table\', \',\', \'Utils.MARGIN\', \')\', \';\', \'}\', \'}\']', 'protected void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( ) ; VAR_2 . addAll ( VAR_3 . METHOD_3 ( ) ) ; VAR_4 . METHOD_4 ( ) ; VAR_5 . METHOD_5 ( TYPE_1 . get ( STRING_1 ) + STRING_2 + VAR_3 . METHOD_3 ( ) . size ( ) + STRING_3 ) ; if ( VAR_1 ) { TYPE_2 . METHOD_6 ( VAR_6 , VAR_7 ) ; } }', '[\'TYPE_1: Translation\', \'TYPE_2: Utils\', \'METHOD_2: clear\', \'METHOD_4: fireTableDataChanged\', \'METHOD_1: updateTable\', \'METHOD_6: packColumns\', \'METHOD_3: getTeams\', \'METHOD_5: setText\', \'VAR_3: gitblit\', \'VAR_4: tableModel\', \'VAR_5: header\', \'VAR_7: Utils.MARGIN\', \'VAR_1: pack\', \'VAR_6: table\', \'VAR_2: tableModel.list\', \'STRING_1: "gb.teams"\', \'STRING_2: " ("\', \'STRING_3: ")"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/TeamsPanel.java', 31, '191:9', '199:9', 74, 7 ), ( 5, 296, 13, 'public boolean include(Entry<? extends TeamsTableModel, ? extends Object> entry) {\n    for (int i = entry.getValueCount() - 1; i >= 0; i--) {\n    if (entry.getStringValue(i).toLowerCase().contains(fragment.toLowerCase())) {\n    return true;\n    }\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'include\', \'(\', \'Entry\', \'<\', \'?\', \'extends\', \'TeamsTableModel\', \',\', \'?\', \'extends\', \'Object\', \'>\', \'entry\', \')\', \'{\', \'for\', \'(\', \'int\', \'i\', \'=\', \'entry\', \'.\', \'getValueCount\', \'(\', \')\', \'-\', \'1\', \';\', \'i\', \'>=\', \'0\', \';\', \'i\', \'--\', \')\', \'{\', \'if\', \'(\', \'entry\', \'.\', \'getStringValue\', \'(\', \'i\', \')\', \'.\', \'toLowerCase\', \'(\', \')\', \'.\', \'contains\', \'(\', \'fragment\', \'.\', \'toLowerCase\', \'(\', \')\', \')\', \')\', \'{\', \'return\', \'true\', \';\', \'}\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean METHOD_1 ( Entry < ? extends TYPE_1 , ? extends Object > entry ) { for ( int i = entry . METHOD_2 ( ) - 1 ; i >= 0 ; i -- ) { if ( entry . METHOD_3 ( i ) . METHOD_4 ( ) . contains ( VAR_1 . METHOD_4 ( ) ) ) { return true ; } } return false ; }', '[\'TYPE_1: TeamsTableModel\', \'METHOD_1: include\', \'METHOD_3: getStringValue\', \'METHOD_4: toLowerCase\', \'METHOD_2: getValueCount\', \'VAR_1: fragment\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/TeamsPanel.java', 31, '207:25', '214:25', 67, 5 ), ( 5, 296, 14, 'private List<TeamModel> getSelectedTeams() {\n    List<TeamModel> teams = new ArrayList<TeamModel>();\n    for (int viewRow : table.getSelectedRows()) {\n    int modelRow = table.convertRowIndexToModel(viewRow);\n    TeamModel model = tableModel.list.get(modelRow);\n    teams.add(model);\n    }\n    return teams;\n    }', '[\'private\', \'List\', \'<\', \'TeamModel\', \'>\', \'getSelectedTeams\', \'(\', \')\', \'{\', \'List\', \'<\', \'TeamModel\', \'>\', \'teams\', \'=\', \'new\', \'ArrayList\', \'<\', \'TeamModel\', \'>\', \'(\', \')\', \';\', \'for\', \'(\', \'int\', \'viewRow\', \':\', \'table\', \'.\', \'getSelectedRows\', \'(\', \')\', \')\', \'{\', \'int\', \'modelRow\', \'=\', \'table\', \'.\', \'convertRowIndexToModel\', \'(\', \'viewRow\', \')\', \';\', \'TeamModel\', \'model\', \'=\', \'tableModel.list\', \'.\', \'get\', \'(\', \'modelRow\', \')\', \';\', \'teams\', \'.\', \'add\', \'(\', \'model\', \')\', \';\', \'}\', \'return\', \'teams\', \';\', \'}\']', 'private List < TYPE_1 > METHOD_1 ( ) { List < TYPE_1 > VAR_1 = new ArrayList < TYPE_1 > ( ) ; for ( int VAR_2 : VAR_3 . METHOD_2 ( ) ) { int VAR_4 = VAR_3 . METHOD_3 ( VAR_2 ) ; TYPE_1 model = VAR_5 . get ( VAR_4 ) ; VAR_1 . add ( model ) ; } return VAR_1 ; }', '[\'TYPE_1: TeamModel\', \'METHOD_3: convertRowIndexToModel\', \'METHOD_2: getSelectedRows\', \'METHOD_1: getSelectedTeams\', \'VAR_1: teams\', \'VAR_2: viewRow\', \'VAR_4: modelRow\', \'VAR_3: table\', \'VAR_5: tableModel.list\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/TeamsPanel.java', 31, '221:9', '229:9', 66, 7 ), ( 5, 296, 19, '@Override\n    protected Boolean doRequest() throws IOException {\n    boolean success = gitblit.createTeam(newTeam);\n    if (success) {\n    gitblit.refreshTeams();\n    gitblit.refreshUsers();\n    }\n    return success;\n    }', '[\'protected\', \'Boolean\', \'doRequest\', \'(\', \')\', \'throws\', \'IOException\', \'{\', \'boolean\', \'success\', \'=\', \'gitblit\', \'.\', \'createTeam\', \'(\', \'newTeam\', \')\', \';\', \'if\', \'(\', \'success\', \')\', \'{\', \'gitblit\', \'.\', \'refreshTeams\', \'(\', \')\', \';\', \'gitblit\', \'.\', \'refreshUsers\', \'(\', \')\', \';\', \'}\', \'return\', \'success\', \';\', \'}\']', 'protected Boolean METHOD_1 ( ) throws IOException { boolean VAR_1 = VAR_2 . METHOD_2 ( VAR_3 ) ; if ( VAR_1 ) { VAR_2 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; } return VAR_1 ; }', '[\'METHOD_1: doRequest\', \'METHOD_2: createTeam\', \'METHOD_3: refreshTeams\', \'METHOD_4: refreshUsers\', \'VAR_1: success\', \'VAR_3: newTeam\', \'VAR_2: gitblit\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/TeamsPanel.java', 31, '271:25', '279:25', 39, 7 ), ( 5, 296, 23, '@Override\n    protected Boolean doRequest() throws IOException {\n    boolean success = gitblit.updateTeam(team.name, revisedTeam);\n    if (success) {\n    gitblit.refreshTeams();\n    gitblit.refreshUsers();\n    }\n    return success;\n    }', '[\'protected\', \'Boolean\', \'doRequest\', \'(\', \')\', \'throws\', \'IOException\', \'{\', \'boolean\', \'success\', \'=\', \'gitblit\', \'.\', \'updateTeam\', \'(\', \'team\', \'.\', \'name\', \',\', \'revisedTeam\', \')\', \';\', \'if\', \'(\', \'success\', \')\', \'{\', \'gitblit\', \'.\', \'refreshTeams\', \'(\', \')\', \';\', \'gitblit\', \'.\', \'refreshUsers\', \'(\', \')\', \';\', \'}\', \'return\', \'success\', \';\', \'}\']', 'protected Boolean METHOD_1 ( ) throws IOException { boolean VAR_1 = VAR_2 . METHOD_2 ( VAR_3 . name , VAR_4 ) ; if ( VAR_1 ) { VAR_2 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; } return VAR_1 ; }', '[\'METHOD_1: doRequest\', \'METHOD_3: refreshTeams\', \'METHOD_2: updateTeam\', \'METHOD_4: refreshUsers\', \'VAR_1: success\', \'VAR_2: gitblit\', \'VAR_3: team\', \'VAR_4: revisedTeam\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/TeamsPanel.java', 31, '321:25', '329:25', 43, 7 ), ( 5, 296, 27, '@Override\n    protected Boolean doRequest() throws IOException {\n    boolean success = true;\n    for (TeamModel team : teams) {\n    success &= gitblit.deleteTeam(team);\n    }\n    if (success) {\n    gitblit.refreshTeams();\n    gitblit.refreshUsers();\n    }\n    return success;\n    }', '[\'protected\', \'Boolean\', \'doRequest\', \'(\', \')\', \'throws\', \'IOException\', \'{\', \'boolean\', \'success\', \'=\', \'true\', \';\', \'for\', \'(\', \'TeamModel\', \'team\', \':\', \'teams\', \')\', \'{\', \'success\', \'&=\', \'gitblit\', \'.\', \'deleteTeam\', \'(\', \'team\', \')\', \';\', \'}\', \'if\', \'(\', \'success\', \')\', \'{\', \'gitblit\', \'.\', \'refreshTeams\', \'(\', \')\', \';\', \'gitblit\', \'.\', \'refreshUsers\', \'(\', \')\', \';\', \'}\', \'return\', \'success\', \';\', \'}\']', 'protected Boolean METHOD_1 ( ) throws IOException { boolean VAR_1 = true ; for ( TYPE_1 VAR_2 : VAR_3 ) { VAR_1 &= VAR_4 . METHOD_2 ( VAR_2 ) ; } if ( VAR_1 ) { VAR_4 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( ) ; } return VAR_1 ; }', '[\'TYPE_1: TeamModel\', \'METHOD_1: doRequest\', \'METHOD_2: deleteTeam\', \'METHOD_3: refreshTeams\', \'METHOD_4: refreshUsers\', \'VAR_3: teams\', \'VAR_1: success\', \'VAR_4: gitblit\', \'VAR_2: team\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/TeamsPanel.java', 31, '358:33', '369:33', 52, 9 ), ( 5, 297, 4, '@Override\n    public String getColumnName(int column) {\n    Columns col = Columns.values()[column];\n    switch (col) {\n    case Registrant:\n    return Translation.get("gb.name");\n    case Type:\n    return Translation.get("gb.type");\n    case Permission:\n    return Translation.get("gb.permission");\n    }\n    return "";\n    }', '[\'public\', \'String\', \'getColumnName\', \'(\', \'int\', \'column\', \')\', \'{\', \'Columns\', \'col\', \'=\', \'Columns\', \'.\', \'values\', \'(\', \')\', \'[\', \'column\', \']\', \';\', \'switch\', \'(\', \'col\', \')\', \'{\', \'case\', \'Registrant\', \':\', \'return\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.name"\', \')\', \';\', \'case\', \'Type\', \':\', \'return\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.type"\', \')\', \';\', \'case\', \'Permission\', \':\', \'return\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.permission"\', \')\', \';\', \'}\', \'return\', \'""\', \';\', \'}\']', 'public String METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = TYPE_1 . values ( ) [ VAR_1 ] ; switch ( VAR_2 ) { case VAR_3 : return TYPE_2 . get ( STRING_1 ) ; case Type : return TYPE_2 . get ( STRING_2 ) ; case VAR_4 : return TYPE_2 . get ( STRING_3 ) ; } return STRING_4 ; }', '[\'TYPE_2: Translation\', \'TYPE_1: Columns\', \'METHOD_1: getColumnName\', \'VAR_2: col\', \'VAR_1: column\', \'VAR_4: Permission\', \'VAR_3: Registrant\', \'STRING_4: ""\', \'STRING_3: "gb.permission"\', \'STRING_1: "gb.name"\', \'STRING_2: "gb.type"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/RegistrantPermissionsTableModel.java', 11, '69:9', '81:9', 64, 11 ), ( 5, 297, 5, 'public Class<?> getColumnClass(int columnIndex) {\n    if (columnIndex == Columns.Permission.ordinal()) {\n    return AccessPermission.class;\n    } else if (columnIndex == Columns.Type.ordinal()) {\n    return RegistrantAccessPermission.class;\n    }\n    return String.class;\n    }', '[\'public\', \'Class\', \'<\', \'?\', \'>\', \'getColumnClass\', \'(\', \'int\', \'columnIndex\', \')\', \'{\', \'if\', \'(\', \'columnIndex\', \'==\', \'Columns.Permission\', \'.\', \'ordinal\', \'(\', \')\', \')\', \'{\', \'return\', \'AccessPermission.\', \'class\', \';\', \'}\', \'else\', \'if\', \'(\', \'columnIndex\', \'==\', \'Columns.Type\', \'.\', \'ordinal\', \'(\', \')\', \')\', \'{\', \'return\', \'RegistrantAccessPermission.\', \'class\', \';\', \'}\', \'return\', \'String.\', \'class\', \';\', \'}\']', 'public Class < ? > METHOD_1 ( int VAR_1 ) { if ( VAR_1 == TYPE_1 . METHOD_2 ( ) ) { return VAR_2 class ; } else if ( VAR_1 == TYPE_2 . METHOD_2 ( ) ) { return VAR_3 class ; } return VAR_4 class ; }', '[\'TYPE_2: Columns.Type\', \'TYPE_1: Columns.Permission\', \'METHOD_1: getColumnClass\', \'METHOD_2: ordinal\', \'VAR_2: AccessPermission.\', \'VAR_3: RegistrantAccessPermission.\', \'VAR_4: String.\', \'VAR_1: columnIndex\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/RegistrantPermissionsTableModel.java', 11, '90:9', '97:9', 53, 6 ), ( 5, 297, 6, '@Override\n    public boolean isCellEditable(int rowIndex, int columnIndex) {\n    if (columnIndex == Columns.Permission.ordinal()) {\n    // in order for the permission to be editable it must be\n    // explicitly defined on the object.  regex permissions are inherited\n    // and therefore can not be directly manipulated unless the current\n    // object is the source of the regex (i.e. a user or team with explicit\n    // regex definition)\n    return permissions.get(rowIndex).mutable;\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'isCellEditable\', \'(\', \'int\', \'rowIndex\', \',\', \'int\', \'columnIndex\', \')\', \'{\', \'if\', \'(\', \'columnIndex\', \'==\', \'Columns.Permission\', \'.\', \'ordinal\', \'(\', \')\', \')\', \'{\', \'return\', \'permissions\', \'.\', \'get\', \'(\', \'rowIndex\', \')\', \'.\', \'mutable\', \';\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean METHOD_1 ( int VAR_1 , int VAR_2 ) { if ( VAR_2 == TYPE_1 . METHOD_2 ( ) ) { return VAR_3 . get ( VAR_1 ) . VAR_4 ; } return false ; }', '[\'TYPE_1: Columns.Permission\', \'METHOD_1: isCellEditable\', \'METHOD_2: ordinal\', \'VAR_3: permissions\', \'VAR_4: mutable\', \'VAR_1: rowIndex\', \'VAR_2: columnIndex\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/RegistrantPermissionsTableModel.java', 11, '99:9', '110:9', 45, 5 ), ( 5, 297, 7, '@Override\n    public Object getValueAt(int rowIndex, int columnIndex) {\n    RegistrantAccessPermission rp = permissions.get(rowIndex);\n    Columns col = Columns.values()[columnIndex];\n    switch (col) {\n    case Registrant:\n    return rp.registrant;\n    case Type:\n    return rp;\n    case Permission:\n    return rp.permission;\n    }\n    return null;\n    }', '[\'public\', \'Object\', \'getValueAt\', \'(\', \'int\', \'rowIndex\', \',\', \'int\', \'columnIndex\', \')\', \'{\', \'RegistrantAccessPermission\', \'rp\', \'=\', \'permissions\', \'.\', \'get\', \'(\', \'rowIndex\', \')\', \';\', \'Columns\', \'col\', \'=\', \'Columns\', \'.\', \'values\', \'(\', \')\', \'[\', \'columnIndex\', \']\', \';\', \'switch\', \'(\', \'col\', \')\', \'{\', \'case\', \'Registrant\', \':\', \'return\', \'rp.registrant\', \';\', \'case\', \'Type\', \':\', \'return\', \'rp\', \';\', \'case\', \'Permission\', \':\', \'return\', \'rp.permission\', \';\', \'}\', \'return\', \'null\', \';\', \'}\']', 'public Object METHOD_1 ( int VAR_1 , int VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . get ( VAR_1 ) ; TYPE_2 VAR_5 = TYPE_2 . values ( ) [ VAR_2 ] ; switch ( VAR_5 ) { case VAR_6 : return VAR_7 ; case Type : return VAR_3 ; case VAR_8 : return VAR_9 ; } return null ; }', '[\'TYPE_1: RegistrantAccessPermission\', \'TYPE_2: Columns\', \'METHOD_1: getValueAt\', \'VAR_9: rp.permission\', \'VAR_5: col\', \'VAR_7: rp.registrant\', \'VAR_4: permissions\', \'VAR_8: Permission\', \'VAR_6: Registrant\', \'VAR_1: rowIndex\', \'VAR_2: columnIndex\', \'VAR_3: rp\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/RegistrantPermissionsTableModel.java', 11, '112:9', '125:9', 66, 12 ), ( 5, 297, 8, '@Override\n    public void setValueAt(Object o, int rowIndex, int columnIndex) {\n    RegistrantAccessPermission rp = permissions.get(rowIndex);\n    if (columnIndex == Columns.Permission.ordinal()) {\n    rp.permission = (AccessPermission) o;\n    }\n    }', '[\'public\', \'void\', \'setValueAt\', \'(\', \'Object\', \'o\', \',\', \'int\', \'rowIndex\', \',\', \'int\', \'columnIndex\', \')\', \'{\', \'RegistrantAccessPermission\', \'rp\', \'=\', \'permissions\', \'.\', \'get\', \'(\', \'rowIndex\', \')\', \';\', \'if\', \'(\', \'columnIndex\', \'==\', \'Columns.Permission\', \'.\', \'ordinal\', \'(\', \')\', \')\', \'{\', \'rp.permission\', \'=\', \'(\', \'AccessPermission\', \')\', \'o\', \';\', \'}\', \'}\']', 'public void METHOD_1 ( Object o , int VAR_1 , int VAR_2 ) { TYPE_1 VAR_3 = VAR_4 . get ( VAR_1 ) ; if ( VAR_2 == TYPE_2 . METHOD_2 ( ) ) { VAR_5 = ( TYPE_3 ) o ; } }', '[\'TYPE_1: RegistrantAccessPermission\', \'TYPE_3: AccessPermission\', \'TYPE_2: Columns.Permission\', \'METHOD_1: setValueAt\', \'METHOD_2: ordinal\', \'VAR_5: rp.permission\', \'VAR_4: permissions\', \'VAR_1: rowIndex\', \'VAR_2: columnIndex\', \'VAR_3: rp\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/RegistrantPermissionsTableModel.java', 11, '127:9', '133:9', 49, 5 ), ( 5, 298, 0, 'public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected,\n    			boolean hasFocus, int row, int column) {\n    super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);\n    setText(value == null ? "" : value.toString());\n    if (isSelected) {\n    setForeground(table.getSelectionForeground());\n    }\n    return this;\n    }', '[\'public\', \'Component\', \'getTableCellRendererComponent\', \'(\', \'JTable\', \'table\', \',\', \'Object\', \'value\', \',\', \'boolean\', \'isSelected\', \',\', \'boolean\', \'hasFocus\', \',\', \'int\', \'row\', \',\', \'int\', \'column\', \')\', \'{\', \'super\', \'.\', \'getTableCellRendererComponent\', \'(\', \'table\', \',\', \'value\', \',\', \'isSelected\', \',\', \'hasFocus\', \',\', \'row\', \',\', \'column\', \')\', \';\', \'setText\', \'(\', \'value\', \'==\', \'null\', \'?\', \'""\', \':\', \'value\', \'.\', \'toString\', \'(\', \')\', \')\', \';\', \'if\', \'(\', \'isSelected\', \')\', \'{\', \'setForeground\', \'(\', \'table\', \'.\', \'getSelectionForeground\', \'(\', \')\', \')\', \';\', \'}\', \'return\', \'this\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , Object value , boolean VAR_2 , boolean VAR_3 , int row , int VAR_4 ) { super . METHOD_1 ( VAR_1 , value , VAR_2 , VAR_3 , row , VAR_4 ) ; METHOD_2 ( value == null ? STRING_1 : value . toString ( ) ) ; if ( VAR_2 ) { METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; } return this ; }', '[\'TYPE_2: JTable\', \'TYPE_1: Component\', \'METHOD_4: getSelectionForeground\', \'METHOD_1: getTableCellRendererComponent\', \'METHOD_3: setForeground\', \'METHOD_2: setText\', \'VAR_2: isSelected\', \'VAR_4: column\', \'VAR_3: hasFocus\', \'VAR_1: table\', \'STRING_1: ""\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/BranchRenderer.java', 3, '43:9', '51:9', 72, 7 ), ( 5, 298, 1, '@Override\n    public Component getListCellRendererComponent(JList list, Object value, int index,\n    			boolean isSelected, boolean cellHasFocus) {\n    setText(value == null ? "" : value.toString());\n    if (isSelected) {\n    setBackground(list.getSelectionBackground());\n    setForeground(list.getSelectionForeground());\n    } else {\n    setBackground(list.getBackground());\n    }\n    return this;\n    }', '[\'public\', \'Component\', \'getListCellRendererComponent\', \'(\', \'JList\', \'list\', \',\', \'Object\', \'value\', \',\', \'int\', \'index\', \',\', \'boolean\', \'isSelected\', \',\', \'boolean\', \'cellHasFocus\', \')\', \'{\', \'setText\', \'(\', \'value\', \'==\', \'null\', \'?\', \'""\', \':\', \'value\', \'.\', \'toString\', \'(\', \')\', \')\', \';\', \'if\', \'(\', \'isSelected\', \')\', \'{\', \'setBackground\', \'(\', \'list\', \'.\', \'getSelectionBackground\', \'(\', \')\', \')\', \';\', \'setForeground\', \'(\', \'list\', \'.\', \'getSelectionForeground\', \'(\', \')\', \')\', \';\', \'}\', \'else\', \'{\', \'setBackground\', \'(\', \'list\', \'.\', \'getBackground\', \'(\', \')\', \')\', \';\', \'}\', \'return\', \'this\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( TYPE_2 list , Object value , int index , boolean VAR_1 , boolean VAR_2 ) { METHOD_2 ( value == null ? STRING_1 : value . toString ( ) ) ; if ( VAR_1 ) { METHOD_3 ( list . METHOD_4 ( ) ) ; METHOD_5 ( list . METHOD_6 ( ) ) ; } else { METHOD_3 ( list . METHOD_7 ( ) ) ; } return this ; }', '[\'TYPE_1: Component\', \'TYPE_2: JList\', \'METHOD_1: getListCellRendererComponent\', \'METHOD_6: getSelectionForeground\', \'METHOD_5: setForeground\', \'METHOD_3: setBackground\', \'METHOD_7: getBackground\', \'METHOD_2: setText\', \'METHOD_4: getSelectionBackground\', \'VAR_2: cellHasFocus\', \'VAR_1: isSelected\', \'STRING_1: ""\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/BranchRenderer.java', 3, '53:9', '64:9', 73, 10 ), ( 5, 299, 4, '@Override\n    public String getColumnName(int column) {\n    Columns col = Columns.values()[column];\n    switch (col) {\n    case Name:\n    return Translation.get("gb.name");\n    }\n    return "";\n    }', '[\'public\', \'String\', \'getColumnName\', \'(\', \'int\', \'column\', \')\', \'{\', \'Columns\', \'col\', \'=\', \'Columns\', \'.\', \'values\', \'(\', \')\', \'[\', \'column\', \']\', \';\', \'switch\', \'(\', \'col\', \')\', \'{\', \'case\', \'Name\', \':\', \'return\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.name"\', \')\', \';\', \'}\', \'return\', \'""\', \';\', \'}\']', 'public String METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = TYPE_1 . values ( ) [ VAR_1 ] ; switch ( VAR_2 ) { case VAR_3 : return TYPE_2 . get ( STRING_1 ) ; } return STRING_2 ; }', '[\'TYPE_2: Translation\', \'TYPE_1: Columns\', \'METHOD_1: getColumnName\', \'VAR_2: col\', \'VAR_1: column\', \'VAR_3: Name\', \'STRING_2: ""\', \'STRING_1: "gb.name"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/PropertiesTableModel.java', 9, '73:9', '81:9', 42, 7 ), ( 5, 299, 6, '@Override\n    public Object getValueAt(int rowIndex, int columnIndex) {\n    String key = keys.get(rowIndex);\n    Columns col = Columns.values()[columnIndex];\n    switch (col) {\n    case Name:\n    return key;\n    case Value:\n    return map.get(key);\n    }\n    return null;\n    }', '[\'public\', \'Object\', \'getValueAt\', \'(\', \'int\', \'rowIndex\', \',\', \'int\', \'columnIndex\', \')\', \'{\', \'String\', \'key\', \'=\', \'keys\', \'.\', \'get\', \'(\', \'rowIndex\', \')\', \';\', \'Columns\', \'col\', \'=\', \'Columns\', \'.\', \'values\', \'(\', \')\', \'[\', \'columnIndex\', \']\', \';\', \'switch\', \'(\', \'col\', \')\', \'{\', \'case\', \'Name\', \':\', \'return\', \'key\', \';\', \'case\', \'Value\', \':\', \'return\', \'map\', \'.\', \'get\', \'(\', \'key\', \')\', \';\', \'}\', \'return\', \'null\', \';\', \'}\']', 'public Object METHOD_1 ( int VAR_1 , int VAR_2 ) { String key = VAR_3 . get ( VAR_1 ) ; TYPE_1 VAR_4 = TYPE_1 . values ( ) [ VAR_2 ] ; switch ( VAR_4 ) { case VAR_5 : return key ; case VAR_6 : return map . get ( key ) ; } return null ; }', '[\'TYPE_1: Columns\', \'METHOD_1: getValueAt\', \'VAR_4: col\', \'VAR_3: keys\', \'VAR_6: Value\', \'VAR_1: rowIndex\', \'VAR_2: columnIndex\', \'VAR_5: Name\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/PropertiesTableModel.java', 9, '94:9', '105:9', 61, 10 ), ( 5, 300, 3, '@Override\n    public void valueChanged(ListSelectionEvent e) {\n    if (e.getValueIsAdjusting()) {\n    return;\n    }\n    int viewRow = feedsTable.getSelectedRow();\n    if (viewRow == -1) {\n    return;\n    }\n    int modelRow = feedsTable.convertRowIndexToModel(viewRow);\n    FeedModel feed = model.get(modelRow);\n    feed.subscribed = !feed.subscribed;\n    model.fireTableDataChanged();\n    }', '[\'public\', \'void\', \'valueChanged\', \'(\', \'ListSelectionEvent\', \'e\', \')\', \'{\', \'if\', \'(\', \'e\', \'.\', \'getValueIsAdjusting\', \'(\', \')\', \')\', \'{\', \'return\', \';\', \'}\', \'int\', \'viewRow\', \'=\', \'feedsTable\', \'.\', \'getSelectedRow\', \'(\', \')\', \';\', \'if\', \'(\', \'viewRow\', \'==\', \'-\', \'1\', \')\', \'{\', \'return\', \';\', \'}\', \'int\', \'modelRow\', \'=\', \'feedsTable\', \'.\', \'convertRowIndexToModel\', \'(\', \'viewRow\', \')\', \';\', \'FeedModel\', \'feed\', \'=\', \'model\', \'.\', \'get\', \'(\', \'modelRow\', \')\', \';\', \'feed.subscribed\', \'=\', \'!\', \'feed.subscribed\', \';\', \'model\', \'.\', \'fireTableDataChanged\', \'(\', \')\', \';\', \'}\']', 'public void METHOD_1 ( TYPE_1 e ) { if ( e . METHOD_2 ( ) ) { return ; } int VAR_1 = VAR_2 . METHOD_3 ( ) ; if ( VAR_1 == - 1 ) { return ; } int VAR_3 = VAR_2 . METHOD_4 ( VAR_1 ) ; TYPE_2 VAR_4 = model . get ( VAR_3 ) ; VAR_5 = ! VAR_5 ; model . METHOD_5 ( ) ; }', '[\'TYPE_2: FeedModel\', \'TYPE_1: ListSelectionEvent\', \'METHOD_4: convertRowIndexToModel\', \'METHOD_3: getSelectedRow\', \'METHOD_1: valueChanged\', \'METHOD_5: fireTableDataChanged\', \'METHOD_2: getValueIsAdjusting\', \'VAR_4: feed\', \'VAR_1: viewRow\', \'VAR_2: feedsTable\', \'VAR_3: modelRow\', \'VAR_5: feed.subscribed\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/SubscriptionsDialog.java', 9, '83:25', '96:25', 73, 11 ), ( 5, 300, 8, 'public SubscriptionsDialog(List<FeedModel> registrations) {\n    super();\n    this.feeds = registrations;\n    setTitle(Translation.get("gb.subscribe"));\n    setIconImage(new ImageIcon(getClass().getResource("/gitblt-favicon.png")).getImage());\n    initialize();\n    setSize(600, 400);\n    }', '[\'public\', \'SubscriptionsDialog\', \'(\', \'List\', \'<\', \'FeedModel\', \'>\', \'registrations\', \')\', \'{\', \'super\', \'(\', \')\', \';\', \'this\', \'.\', \'feeds\', \'=\', \'registrations\', \';\', \'setTitle\', \'(\', \'Translation\', \'.\', \'get\', \'(\', \'"gb.subscribe"\', \')\', \')\', \';\', \'setIconImage\', \'(\', \'new\', \'ImageIcon\', \'(\', \'getClass\', \'(\', \')\', \'.\', \'getResource\', \'(\', \'"/gitblt-favicon.png"\', \')\', \')\', \'.\', \'getImage\', \'(\', \')\', \')\', \';\', \'initialize\', \'(\', \')\', \';\', \'setSize\', \'(\', \'600\', \',\', \'400\', \')\', \';\', \'}\']', 'public VAR_1 ( List < TYPE_1 > VAR_2 ) { super ( ) ; this . VAR_3 = VAR_2 ; METHOD_1 ( TYPE_2 . get ( STRING_1 ) ) ; METHOD_2 ( new TYPE_3 ( getClass ( ) . METHOD_3 ( STRING_2 ) ) . METHOD_4 ( ) ) ; METHOD_5 ( ) ; METHOD_6 ( INT_1 , INT_2 ) ; }', '[\'TYPE_3: ImageIcon\', \'TYPE_2: Translation\', \'TYPE_1: FeedModel\', \'METHOD_3: getResource\', \'METHOD_6: setSize\', \'METHOD_2: setIconImage\', \'METHOD_1: setTitle\', \'METHOD_5: initialize\', \'METHOD_4: getImage\', \'VAR_2: registrations\', \'VAR_3: feeds\', \'VAR_1: SubscriptionsDialog\', \'INT_2: 400\', \'INT_1: 600\', \'STRING_1: "gb.subscribe"\', \'STRING_2: "/gitblt-favicon.png"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/SubscriptionsDialog.java', 9, '57:9', '64:9', 58, 7 ), ( 5, 301, 2, 'public void actionPerformed(ActionEvent event) {\n    int row = selected.getSelectedRow();\n    if (row > 0) {\n    T o = selectedModel.list.remove(row);\n    selectedModel.list.add(row - 1, o);\n    selectedModel.fireTableDataChanged();\n    }\n    }', '[\'public\', \'void\', \'actionPerformed\', \'(\', \'ActionEvent\', \'event\', \')\', \'{\', \'int\', \'row\', \'=\', \'selected\', \'.\', \'getSelectedRow\', \'(\', \')\', \';\', \'if\', \'(\', \'row\', \'>\', \'0\', \')\', \'{\', \'T\', \'o\', \'=\', \'selectedModel.list\', \'.\', \'remove\', \'(\', \'row\', \')\', \';\', \'selectedModel.list\', \'.\', \'add\', \'(\', \'row\', \'-\', \'1\', \',\', \'o\', \')\', \';\', \'selectedModel\', \'.\', \'fireTableDataChanged\', \'(\', \')\', \';\', \'}\', \'}\']', 'public void METHOD_1 ( TYPE_1 event ) { int row = VAR_1 . METHOD_2 ( ) ; if ( row > 0 ) { T o = VAR_2 . remove ( row ) ; VAR_2 . add ( row - 1 , o ) ; VAR_3 . METHOD_3 ( ) ; } }', '[\'TYPE_1: ActionEvent\', \'METHOD_1: actionPerformed\', \'METHOD_2: getSelectedRow\', \'METHOD_3: fireTableDataChanged\', \'VAR_2: selectedModel.list\', \'VAR_1: selected\', \'VAR_3: selectedModel\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/JPalette.java', 17, '99:25', '106:25', 55, 6 ), ( 5, 301, 3, 'public void actionPerformed(ActionEvent event) {\n    int row = selected.getSelectedRow();\n    if (row < selected.getRowCount() - 1) {\n    T o = selectedModel.list.remove(row);\n    selectedModel.list.add(row + 1, o);\n    selectedModel.fireTableDataChanged();\n    }\n    }', '[\'public\', \'void\', \'actionPerformed\', \'(\', \'ActionEvent\', \'event\', \')\', \'{\', \'int\', \'row\', \'=\', \'selected\', \'.\', \'getSelectedRow\', \'(\', \')\', \';\', \'if\', \'(\', \'row\', \'<\', \'selected\', \'.\', \'getRowCount\', \'(\', \')\', \'-\', \'1\', \')\', \'{\', \'T\', \'o\', \'=\', \'selectedModel.list\', \'.\', \'remove\', \'(\', \'row\', \')\', \';\', \'selectedModel.list\', \'.\', \'add\', \'(\', \'row\', \'+\', \'1\', \',\', \'o\', \')\', \';\', \'selectedModel\', \'.\', \'fireTableDataChanged\', \'(\', \')\', \';\', \'}\', \'}\']', 'public void METHOD_1 ( TYPE_1 event ) { int row = VAR_1 . METHOD_2 ( ) ; if ( row < VAR_1 . METHOD_3 ( ) - 1 ) { T o = VAR_2 . remove ( row ) ; VAR_2 . add ( row + 1 , o ) ; VAR_3 . METHOD_4 ( ) ; } }', '[\'TYPE_1: ActionEvent\', \'METHOD_1: actionPerformed\', \'METHOD_2: getSelectedRow\', \'METHOD_3: getRowCount\', \'METHOD_4: fireTableDataChanged\', \'VAR_2: selectedModel.list\', \'VAR_1: selected\', \'VAR_3: selectedModel\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/JPalette.java', 17, '111:25', '118:25', 60, 6 ), ( 5, 301, 5, '@Override\n    public void setEnabled(boolean enabled) {\n    super.setEnabled(enabled);\n    add.setEnabled(enabled);\n    subtract.setEnabled(enabled);\n    up.setEnabled(enabled);\n    down.setEnabled(enabled);\n    }', '[\'public\', \'void\', \'setEnabled\', \'(\', \'boolean\', \'enabled\', \')\', \'{\', \'super\', \'.\', \'setEnabled\', \'(\', \'enabled\', \')\', \';\', \'add\', \'.\', \'setEnabled\', \'(\', \'enabled\', \')\', \';\', \'subtract\', \'.\', \'setEnabled\', \'(\', \'enabled\', \')\', \';\', \'up\', \'.\', \'setEnabled\', \'(\', \'enabled\', \')\', \';\', \'down\', \'.\', \'setEnabled\', \'(\', \'enabled\', \')\', \';\', \'}\']', 'public void METHOD_1 ( boolean VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; add . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_1 ( VAR_1 ) ; VAR_3 . METHOD_1 ( VAR_1 ) ; VAR_4 . METHOD_1 ( VAR_1 ) ; }', '[\'METHOD_1: setEnabled\', \'VAR_2: subtract\', \'VAR_3: up\', \'VAR_4: down\', \'VAR_1: enabled\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/JPalette.java', 17, '156:9', '163:9', 46, 7 ), ( 5, 301, 6, 'public void setObjects(List<T> all, List<T> selected) {\n    List<T> available = new ArrayList<T>(all);\n    if (selected != null) {\n    available.removeAll(selected);\n    }\n    availableModel.list.clear();\n    availableModel.list.addAll(available);\n    availableModel.fireTableDataChanged();\n    if (selected != null) {\n    selectedModel.list.clear();\n    selectedModel.list.addAll(selected);\n    selectedModel.fireTableDataChanged();\n    }\n    }', '[\'public\', \'void\', \'setObjects\', \'(\', \'List\', \'<\', \'T\', \'>\', \'all\', \',\', \'List\', \'<\', \'T\', \'>\', \'selected\', \')\', \'{\', \'List\', \'<\', \'T\', \'>\', \'available\', \'=\', \'new\', \'ArrayList\', \'<\', \'T\', \'>\', \'(\', \'all\', \')\', \';\', \'if\', \'(\', \'selected\', \'!=\', \'null\', \')\', \'{\', \'available\', \'.\', \'removeAll\', \'(\', \'selected\', \')\', \';\', \'}\', \'availableModel.list\', \'.\', \'clear\', \'(\', \')\', \';\', \'availableModel.list\', \'.\', \'addAll\', \'(\', \'available\', \')\', \';\', \'availableModel\', \'.\', \'fireTableDataChanged\', \'(\', \')\', \';\', \'if\', \'(\', \'selected\', \'!=\', \'null\', \')\', \'{\', \'selectedModel.list\', \'.\', \'clear\', \'(\', \')\', \';\', \'selectedModel.list\', \'.\', \'addAll\', \'(\', \'selected\', \')\', \';\', \'selectedModel\', \'.\', \'fireTableDataChanged\', \'(\', \')\', \';\', \'}\', \'}\']', 'public void METHOD_1 ( List < T > VAR_1 , List < T > VAR_2 ) { List < T > VAR_3 = new ArrayList < T > ( VAR_1 ) ; if ( VAR_2 != null ) { VAR_3 . METHOD_2 ( VAR_2 ) ; } VAR_4 . METHOD_3 ( ) ; VAR_4 . addAll ( VAR_3 ) ; VAR_5 . METHOD_4 ( ) ; if ( VAR_2 != null ) { VAR_6 . METHOD_3 ( ) ; VAR_6 . addAll ( VAR_2 ) ; VAR_7 . METHOD_4 ( ) ; } }', '[\'METHOD_1: setObjects\', \'METHOD_2: removeAll\', \'METHOD_3: clear\', \'METHOD_4: fireTableDataChanged\', \'VAR_1: all\', \'VAR_6: selectedModel.list\', \'VAR_5: availableModel\', \'VAR_3: available\', \'VAR_4: availableModel.list\', \'VAR_2: selected\', \'VAR_7: selectedModel\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/client/JPalette.java', 17, '165:9', '179:9', 98, 11 ), ( 5, 303, 0, '@Override\n    public void init(ServletConfig config) throws ServletException {\n    setRepositoryResolver(new RepositoryResolver<HttpServletRequest>(GitBlit.getRepositoriesFolder()));\n    setUploadPackFactory(new GitblitUploadPackFactory<HttpServletRequest>());\n    setReceivePackFactory(new GitblitReceivePackFactory<HttpServletRequest>());\n    super.init(config);\n    }', '[\'public\', \'void\', \'init\', \'(\', \'ServletConfig\', \'config\', \')\', \'throws\', \'ServletException\', \'{\', \'setRepositoryResolver\', \'(\', \'new\', \'RepositoryResolver\', \'<\', \'HttpServletRequest\', \'>\', \'(\', \'GitBlit\', \'.\', \'getRepositoriesFolder\', \'(\', \')\', \')\', \')\', \';\', \'setUploadPackFactory\', \'(\', \'new\', \'GitblitUploadPackFactory\', \'<\', \'HttpServletRequest\', \'>\', \'(\', \')\', \')\', \';\', \'setReceivePackFactory\', \'(\', \'new\', \'GitblitReceivePackFactory\', \'<\', \'HttpServletRequest\', \'>\', \'(\', \')\', \')\', \';\', \'super\', \'.\', \'init\', \'(\', \'config\', \')\', \';\', \'}\']', 'public void METHOD_1 ( TYPE_1 config ) throws TYPE_2 { METHOD_2 ( new TYPE_3 < TYPE_4 > ( TYPE_5 . METHOD_3 ( ) ) ) ; METHOD_4 ( new TYPE_6 < TYPE_4 > ( ) ) ; METHOD_5 ( new TYPE_7 < TYPE_4 > ( ) ) ; super . METHOD_1 ( config ) ; }', '[\'TYPE_2: ServletException\', \'TYPE_4: HttpServletRequest\', \'TYPE_7: GitblitReceivePackFactory\', \'TYPE_1: ServletConfig\', \'TYPE_6: GitblitUploadPackFactory\', \'TYPE_3: RepositoryResolver\', \'TYPE_5: GitBlit\', \'METHOD_1: init\', \'METHOD_3: getRepositoriesFolder\', \'METHOD_5: setReceivePackFactory\', \'METHOD_4: setUploadPackFactory\', \'METHOD_2: setRepositoryResolver\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/git/GitServlet.java', 1, '35:9', '41:9', 55, 6 ), ( 5, 304, 1, '@Override\n    public Map<String, Ref> filter(Map<String, Ref> refs) {\n    if (user.canAdmin()) {\n    // admins can see all refs\n    return refs;\n    }\n    // normal users can not clone gitblit refs\n    refs.remove(IssueUtils.GB_ISSUES);\n    refs.remove(PushLogUtils.GB_PUSHES);\n    return refs;\n    }', '[\'public\', \'Map\', \'<\', \'String\', \',\', \'Ref\', \'>\', \'filter\', \'(\', \'Map\', \'<\', \'String\', \',\', \'Ref\', \'>\', \'refs\', \')\', \'{\', \'if\', \'(\', \'user\', \'.\', \'canAdmin\', \'(\', \')\', \')\', \'{\', \'return\', \'refs\', \';\', \'}\', \'refs\', \'.\', \'remove\', \'(\', \'IssueUtils.GB_ISSUES\', \')\', \';\', \'refs\', \'.\', \'remove\', \'(\', \'PushLogUtils.GB_PUSHES\', \')\', \';\', \'return\', \'refs\', \';\', \'}\']', 'public Map < String , TYPE_1 > filter ( Map < String , TYPE_1 > VAR_1 ) { if ( VAR_2 . METHOD_1 ( ) ) { return VAR_1 ; } VAR_1 . remove ( VAR_3 ) ; VAR_1 . remove ( VAR_4 ) ; return VAR_1 ; }', '[\'TYPE_1: Ref\', \'METHOD_1: canAdmin\', \'VAR_1: refs\', \'VAR_4: PushLogUtils.GB_PUSHES\', \'VAR_3: IssueUtils.GB_ISSUES\', \'VAR_2: user\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/git/GitblitUploadPackFactory.java', 3, '85:17', '96:17', 56, 7 ), ( 5, 306, 0, '@Override\n    public Repository open(final X req, final String name)\n    throws RepositoryNotFoundException, ServiceNotEnabledException {\n    Repository repo = super.open(req, name);\n    // Set repository name for the pack factories\n    // We do this because the JGit API does not have a consistent way to\n    // retrieve the repository name from the pack factories or the hooks.\n    if (req instanceof HttpServletRequest) {\n    // http/https request\n    HttpServletRequest client = (HttpServletRequest) req;\n    client.setAttribute("gitblitRepositoryName", name);\n    } else if (req instanceof GitDaemonClient) {\n    // git request\n    GitDaemonClient client = (GitDaemonClient) req;\n    client.setRepositoryName(name);\n    }\n    return repo;\n    }', '[\'public\', \'Repository\', \'open\', \'(\', \'final\', \'X\', \'req\', \',\', \'final\', \'String\', \'name\', \')\', \'throws\', \'RepositoryNotFoundException\', \',\', \'ServiceNotEnabledException\', \'{\', \'Repository\', \'repo\', \'=\', \'super\', \'.\', \'open\', \'(\', \'req\', \',\', \'name\', \')\', \';\', \'if\', \'(\', \'req\', \'instanceof\', \'HttpServletRequest\', \')\', \'{\', \'HttpServletRequest\', \'client\', \'=\', \'(\', \'HttpServletRequest\', \')\', \'req\', \';\', \'client\', \'.\', \'setAttribute\', \'(\', \'"gitblitRepositoryName"\', \',\', \'name\', \')\', \';\', \'}\', \'else\', \'if\', \'(\', \'req\', \'instanceof\', \'GitDaemonClient\', \')\', \'{\', \'GitDaemonClient\', \'client\', \'=\', \'(\', \'GitDaemonClient\', \')\', \'req\', \';\', \'client\', \'.\', \'setRepositoryName\', \'(\', \'name\', \')\', \';\', \'}\', \'return\', \'repo\', \';\', \'}\']', 'public TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 , final String name ) throws TYPE_3 , TYPE_4 { TYPE_1 VAR_2 = super . METHOD_1 ( VAR_1 , name ) ; if ( VAR_1 instanceof TYPE_5 ) { TYPE_5 client = ( TYPE_5 ) VAR_1 ; client . METHOD_2 ( STRING_1 , name ) ; } else if ( VAR_1 instanceof TYPE_6 ) { TYPE_6 client = ( TYPE_6 ) VAR_1 ; client . METHOD_3 ( name ) ; } return VAR_2 ; }', '[\'TYPE_5: HttpServletRequest\', \'TYPE_1: Repository\', \'TYPE_4: ServiceNotEnabledException\', \'TYPE_2: X\', \'TYPE_3: RepositoryNotFoundException\', \'TYPE_6: GitDaemonClient\', \'METHOD_3: setRepositoryName\', \'METHOD_2: setAttribute\', \'METHOD_1: open\', \'VAR_2: repo\', \'VAR_1: req\', \'STRING_1: "gitblitRepositoryName"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/git/RepositoryResolver.java', 3, '52:9', '70:9', 88, 11 ), ( 5, 307, 0, '@Override\n    protected void execute(final GitDaemonClient dc, final Repository db)\n    throws IOException, ServiceNotEnabledException,\n    							ServiceNotAuthorizedException {\n    ReceivePack rp = receivePackFactory.create(dc, db);\n    InputStream in = dc.getInputStream();\n    OutputStream out = dc.getOutputStream();\n    rp.receive(in, out, null);\n    }', '[\'protected\', \'void\', \'execute\', \'(\', \'final\', \'GitDaemonClient\', \'dc\', \',\', \'final\', \'Repository\', \'db\', \')\', \'throws\', \'IOException\', \',\', \'ServiceNotEnabledException\', \',\', \'ServiceNotAuthorizedException\', \'{\', \'ReceivePack\', \'rp\', \'=\', \'receivePackFactory\', \'.\', \'create\', \'(\', \'dc\', \',\', \'db\', \')\', \';\', \'InputStream\', \'in\', \'=\', \'dc\', \'.\', \'getInputStream\', \'(\', \')\', \';\', \'OutputStream\', \'out\', \'=\', \'dc\', \'.\', \'getOutputStream\', \'(\', \')\', \';\', \'rp\', \'.\', \'receive\', \'(\', \'in\', \',\', \'out\', \',\', \'null\', \')\', \';\', \'}\']', 'protected void execute ( final TYPE_1 VAR_1 , final TYPE_2 VAR_2 ) throws IOException , TYPE_3 , TYPE_4 { TYPE_5 VAR_3 = VAR_4 . create ( VAR_1 , VAR_2 ) ; TYPE_6 in = VAR_1 . METHOD_1 ( ) ; TYPE_7 out = VAR_1 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( in , out , null ) ; }', '[\'TYPE_2: Repository\', \'TYPE_3: ServiceNotEnabledException\', \'TYPE_6: InputStream\', \'TYPE_7: OutputStream\', \'TYPE_5: ReceivePack\', \'TYPE_1: GitDaemonClient\', \'TYPE_4: ServiceNotAuthorizedException\', \'METHOD_3: receive\', \'METHOD_2: getOutputStream\', \'METHOD_1: getInputStream\', \'VAR_4: receivePackFactory\', \'VAR_2: db\', \'VAR_3: rp\', \'VAR_1: dc\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/git/GitDaemon.java', 16, '169:41', '177:41', 61, 8 ), ( 5, 307, 2, 'public String formatUrl(String servername, String repository) {\n    if (getPort() == 9418) {\n    // standard port\n    return MessageFormat.format("git://{0}/{1}", servername, repository);\n    } else {\n    // non-standard port\n    return MessageFormat.format("git://{0}:{1,number,0}/{2}", servername, getPort(), repository);\n    }\n    }', '[\'public\', \'String\', \'formatUrl\', \'(\', \'String\', \'servername\', \',\', \'String\', \'repository\', \')\', \'{\', \'if\', \'(\', \'getPort\', \'(\', \')\', \'==\', \'9418\', \')\', \'{\', \'return\', \'MessageFormat\', \'.\', \'format\', \'(\', \'"git:<DOUBLE_SLASH>{0}/{1}"\', \',\', \'servername\', \',\', \'repository\', \')\', \';\', \'}\', \'else\', \'{\', \'return\', \'MessageFormat\', \'.\', \'format\', \'(\', \'"git:<DOUBLE_SLASH>{0}:{1\', \',\', \'servername\', \',\', \'getPort\', \'(\', \')\', \',\', \'repository\', \')\', \';\', \'}\', \'}\']', 'public String METHOD_1 ( String VAR_1 , String VAR_2 ) { if ( METHOD_2 ( ) == INT_1 ) { return TYPE_1 . format ( STRING_1 , VAR_1 , VAR_2 ) ; } else { return TYPE_1 . format ( STRING_2 , VAR_1 , METHOD_2 ( ) , VAR_2 ) ; } }', '[\'TYPE_1: MessageFormat\', \'METHOD_1: formatUrl\', \'METHOD_2: getPort\', \'VAR_1: servername\', \'VAR_2: repository\', \'INT_1: 9418\', \'STRING_1: "git:<DOUBLE_SLASH>{0}/{1}"\', \'STRING_2: "git:<DOUBLE_SLASH>{0}:{1\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/git/GitDaemon.java', 16, '185:9', '193:9', 53, 5 ), ( 5, 307, 6, 'public void run() {\n    while (isRunning()) {\n    try {\n    startClient(listenSock.accept());\n    } catch (InterruptedIOException e) {\n    // Test again to see if we should keep accepting.\n    } catch (IOException e) {\n    break;\n    }\n    }\n    try {\n    listenSock.close();\n    } catch (IOException err) {\n    //\n    } finally {\n    acceptSocket = null;\n    acceptThread = null;\n    }\n    }', '[\'public\', \'void\', \'run\', \'(\', \')\', \'{\', \'while\', \'(\', \'isRunning\', \'(\', \')\', \')\', \'{\', \'try\', \'{\', \'startClient\', \'(\', \'listenSock\', \'.\', \'accept\', \'(\', \')\', \')\', \';\', \'}\', \'catch\', \'(\', \'InterruptedIOException\', \'e\', \')\', \'{\', \'}\', \'catch\', \'(\', \'IOException\', \'e\', \')\', \'{\', \'break\', \';\', \'}\', \'}\', \'try\', \'{\', \'listenSock\', \'.\', \'close\', \'(\', \')\', \';\', \'}\', \'catch\', \'(\', \'IOException\', \'err\', \')\', \'{\', \'}\', \'finally\', \'{\', \'acceptSocket\', \'=\', \'null\', \';\', \'acceptThread\', \'=\', \'null\', \';\', \'}\', \'}\']', 'public void METHOD_1 ( ) { while ( METHOD_2 ( ) ) { try { METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; } catch ( TYPE_1 e ) { } catch ( IOException e ) { break ; } } try { VAR_1 . close ( ) ; } catch ( IOException VAR_2 ) { } finally { VAR_3 = null ; VAR_4 = null ; } }', '[\'TYPE_1: InterruptedIOException\', \'METHOD_2: isRunning\', \'METHOD_1: run\', \'METHOD_3: startClient\', \'METHOD_4: accept\', \'VAR_3: acceptSocket\', \'VAR_4: acceptThread\', \'VAR_2: err\', \'VAR_1: listenSock\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/git/GitDaemon.java', 16, '231:25', '250:25', 67, 13 ), ( 5, 307, 8, 'public synchronized void stop() {\n    if (acceptThread != null) {\n    logger.info("Git Daemon stopping...");\n    run.set(false);\n    try {\n    // close the accept socket\n    // this throws a SocketException in the accept thread\n    acceptSocket.close();\n    } catch (IOException e1) {\n    }\n    try {\n    // join the accept thread\n    acceptThread.join();\n    logger.info("Git Daemon stopped.");\n    } catch (InterruptedException e) {\n    logger.error("Accept thread join interrupted", e);\n    }\n    }\n    }', '[\'public\', \'synchronized\', \'void\', \'stop\', \'(\', \')\', \'{\', \'if\', \'(\', \'acceptThread\', \'!=\', \'null\', \')\', \'{\', \'logger\', \'.\', \'info\', \'(\', \'"Git Daemon stopping..."\', \')\', \';\', \'run\', \'.\', \'set\', \'(\', \'false\', \')\', \';\', \'try\', \'{\', \'acceptSocket\', \'.\', \'close\', \'(\', \')\', \';\', \'}\', \'catch\', \'(\', \'IOException\', \'e1\', \')\', \'{\', \'}\', \'try\', \'{\', \'acceptThread\', \'.\', \'join\', \'(\', \')\', \';\', \'logger\', \'.\', \'info\', \'(\', \'"Git Daemon stopped."\', \')\', \';\', \'}\', \'catch\', \'(\', \'InterruptedException\', \'e\', \')\', \'{\', \'logger\', \'.\', \'error\', \'(\', \'"Accept thread join interrupted"\', \',\', \'e\', \')\', \';\', \'}\', \'}\', \'}\']', 'public synchronized void METHOD_1 ( ) { if ( VAR_1 != null ) { logger . info ( STRING_1 ) ; VAR_2 . set ( false ) ; try { VAR_3 . close ( ) ; } catch ( IOException VAR_4 ) { } try { VAR_1 . METHOD_2 ( ) ; logger . info ( STRING_2 ) ; } catch ( TYPE_1 e ) { logger . error ( STRING_3 , e ) ; } } }', '[\'TYPE_1: InterruptedException\', \'METHOD_1: stop\', \'METHOD_2: join\', \'VAR_1: acceptThread\', \'VAR_3: acceptSocket\', \'VAR_2: run\', \'VAR_4: e1\', \'STRING_1: "Git Daemon stopping..."\', \'STRING_2: "Git Daemon stopped."\', \'STRING_3: "Accept thread join interrupted"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/git/GitDaemon.java', 16, '263:9', '281:9', 78, 12 ), ( 5, 307, 10, 'public void run() {\n    try {\n    dc.execute(s);\n    } catch (ServiceNotEnabledException e) {\n    // Ignored. Client cannot use this repository.\n    } catch (ServiceNotAuthorizedException e) {\n    // Ignored. Client cannot use this repository.\n    } catch (IOException e) {\n    // Ignore unexpected IO exceptions from clients\n    } finally {\n    try {\n    s.getInputStream().close();\n    } catch (IOException e) {\n    // Ignore close exceptions\n    }\n    try {\n    s.getOutputStream().close();\n    } catch (IOException e) {\n    // Ignore close exceptions\n    }\n    }\n    }', '[\'public\', \'void\', \'run\', \'(\', \')\', \'{\', \'try\', \'{\', \'dc\', \'.\', \'execute\', \'(\', \'s\', \')\', \';\', \'}\', \'catch\', \'(\', \'ServiceNotEnabledException\', \'e\', \')\', \'{\', \'}\', \'catch\', \'(\', \'ServiceNotAuthorizedException\', \'e\', \')\', \'{\', \'}\', \'catch\', \'(\', \'IOException\', \'e\', \')\', \'{\', \'}\', \'finally\', \'{\', \'try\', \'{\', \'s\', \'.\', \'getInputStream\', \'(\', \')\', \'.\', \'close\', \'(\', \')\', \';\', \'}\', \'catch\', \'(\', \'IOException\', \'e\', \')\', \'{\', \'}\', \'try\', \'{\', \'s\', \'.\', \'getOutputStream\', \'(\', \')\', \'.\', \'close\', \'(\', \')\', \';\', \'}\', \'catch\', \'(\', \'IOException\', \'e\', \')\', \'{\', \'}\', \'}\', \'}\']', 'public void METHOD_1 ( ) { try { VAR_1 . execute ( s ) ; } catch ( TYPE_1 e ) { } catch ( TYPE_2 e ) { } catch ( IOException e ) { } finally { try { s . METHOD_2 ( ) . close ( ) ; } catch ( IOException e ) { } try { s . METHOD_3 ( ) . close ( ) ; } catch ( IOException e ) { } } }', '[\'TYPE_1: ServiceNotEnabledException\', \'TYPE_2: ServiceNotAuthorizedException\', \'METHOD_1: run\', \'METHOD_3: getOutputStream\', \'METHOD_2: getInputStream\', \'VAR_1: dc\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/git/GitDaemon.java', 16, '291:25', '312:25', 81, 13 ), ( 5, 307, 11, 'synchronized GitDaemonService matchService(final String cmd) {\n    for (final GitDaemonService d : services) {\n    if (d.handles(cmd))\n    return d;\n    }\n    return null;\n    }', '[\'synchronized\', \'GitDaemonService\', \'matchService\', \'(\', \'final\', \'String\', \'cmd\', \')\', \'{\', \'for\', \'(\', \'final\', \'GitDaemonService\', \'d\', \':\', \'services\', \')\', \'{\', \'if\', \'(\', \'d\', \'.\', \'handles\', \'(\', \'cmd\', \')\', \')\', \'return\', \'d\', \';\', \'}\', \'return\', \'null\', \';\', \'}\']', 'synchronized TYPE_1 METHOD_1 ( final String VAR_1 ) { for ( final TYPE_1 d : VAR_2 ) { if ( d . METHOD_2 ( VAR_1 ) ) return d ; } return null ; }', '[\'TYPE_1: GitDaemonService\', \'METHOD_2: handles\', \'METHOD_1: matchService\', \'VAR_1: cmd\', \'VAR_2: services\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/git/GitDaemon.java', 16, '316:9', '322:9', 35, 5 ), ( 5, 307, 12, 'Repository openRepository(GitDaemonClient client, String name)\n    throws ServiceMayNotContinueException {\n    // Assume any attempt to use \\ was by a Windows client\n    // and correct to the more typical / used in Git URIs.\n    //\n    name = name.replace(\'\\\\\', \'/\');\n    // git://thishost/path should always be name="/path" here\n    //\n    if (!name.startsWith("/")) //$NON-NLS-1$\n    return null;\n    try {\n    return repositoryResolver.open(client, name.substring(1));\n    } catch (RepositoryNotFoundException e) {\n    // null signals it "wasn\'t found", which is all that is suitable\n    // for the remote client to know.\n    return null;\n    } catch (ServiceNotEnabledException e) {\n    // null signals it "wasn\'t found", which is all that is suitable\n    // for the remote client to know.\n    return null;\n    }\n    }', '[\'Repository\', \'openRepository\', \'(\', \'GitDaemonClient\', \'client\', \',\', \'String\', \'name\', \')\', \'throws\', \'ServiceMayNotContinueException\', \'{\', \'name\', \'=\', \'name\', \'.\', \'replace\', \'(\', "\'\\\\\\\\\'", \',\', "\'/\'", \')\', \';\', \'if\', \'(\', \'!\', \'name\', \'.\', \'startsWith\', \'(\', \'"/"\', \')\', \')\', \'return\', \'null\', \';\', \'try\', \'{\', \'return\', \'repositoryResolver\', \'.\', \'open\', \'(\', \'client\', \',\', \'name\', \'.\', \'substring\', \'(\', \'1\', \')\', \')\', \';\', \'}\', \'catch\', \'(\', \'RepositoryNotFoundException\', \'e\', \')\', \'{\', \'return\', \'null\', \';\', \'}\', \'catch\', \'(\', \'ServiceNotEnabledException\', \'e\', \')\', \'{\', \'return\', \'null\', \';\', \'}\', \'}\']', 'TYPE_1 METHOD_1 ( TYPE_2 client , String name ) throws TYPE_3 { name = name . METHOD_2 ( CHAR_1 , CHAR_2 ) ; if ( ! name . startsWith ( STRING_1 ) ) return null ; try { return VAR_1 . METHOD_3 ( client , name . substring ( 1 ) ) ; } catch ( TYPE_4 e ) { return null ; } catch ( TYPE_5 e ) { return null ; } }', '[\'TYPE_1: Repository\', \'TYPE_5: ServiceNotEnabledException\', \'TYPE_3: ServiceMayNotContinueException\', \'TYPE_4: RepositoryNotFoundException\', \'TYPE_2: GitDaemonClient\', \'METHOD_1: openRepository\', \'METHOD_2: replace\', \'METHOD_3: open\', \'VAR_1: repositoryResolver\', "CHAR_1: \'\\\\\\\\\'", "CHAR_2: \'/\'", \'STRING_1: "/"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/git/GitDaemon.java', 16, '324:9', '347:9', 85, 11 ), ( 5, 308, 3, 'public ReceiveHook() {\n    groovyDir = GitBlit.getGroovyScriptsFolder();\n    try {\n    // set Grape root\n    File grapeRoot = GitBlit.getFileOrFolder(Keys.groovy.grapeFolder, "${baseFolder}/groovy/grape").getAbsoluteFile();\n    grapeRoot.mkdirs();\n    System.setProperty("grape.root", grapeRoot.getAbsolutePath());\n    gse = new GroovyScriptEngine(groovyDir.getAbsolutePath());\n    } catch (IOException e) {\n    //throw new ServletException("Failed to instantiate Groovy Script Engine!", e);\n    }\n    }', '[\'public\', \'ReceiveHook\', \'(\', \')\', \'{\', \'groovyDir\', \'=\', \'GitBlit\', \'.\', \'getGroovyScriptsFolder\', \'(\', \')\', \';\', \'try\', \'{\', \'File\', \'grapeRoot\', \'=\', \'GitBlit\', \'.\', \'getFileOrFolder\', \'(\', \'Keys.groovy.grapeFolder\', \',\', \'"${baseFolder}/groovy/grape"\', \')\', \'.\', \'getAbsoluteFile\', \'(\', \')\', \';\', \'grapeRoot\', \'.\', \'mkdirs\', \'(\', \')\', \';\', \'System\', \'.\', \'setProperty\', \'(\', \'"grape.root"\', \',\', \'grapeRoot\', \'.\', \'getAbsolutePath\', \'(\', \')\', \')\', \';\', \'gse\', \'=\', \'new\', \'GroovyScriptEngine\', \'(\', \'groovyDir\', \'.\', \'getAbsolutePath\', \'(\', \')\', \')\', \';\', \'}\', \'catch\', \'(\', \'IOException\', \'e\', \')\', \'{\', \'}\', \'}\']', 'public VAR_1 ( ) { VAR_2 = TYPE_1 . METHOD_1 ( ) ; try { File VAR_3 = TYPE_1 . METHOD_2 ( VAR_4 , STRING_1 ) . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ) ; System . METHOD_5 ( STRING_2 , VAR_3 . METHOD_6 ( ) ) ; VAR_5 = new TYPE_2 ( VAR_2 . METHOD_6 ( ) ) ; } catch ( IOException e ) { } }', '[\'TYPE_2: GroovyScriptEngine\', \'TYPE_1: GitBlit\', \'METHOD_6: getAbsolutePath\', \'METHOD_4: mkdirs\', \'METHOD_5: setProperty\', \'METHOD_3: getAbsoluteFile\', \'METHOD_2: getFileOrFolder\', \'METHOD_1: getGroovyScriptsFolder\', \'VAR_1: ReceiveHook\', \'VAR_4: Keys.groovy.grapeFolder\', \'VAR_5: gse\', \'VAR_2: groovyDir\', \'VAR_3: grapeRoot\', \'STRING_1: "${baseFolder}/groovy/grape"\', \'STRING_2: "grape.root"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/git/ReceiveHook.java', 4, '72:9', '84:9', 71, 8 ), ( 5, 310, 0, 'public static String getVersion() {\n    String v = Constants.class.getPackage().getImplementationVersion();\n    if (v == null) {\n    return "0.0.0-SNAPSHOT";\n    }\n    return v;\n    }', '[\'public\', \'static\', \'String\', \'getVersion\', \'(\', \')\', \'{\', \'String\', \'v\', \'=\', \'Constants.\', \'class\', \'.\', \'getPackage\', \'(\', \')\', \'.\', \'getImplementationVersion\', \'(\', \')\', \';\', \'if\', \'(\', \'v\', \'==\', \'null\', \')\', \'{\', \'return\', \'"0.0.0-SNAPSHOT"\', \';\', \'}\', \'return\', \'v\', \';\', \'}\']', 'public static String METHOD_1 ( ) { String v = VAR_1 class . METHOD_2 ( ) . METHOD_3 ( ) ; if ( v == null ) { return STRING_1 ; } return v ; }', '[\'METHOD_1: getVersion\', \'METHOD_2: getPackage\', \'METHOD_3: getImplementationVersion\', \'VAR_1: Constants.\', \'STRING_1: "0.0.0-SNAPSHOT"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/Constants.java', 40, '91:9', '97:9', 34, 5 ), ( 5, 310, 4, 'public static AccessRestrictionType fromName(String name) {\n    for (AccessRestrictionType type : values()) {\n    if (type.name().equalsIgnoreCase(name)) {\n    return type;\n    }\n    }\n    return NONE;\n    }', '[\'public\', \'static\', \'AccessRestrictionType\', \'fromName\', \'(\', \'String\', \'name\', \')\', \'{\', \'for\', \'(\', \'AccessRestrictionType\', \'type\', \':\', \'values\', \'(\', \')\', \')\', \'{\', \'if\', \'(\', \'type\', \'.\', \'name\', \'(\', \')\', \'.\', \'equalsIgnoreCase\', \'(\', \'name\', \')\', \')\', \'{\', \'return\', \'type\', \';\', \'}\', \'}\', \'return\', \'NONE\', \';\', \'}\']', 'public static TYPE_1 METHOD_1 ( String name ) { for ( TYPE_1 type : values ( ) ) { if ( type . name ( ) . METHOD_2 ( name ) ) { return type ; } } return VAR_1 ; }', '[\'TYPE_1: AccessRestrictionType\', \'METHOD_1: fromName\', \'METHOD_2: equalsIgnoreCase\', \'VAR_1: NONE\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/Constants.java', 40, '132:17', '139:17', 40, 5 ), ( 5, 310, 8, 'public boolean isValidPermission(AccessPermission permission) {\n    switch (this) {\n    case VIEW:\n    // VIEW restriction\n    // all access permissions are valid\n    return true;\n    case CLONE:\n    // CLONE restriction\n    // only CLONE or greater access permissions are valid\n    return permission.atLeast(AccessPermission.CLONE);\n    case PUSH:\n    // PUSH restriction\n    // only PUSH or greater access permissions are valid \n    return permission.atLeast(AccessPermission.PUSH);\n    case NONE:\n    // NO access restriction\n    // all access permissions are invalid\n    return false;\n    }\n    return false;\n    }', '[\'public\', \'boolean\', \'isValidPermission\', \'(\', \'AccessPermission\', \'permission\', \')\', \'{\', \'switch\', \'(\', \'this\', \')\', \'{\', \'case\', \'VIEW\', \':\', \'return\', \'true\', \';\', \'case\', \'CLONE\', \':\', \'return\', \'permission\', \'.\', \'atLeast\', \'(\', \'AccessPermission.CLONE\', \')\', \';\', \'case\', \'PUSH\', \':\', \'return\', \'permission\', \'.\', \'atLeast\', \'(\', \'AccessPermission.PUSH\', \')\', \';\', \'case\', \'NONE\', \':\', \'return\', \'false\', \';\', \'}\', \'return\', \'false\', \';\', \'}\']', 'public boolean METHOD_1 ( TYPE_1 VAR_1 ) { switch ( this ) { case VAR_2 : return true ; case VAR_3 : return VAR_1 . METHOD_2 ( VAR_4 ) ; case VAR_5 : return VAR_1 . METHOD_2 ( VAR_6 ) ; case VAR_7 : return false ; } return false ; }', '[\'TYPE_1: AccessPermission\', \'METHOD_1: isValidPermission\', \'METHOD_2: atLeast\', \'VAR_4: AccessPermission.CLONE\', \'VAR_6: AccessPermission.PUSH\', \'VAR_1: permission\', \'VAR_7: NONE\', \'VAR_2: VIEW\', \'VAR_3: CLONE\', \'VAR_5: PUSH\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/Constants.java', 40, '153:17', '173:17', 64, 11 ), ( 5, 310, 9, 'public static AuthorizationControl fromName(String name) {\n    for (AuthorizationControl type : values()) {\n    if (type.name().equalsIgnoreCase(name)) {\n    return type;\n    }\n    }\n    return NAMED;\n    }', '[\'public\', \'static\', \'AuthorizationControl\', \'fromName\', \'(\', \'String\', \'name\', \')\', \'{\', \'for\', \'(\', \'AuthorizationControl\', \'type\', \':\', \'values\', \'(\', \')\', \')\', \'{\', \'if\', \'(\', \'type\', \'.\', \'name\', \'(\', \')\', \'.\', \'equalsIgnoreCase\', \'(\', \'name\', \')\', \')\', \'{\', \'return\', \'type\', \';\', \'}\', \'}\', \'return\', \'NAMED\', \';\', \'}\']', 'public static TYPE_1 METHOD_1 ( String name ) { for ( TYPE_1 type : values ( ) ) { if ( type . name ( ) . METHOD_2 ( name ) ) { return type ; } } return VAR_1 ; }', '[\'TYPE_1: AuthorizationControl\', \'METHOD_1: fromName\', \'METHOD_2: equalsIgnoreCase\', \'VAR_1: NAMED\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/Constants.java', 40, '183:17', '190:17', 40, 5 ), ( 5, 310, 11, 'public static FederationToken fromName(String name) {\n    for (FederationToken type : values()) {\n    if (type.name().equalsIgnoreCase(name)) {\n    return type;\n    }\n    }\n    return REPOSITORIES;\n    }', '[\'public\', \'static\', \'FederationToken\', \'fromName\', \'(\', \'String\', \'name\', \')\', \'{\', \'for\', \'(\', \'FederationToken\', \'type\', \':\', \'values\', \'(\', \')\', \')\', \'{\', \'if\', \'(\', \'type\', \'.\', \'name\', \'(\', \')\', \'.\', \'equalsIgnoreCase\', \'(\', \'name\', \')\', \')\', \'{\', \'return\', \'type\', \';\', \'}\', \'}\', \'return\', \'REPOSITORIES\', \';\', \'}\']', 'public static TYPE_1 METHOD_1 ( String name ) { for ( TYPE_1 type : values ( ) ) { if ( type . name ( ) . METHOD_2 ( name ) ) { return type ; } } return VAR_1 ; }', '[\'TYPE_1: FederationToken\', \'METHOD_1: fromName\', \'METHOD_2: equalsIgnoreCase\', \'VAR_1: REPOSITORIES\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/Constants.java', 40, '204:17', '211:17', 40, 5 ), ( 5, 310, 13, 'public static FederationRequest fromName(String name) {\n    for (FederationRequest type : values()) {\n    if (type.name().equalsIgnoreCase(name)) {\n    return type;\n    }\n    }\n    return PULL_REPOSITORIES;\n    }', '[\'public\', \'static\', \'FederationRequest\', \'fromName\', \'(\', \'String\', \'name\', \')\', \'{\', \'for\', \'(\', \'FederationRequest\', \'type\', \':\', \'values\', \'(\', \')\', \')\', \'{\', \'if\', \'(\', \'type\', \'.\', \'name\', \'(\', \')\', \'.\', \'equalsIgnoreCase\', \'(\', \'name\', \')\', \')\', \'{\', \'return\', \'type\', \';\', \'}\', \'}\', \'return\', \'PULL_REPOSITORIES\', \';\', \'}\']', 'public static TYPE_1 METHOD_1 ( String name ) { for ( TYPE_1 type : values ( ) ) { if ( type . name ( ) . METHOD_2 ( name ) ) { return type ; } } return VAR_1 ; }', '[\'TYPE_1: FederationRequest\', \'METHOD_1: fromName\', \'METHOD_2: equalsIgnoreCase\', \'VAR_1: PULL_REPOSITORIES\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/Constants.java', 40, '224:17', '231:17', 40, 5 ), ( 5, 310, 15, 'public static FederationPullStatus fromName(String name) {\n    for (FederationPullStatus type : values()) {\n    if (type.name().equalsIgnoreCase(name)) {\n    return type;\n    }\n    }\n    return PENDING;\n    }', '[\'public\', \'static\', \'FederationPullStatus\', \'fromName\', \'(\', \'String\', \'name\', \')\', \'{\', \'for\', \'(\', \'FederationPullStatus\', \'type\', \':\', \'values\', \'(\', \')\', \')\', \'{\', \'if\', \'(\', \'type\', \'.\', \'name\', \'(\', \')\', \'.\', \'equalsIgnoreCase\', \'(\', \'name\', \')\', \')\', \'{\', \'return\', \'type\', \';\', \'}\', \'}\', \'return\', \'PENDING\', \';\', \'}\']', 'public static TYPE_1 METHOD_1 ( String name ) { for ( TYPE_1 type : values ( ) ) { if ( type . name ( ) . METHOD_2 ( name ) ) { return type ; } } return VAR_1 ; }', '[\'TYPE_1: FederationPullStatus\', \'METHOD_1: fromName\', \'METHOD_2: equalsIgnoreCase\', \'VAR_1: PENDING\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/Constants.java', 40, '244:17', '251:17', 40, 5 ), ( 5, 310, 17, 'public static FederationStrategy fromName(String name) {\n    for (FederationStrategy type : values()) {\n    if (type.name().equalsIgnoreCase(name)) {\n    return type;\n    }\n    }\n    return FEDERATE_THIS;\n    }', '[\'public\', \'static\', \'FederationStrategy\', \'fromName\', \'(\', \'String\', \'name\', \')\', \'{\', \'for\', \'(\', \'FederationStrategy\', \'type\', \':\', \'values\', \'(\', \')\', \')\', \'{\', \'if\', \'(\', \'type\', \'.\', \'name\', \'(\', \')\', \'.\', \'equalsIgnoreCase\', \'(\', \'name\', \')\', \')\', \'{\', \'return\', \'type\', \';\', \'}\', \'}\', \'return\', \'FEDERATE_THIS\', \';\', \'}\']', 'public static TYPE_1 METHOD_1 ( String name ) { for ( TYPE_1 type : values ( ) ) { if ( type . name ( ) . METHOD_2 ( name ) ) { return type ; } } return VAR_1 ; }', '[\'TYPE_1: FederationStrategy\', \'METHOD_1: fromName\', \'METHOD_2: equalsIgnoreCase\', \'VAR_1: FEDERATE_THIS\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/Constants.java', 40, '265:17', '272:17', 40, 5 ), ( 5, 310, 22, 'public static RpcRequest fromName(String name) {\n    for (RpcRequest type : values()) {\n    if (type.name().equalsIgnoreCase(name)) {\n    return type;\n    }\n    }\n    return null;\n    }', '[\'public\', \'static\', \'RpcRequest\', \'fromName\', \'(\', \'String\', \'name\', \')\', \'{\', \'for\', \'(\', \'RpcRequest\', \'type\', \':\', \'values\', \'(\', \')\', \')\', \'{\', \'if\', \'(\', \'type\', \'.\', \'name\', \'(\', \')\', \'.\', \'equalsIgnoreCase\', \'(\', \'name\', \')\', \')\', \'{\', \'return\', \'type\', \';\', \'}\', \'}\', \'return\', \'null\', \';\', \'}\']', 'public static TYPE_1 METHOD_1 ( String name ) { for ( TYPE_1 type : values ( ) ) { if ( type . name ( ) . METHOD_2 ( name ) ) { return type ; } } return null ; }', '[\'TYPE_1: RpcRequest\', \'METHOD_1: fromName\', \'METHOD_2: equalsIgnoreCase\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/Constants.java', 40, '317:17', '324:17', 40, 5 ), ( 5, 310, 25, 'public static SearchType forName(String name) {\n    for (SearchType type : values()) {\n    if (type.name().equalsIgnoreCase(name)) {\n    return type;\n    }\n    }\n    return COMMIT;\n    }', '[\'public\', \'static\', \'SearchType\', \'forName\', \'(\', \'String\', \'name\', \')\', \'{\', \'for\', \'(\', \'SearchType\', \'type\', \':\', \'values\', \'(\', \')\', \')\', \'{\', \'if\', \'(\', \'type\', \'.\', \'name\', \'(\', \')\', \'.\', \'equalsIgnoreCase\', \'(\', \'name\', \')\', \')\', \'{\', \'return\', \'type\', \';\', \'}\', \'}\', \'return\', \'COMMIT\', \';\', \'}\']', 'public static TYPE_1 METHOD_1 ( String name ) { for ( TYPE_1 type : values ( ) ) { if ( type . name ( ) . METHOD_2 ( name ) ) { return type ; } } return VAR_1 ; }', '[\'TYPE_1: SearchType\', \'METHOD_1: forName\', \'METHOD_2: equalsIgnoreCase\', \'VAR_1: COMMIT\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/Constants.java', 40, '342:17', '349:17', 40, 5 ), ( 5, 310, 27, 'static SearchObjectType fromName(String name) {\n    for (SearchObjectType value : values()) {\n    if (value.name().equals(name)) {\n    return value;\n    }\n    }\n    return null;\n    }', '[\'static\', \'SearchObjectType\', \'fromName\', \'(\', \'String\', \'name\', \')\', \'{\', \'for\', \'(\', \'SearchObjectType\', \'value\', \':\', \'values\', \'(\', \')\', \')\', \'{\', \'if\', \'(\', \'value\', \'.\', \'name\', \'(\', \')\', \'.\', \'equals\', \'(\', \'name\', \')\', \')\', \'{\', \'return\', \'value\', \';\', \'}\', \'}\', \'return\', \'null\', \';\', \'}\']', 'static TYPE_1 METHOD_1 ( String name ) { for ( TYPE_1 value : values ( ) ) { if ( value . name ( ) . equals ( name ) ) { return value ; } } return null ; }', '[\'TYPE_1: SearchObjectType\', \'METHOD_1: fromName\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/Constants.java', 40, '363:17', '370:17', 39, 5 ), ( 5, 310, 33, 'public static AccessPermission permissionFromRole(String role) {\n    String [] fields = role.split(":", 2);\n    if (fields.length == 1) {\n    // legacy/undefined assume full permissions\n    return AccessPermission.LEGACY;\n    } else {\n    // code:repository\n    return AccessPermission.fromCode(fields[0]);\n    }\n    }', '[\'public\', \'static\', \'AccessPermission\', \'permissionFromRole\', \'(\', \'String\', \'role\', \')\', \'{\', \'String\', \'[\', \']\', \'fields\', \'=\', \'role\', \'.\', \'split\', \'(\', \'":"\', \',\', \'2\', \')\', \';\', \'if\', \'(\', \'fields\', \'.\', \'length\', \'==\', \'1\', \')\', \'{\', \'return\', \'AccessPermission.LEGACY\', \';\', \'}\', \'else\', \'{\', \'return\', \'AccessPermission\', \'.\', \'fromCode\', \'(\', \'fields\', \'[\', \'0\', \']\', \')\', \';\', \'}\', \'}\']', 'public static TYPE_1 METHOD_1 ( String VAR_1 ) { String [ ] VAR_2 = VAR_1 . METHOD_2 ( STRING_1 , 2 ) ; if ( VAR_2 . length == 1 ) { return VAR_3 ; } else { return TYPE_1 . METHOD_3 ( VAR_2 [ 0 ] ) ; } }', '[\'TYPE_1: AccessPermission\', \'METHOD_2: split\', \'METHOD_1: permissionFromRole\', \'METHOD_3: fromCode\', \'VAR_1: role\', \'VAR_2: fields\', \'VAR_3: AccessPermission.LEGACY\', \'STRING_1: ":"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/Constants.java', 40, '410:17', '419:17', 54, 6 ), ( 5, 310, 34, 'public static String repositoryFromRole(String role) {\n    String [] fields = role.split(":", 2);\n    if (fields.length == 1) {\n    // legacy/undefined assume full permissions\n    return role;\n    } else {\n    // code:repository\n    return fields[1];\n    }\n    }', '[\'public\', \'static\', \'String\', \'repositoryFromRole\', \'(\', \'String\', \'role\', \')\', \'{\', \'String\', \'[\', \']\', \'fields\', \'=\', \'role\', \'.\', \'split\', \'(\', \'":"\', \',\', \'2\', \')\', \';\', \'if\', \'(\', \'fields\', \'.\', \'length\', \'==\', \'1\', \')\', \'{\', \'return\', \'role\', \';\', \'}\', \'else\', \'{\', \'return\', \'fields\', \'[\', \'1\', \']\', \';\', \'}\', \'}\']', 'public static String METHOD_1 ( String VAR_1 ) { String [ ] VAR_2 = VAR_1 . METHOD_2 ( STRING_1 , 2 ) ; if ( VAR_2 . length == 1 ) { return VAR_1 ; } else { return VAR_2 [ 1 ] ; } }', '[\'METHOD_2: split\', \'METHOD_1: repositoryFromRole\', \'VAR_1: role\', \'VAR_2: fields\', \'STRING_1: ":"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/Constants.java', 40, '421:17', '430:17', 47, 6 ), ( 5, 310, 35, 'public static AccessPermission fromCode(String code) {\n    for (AccessPermission perm : values()) {\n    if (perm.code.equalsIgnoreCase(code)) {\n    return perm;\n    }\n    }\n    return AccessPermission.NONE;\n    }', '[\'public\', \'static\', \'AccessPermission\', \'fromCode\', \'(\', \'String\', \'code\', \')\', \'{\', \'for\', \'(\', \'AccessPermission\', \'perm\', \':\', \'values\', \'(\', \')\', \')\', \'{\', \'if\', \'(\', \'perm.code\', \'.\', \'equalsIgnoreCase\', \'(\', \'code\', \')\', \')\', \'{\', \'return\', \'perm\', \';\', \'}\', \'}\', \'return\', \'AccessPermission.NONE\', \';\', \'}\']', 'public static TYPE_1 METHOD_1 ( String code ) { for ( TYPE_1 VAR_1 : values ( ) ) { if ( VAR_2 . METHOD_2 ( code ) ) { return VAR_1 ; } } return VAR_3 ; }', '[\'TYPE_1: AccessPermission\', \'METHOD_2: equalsIgnoreCase\', \'METHOD_1: fromCode\', \'VAR_1: perm\', \'VAR_3: AccessPermission.NONE\', \'VAR_2: perm.code\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/Constants.java', 40, '432:17', '439:17', 41, 5 ), ( 5, 312, 1, 'protected String getFullUrl(HttpServletRequest httpRequest) {\n    String servletUrl = httpRequest.getContextPath() + httpRequest.getServletPath();\n    String url = httpRequest.getRequestURI().substring(servletUrl.length());\n    String params = httpRequest.getQueryString();\n    if (url.length() > 0 && url.charAt(0) == \'/\') {\n    url = url.substring(1);\n    }\n    String fullUrl = url + (StringUtils.isEmpty(params) ? "" : ("?" + params));\n    return fullUrl;\n    }', '[\'protected\', \'String\', \'getFullUrl\', \'(\', \'HttpServletRequest\', \'httpRequest\', \')\', \'{\', \'String\', \'servletUrl\', \'=\', \'httpRequest\', \'.\', \'getContextPath\', \'(\', \')\', \'+\', \'httpRequest\', \'.\', \'getServletPath\', \'(\', \')\', \';\', \'String\', \'url\', \'=\', \'httpRequest\', \'.\', \'getRequestURI\', \'(\', \')\', \'.\', \'substring\', \'(\', \'servletUrl\', \'.\', \'length\', \'(\', \')\', \')\', \';\', \'String\', \'params\', \'=\', \'httpRequest\', \'.\', \'getQueryString\', \'(\', \')\', \';\', \'if\', \'(\', \'url\', \'.\', \'length\', \'(\', \')\', \'>\', \'0\', \'&&\', \'url\', \'.\', \'charAt\', \'(\', \'0\', \')\', \'==\', "\'/\'", \')\', \'{\', \'url\', \'=\', \'url\', \'.\', \'substring\', \'(\', \'1\', \')\', \';\', \'}\', \'String\', \'fullUrl\', \'=\', \'url\', \'+\', \'(\', \'StringUtils\', \'.\', \'isEmpty\', \'(\', \'params\', \')\', \'?\', \'""\', \':\', \'(\', \'"?"\', \'+\', \'params\', \')\', \')\', \';\', \'return\', \'fullUrl\', \';\', \'}\']', 'protected String METHOD_1 ( TYPE_1 VAR_1 ) { String VAR_2 = VAR_1 . METHOD_2 ( ) + VAR_1 . METHOD_3 ( ) ; String url = VAR_1 . METHOD_4 ( ) . substring ( VAR_2 . length ( ) ) ; String params = VAR_1 . METHOD_5 ( ) ; if ( url . length ( ) > 0 && url . METHOD_6 ( 0 ) == CHAR_1 ) { url = url . substring ( 1 ) ; } String VAR_3 = url + ( StringUtils . isEmpty ( params ) ? STRING_1 : ( STRING_2 + params ) ) ; return VAR_3 ; }', '[\'TYPE_1: HttpServletRequest\', \'METHOD_4: getRequestURI\', \'METHOD_3: getServletPath\', \'METHOD_5: getQueryString\', \'METHOD_2: getContextPath\', \'METHOD_1: getFullUrl\', \'METHOD_6: charAt\', \'VAR_3: fullUrl\', \'VAR_2: servletUrl\', \'VAR_1: httpRequest\', "CHAR_1: \'/\'", \'STRING_1: ""\', \'STRING_2: "?"\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/AuthenticationFilter.java', 12, '84:9', '93:9', 100, 8 ), ( 5, 312, 9, '@Override\n    public boolean isUserInRole(String role) {\n    if (role.equals(Constants.ADMIN_ROLE)) {\n    return user.canAdmin();\n    }\n    // Gitblit does not currently use actual roles in the traditional\n    // servlet container sense.  That is the reason this is marked\n    // deprecated, but I may want to revisit this.\n    return user.canAccessRepository(role);\n    }', '[\'public\', \'boolean\', \'isUserInRole\', \'(\', \'String\', \'role\', \')\', \'{\', \'if\', \'(\', \'role\', \'.\', \'equals\', \'(\', \'Constants.ADMIN_ROLE\', \')\', \')\', \'{\', \'return\', \'user\', \'.\', \'canAdmin\', \'(\', \')\', \';\', \'}\', \'return\', \'user\', \'.\', \'canAccessRepository\', \'(\', \'role\', \')\', \';\', \'}\']', 'public boolean METHOD_1 ( String VAR_1 ) { if ( VAR_1 . equals ( VAR_2 ) ) { return VAR_3 . METHOD_2 ( ) ; } return VAR_3 . METHOD_3 ( VAR_1 ) ; }', '[\'METHOD_2: canAdmin\', \'METHOD_3: canAccessRepository\', \'METHOD_1: isUserInRole\', \'VAR_2: Constants.ADMIN_ROLE\', \'VAR_1: role\', \'VAR_3: user\']', '1234-/gitblit', 'https://github.com/1234-/gitblit', '1fbc2c8d8db41975c35bdb8fdc58e8913a968b81', '/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/cloning_folder/gitblit/src/main/java/com/gitblit/AuthenticationFilter.java', 12, '171:17', '180:17', 41, 5 ) ;

