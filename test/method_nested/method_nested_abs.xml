<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="Java" filename="/Users/matteo.ciniselli/Desktop/Matteo/Github_mciniselli/github_manager/test/method_nested/method_nested_abs.java" pos:tabs="8"><class pos:start="1:1" pos:end="1:272"><specifier pos:start="1:1" pos:end="1:6">public</specifier> class <name pos:start="1:14" pos:end="1:18">VAR_1</name> <block pos:start="1:20" pos:end="1:272">{ <interface pos:start="1:22" pos:end="1:61">interface <name pos:start="1:32" pos:end="1:37">TYPE_1</name> <block pos:start="1:39" pos:end="1:61">{ <function_decl pos:start="1:41" pos:end="1:59"><type pos:start="1:41" pos:end="1:44"><name pos:start="1:41" pos:end="1:44">void</name></type> <name pos:start="1:46" pos:end="1:53">METHOD_1</name> <parameter_list pos:start="1:55" pos:end="1:57">( )</parameter_list> ;</function_decl> }</block></interface> <function pos:start="1:63" pos:end="1:203"><type pos:start="1:63" pos:end="1:73"><specifier pos:start="1:63" pos:end="1:68">static</specifier> <name pos:start="1:70" pos:end="1:73">void</name></type> <name pos:start="1:75" pos:end="1:82">METHOD_2</name> <parameter_list pos:start="1:84" pos:end="1:86">( )</parameter_list> <block pos:start="1:88" pos:end="1:203">{<block_content pos:start="1:90" pos:end="1:201"> <decl_stmt pos:start="1:90" pos:end="1:182"><decl pos:start="1:90" pos:end="1:180"><type pos:start="1:90" pos:end="1:95"><name pos:start="1:90" pos:end="1:95">TYPE_1</name></type> <name pos:start="1:97" pos:end="1:97">r</name> <init pos:start="1:99" pos:end="1:180">= <expr pos:start="1:101" pos:end="1:180"><operator pos:start="1:101" pos:end="1:103">new</operator> <class pos:start="1:105" pos:end="1:180"><super pos:start="1:105" pos:end="1:110"><name pos:start="1:105" pos:end="1:110">TYPE_1</name></super> <argument_list pos:start="1:112" pos:end="1:114">( )</argument_list> <block pos:start="1:116" pos:end="1:180">{ <function pos:start="1:118" pos:end="1:176"><type pos:start="1:118" pos:end="1:128"><specifier pos:start="1:118" pos:end="1:123">public</specifier> <name pos:start="1:125" pos:end="1:128">void</name></type> <name pos:start="1:130" pos:end="1:137">METHOD_1</name> <parameter_list pos:start="1:139" pos:end="1:141">( )</parameter_list> <block pos:start="1:143" pos:end="1:176">{<block_content pos:start="1:145" pos:end="1:174"> <expr_stmt pos:start="1:145" pos:end="1:174"><expr pos:start="1:145" pos:end="1:172"><call pos:start="1:145" pos:end="1:172"><name pos:start="1:145" pos:end="1:159"><name pos:start="1:145" pos:end="1:149">VAR_2</name> <operator pos:start="1:151" pos:end="1:151">.</operator> <name pos:start="1:153" pos:end="1:159">println</name></name> <argument_list pos:start="1:161" pos:end="1:172">( <argument pos:start="1:163" pos:end="1:170"><expr pos:start="1:163" pos:end="1:170"><name pos:start="1:163" pos:end="1:170">STRING_1</name></expr></argument> )</argument_list></call></expr> ;</expr_stmt> </block_content>}</block></function> <empty_stmt pos:start="1:178" pos:end="1:178">;</empty_stmt> }</block></class></expr></init></decl> ;</decl_stmt> <expr_stmt pos:start="1:184" pos:end="1:201"><expr pos:start="1:184" pos:end="1:199"><call pos:start="1:184" pos:end="1:199"><name pos:start="1:184" pos:end="1:195"><name pos:start="1:184" pos:end="1:184">r</name> <operator pos:start="1:186" pos:end="1:186">.</operator> <name pos:start="1:188" pos:end="1:195">METHOD_1</name></name> <argument_list pos:start="1:197" pos:end="1:199">( )</argument_list></call></expr> ;</expr_stmt> </block_content>}</block></function> <function pos:start="1:205" pos:end="1:270"><type pos:start="1:205" pos:end="1:222"><specifier pos:start="1:205" pos:end="1:210">public</specifier> <specifier pos:start="1:212" pos:end="1:217">static</specifier> <name pos:start="1:219" pos:end="1:222">void</name></type> <name pos:start="1:224" pos:end="1:231">METHOD_3</name> <parameter_list pos:start="1:233" pos:end="1:251">( <parameter pos:start="1:235" pos:end="1:249"><decl pos:start="1:235" pos:end="1:249"><type pos:start="1:235" pos:end="1:244"><name pos:start="1:235" pos:end="1:244"><name pos:start="1:235" pos:end="1:240">String</name> <index pos:start="1:242" pos:end="1:244">[ ]</index></name></type> <name pos:start="1:246" pos:end="1:249">args</name></decl></parameter> )</parameter_list> <block pos:start="1:253" pos:end="1:270">{<block_content pos:start="1:255" pos:end="1:268"> <expr_stmt pos:start="1:255" pos:end="1:268"><expr pos:start="1:255" pos:end="1:266"><call pos:start="1:255" pos:end="1:266"><name pos:start="1:255" pos:end="1:262">METHOD_2</name> <argument_list pos:start="1:264" pos:end="1:266">( )</argument_list></call></expr> ;</expr_stmt> </block_content>}</block></function> }</block></class></unit>
