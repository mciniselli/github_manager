<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" revision="1.0.0" language="Java" filename="file_2.java"><package>package <name>problem</name>;</package>

<import>import <name><name>java</name><operator>.</operator><name>util</name><operator>.</operator><name>Arrays</name></name>;</import>





<class><specifier>public</specifier> class <name>removeDuplicatesInPlace</name> <block>{	

	<function><type><specifier>private</specifier> <specifier>static</specifier> <name>int</name></type> <name>test</name><parameter_list>()</parameter_list> <block>{<block_content>
		<decl_stmt><decl><type><name><name>int</name> <index>[]</index></name></type><name>arr</name></decl>;</decl_stmt>
		<expr_stmt><expr><call><name><name>Arrays</name><operator>.</operator><name>sort</name></name><argument_list>(<argument><expr><name>arr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
		<decl_stmt><decl><type><name>int</name></type> <name>range</name> <init>= <expr><literal type="number">0</literal></expr></init></decl>;</decl_stmt>
		<decl_stmt><decl><type><name>boolean</name></type> <name>test</name><init>=<expr><name>True</name></expr></init></decl>;</decl_stmt>

		<decl_stmt><decl><type><name>String</name></type> <name>TEST</name><init>=<expr><literal type="string">"cc"</literal>

		<name>String</name> <name>cde</name> <operator>=</operator> <literal type="string">"cde"</literal></expr></init></decl>;</decl_stmt>

		<if_stmt><if>if <condition>(<expr><operator>!</operator><name>test</name></expr>)</condition><block>{<block_content>
			<return>return <expr><name>range</name></expr>;</return>
			<return>return <expr><name>test</name></expr>;</return>
		</block_content>}</block></if></if_stmt>

		<if_stmt><if>if <condition>(<expr><operator>!</operator><name>test</name> <operator>||</operator> <operator>!</operator><name>test</name></expr>)</condition><block>{<block_content>
			<return>return <expr><name>range</name></expr>;</return>
			<return>return <expr><name>test</name></expr>;</return>
		</block_content>}</block></if></if_stmt>

		<if_stmt><if>if <condition>(<expr><operator>!</operator><call><name><name>test</name><operator>.</operator><name>add</name></name><argument_list>(<argument><expr><name>True</name></expr></argument>)</argument_list></call></expr>)</condition><block>{<block_content>
			<return>return <expr><name>range</name></expr>;</return>
			<return>return <expr><name>test</name></expr>;</return>
		</block_content>}</block></if></if_stmt>
		
		<if_stmt><if>if <condition>(<expr><operator>!</operator><name>test</name> <name>test</name></expr>)</condition><block>{<block_content>
			<return>return <expr><name>range</name></expr>;</return>
			<return>return <expr><name>test</name></expr>;</return>
		</block_content>}</block></if></if_stmt>
		<return>return <expr><operator>(</operator><name><name>arr</name><operator>.</operator><name>length</name></name> <operator>-</operator> <name>range</name><operator>)</operator></expr>;</return>
	</block_content>}</block></function>

}</block></class>

</unit>
